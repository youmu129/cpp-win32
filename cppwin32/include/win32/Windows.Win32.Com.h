// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Com_H
#define WIN32_Windows_Win32_Com_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Com.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Com
{
#pragma region methods
    inline int32_t CoGetMalloc(uint32_t dwMemContext, Windows::Win32::Com::IMalloc** ppMalloc)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetMalloc(dwMemContext, ppMalloc);
        return win32_impl_result;
    }
    inline void CoUninitialize()
    {
        WIN32_IMPL_CoUninitialize();
    }
    inline uint32_t CoGetCurrentProcess()
    {
        auto win32_impl_result = WIN32_IMPL_CoGetCurrentProcess();
        return win32_impl_result;
    }
    inline int32_t CoInitializeEx(void* pvReserved, uint32_t dwCoInit)
    {
        auto win32_impl_result = WIN32_IMPL_CoInitializeEx(pvReserved, dwCoInit);
        return win32_impl_result;
    }
    inline int32_t CoGetCallerTID(uint32_t* lpdwTID)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetCallerTID(lpdwTID);
        return win32_impl_result;
    }
    inline int32_t CoGetCurrentLogicalThreadId(::win32::guid* pguid)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetCurrentLogicalThreadId(pguid);
        return win32_impl_result;
    }
    inline int32_t CoGetContextToken(size_t* pToken)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetContextToken(pToken);
        return win32_impl_result;
    }
    inline int32_t CoGetApartmentType(Windows::Win32::Com::APTTYPE* pAptType, Windows::Win32::Com::APTTYPEQUALIFIER* pAptQualifier)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetApartmentType(pAptType, pAptQualifier);
        return win32_impl_result;
    }
    inline int32_t CoIncrementMTAUsage(intptr_t* pCookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoIncrementMTAUsage(pCookie);
        return win32_impl_result;
    }
    inline int32_t CoDecrementMTAUsage(intptr_t Cookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoDecrementMTAUsage(Cookie);
        return win32_impl_result;
    }
    inline int32_t CoAllowUnmarshalerCLSID(::win32::guid* clsid)
    {
        auto win32_impl_result = WIN32_IMPL_CoAllowUnmarshalerCLSID(clsid);
        return win32_impl_result;
    }
    inline int32_t CoGetObjectContext(::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetObjectContext(riid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoGetClassObject(::win32::guid* rclsid, uint32_t dwClsContext, void* pvReserved, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetClassObject(rclsid, dwClsContext, pvReserved, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoRegisterClassObject(::win32::guid* rclsid, Windows::Win32::Com::IUnknown* pUnk, uint32_t dwClsContext, uint32_t flags, uint32_t* lpdwRegister)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterClassObject(rclsid, pUnk, dwClsContext, flags, lpdwRegister);
        return win32_impl_result;
    }
    inline int32_t CoRevokeClassObject(uint32_t dwRegister)
    {
        auto win32_impl_result = WIN32_IMPL_CoRevokeClassObject(dwRegister);
        return win32_impl_result;
    }
    inline int32_t CoResumeClassObjects()
    {
        auto win32_impl_result = WIN32_IMPL_CoResumeClassObjects();
        return win32_impl_result;
    }
    inline int32_t CoSuspendClassObjects()
    {
        auto win32_impl_result = WIN32_IMPL_CoSuspendClassObjects();
        return win32_impl_result;
    }
    inline uint32_t CoAddRefServerProcess()
    {
        auto win32_impl_result = WIN32_IMPL_CoAddRefServerProcess();
        return win32_impl_result;
    }
    inline uint32_t CoReleaseServerProcess()
    {
        auto win32_impl_result = WIN32_IMPL_CoReleaseServerProcess();
        return win32_impl_result;
    }
    inline int32_t CoGetPSClsid(::win32::guid* riid, ::win32::guid* pClsid)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetPSClsid(riid, pClsid);
        return win32_impl_result;
    }
    inline int32_t CoRegisterPSClsid(::win32::guid* riid, ::win32::guid* rclsid)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterPSClsid(riid, rclsid);
        return win32_impl_result;
    }
    inline int32_t CoRegisterSurrogate(Windows::Win32::Com::ISurrogate* pSurrogate)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterSurrogate(pSurrogate);
        return win32_impl_result;
    }
    inline int32_t CoGetMarshalSizeMax(uint32_t* pulSize, ::win32::guid* riid, Windows::Win32::Com::IUnknown* pUnk, uint32_t dwDestContext, void* pvDestContext, uint32_t mshlflags)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetMarshalSizeMax(pulSize, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        return win32_impl_result;
    }
    inline int32_t CoMarshalInterface(Windows::Win32::StructuredStorage::IStream* pStm, ::win32::guid* riid, Windows::Win32::Com::IUnknown* pUnk, uint32_t dwDestContext, void* pvDestContext, uint32_t mshlflags)
    {
        auto win32_impl_result = WIN32_IMPL_CoMarshalInterface(pStm, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        return win32_impl_result;
    }
    inline int32_t CoUnmarshalInterface(Windows::Win32::StructuredStorage::IStream* pStm, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoUnmarshalInterface(pStm, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoMarshalHresult(Windows::Win32::StructuredStorage::IStream* pstm, int32_t hresult)
    {
        auto win32_impl_result = WIN32_IMPL_CoMarshalHresult(pstm, hresult);
        return win32_impl_result;
    }
    inline int32_t CoUnmarshalHresult(Windows::Win32::StructuredStorage::IStream* pstm, int32_t* phresult)
    {
        auto win32_impl_result = WIN32_IMPL_CoUnmarshalHresult(pstm, phresult);
        return win32_impl_result;
    }
    inline int32_t CoReleaseMarshalData(Windows::Win32::StructuredStorage::IStream* pStm)
    {
        auto win32_impl_result = WIN32_IMPL_CoReleaseMarshalData(pStm);
        return win32_impl_result;
    }
    inline int32_t CoDisconnectObject(Windows::Win32::Com::IUnknown* pUnk, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoDisconnectObject(pUnk, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoLockObjectExternal(Windows::Win32::Com::IUnknown* pUnk, Windows::Win32::SystemServices::BOOL fLock, Windows::Win32::SystemServices::BOOL fLastUnlockReleases)
    {
        auto win32_impl_result = WIN32_IMPL_CoLockObjectExternal(pUnk, fLock, fLastUnlockReleases);
        return win32_impl_result;
    }
    inline int32_t CoGetStandardMarshal(::win32::guid* riid, Windows::Win32::Com::IUnknown* pUnk, uint32_t dwDestContext, void* pvDestContext, uint32_t mshlflags, Windows::Win32::Com::IMarshal** ppMarshal)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetStandardMarshal(riid, pUnk, dwDestContext, pvDestContext, mshlflags, ppMarshal);
        return win32_impl_result;
    }
    inline int32_t CoGetStdMarshalEx(Windows::Win32::Com::IUnknown* pUnkOuter, uint32_t smexflags, Windows::Win32::Com::IUnknown** ppUnkInner)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetStdMarshalEx(pUnkOuter, smexflags, ppUnkInner);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CoIsHandlerConnected(Windows::Win32::Com::IUnknown* pUnk)
    {
        auto win32_impl_result = WIN32_IMPL_CoIsHandlerConnected(pUnk);
        return win32_impl_result;
    }
    inline int32_t CoMarshalInterThreadInterfaceInStream(::win32::guid* riid, Windows::Win32::Com::IUnknown* pUnk, Windows::Win32::StructuredStorage::IStream** ppStm)
    {
        auto win32_impl_result = WIN32_IMPL_CoMarshalInterThreadInterfaceInStream(riid, pUnk, ppStm);
        return win32_impl_result;
    }
    inline int32_t CoGetInterfaceAndReleaseStream(Windows::Win32::StructuredStorage::IStream* pStm, ::win32::guid* iid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetInterfaceAndReleaseStream(pStm, iid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoCreateFreeThreadedMarshaler(Windows::Win32::Com::IUnknown* punkOuter, Windows::Win32::Com::IUnknown** ppunkMarshal)
    {
        auto win32_impl_result = WIN32_IMPL_CoCreateFreeThreadedMarshaler(punkOuter, ppunkMarshal);
        return win32_impl_result;
    }
    inline void CoFreeUnusedLibraries()
    {
        WIN32_IMPL_CoFreeUnusedLibraries();
    }
    inline void CoFreeUnusedLibrariesEx(uint32_t dwUnloadDelay, uint32_t dwReserved)
    {
        WIN32_IMPL_CoFreeUnusedLibrariesEx(dwUnloadDelay, dwReserved);
    }
    inline int32_t CoDisconnectContext(uint32_t dwTimeout)
    {
        auto win32_impl_result = WIN32_IMPL_CoDisconnectContext(dwTimeout);
        return win32_impl_result;
    }
    inline int32_t CoInitializeSecurity(void* pSecDesc, int32_t cAuthSvc, Windows::Win32::Com::SOLE_AUTHENTICATION_SERVICE* asAuthSvc, void* pReserved1, uint32_t dwAuthnLevel, uint32_t dwImpLevel, void* pAuthList, uint32_t dwCapabilities, void* pReserved3)
    {
        auto win32_impl_result = WIN32_IMPL_CoInitializeSecurity(pSecDesc, cAuthSvc, asAuthSvc, pReserved1, dwAuthnLevel, dwImpLevel, pAuthList, dwCapabilities, pReserved3);
        return win32_impl_result;
    }
    inline int32_t CoGetCallContext(::win32::guid* riid, void** ppInterface)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetCallContext(riid, ppInterface);
        return win32_impl_result;
    }
    inline int32_t CoQueryProxyBlanket(Windows::Win32::Com::IUnknown* pProxy, uint32_t* pwAuthnSvc, uint32_t* pAuthzSvc, uint16_t** pServerPrincName, uint32_t* pAuthnLevel, uint32_t* pImpLevel, void** pAuthInfo, uint32_t* pCapabilites)
    {
        auto win32_impl_result = WIN32_IMPL_CoQueryProxyBlanket(pProxy, pwAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pAuthInfo, pCapabilites);
        return win32_impl_result;
    }
    inline int32_t CoSetProxyBlanket(Windows::Win32::Com::IUnknown* pProxy, uint32_t dwAuthnSvc, uint32_t dwAuthzSvc, uint16_t* pServerPrincName, uint32_t dwAuthnLevel, uint32_t dwImpLevel, void* pAuthInfo, uint32_t dwCapabilities)
    {
        auto win32_impl_result = WIN32_IMPL_CoSetProxyBlanket(pProxy, dwAuthnSvc, dwAuthzSvc, pServerPrincName, dwAuthnLevel, dwImpLevel, pAuthInfo, dwCapabilities);
        return win32_impl_result;
    }
    inline int32_t CoCopyProxy(Windows::Win32::Com::IUnknown* pProxy, Windows::Win32::Com::IUnknown** ppCopy)
    {
        auto win32_impl_result = WIN32_IMPL_CoCopyProxy(pProxy, ppCopy);
        return win32_impl_result;
    }
    inline int32_t CoQueryClientBlanket(uint32_t* pAuthnSvc, uint32_t* pAuthzSvc, uint16_t** pServerPrincName, uint32_t* pAuthnLevel, uint32_t* pImpLevel, void** pPrivs, uint32_t* pCapabilities)
    {
        auto win32_impl_result = WIN32_IMPL_CoQueryClientBlanket(pAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pPrivs, pCapabilities);
        return win32_impl_result;
    }
    inline int32_t CoImpersonateClient()
    {
        auto win32_impl_result = WIN32_IMPL_CoImpersonateClient();
        return win32_impl_result;
    }
    inline int32_t CoRevertToSelf()
    {
        auto win32_impl_result = WIN32_IMPL_CoRevertToSelf();
        return win32_impl_result;
    }
    inline int32_t CoQueryAuthenticationServices(uint32_t* pcAuthSvc, Windows::Win32::Com::SOLE_AUTHENTICATION_SERVICE** asAuthSvc)
    {
        auto win32_impl_result = WIN32_IMPL_CoQueryAuthenticationServices(pcAuthSvc, asAuthSvc);
        return win32_impl_result;
    }
    inline int32_t CoSwitchCallContext(Windows::Win32::Com::IUnknown* pNewObject, Windows::Win32::Com::IUnknown** ppOldObject)
    {
        auto win32_impl_result = WIN32_IMPL_CoSwitchCallContext(pNewObject, ppOldObject);
        return win32_impl_result;
    }
    inline int32_t CoCreateInstance(::win32::guid* rclsid, Windows::Win32::Com::IUnknown* pUnkOuter, uint32_t dwClsContext, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoCreateInstance(rclsid, pUnkOuter, dwClsContext, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoCreateInstanceEx(::win32::guid* Clsid, Windows::Win32::Com::IUnknown* punkOuter, uint32_t dwClsCtx, Windows::Win32::Com::COSERVERINFO* pServerInfo, uint32_t dwCount, Windows::Win32::Com::MULTI_QI* pResults)
    {
        auto win32_impl_result = WIN32_IMPL_CoCreateInstanceEx(Clsid, punkOuter, dwClsCtx, pServerInfo, dwCount, pResults);
        return win32_impl_result;
    }
    inline int32_t CoCreateInstanceFromApp(::win32::guid* Clsid, Windows::Win32::Com::IUnknown* punkOuter, uint32_t dwClsCtx, void* reserved, uint32_t dwCount, Windows::Win32::Com::MULTI_QI* pResults)
    {
        auto win32_impl_result = WIN32_IMPL_CoCreateInstanceFromApp(Clsid, punkOuter, dwClsCtx, reserved, dwCount, pResults);
        return win32_impl_result;
    }
    inline int32_t CoRegisterActivationFilter(Windows::Win32::Com::IActivationFilter* pActivationFilter)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterActivationFilter(pActivationFilter);
        return win32_impl_result;
    }
    inline int32_t CoGetCancelObject(uint32_t dwThreadId, ::win32::guid* iid, void** ppUnk)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetCancelObject(dwThreadId, iid, ppUnk);
        return win32_impl_result;
    }
    inline int32_t CoSetCancelObject(Windows::Win32::Com::IUnknown* pUnk)
    {
        auto win32_impl_result = WIN32_IMPL_CoSetCancelObject(pUnk);
        return win32_impl_result;
    }
    inline int32_t CoCancelCall(uint32_t dwThreadId, uint32_t ulTimeout)
    {
        auto win32_impl_result = WIN32_IMPL_CoCancelCall(dwThreadId, ulTimeout);
        return win32_impl_result;
    }
    inline int32_t CoTestCancel()
    {
        auto win32_impl_result = WIN32_IMPL_CoTestCancel();
        return win32_impl_result;
    }
    inline int32_t CoEnableCallCancellation(void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoEnableCallCancellation(pReserved);
        return win32_impl_result;
    }
    inline int32_t CoDisableCallCancellation(void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoDisableCallCancellation(pReserved);
        return win32_impl_result;
    }
    inline int32_t StringFromCLSID(::win32::guid* rclsid, uint16_t** lplpsz)
    {
        auto win32_impl_result = WIN32_IMPL_StringFromCLSID(rclsid, lplpsz);
        return win32_impl_result;
    }
    inline int32_t CLSIDFromString(uint16_t* lpsz, ::win32::guid* pclsid)
    {
        auto win32_impl_result = WIN32_IMPL_CLSIDFromString(lpsz, pclsid);
        return win32_impl_result;
    }
    inline int32_t StringFromIID(::win32::guid* rclsid, uint16_t** lplpsz)
    {
        auto win32_impl_result = WIN32_IMPL_StringFromIID(rclsid, lplpsz);
        return win32_impl_result;
    }
    inline int32_t IIDFromString(uint16_t* lpsz, ::win32::guid* lpiid)
    {
        auto win32_impl_result = WIN32_IMPL_IIDFromString(lpsz, lpiid);
        return win32_impl_result;
    }
    inline int32_t ProgIDFromCLSID(::win32::guid* clsid, uint16_t** lplpszProgID)
    {
        auto win32_impl_result = WIN32_IMPL_ProgIDFromCLSID(clsid, lplpszProgID);
        return win32_impl_result;
    }
    inline int32_t CLSIDFromProgID(uint16_t* lpszProgID, ::win32::guid* lpclsid)
    {
        auto win32_impl_result = WIN32_IMPL_CLSIDFromProgID(lpszProgID, lpclsid);
        return win32_impl_result;
    }
    inline int32_t StringFromGUID2(::win32::guid* rguid, uint16_t* lpsz, int32_t cchMax)
    {
        auto win32_impl_result = WIN32_IMPL_StringFromGUID2(rguid, lpsz, cchMax);
        return win32_impl_result;
    }
    inline int32_t CoCreateGuid(::win32::guid* pguid)
    {
        auto win32_impl_result = WIN32_IMPL_CoCreateGuid(pguid);
        return win32_impl_result;
    }
    inline int32_t CoWaitForMultipleHandles(uint32_t dwFlags, uint32_t dwTimeout, uint32_t cHandles, intptr_t* pHandles, uint32_t* lpdwindex)
    {
        auto win32_impl_result = WIN32_IMPL_CoWaitForMultipleHandles(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        return win32_impl_result;
    }
    inline int32_t CoWaitForMultipleObjects(uint32_t dwFlags, uint32_t dwTimeout, uint32_t cHandles, intptr_t* pHandles, uint32_t* lpdwindex)
    {
        auto win32_impl_result = WIN32_IMPL_CoWaitForMultipleObjects(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        return win32_impl_result;
    }
    inline int32_t CoGetTreatAsClass(::win32::guid* clsidOld, ::win32::guid* pClsidNew)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetTreatAsClass(clsidOld, pClsidNew);
        return win32_impl_result;
    }
    inline int32_t CoInvalidateRemoteMachineBindings(uint16_t* pszMachineName)
    {
        auto win32_impl_result = WIN32_IMPL_CoInvalidateRemoteMachineBindings(pszMachineName);
        return win32_impl_result;
    }
    inline void* CoTaskMemAlloc(size_t cb)
    {
        auto win32_impl_result = WIN32_IMPL_CoTaskMemAlloc(cb);
        return win32_impl_result;
    }
    inline void* CoTaskMemRealloc(void* pv, size_t cb)
    {
        auto win32_impl_result = WIN32_IMPL_CoTaskMemRealloc(pv, cb);
        return win32_impl_result;
    }
    inline void CoTaskMemFree(void* pv)
    {
        WIN32_IMPL_CoTaskMemFree(pv);
    }
    inline int32_t CoFileTimeNow(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_CoFileTimeNow(lpFileTime);
        return win32_impl_result;
    }
    inline int32_t CLSIDFromProgIDEx(uint16_t* lpszProgID, ::win32::guid* lpclsid)
    {
        auto win32_impl_result = WIN32_IMPL_CLSIDFromProgIDEx(lpszProgID, lpclsid);
        return win32_impl_result;
    }
    inline int32_t CoRegisterDeviceCatalog(uint16_t* deviceInstanceId, intptr_t* cookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterDeviceCatalog(deviceInstanceId, cookie);
        return win32_impl_result;
    }
    inline int32_t CoRevokeDeviceCatalog(intptr_t cookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoRevokeDeviceCatalog(cookie);
        return win32_impl_result;
    }
    inline uint32_t CLIPFORMAT_UserSize(uint32_t* param0, uint32_t param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* CLIPFORMAT_UserMarshal(uint32_t* param0, uint8_t* param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* CLIPFORMAT_UserUnmarshal(uint32_t* param0, uint8_t* param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void CLIPFORMAT_UserFree(uint32_t* param0, uint16_t* param1)
    {
        WIN32_IMPL_CLIPFORMAT_UserFree(param0, param1);
    }
    inline uint32_t HBITMAP_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HBITMAP_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HBITMAP_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HBITMAP_UserFree(uint32_t* param0, Windows::Win32::Gdi::HBITMAP* param1)
    {
        WIN32_IMPL_HBITMAP_UserFree(param0, param1);
    }
    inline uint32_t HDC_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HDC_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HDC_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HDC_UserFree(uint32_t* param0, Windows::Win32::Gdi::HDC* param1)
    {
        WIN32_IMPL_HDC_UserFree(param0, param1);
    }
    inline uint32_t HICON_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HICON_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HICON_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HICON_UserFree(uint32_t* param0, Windows::Win32::Gdi::HICON* param1)
    {
        WIN32_IMPL_HICON_UserFree(param0, param1);
    }
    inline uint32_t SNB_UserSize(uint32_t* param0, uint32_t param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* SNB_UserMarshal(uint32_t* param0, uint8_t* param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* SNB_UserUnmarshal(uint32_t* param0, uint8_t* param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void SNB_UserFree(uint32_t* param0, uint16_t*** param1)
    {
        WIN32_IMPL_SNB_UserFree(param0, param1);
    }
    inline uint32_t CLIPFORMAT_UserSize64(uint32_t* param0, uint32_t param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* CLIPFORMAT_UserMarshal64(uint32_t* param0, uint8_t* param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* CLIPFORMAT_UserUnmarshal64(uint32_t* param0, uint8_t* param1, uint16_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPFORMAT_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void CLIPFORMAT_UserFree64(uint32_t* param0, uint16_t* param1)
    {
        WIN32_IMPL_CLIPFORMAT_UserFree64(param0, param1);
    }
    inline uint32_t HBITMAP_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HBITMAP_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HBITMAP_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HBITMAP* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HBITMAP_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HBITMAP_UserFree64(uint32_t* param0, Windows::Win32::Gdi::HBITMAP* param1)
    {
        WIN32_IMPL_HBITMAP_UserFree64(param0, param1);
    }
    inline uint32_t HDC_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HDC_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HDC_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HDC* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HDC_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HDC_UserFree64(uint32_t* param0, Windows::Win32::Gdi::HDC* param1)
    {
        WIN32_IMPL_HDC_UserFree64(param0, param1);
    }
    inline uint32_t HICON_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HICON_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HICON_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HICON* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HICON_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HICON_UserFree64(uint32_t* param0, Windows::Win32::Gdi::HICON* param1)
    {
        WIN32_IMPL_HICON_UserFree64(param0, param1);
    }
    inline uint32_t SNB_UserSize64(uint32_t* param0, uint32_t param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* SNB_UserMarshal64(uint32_t* param0, uint8_t* param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* SNB_UserUnmarshal64(uint32_t* param0, uint8_t* param1, uint16_t*** param2)
    {
        auto win32_impl_result = WIN32_IMPL_SNB_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void SNB_UserFree64(uint32_t* param0, uint16_t*** param1)
    {
        WIN32_IMPL_SNB_UserFree64(param0, param1);
    }
    inline uint32_t HACCEL_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HACCEL_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HACCEL_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HACCEL_UserFree(uint32_t* param0, Windows::Win32::MenusAndResources::HACCEL* param1)
    {
        WIN32_IMPL_HACCEL_UserFree(param0, param1);
    }
    inline uint32_t HGLOBAL_UserSize(uint32_t* param0, uint32_t param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HGLOBAL_UserMarshal(uint32_t* param0, uint8_t* param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HGLOBAL_UserUnmarshal(uint32_t* param0, uint8_t* param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HGLOBAL_UserFree(uint32_t* param0, intptr_t* param1)
    {
        WIN32_IMPL_HGLOBAL_UserFree(param0, param1);
    }
    inline uint32_t HMENU_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HMENU_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HMENU_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HMENU_UserFree(uint32_t* param0, Windows::Win32::MenusAndResources::HMENU* param1)
    {
        WIN32_IMPL_HMENU_UserFree(param0, param1);
    }
    inline uint32_t HACCEL_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HACCEL_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HACCEL_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HACCEL* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HACCEL_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HACCEL_UserFree64(uint32_t* param0, Windows::Win32::MenusAndResources::HACCEL* param1)
    {
        WIN32_IMPL_HACCEL_UserFree64(param0, param1);
    }
    inline uint32_t HGLOBAL_UserSize64(uint32_t* param0, uint32_t param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HGLOBAL_UserMarshal64(uint32_t* param0, uint8_t* param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HGLOBAL_UserUnmarshal64(uint32_t* param0, uint8_t* param1, intptr_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HGLOBAL_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HGLOBAL_UserFree64(uint32_t* param0, intptr_t* param1)
    {
        WIN32_IMPL_HGLOBAL_UserFree64(param0, param1);
    }
    inline uint32_t HMENU_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HMENU_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HMENU_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::MenusAndResources::HMENU* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HMENU_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HMENU_UserFree64(uint32_t* param0, Windows::Win32::MenusAndResources::HMENU* param1)
    {
        WIN32_IMPL_HMENU_UserFree64(param0, param1);
    }
    inline int32_t CreateURLMoniker(Windows::Win32::Com::IMoniker* pMkCtx, uint16_t* szURL, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateURLMoniker(pMkCtx, szURL, ppmk);
        return win32_impl_result;
    }
    inline int32_t CreateURLMonikerEx(Windows::Win32::Com::IMoniker* pMkCtx, uint16_t* szURL, Windows::Win32::Com::IMoniker** ppmk, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateURLMonikerEx(pMkCtx, szURL, ppmk, dwFlags);
        return win32_impl_result;
    }
    inline int32_t GetClassURL(uint16_t* szURL, ::win32::guid* pClsID)
    {
        auto win32_impl_result = WIN32_IMPL_GetClassURL(szURL, pClsID);
        return win32_impl_result;
    }
    inline int32_t CreateAsyncBindCtx(uint32_t reserved, Windows::Win32::Com::IBindStatusCallback* pBSCb, Windows::Win32::Com::IEnumFORMATETC* pEFetc, Windows::Win32::Com::IBindCtx** ppBC)
    {
        auto win32_impl_result = WIN32_IMPL_CreateAsyncBindCtx(reserved, pBSCb, pEFetc, ppBC);
        return win32_impl_result;
    }
    inline int32_t CreateURLMonikerEx2(Windows::Win32::Com::IMoniker* pMkCtx, Windows::Win32::Com::IUri* pUri, Windows::Win32::Com::IMoniker** ppmk, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateURLMonikerEx2(pMkCtx, pUri, ppmk, dwFlags);
        return win32_impl_result;
    }
    inline int32_t CreateAsyncBindCtxEx(Windows::Win32::Com::IBindCtx* pbc, uint32_t dwOptions, Windows::Win32::Com::IBindStatusCallback* pBSCb, Windows::Win32::Com::IEnumFORMATETC* pEnum, Windows::Win32::Com::IBindCtx** ppBC, uint32_t reserved)
    {
        auto win32_impl_result = WIN32_IMPL_CreateAsyncBindCtxEx(pbc, dwOptions, pBSCb, pEnum, ppBC, reserved);
        return win32_impl_result;
    }
    inline int32_t MkParseDisplayNameEx(Windows::Win32::Com::IBindCtx* pbc, uint16_t* szDisplayName, uint32_t* pchEaten, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_MkParseDisplayNameEx(pbc, szDisplayName, pchEaten, ppmk);
        return win32_impl_result;
    }
    inline int32_t RegisterBindStatusCallback(Windows::Win32::Com::IBindCtx* pBC, Windows::Win32::Com::IBindStatusCallback* pBSCb, Windows::Win32::Com::IBindStatusCallback** ppBSCBPrev, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterBindStatusCallback(pBC, pBSCb, ppBSCBPrev, dwReserved);
        return win32_impl_result;
    }
    inline int32_t RevokeBindStatusCallback(Windows::Win32::Com::IBindCtx* pBC, Windows::Win32::Com::IBindStatusCallback* pBSCb)
    {
        auto win32_impl_result = WIN32_IMPL_RevokeBindStatusCallback(pBC, pBSCb);
        return win32_impl_result;
    }
    inline int32_t GetClassFileOrMime(Windows::Win32::Com::IBindCtx* pBC, uint16_t* szFilename, void* pBuffer, uint32_t cbSize, uint16_t* szMime, uint32_t dwReserved, ::win32::guid* pclsid)
    {
        auto win32_impl_result = WIN32_IMPL_GetClassFileOrMime(pBC, szFilename, pBuffer, cbSize, szMime, dwReserved, pclsid);
        return win32_impl_result;
    }
    inline int32_t IsValidURL(Windows::Win32::Com::IBindCtx* pBC, uint16_t* szURL, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_IsValidURL(pBC, szURL, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoGetClassObjectFromURL(::win32::guid* rCLASSID, uint16_t* szCODE, uint32_t dwFileVersionMS, uint32_t dwFileVersionLS, uint16_t* szTYPE, Windows::Win32::Com::IBindCtx* pBindCtx, uint32_t dwClsContext, void* pvReserved, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetClassObjectFromURL(rCLASSID, szCODE, dwFileVersionMS, dwFileVersionLS, szTYPE, pBindCtx, dwClsContext, pvReserved, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t IEInstallScope(uint32_t* pdwScope)
    {
        auto win32_impl_result = WIN32_IMPL_IEInstallScope(pdwScope);
        return win32_impl_result;
    }
    inline int32_t FaultInIEFeature(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::uCLSSPEC* pClassSpec, Windows::Win32::Com::QUERYCONTEXT* pQuery, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_FaultInIEFeature(hWnd, pClassSpec, pQuery, dwFlags);
        return win32_impl_result;
    }
    inline int32_t GetComponentIDFromCLSSPEC(Windows::Win32::SystemServices::uCLSSPEC* pClassspec, int8_t** ppszComponentID)
    {
        auto win32_impl_result = WIN32_IMPL_GetComponentIDFromCLSSPEC(pClassspec, ppszComponentID);
        return win32_impl_result;
    }
    inline int32_t IsAsyncMoniker(Windows::Win32::Com::IMoniker* pmk)
    {
        auto win32_impl_result = WIN32_IMPL_IsAsyncMoniker(pmk);
        return win32_impl_result;
    }
    inline int32_t RegisterMediaTypes(uint32_t ctypes, int8_t** rgszTypes, uint16_t* rgcfTypes)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterMediaTypes(ctypes, rgszTypes, rgcfTypes);
        return win32_impl_result;
    }
    inline int32_t FindMediaType(int8_t* rgszTypes, uint16_t* rgcfTypes)
    {
        auto win32_impl_result = WIN32_IMPL_FindMediaType(rgszTypes, rgcfTypes);
        return win32_impl_result;
    }
    inline int32_t CreateFormatEnumerator(uint32_t cfmtetc, Windows::Win32::Com::FORMATETC* rgfmtetc, Windows::Win32::Com::IEnumFORMATETC** ppenumfmtetc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFormatEnumerator(cfmtetc, rgfmtetc, ppenumfmtetc);
        return win32_impl_result;
    }
    inline int32_t RegisterFormatEnumerator(Windows::Win32::Com::IBindCtx* pBC, Windows::Win32::Com::IEnumFORMATETC* pEFetc, uint32_t reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterFormatEnumerator(pBC, pEFetc, reserved);
        return win32_impl_result;
    }
    inline int32_t RevokeFormatEnumerator(Windows::Win32::Com::IBindCtx* pBC, Windows::Win32::Com::IEnumFORMATETC* pEFetc)
    {
        auto win32_impl_result = WIN32_IMPL_RevokeFormatEnumerator(pBC, pEFetc);
        return win32_impl_result;
    }
    inline int32_t RegisterMediaTypeClass(Windows::Win32::Com::IBindCtx* pBC, uint32_t ctypes, int8_t** rgszTypes, ::win32::guid* rgclsID, uint32_t reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterMediaTypeClass(pBC, ctypes, rgszTypes, rgclsID, reserved);
        return win32_impl_result;
    }
    inline int32_t FindMediaTypeClass(Windows::Win32::Com::IBindCtx* pBC, int8_t* szType, ::win32::guid* pclsID, uint32_t reserved)
    {
        auto win32_impl_result = WIN32_IMPL_FindMediaTypeClass(pBC, szType, pclsID, reserved);
        return win32_impl_result;
    }
    inline int32_t UrlMkSetSessionOption(uint32_t dwOption, void* pBuffer, uint32_t dwBufferLength, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_UrlMkSetSessionOption(dwOption, pBuffer, dwBufferLength, dwReserved);
        return win32_impl_result;
    }
    inline int32_t UrlMkGetSessionOption(uint32_t dwOption, void* pBuffer, uint32_t dwBufferLength, uint32_t* pdwBufferLengthOut, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_UrlMkGetSessionOption(dwOption, pBuffer, dwBufferLength, pdwBufferLengthOut, dwReserved);
        return win32_impl_result;
    }
    inline int32_t FindMimeFromData(Windows::Win32::Com::IBindCtx* pBC, uint16_t* pwzUrl, void* pBuffer, uint32_t cbSize, uint16_t* pwzMimeProposed, uint32_t dwMimeFlags, uint16_t** ppwzMimeOut, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_FindMimeFromData(pBC, pwzUrl, pBuffer, cbSize, pwzMimeProposed, dwMimeFlags, ppwzMimeOut, dwReserved);
        return win32_impl_result;
    }
    inline int32_t ObtainUserAgentString(uint32_t dwOption, int8_t* pszUAOut, uint32_t* cbSize)
    {
        auto win32_impl_result = WIN32_IMPL_ObtainUserAgentString(dwOption, pszUAOut, cbSize);
        return win32_impl_result;
    }
    inline int32_t CompareSecurityIds(uint8_t* pbSecurityId1, uint32_t dwLen1, uint8_t* pbSecurityId2, uint32_t dwLen2, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CompareSecurityIds(pbSecurityId1, dwLen1, pbSecurityId2, dwLen2, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CompatFlagsFromClsid(::win32::guid* pclsid, uint32_t* pdwCompatFlags, uint32_t* pdwMiscStatusFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CompatFlagsFromClsid(pclsid, pdwCompatFlags, pdwMiscStatusFlags);
        return win32_impl_result;
    }
    inline int32_t SetAccessForIEAppContainer(Windows::Win32::SystemServices::HANDLE hObject, Windows::Win32::Com::IEObjectType ieObjectType, uint32_t dwAccessMask)
    {
        auto win32_impl_result = WIN32_IMPL_SetAccessForIEAppContainer(hObject, ieObjectType, dwAccessMask);
        return win32_impl_result;
    }
    inline int32_t CreateUri(uint16_t* pwzURI, uint32_t dwFlags, size_t dwReserved, Windows::Win32::Com::IUri** ppURI)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUri(pwzURI, dwFlags, dwReserved, ppURI);
        return win32_impl_result;
    }
    inline int32_t CreateUriWithFragment(uint16_t* pwzURI, uint16_t* pwzFragment, uint32_t dwFlags, size_t dwReserved, Windows::Win32::Com::IUri** ppURI)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUriWithFragment(pwzURI, pwzFragment, dwFlags, dwReserved, ppURI);
        return win32_impl_result;
    }
    inline int32_t CreateUriFromMultiByteString(int8_t* pszANSIInputUri, uint32_t dwEncodingFlags, uint32_t dwCodePage, uint32_t dwCreateFlags, size_t dwReserved, Windows::Win32::Com::IUri** ppUri)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUriFromMultiByteString(pszANSIInputUri, dwEncodingFlags, dwCodePage, dwCreateFlags, dwReserved, ppUri);
        return win32_impl_result;
    }
    inline int32_t CreateIUriBuilder(Windows::Win32::Com::IUri* pIUri, uint32_t dwFlags, size_t dwReserved, Windows::Win32::Com::IUriBuilder** ppIUriBuilder)
    {
        auto win32_impl_result = WIN32_IMPL_CreateIUriBuilder(pIUri, dwFlags, dwReserved, ppIUriBuilder);
        return win32_impl_result;
    }
    inline int32_t HlinkSimpleNavigateToString(uint16_t* szTarget, uint16_t* szLocation, uint16_t* szTargetFrameName, Windows::Win32::Com::IUnknown* pUnk, Windows::Win32::Com::IBindCtx* pbc, Windows::Win32::Com::IBindStatusCallback* param5, uint32_t grfHLNF, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkSimpleNavigateToString(szTarget, szLocation, szTargetFrameName, pUnk, pbc, param5, grfHLNF, dwReserved);
        return win32_impl_result;
    }
    inline int32_t HlinkSimpleNavigateToMoniker(Windows::Win32::Com::IMoniker* pmkTarget, uint16_t* szLocation, uint16_t* szTargetFrameName, Windows::Win32::Com::IUnknown* pUnk, Windows::Win32::Com::IBindCtx* pbc, Windows::Win32::Com::IBindStatusCallback* param5, uint32_t grfHLNF, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkSimpleNavigateToMoniker(pmkTarget, szLocation, szTargetFrameName, pUnk, pbc, param5, grfHLNF, dwReserved);
        return win32_impl_result;
    }
    inline int32_t URLOpenStreamA(Windows::Win32::Com::IUnknown* param0, int8_t* param1, uint32_t param2, Windows::Win32::Com::IBindStatusCallback* param3)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenStreamA(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline int32_t URLOpenStreamW(Windows::Win32::Com::IUnknown* param0, uint16_t* param1, uint32_t param2, Windows::Win32::Com::IBindStatusCallback* param3)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenStreamW(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline int32_t URLOpenPullStreamA(Windows::Win32::Com::IUnknown* param0, int8_t* param1, uint32_t param2, Windows::Win32::Com::IBindStatusCallback* param3)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenPullStreamA(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline int32_t URLOpenPullStreamW(Windows::Win32::Com::IUnknown* param0, uint16_t* param1, uint32_t param2, Windows::Win32::Com::IBindStatusCallback* param3)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenPullStreamW(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline int32_t URLDownloadToFileA(Windows::Win32::Com::IUnknown* param0, int8_t* param1, int8_t* param2, uint32_t param3, Windows::Win32::Com::IBindStatusCallback* param4)
    {
        auto win32_impl_result = WIN32_IMPL_URLDownloadToFileA(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t URLDownloadToFileW(Windows::Win32::Com::IUnknown* param0, uint16_t* param1, uint16_t* param2, uint32_t param3, Windows::Win32::Com::IBindStatusCallback* param4)
    {
        auto win32_impl_result = WIN32_IMPL_URLDownloadToFileW(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t URLDownloadToCacheFileA(Windows::Win32::Com::IUnknown* param0, int8_t* param1, int8_t* param2, uint32_t cchFileName, uint32_t param4, Windows::Win32::Com::IBindStatusCallback* param5)
    {
        auto win32_impl_result = WIN32_IMPL_URLDownloadToCacheFileA(param0, param1, param2, cchFileName, param4, param5);
        return win32_impl_result;
    }
    inline int32_t URLDownloadToCacheFileW(Windows::Win32::Com::IUnknown* param0, uint16_t* param1, uint16_t* param2, uint32_t cchFileName, uint32_t param4, Windows::Win32::Com::IBindStatusCallback* param5)
    {
        auto win32_impl_result = WIN32_IMPL_URLDownloadToCacheFileW(param0, param1, param2, cchFileName, param4, param5);
        return win32_impl_result;
    }
    inline int32_t URLOpenBlockingStreamA(Windows::Win32::Com::IUnknown* param0, int8_t* param1, Windows::Win32::StructuredStorage::IStream** param2, uint32_t param3, Windows::Win32::Com::IBindStatusCallback* param4)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenBlockingStreamA(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t URLOpenBlockingStreamW(Windows::Win32::Com::IUnknown* param0, uint16_t* param1, Windows::Win32::StructuredStorage::IStream** param2, uint32_t param3, Windows::Win32::Com::IBindStatusCallback* param4)
    {
        auto win32_impl_result = WIN32_IMPL_URLOpenBlockingStreamW(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t HlinkGoBack(Windows::Win32::Com::IUnknown* pUnk)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkGoBack(pUnk);
        return win32_impl_result;
    }
    inline int32_t HlinkGoForward(Windows::Win32::Com::IUnknown* pUnk)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkGoForward(pUnk);
        return win32_impl_result;
    }
    inline int32_t HlinkNavigateString(Windows::Win32::Com::IUnknown* pUnk, uint16_t* szTarget)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkNavigateString(pUnk, szTarget);
        return win32_impl_result;
    }
    inline int32_t HlinkNavigateMoniker(Windows::Win32::Com::IUnknown* pUnk, Windows::Win32::Com::IMoniker* pmkTarget)
    {
        auto win32_impl_result = WIN32_IMPL_HlinkNavigateMoniker(pUnk, pmkTarget);
        return win32_impl_result;
    }
    inline int32_t CoInternetParseUrl(uint16_t* pwzUrl, Windows::Win32::Com::PARSEACTION ParseAction, uint32_t dwFlags, uint16_t* pszResult, uint32_t cchResult, uint32_t* pcchResult, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetParseUrl(pwzUrl, ParseAction, dwFlags, pszResult, cchResult, pcchResult, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetParseIUri(Windows::Win32::Com::IUri* pIUri, Windows::Win32::Com::PARSEACTION ParseAction, uint32_t dwFlags, uint16_t* pwzResult, uint32_t cchResult, uint32_t* pcchResult, size_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetParseIUri(pIUri, ParseAction, dwFlags, pwzResult, cchResult, pcchResult, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetCombineUrl(uint16_t* pwzBaseUrl, uint16_t* pwzRelativeUrl, uint32_t dwCombineFlags, uint16_t* pszResult, uint32_t cchResult, uint32_t* pcchResult, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCombineUrl(pwzBaseUrl, pwzRelativeUrl, dwCombineFlags, pszResult, cchResult, pcchResult, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetCombineUrlEx(Windows::Win32::Com::IUri* pBaseUri, uint16_t* pwzRelativeUrl, uint32_t dwCombineFlags, Windows::Win32::Com::IUri** ppCombinedUri, size_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCombineUrlEx(pBaseUri, pwzRelativeUrl, dwCombineFlags, ppCombinedUri, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetCombineIUri(Windows::Win32::Com::IUri* pBaseUri, Windows::Win32::Com::IUri* pRelativeUri, uint32_t dwCombineFlags, Windows::Win32::Com::IUri** ppCombinedUri, size_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCombineIUri(pBaseUri, pRelativeUri, dwCombineFlags, ppCombinedUri, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetCompareUrl(uint16_t* pwzUrl1, uint16_t* pwzUrl2, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCompareUrl(pwzUrl1, pwzUrl2, dwFlags);
        return win32_impl_result;
    }
    inline int32_t CoInternetGetProtocolFlags(uint16_t* pwzUrl, uint32_t* pdwFlags, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetGetProtocolFlags(pwzUrl, pdwFlags, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetQueryInfo(uint16_t* pwzUrl, Windows::Win32::Com::QUERYOPTION QueryOptions, uint32_t dwQueryFlags, void* pvBuffer, uint32_t cbBuffer, uint32_t* pcbBuffer, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetQueryInfo(pwzUrl, QueryOptions, dwQueryFlags, pvBuffer, cbBuffer, pcbBuffer, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetGetSession(uint32_t dwSessionMode, Windows::Win32::Com::IInternetSession** ppIInternetSession, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetGetSession(dwSessionMode, ppIInternetSession, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetGetSecurityUrl(uint16_t* pwszUrl, uint16_t** ppwszSecUrl, Windows::Win32::Com::PSUACTION psuAction, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetGetSecurityUrl(pwszUrl, ppwszSecUrl, psuAction, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetGetSecurityUrlEx(Windows::Win32::Com::IUri* pUri, Windows::Win32::Com::IUri** ppSecUri, Windows::Win32::Com::PSUACTION psuAction, size_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetGetSecurityUrlEx(pUri, ppSecUri, psuAction, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetSetFeatureEnabled(Windows::Win32::Com::INTERNETFEATURELIST FeatureEntry, uint32_t dwFlags, Windows::Win32::SystemServices::BOOL fEnable)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetSetFeatureEnabled(FeatureEntry, dwFlags, fEnable);
        return win32_impl_result;
    }
    inline int32_t CoInternetIsFeatureEnabled(Windows::Win32::Com::INTERNETFEATURELIST FeatureEntry, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetIsFeatureEnabled(FeatureEntry, dwFlags);
        return win32_impl_result;
    }
    inline int32_t CoInternetIsFeatureEnabledForUrl(Windows::Win32::Com::INTERNETFEATURELIST FeatureEntry, uint32_t dwFlags, uint16_t* szURL, Windows::Win32::Com::IInternetSecurityManager* pSecMgr)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetIsFeatureEnabledForUrl(FeatureEntry, dwFlags, szURL, pSecMgr);
        return win32_impl_result;
    }
    inline int32_t CoInternetIsFeatureEnabledForIUri(Windows::Win32::Com::INTERNETFEATURELIST FeatureEntry, uint32_t dwFlags, Windows::Win32::Com::IUri* pIUri, Windows::Win32::Com::IInternetSecurityManagerEx2* pSecMgr)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetIsFeatureEnabledForIUri(FeatureEntry, dwFlags, pIUri, pSecMgr);
        return win32_impl_result;
    }
    inline int32_t CoInternetIsFeatureZoneElevationEnabled(uint16_t* szFromURL, uint16_t* szToURL, Windows::Win32::Com::IInternetSecurityManager* pSecMgr, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetIsFeatureZoneElevationEnabled(szFromURL, szToURL, pSecMgr, dwFlags);
        return win32_impl_result;
    }
    inline int32_t CopyStgMedium(Windows::Win32::Com::STGMEDIUM* pcstgmedSrc, Windows::Win32::Com::STGMEDIUM* pstgmedDest)
    {
        auto win32_impl_result = WIN32_IMPL_CopyStgMedium(pcstgmedSrc, pstgmedDest);
        return win32_impl_result;
    }
    inline int32_t CopyBindInfo(Windows::Win32::Com::BINDINFO* pcbiSrc, Windows::Win32::Com::BINDINFO* pbiDest)
    {
        auto win32_impl_result = WIN32_IMPL_CopyBindInfo(pcbiSrc, pbiDest);
        return win32_impl_result;
    }
    inline void ReleaseBindInfo(Windows::Win32::Com::BINDINFO* pbindinfo)
    {
        WIN32_IMPL_ReleaseBindInfo(pbindinfo);
    }
    inline uint16_t* IEGetUserPrivateNamespaceName()
    {
        auto win32_impl_result = WIN32_IMPL_IEGetUserPrivateNamespaceName();
        return win32_impl_result;
    }
    inline int32_t CoInternetCreateSecurityManager(Windows::Win32::SystemServices::IServiceProvider* pSP, Windows::Win32::Com::IInternetSecurityManager** ppSM, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCreateSecurityManager(pSP, ppSM, dwReserved);
        return win32_impl_result;
    }
    inline int32_t CoInternetCreateZoneManager(Windows::Win32::SystemServices::IServiceProvider* pSP, Windows::Win32::Com::IInternetZoneManager** ppZM, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInternetCreateZoneManager(pSP, ppZM, dwReserved);
        return win32_impl_result;
    }
    inline int32_t GetSoftwareUpdateInfo(uint16_t* szDistUnit, Windows::Win32::Shell::SOFTDISTINFO* psdi)
    {
        auto win32_impl_result = WIN32_IMPL_GetSoftwareUpdateInfo(szDistUnit, psdi);
        return win32_impl_result;
    }
    inline int32_t SetSoftwareUpdateAdvertisementState(uint16_t* szDistUnit, uint32_t dwAdState, uint32_t dwAdvertisedVersionMS, uint32_t dwAdvertisedVersionLS)
    {
        auto win32_impl_result = WIN32_IMPL_SetSoftwareUpdateAdvertisementState(szDistUnit, dwAdState, dwAdvertisedVersionMS, dwAdvertisedVersionLS);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsLoggingEnabledA(int8_t* pszUrl)
    {
        auto win32_impl_result = WIN32_IMPL_IsLoggingEnabledA(pszUrl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsLoggingEnabledW(uint16_t* pwszUrl)
    {
        auto win32_impl_result = WIN32_IMPL_IsLoggingEnabledW(pwszUrl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteHitLogging(Windows::Win32::Com::HIT_LOGGING_INFO* lpLogginginfo)
    {
        auto win32_impl_result = WIN32_IMPL_WriteHitLogging(lpLogginginfo);
        return win32_impl_result;
    }
    inline int32_t CreateDataAdviseHolder(Windows::Win32::Com::IDataAdviseHolder** ppDAHolder)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDataAdviseHolder(ppDAHolder);
        return win32_impl_result;
    }
    inline uint32_t OleBuildVersion()
    {
        auto win32_impl_result = WIN32_IMPL_OleBuildVersion();
        return win32_impl_result;
    }
    inline int32_t OleInitialize(void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_OleInitialize(pvReserved);
        return win32_impl_result;
    }
    inline void OleUninitialize()
    {
        WIN32_IMPL_OleUninitialize();
    }
    inline int32_t OleQueryLinkFromData(Windows::Win32::Com::IDataObject* pSrcDataObject)
    {
        auto win32_impl_result = WIN32_IMPL_OleQueryLinkFromData(pSrcDataObject);
        return win32_impl_result;
    }
    inline int32_t OleQueryCreateFromData(Windows::Win32::Com::IDataObject* pSrcDataObject)
    {
        auto win32_impl_result = WIN32_IMPL_OleQueryCreateFromData(pSrcDataObject);
        return win32_impl_result;
    }
    inline int32_t OleCreate(::win32::guid* rclsid, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* pFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreate(rclsid, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateEx(::win32::guid* rclsid, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateEx(rclsid, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateFromData(Windows::Win32::Com::IDataObject* pSrcDataObj, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* pFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateFromData(pSrcDataObj, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateFromDataEx(Windows::Win32::Com::IDataObject* pSrcDataObj, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateFromDataEx(pSrcDataObj, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLinkFromData(Windows::Win32::Com::IDataObject* pSrcDataObj, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* pFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLinkFromData(pSrcDataObj, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLinkFromDataEx(Windows::Win32::Com::IDataObject* pSrcDataObj, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLinkFromDataEx(pSrcDataObj, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateStaticFromData(Windows::Win32::Com::IDataObject* pSrcDataObj, ::win32::guid* iid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* pFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateStaticFromData(pSrcDataObj, iid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLink(Windows::Win32::Com::IMoniker* pmkLinkSrc, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* lpFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLink(pmkLinkSrc, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLinkEx(Windows::Win32::Com::IMoniker* pmkLinkSrc, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLinkEx(pmkLinkSrc, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLinkToFile(uint16_t* lpszFileName, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* lpFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLinkToFile(lpszFileName, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateLinkToFileEx(uint16_t* lpszFileName, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateLinkToFileEx(lpszFileName, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateFromFile(::win32::guid* rclsid, uint16_t* lpszFileName, ::win32::guid* riid, uint32_t renderopt, Windows::Win32::Com::FORMATETC* lpFormatEtc, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateFromFile(rclsid, lpszFileName, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateFromFileEx(::win32::guid* rclsid, uint16_t* lpszFileName, ::win32::guid* riid, uint32_t dwFlags, uint32_t renderopt, uint32_t cFormats, uint32_t* rgAdvf, Windows::Win32::Com::FORMATETC* rgFormatEtc, Windows::Win32::Com::IAdviseSink* lpAdviseSink, uint32_t* rgdwConnection, Windows::Win32::Com::IOleClientSite* pClientSite, Windows::Win32::StructuredStorage::IStorage* pStg, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateFromFileEx(rclsid, lpszFileName, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleLoad(Windows::Win32::StructuredStorage::IStorage* pStg, ::win32::guid* riid, Windows::Win32::Com::IOleClientSite* pClientSite, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleLoad(pStg, riid, pClientSite, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleSave(Windows::Win32::Com::IPersistStorage* pPS, Windows::Win32::StructuredStorage::IStorage* pStg, Windows::Win32::SystemServices::BOOL fSameAsLoad)
    {
        auto win32_impl_result = WIN32_IMPL_OleSave(pPS, pStg, fSameAsLoad);
        return win32_impl_result;
    }
    inline int32_t OleLoadFromStream(Windows::Win32::StructuredStorage::IStream* pStm, ::win32::guid* iidInterface, void** ppvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleLoadFromStream(pStm, iidInterface, ppvObj);
        return win32_impl_result;
    }
    inline int32_t OleSaveToStream(Windows::Win32::Com::IPersistStream* pPStm, Windows::Win32::StructuredStorage::IStream* pStm)
    {
        auto win32_impl_result = WIN32_IMPL_OleSaveToStream(pPStm, pStm);
        return win32_impl_result;
    }
    inline int32_t OleSetContainedObject(Windows::Win32::Com::IUnknown* pUnknown, Windows::Win32::SystemServices::BOOL fContained)
    {
        auto win32_impl_result = WIN32_IMPL_OleSetContainedObject(pUnknown, fContained);
        return win32_impl_result;
    }
    inline int32_t OleNoteObjectVisible(Windows::Win32::Com::IUnknown* pUnknown, Windows::Win32::SystemServices::BOOL fVisible)
    {
        auto win32_impl_result = WIN32_IMPL_OleNoteObjectVisible(pUnknown, fVisible);
        return win32_impl_result;
    }
    inline int32_t RegisterDragDrop(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Com::IDropTarget* pDropTarget)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDragDrop(hwnd, pDropTarget);
        return win32_impl_result;
    }
    inline int32_t RevokeDragDrop(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_RevokeDragDrop(hwnd);
        return win32_impl_result;
    }
    inline int32_t DoDragDrop(Windows::Win32::Com::IDataObject* pDataObj, Windows::Win32::Com::IDropSource* pDropSource, uint32_t dwOKEffects, uint32_t* pdwEffect)
    {
        auto win32_impl_result = WIN32_IMPL_DoDragDrop(pDataObj, pDropSource, dwOKEffects, pdwEffect);
        return win32_impl_result;
    }
    inline int32_t OleSetClipboard(Windows::Win32::Com::IDataObject* pDataObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleSetClipboard(pDataObj);
        return win32_impl_result;
    }
    inline int32_t OleGetClipboard(Windows::Win32::Com::IDataObject** ppDataObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleGetClipboard(ppDataObj);
        return win32_impl_result;
    }
    inline int32_t OleGetClipboardWithEnterpriseInfo(Windows::Win32::Com::IDataObject** dataObject, uint16_t** dataEnterpriseId, uint16_t** sourceDescription, uint16_t** targetDescription, uint16_t** dataDescription)
    {
        auto win32_impl_result = WIN32_IMPL_OleGetClipboardWithEnterpriseInfo(dataObject, dataEnterpriseId, sourceDescription, targetDescription, dataDescription);
        return win32_impl_result;
    }
    inline int32_t OleFlushClipboard()
    {
        auto win32_impl_result = WIN32_IMPL_OleFlushClipboard();
        return win32_impl_result;
    }
    inline int32_t OleIsCurrentClipboard(Windows::Win32::Com::IDataObject* pDataObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleIsCurrentClipboard(pDataObj);
        return win32_impl_result;
    }
    inline intptr_t OleCreateMenuDescriptor(Windows::Win32::MenusAndResources::HMENU hmenuCombined, Windows::Win32::Com::OleMenuGroupWidths* lpMenuWidths)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateMenuDescriptor(hmenuCombined, lpMenuWidths);
        return win32_impl_result;
    }
    inline int32_t OleSetMenuDescriptor(intptr_t holemenu, Windows::Win32::WindowsAndMessaging::HWND hwndFrame, Windows::Win32::WindowsAndMessaging::HWND hwndActiveObject, Windows::Win32::Com::IOleInPlaceFrame* lpFrame, Windows::Win32::Com::IOleInPlaceActiveObject* lpActiveObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleSetMenuDescriptor(holemenu, hwndFrame, hwndActiveObject, lpFrame, lpActiveObj);
        return win32_impl_result;
    }
    inline int32_t OleDestroyMenuDescriptor(intptr_t holemenu)
    {
        auto win32_impl_result = WIN32_IMPL_OleDestroyMenuDescriptor(holemenu);
        return win32_impl_result;
    }
    inline int32_t OleTranslateAccelerator(Windows::Win32::Com::IOleInPlaceFrame* lpFrame, Windows::Win32::Com::OIFI* lpFrameInfo, Windows::Win32::WindowsAndMessaging::MSG* lpmsg)
    {
        auto win32_impl_result = WIN32_IMPL_OleTranslateAccelerator(lpFrame, lpFrameInfo, lpmsg);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OleDuplicateData(Windows::Win32::SystemServices::HANDLE hSrc, uint16_t cfFormat, uint32_t uiFlags)
    {
        auto win32_impl_result = WIN32_IMPL_OleDuplicateData(hSrc, cfFormat, uiFlags);
        return win32_impl_result;
    }
    inline int32_t OleDraw(Windows::Win32::Com::IUnknown* pUnknown, uint32_t dwAspect, Windows::Win32::Gdi::HDC hdcDraw, Windows::Win32::DisplayDevices::RECT* lprcBounds)
    {
        auto win32_impl_result = WIN32_IMPL_OleDraw(pUnknown, dwAspect, hdcDraw, lprcBounds);
        return win32_impl_result;
    }
    inline int32_t OleRun(Windows::Win32::Com::IUnknown* pUnknown)
    {
        auto win32_impl_result = WIN32_IMPL_OleRun(pUnknown);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleIsRunning(Windows::Win32::Com::IOleObject* pObject)
    {
        auto win32_impl_result = WIN32_IMPL_OleIsRunning(pObject);
        return win32_impl_result;
    }
    inline int32_t OleLockRunning(Windows::Win32::Com::IUnknown* pUnknown, Windows::Win32::SystemServices::BOOL fLock, Windows::Win32::SystemServices::BOOL fLastUnlockCloses)
    {
        auto win32_impl_result = WIN32_IMPL_OleLockRunning(pUnknown, fLock, fLastUnlockCloses);
        return win32_impl_result;
    }
    inline void ReleaseStgMedium(Windows::Win32::Com::STGMEDIUM* param0)
    {
        WIN32_IMPL_ReleaseStgMedium(param0);
    }
    inline int32_t CreateOleAdviseHolder(Windows::Win32::Com::IOleAdviseHolder** ppOAHolder)
    {
        auto win32_impl_result = WIN32_IMPL_CreateOleAdviseHolder(ppOAHolder);
        return win32_impl_result;
    }
    inline int32_t OleCreateDefaultHandler(::win32::guid* clsid, Windows::Win32::Com::IUnknown* pUnkOuter, ::win32::guid* riid, void** lplpObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateDefaultHandler(clsid, pUnkOuter, riid, lplpObj);
        return win32_impl_result;
    }
    inline int32_t OleCreateEmbeddingHelper(::win32::guid* clsid, Windows::Win32::Com::IUnknown* pUnkOuter, uint32_t flags, Windows::Win32::Com::IClassFactory* pCF, ::win32::guid* riid, void** lplpObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateEmbeddingHelper(clsid, pUnkOuter, flags, pCF, riid, lplpObj);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsAccelerator(Windows::Win32::MenusAndResources::HACCEL hAccel, int32_t cAccelEntries, Windows::Win32::WindowsAndMessaging::MSG* lpMsg, uint16_t* lpwCmd)
    {
        auto win32_impl_result = WIN32_IMPL_IsAccelerator(hAccel, cAccelEntries, lpMsg, lpwCmd);
        return win32_impl_result;
    }
    inline intptr_t OleGetIconOfFile(uint16_t* lpszPath, Windows::Win32::SystemServices::BOOL fUseFileAsLabel)
    {
        auto win32_impl_result = WIN32_IMPL_OleGetIconOfFile(lpszPath, fUseFileAsLabel);
        return win32_impl_result;
    }
    inline intptr_t OleGetIconOfClass(::win32::guid* rclsid, uint16_t* lpszLabel, Windows::Win32::SystemServices::BOOL fUseTypeAsLabel)
    {
        auto win32_impl_result = WIN32_IMPL_OleGetIconOfClass(rclsid, lpszLabel, fUseTypeAsLabel);
        return win32_impl_result;
    }
    inline intptr_t OleMetafilePictFromIconAndLabel(Windows::Win32::Gdi::HICON hIcon, uint16_t* lpszLabel, uint16_t* lpszSourceFile, uint32_t iIconIndex)
    {
        auto win32_impl_result = WIN32_IMPL_OleMetafilePictFromIconAndLabel(hIcon, lpszLabel, lpszSourceFile, iIconIndex);
        return win32_impl_result;
    }
    inline int32_t OleRegGetUserType(::win32::guid* clsid, uint32_t dwFormOfType, uint16_t** pszUserType)
    {
        auto win32_impl_result = WIN32_IMPL_OleRegGetUserType(clsid, dwFormOfType, pszUserType);
        return win32_impl_result;
    }
    inline int32_t OleRegGetMiscStatus(::win32::guid* clsid, uint32_t dwAspect, uint32_t* pdwStatus)
    {
        auto win32_impl_result = WIN32_IMPL_OleRegGetMiscStatus(clsid, dwAspect, pdwStatus);
        return win32_impl_result;
    }
    inline int32_t OleRegEnumFormatEtc(::win32::guid* clsid, uint32_t dwDirection, Windows::Win32::Com::IEnumFORMATETC** ppenum)
    {
        auto win32_impl_result = WIN32_IMPL_OleRegEnumFormatEtc(clsid, dwDirection, ppenum);
        return win32_impl_result;
    }
    inline int32_t OleRegEnumVerbs(::win32::guid* clsid, Windows::Win32::Com::IEnumOLEVERB** ppenum)
    {
        auto win32_impl_result = WIN32_IMPL_OleRegEnumVerbs(clsid, ppenum);
        return win32_impl_result;
    }
    inline int32_t OleDoAutoConvert(Windows::Win32::StructuredStorage::IStorage* pStg, ::win32::guid* pClsidNew)
    {
        auto win32_impl_result = WIN32_IMPL_OleDoAutoConvert(pStg, pClsidNew);
        return win32_impl_result;
    }
    inline int32_t OleGetAutoConvert(::win32::guid* clsidOld, ::win32::guid* pClsidNew)
    {
        auto win32_impl_result = WIN32_IMPL_OleGetAutoConvert(clsidOld, pClsidNew);
        return win32_impl_result;
    }
    inline int32_t OleSetAutoConvert(::win32::guid* clsidOld, ::win32::guid* clsidNew)
    {
        auto win32_impl_result = WIN32_IMPL_OleSetAutoConvert(clsidOld, clsidNew);
        return win32_impl_result;
    }
    inline uint32_t HPALETTE_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HPALETTE_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HPALETTE_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HPALETTE_UserFree(uint32_t* param0, Windows::Win32::Gdi::HPALETTE* param1)
    {
        WIN32_IMPL_HPALETTE_UserFree(param0, param1);
    }
    inline uint32_t HRGN_UserSize(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HRGN* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HRGN_UserSize(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HRGN_UserMarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HRGN* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HRGN_UserMarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HRGN_UserUnmarshal(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HRGN* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HRGN_UserUnmarshal(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HRGN_UserFree(uint32_t* param0, Windows::Win32::Gdi::HRGN* param1)
    {
        WIN32_IMPL_HRGN_UserFree(param0, param1);
    }
    inline uint32_t HPALETTE_UserSize64(uint32_t* param0, uint32_t param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserSize64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HPALETTE_UserMarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserMarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline uint8_t* HPALETTE_UserUnmarshal64(uint32_t* param0, uint8_t* param1, Windows::Win32::Gdi::HPALETTE* param2)
    {
        auto win32_impl_result = WIN32_IMPL_HPALETTE_UserUnmarshal64(param0, param1, param2);
        return win32_impl_result;
    }
    inline void HPALETTE_UserFree64(uint32_t* param0, Windows::Win32::Gdi::HPALETTE* param1)
    {
        WIN32_IMPL_HPALETTE_UserFree64(param0, param1);
    }
    inline int32_t OleCreatePropertyFrame(Windows::Win32::WindowsAndMessaging::HWND hwndOwner, uint32_t x, uint32_t y, uint16_t* lpszCaption, uint32_t cObjects, Windows::Win32::Com::IUnknown** ppUnk, uint32_t cPages, ::win32::guid* pPageClsID, uint32_t lcid, uint32_t dwReserved, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreatePropertyFrame(hwndOwner, x, y, lpszCaption, cObjects, ppUnk, cPages, pPageClsID, lcid, dwReserved, pvReserved);
        return win32_impl_result;
    }
    inline int32_t OleCreatePropertyFrameIndirect(Windows::Win32::Com::OCPFIPARAMS* lpParams)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreatePropertyFrameIndirect(lpParams);
        return win32_impl_result;
    }
    inline int32_t OleTranslateColor(uint32_t clr, Windows::Win32::Gdi::HPALETTE hpal, uint32_t* lpcolorref)
    {
        auto win32_impl_result = WIN32_IMPL_OleTranslateColor(clr, hpal, lpcolorref);
        return win32_impl_result;
    }
    inline int32_t OleCreateFontIndirect(Windows::Win32::Com::FONTDESC* lpFontDesc, ::win32::guid* riid, void** lplpvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreateFontIndirect(lpFontDesc, riid, lplpvObj);
        return win32_impl_result;
    }
    inline int32_t OleCreatePictureIndirect(Windows::Win32::Com::PICTDESC* lpPictDesc, ::win32::guid* riid, Windows::Win32::SystemServices::BOOL fOwn, void** lplpvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleCreatePictureIndirect(lpPictDesc, riid, fOwn, lplpvObj);
        return win32_impl_result;
    }
    inline int32_t OleLoadPicture(Windows::Win32::StructuredStorage::IStream* lpstream, int32_t lSize, Windows::Win32::SystemServices::BOOL fRunmode, ::win32::guid* riid, void** lplpvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleLoadPicture(lpstream, lSize, fRunmode, riid, lplpvObj);
        return win32_impl_result;
    }
    inline int32_t OleLoadPictureEx(Windows::Win32::StructuredStorage::IStream* lpstream, int32_t lSize, Windows::Win32::SystemServices::BOOL fRunmode, ::win32::guid* riid, uint32_t xSizeDesired, uint32_t ySizeDesired, uint32_t dwFlags, void** lplpvObj)
    {
        auto win32_impl_result = WIN32_IMPL_OleLoadPictureEx(lpstream, lSize, fRunmode, riid, xSizeDesired, ySizeDesired, dwFlags, lplpvObj);
        return win32_impl_result;
    }
    inline int32_t OleLoadPicturePath(uint16_t* szURLorPath, Windows::Win32::Com::IUnknown* punkCaller, uint32_t dwReserved, uint32_t clrReserved, ::win32::guid* riid, void** ppvRet)
    {
        auto win32_impl_result = WIN32_IMPL_OleLoadPicturePath(szURLorPath, punkCaller, dwReserved, clrReserved, riid, ppvRet);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HCURSOR OleIconToCursor(Windows::Win32::SystemServices::HINSTANCE hinstExe, Windows::Win32::Gdi::HICON hIcon)
    {
        auto win32_impl_result = WIN32_IMPL_OleIconToCursor(hinstExe, hIcon);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleUIAddVerbMenuW(Windows::Win32::Com::IOleObject* lpOleObj, uint16_t* lpszShortType, Windows::Win32::MenusAndResources::HMENU hMenu, uint32_t uPos, uint32_t uIDVerbMin, uint32_t uIDVerbMax, Windows::Win32::SystemServices::BOOL bAddConvert, uint32_t idConvert, Windows::Win32::MenusAndResources::HMENU* lphMenu)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIAddVerbMenuW(lpOleObj, lpszShortType, hMenu, uPos, uIDVerbMin, uIDVerbMax, bAddConvert, idConvert, lphMenu);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleUIAddVerbMenuA(Windows::Win32::Com::IOleObject* lpOleObj, int8_t* lpszShortType, Windows::Win32::MenusAndResources::HMENU hMenu, uint32_t uPos, uint32_t uIDVerbMin, uint32_t uIDVerbMax, Windows::Win32::SystemServices::BOOL bAddConvert, uint32_t idConvert, Windows::Win32::MenusAndResources::HMENU* lphMenu)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIAddVerbMenuA(lpOleObj, lpszShortType, hMenu, uPos, uIDVerbMin, uIDVerbMax, bAddConvert, idConvert, lphMenu);
        return win32_impl_result;
    }
    inline uint32_t OleUIInsertObjectW(Windows::Win32::Com::OLEUIINSERTOBJECTW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIInsertObjectW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIInsertObjectA(Windows::Win32::Com::OLEUIINSERTOBJECTA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIInsertObjectA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIPasteSpecialW(Windows::Win32::Com::OLEUIPASTESPECIALW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIPasteSpecialW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIPasteSpecialA(Windows::Win32::Com::OLEUIPASTESPECIALA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIPasteSpecialA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIEditLinksW(Windows::Win32::Com::OLEUIEDITLINKSW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIEditLinksW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIEditLinksA(Windows::Win32::Com::OLEUIEDITLINKSA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIEditLinksA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIChangeIconW(Windows::Win32::Com::OLEUICHANGEICONW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIChangeIconW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIChangeIconA(Windows::Win32::Com::OLEUICHANGEICONA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIChangeIconA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIConvertW(Windows::Win32::Com::OLEUICONVERTW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIConvertW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIConvertA(Windows::Win32::Com::OLEUICONVERTA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIConvertA(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleUICanConvertOrActivateAs(::win32::guid* rClsid, Windows::Win32::SystemServices::BOOL fIsLinkedObject, uint16_t wFormat)
    {
        auto win32_impl_result = WIN32_IMPL_OleUICanConvertOrActivateAs(rClsid, fIsLinkedObject, wFormat);
        return win32_impl_result;
    }
    inline uint32_t OleUIBusyW(Windows::Win32::Com::OLEUIBUSYW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIBusyW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIBusyA(Windows::Win32::Com::OLEUIBUSYA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIBusyA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIChangeSourceW(Windows::Win32::Com::OLEUICHANGESOURCEW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIChangeSourceW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIChangeSourceA(Windows::Win32::Com::OLEUICHANGESOURCEA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIChangeSourceA(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIObjectPropertiesW(Windows::Win32::Com::OLEUIOBJECTPROPSW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIObjectPropertiesW(param0);
        return win32_impl_result;
    }
    inline uint32_t OleUIObjectPropertiesA(Windows::Win32::Com::OLEUIOBJECTPROPSA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIObjectPropertiesA(param0);
        return win32_impl_result;
    }
    inline int32_t OleUIPromptUserW(int32_t nTemplate, Windows::Win32::WindowsAndMessaging::HWND hwndParent)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIPromptUserW(nTemplate, hwndParent);
        return win32_impl_result;
    }
    inline int32_t OleUIPromptUserA(int32_t nTemplate, Windows::Win32::WindowsAndMessaging::HWND hwndParent)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIPromptUserA(nTemplate, hwndParent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleUIUpdateLinksW(Windows::Win32::Com::IOleUILinkContainerW* lpOleUILinkCntr, Windows::Win32::WindowsAndMessaging::HWND hwndParent, uint16_t* lpszTitle, int32_t cLinks)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIUpdateLinksW(lpOleUILinkCntr, hwndParent, lpszTitle, cLinks);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OleUIUpdateLinksA(Windows::Win32::Com::IOleUILinkContainerA* lpOleUILinkCntr, Windows::Win32::WindowsAndMessaging::HWND hwndParent, int8_t* lpszTitle, int32_t cLinks)
    {
        auto win32_impl_result = WIN32_IMPL_OleUIUpdateLinksA(lpOleUILinkCntr, hwndParent, lpszTitle, cLinks);
        return win32_impl_result;
    }
    inline int32_t CoGetInterceptor(::win32::guid* iidIntercepted, Windows::Win32::Com::IUnknown* punkOuter, ::win32::guid* iid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetInterceptor(iidIntercepted, punkOuter, iid, ppv);
        return win32_impl_result;
    }
    inline int32_t CoGetInterceptorFromTypeInfo(::win32::guid* iidIntercepted, Windows::Win32::Com::IUnknown* punkOuter, Windows::Win32::Automation::ITypeInfo* typeInfo, ::win32::guid* iid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetInterceptorFromTypeInfo(iidIntercepted, punkOuter, typeInfo, iid, ppv);
        return win32_impl_result;
    }
    inline void CoSetMessageDispatcher(Windows::Win32::Com::IMessageDispatcher* pMessageDispatcher)
    {
        WIN32_IMPL_CoSetMessageDispatcher(pMessageDispatcher);
    }
    inline void CoHandlePriorityEventsFromMessagePump()
    {
        WIN32_IMPL_CoHandlePriorityEventsFromMessagePump();
    }
    inline int32_t CoInitialize(void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoInitialize(pvReserved);
        return win32_impl_result;
    }
    inline int32_t CoRegisterMallocSpy(Windows::Win32::Com::IMallocSpy* pMallocSpy)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterMallocSpy(pMallocSpy);
        return win32_impl_result;
    }
    inline int32_t CoRevokeMallocSpy()
    {
        auto win32_impl_result = WIN32_IMPL_CoRevokeMallocSpy();
        return win32_impl_result;
    }
    inline int32_t CoRegisterInitializeSpy(Windows::Win32::Com::IInitializeSpy* pSpy, Windows::Win32::SystemServices::ULARGE_INTEGER* puliCookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterInitializeSpy(pSpy, puliCookie);
        return win32_impl_result;
    }
    inline int32_t CoRevokeInitializeSpy(Windows::Win32::SystemServices::ULARGE_INTEGER uliCookie)
    {
        auto win32_impl_result = WIN32_IMPL_CoRevokeInitializeSpy(uliCookie);
        return win32_impl_result;
    }
    inline int32_t CoGetSystemSecurityPermissions(Windows::Win32::Com::COMSD comSDType, void** ppSD)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetSystemSecurityPermissions(comSDType, ppSD);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HINSTANCE CoLoadLibrary(uint16_t* lpszLibName, Windows::Win32::SystemServices::BOOL bAutoFree)
    {
        auto win32_impl_result = WIN32_IMPL_CoLoadLibrary(lpszLibName, bAutoFree);
        return win32_impl_result;
    }
    inline void CoFreeLibrary(Windows::Win32::SystemServices::HINSTANCE hInst)
    {
        WIN32_IMPL_CoFreeLibrary(hInst);
    }
    inline void CoFreeAllLibraries()
    {
        WIN32_IMPL_CoFreeAllLibraries();
    }
    inline int32_t CoGetInstanceFromFile(Windows::Win32::Com::COSERVERINFO* pServerInfo, ::win32::guid* pClsid, Windows::Win32::Com::IUnknown* punkOuter, uint32_t dwClsCtx, uint32_t grfMode, uint16_t* pwszName, uint32_t dwCount, Windows::Win32::Com::MULTI_QI* pResults)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetInstanceFromFile(pServerInfo, pClsid, punkOuter, dwClsCtx, grfMode, pwszName, dwCount, pResults);
        return win32_impl_result;
    }
    inline int32_t CoGetInstanceFromIStorage(Windows::Win32::Com::COSERVERINFO* pServerInfo, ::win32::guid* pClsid, Windows::Win32::Com::IUnknown* punkOuter, uint32_t dwClsCtx, Windows::Win32::StructuredStorage::IStorage* pstg, uint32_t dwCount, Windows::Win32::Com::MULTI_QI* pResults)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetInstanceFromIStorage(pServerInfo, pClsid, punkOuter, dwClsCtx, pstg, dwCount, pResults);
        return win32_impl_result;
    }
    inline int32_t CoAllowSetForegroundWindow(Windows::Win32::Com::IUnknown* pUnk, void* lpvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CoAllowSetForegroundWindow(pUnk, lpvReserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CoIsOle1Class(::win32::guid* rclsid)
    {
        auto win32_impl_result = WIN32_IMPL_CoIsOle1Class(rclsid);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CoFileTimeToDosDateTime(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime, uint16_t* lpDosDate, uint16_t* lpDosTime)
    {
        auto win32_impl_result = WIN32_IMPL_CoFileTimeToDosDateTime(lpFileTime, lpDosDate, lpDosTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CoDosDateTimeToFileTime(uint16_t nDosDate, uint16_t nDosTime, Windows::Win32::WindowsProgramming::FILETIME* lpFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_CoDosDateTimeToFileTime(nDosDate, nDosTime, lpFileTime);
        return win32_impl_result;
    }
    inline int32_t CoRegisterMessageFilter(Windows::Win32::Com::IMessageFilter* lpMessageFilter, Windows::Win32::Com::IMessageFilter** lplpMessageFilter)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterMessageFilter(lpMessageFilter, lplpMessageFilter);
        return win32_impl_result;
    }
    inline int32_t CoRegisterChannelHook(::win32::guid* ExtensionUuid, Windows::Win32::Com::IChannelHook* pChannelHook)
    {
        auto win32_impl_result = WIN32_IMPL_CoRegisterChannelHook(ExtensionUuid, pChannelHook);
        return win32_impl_result;
    }
    inline int32_t CoTreatAsClass(::win32::guid* clsidOld, ::win32::guid* clsidNew)
    {
        auto win32_impl_result = WIN32_IMPL_CoTreatAsClass(clsidOld, clsidNew);
        return win32_impl_result;
    }
    inline int32_t CreateDataCache(Windows::Win32::Com::IUnknown* pUnkOuter, ::win32::guid* rclsid, ::win32::guid* iid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDataCache(pUnkOuter, rclsid, iid, ppv);
        return win32_impl_result;
    }
    inline int32_t BindMoniker(Windows::Win32::Com::IMoniker* pmk, uint32_t grfOpt, ::win32::guid* iidResult, void** ppvResult)
    {
        auto win32_impl_result = WIN32_IMPL_BindMoniker(pmk, grfOpt, iidResult, ppvResult);
        return win32_impl_result;
    }
    inline int32_t CoGetObject(uint16_t* pszName, Windows::Win32::Com::BIND_OPTS* pBindOptions, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_CoGetObject(pszName, pBindOptions, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t MkParseDisplayName(Windows::Win32::Com::IBindCtx* pbc, uint16_t* szUserName, uint32_t* pchEaten, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_MkParseDisplayName(pbc, szUserName, pchEaten, ppmk);
        return win32_impl_result;
    }
    inline int32_t MonikerRelativePathTo(Windows::Win32::Com::IMoniker* pmkSrc, Windows::Win32::Com::IMoniker* pmkDest, Windows::Win32::Com::IMoniker** ppmkRelPath, Windows::Win32::SystemServices::BOOL dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_MonikerRelativePathTo(pmkSrc, pmkDest, ppmkRelPath, dwReserved);
        return win32_impl_result;
    }
    inline int32_t MonikerCommonPrefixWith(Windows::Win32::Com::IMoniker* pmkThis, Windows::Win32::Com::IMoniker* pmkOther, Windows::Win32::Com::IMoniker** ppmkCommon)
    {
        auto win32_impl_result = WIN32_IMPL_MonikerCommonPrefixWith(pmkThis, pmkOther, ppmkCommon);
        return win32_impl_result;
    }
    inline int32_t CreateBindCtx(uint32_t reserved, Windows::Win32::Com::IBindCtx** ppbc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBindCtx(reserved, ppbc);
        return win32_impl_result;
    }
    inline int32_t CreateGenericComposite(Windows::Win32::Com::IMoniker* pmkFirst, Windows::Win32::Com::IMoniker* pmkRest, Windows::Win32::Com::IMoniker** ppmkComposite)
    {
        auto win32_impl_result = WIN32_IMPL_CreateGenericComposite(pmkFirst, pmkRest, ppmkComposite);
        return win32_impl_result;
    }
    inline int32_t GetClassFile(uint16_t* szFilename, ::win32::guid* pclsid)
    {
        auto win32_impl_result = WIN32_IMPL_GetClassFile(szFilename, pclsid);
        return win32_impl_result;
    }
    inline int32_t CreateClassMoniker(::win32::guid* rclsid, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClassMoniker(rclsid, ppmk);
        return win32_impl_result;
    }
    inline int32_t CreateFileMoniker(uint16_t* lpszPathName, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMoniker(lpszPathName, ppmk);
        return win32_impl_result;
    }
    inline int32_t CreateItemMoniker(uint16_t* lpszDelim, uint16_t* lpszItem, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateItemMoniker(lpszDelim, lpszItem, ppmk);
        return win32_impl_result;
    }
    inline int32_t CreateAntiMoniker(Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateAntiMoniker(ppmk);
        return win32_impl_result;
    }
    inline int32_t CreatePointerMoniker(Windows::Win32::Com::IUnknown* punk, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePointerMoniker(punk, ppmk);
        return win32_impl_result;
    }
    inline int32_t CreateObjrefMoniker(Windows::Win32::Com::IUnknown* punk, Windows::Win32::Com::IMoniker** ppmk)
    {
        auto win32_impl_result = WIN32_IMPL_CreateObjrefMoniker(punk, ppmk);
        return win32_impl_result;
    }
    inline int32_t GetRunningObjectTable(uint32_t reserved, Windows::Win32::Com::IRunningObjectTable** pprot)
    {
        auto win32_impl_result = WIN32_IMPL_GetRunningObjectTable(reserved, pprot);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
