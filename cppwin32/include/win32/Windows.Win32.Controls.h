// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Controls_H
#define WIN32_Windows_Win32_Controls_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Controls.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Controls
{
#pragma region methods
    inline Windows::Win32::Controls::HPROPSHEETPAGE CreatePropertySheetPageA(Windows::Win32::Controls::PROPSHEETPAGEA* constPropSheetPagePointer)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePropertySheetPageA(constPropSheetPagePointer);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HPROPSHEETPAGE CreatePropertySheetPageW(Windows::Win32::Controls::PROPSHEETPAGEW* constPropSheetPagePointer)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePropertySheetPageW(constPropSheetPagePointer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DestroyPropertySheetPage(Windows::Win32::Controls::HPROPSHEETPAGE param0)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyPropertySheetPage(param0);
        return win32_impl_result;
    }
    inline intptr_t PropertySheetA(Windows::Win32::Controls::PROPSHEETHEADERA_V2* param0)
    {
        auto win32_impl_result = WIN32_IMPL_PropertySheetA(param0);
        return win32_impl_result;
    }
    inline intptr_t PropertySheetW(Windows::Win32::Controls::PROPSHEETHEADERW_V2* param0)
    {
        auto win32_impl_result = WIN32_IMPL_PropertySheetW(param0);
        return win32_impl_result;
    }
    inline void InitCommonControls()
    {
        WIN32_IMPL_InitCommonControls();
    }
    inline Windows::Win32::SystemServices::BOOL InitCommonControlsEx(Windows::Win32::Controls::INITCOMMONCONTROLSEX* picce)
    {
        auto win32_impl_result = WIN32_IMPL_InitCommonControlsEx(picce);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_Create(int32_t cx, int32_t cy, uint32_t flags, int32_t cInitial, int32_t cGrow)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Create(cx, cy, flags, cInitial, cGrow);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Destroy(Windows::Win32::Controls::HIMAGELIST himl)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Destroy(himl);
        return win32_impl_result;
    }
    inline int32_t ImageList_GetImageCount(Windows::Win32::Controls::HIMAGELIST himl)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetImageCount(himl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_SetImageCount(Windows::Win32::Controls::HIMAGELIST himl, uint32_t uNewCount)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_SetImageCount(himl, uNewCount);
        return win32_impl_result;
    }
    inline int32_t ImageList_Add(Windows::Win32::Controls::HIMAGELIST himl, Windows::Win32::Gdi::HBITMAP hbmImage, Windows::Win32::Gdi::HBITMAP hbmMask)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Add(himl, hbmImage, hbmMask);
        return win32_impl_result;
    }
    inline int32_t ImageList_ReplaceIcon(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, Windows::Win32::Gdi::HICON hicon)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_ReplaceIcon(himl, i, hicon);
        return win32_impl_result;
    }
    inline uint32_t ImageList_SetBkColor(Windows::Win32::Controls::HIMAGELIST himl, uint32_t clrBk)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_SetBkColor(himl, clrBk);
        return win32_impl_result;
    }
    inline uint32_t ImageList_GetBkColor(Windows::Win32::Controls::HIMAGELIST himl)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetBkColor(himl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_SetOverlayImage(Windows::Win32::Controls::HIMAGELIST himl, int32_t iImage, int32_t iOverlay)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_SetOverlayImage(himl, iImage, iOverlay);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Draw(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, Windows::Win32::Gdi::HDC hdcDst, int32_t x, int32_t y, uint32_t fStyle)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Draw(himl, i, hdcDst, x, y, fStyle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Replace(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, Windows::Win32::Gdi::HBITMAP hbmImage, Windows::Win32::Gdi::HBITMAP hbmMask)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Replace(himl, i, hbmImage, hbmMask);
        return win32_impl_result;
    }
    inline int32_t ImageList_AddMasked(Windows::Win32::Controls::HIMAGELIST himl, Windows::Win32::Gdi::HBITMAP hbmImage, uint32_t crMask)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_AddMasked(himl, hbmImage, crMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DrawEx(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, Windows::Win32::Gdi::HDC hdcDst, int32_t x, int32_t y, int32_t dx, int32_t dy, uint32_t rgbBk, uint32_t rgbFg, uint32_t fStyle)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DrawEx(himl, i, hdcDst, x, y, dx, dy, rgbBk, rgbFg, fStyle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DrawIndirect(Windows::Win32::Controls::IMAGELISTDRAWPARAMS* pimldp)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DrawIndirect(pimldp);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Remove(Windows::Win32::Controls::HIMAGELIST himl, int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Remove(himl, i);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HICON ImageList_GetIcon(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetIcon(himl, i, flags);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_LoadImageA(Windows::Win32::SystemServices::HINSTANCE hi, int8_t* lpbmp, int32_t cx, int32_t cGrow, uint32_t crMask, uint32_t uType, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_LoadImageA(hi, lpbmp, cx, cGrow, crMask, uType, uFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_LoadImageW(Windows::Win32::SystemServices::HINSTANCE hi, uint16_t* lpbmp, int32_t cx, int32_t cGrow, uint32_t crMask, uint32_t uType, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_LoadImageW(hi, lpbmp, cx, cGrow, crMask, uType, uFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Copy(Windows::Win32::Controls::HIMAGELIST himlDst, int32_t iDst, Windows::Win32::Controls::HIMAGELIST himlSrc, int32_t iSrc, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Copy(himlDst, iDst, himlSrc, iSrc, uFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_BeginDrag(Windows::Win32::Controls::HIMAGELIST himlTrack, int32_t iTrack, int32_t dxHotspot, int32_t dyHotspot)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_BeginDrag(himlTrack, iTrack, dxHotspot, dyHotspot);
        return win32_impl_result;
    }
    inline void ImageList_EndDrag()
    {
        WIN32_IMPL_ImageList_EndDrag();
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DragEnter(Windows::Win32::WindowsAndMessaging::HWND hwndLock, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DragEnter(hwndLock, x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DragLeave(Windows::Win32::WindowsAndMessaging::HWND hwndLock)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DragLeave(hwndLock);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DragMove(int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DragMove(x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_SetDragCursorImage(Windows::Win32::Controls::HIMAGELIST himlDrag, int32_t iDrag, int32_t dxHotspot, int32_t dyHotspot)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_SetDragCursorImage(himlDrag, iDrag, dxHotspot, dyHotspot);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_DragShowNolock(Windows::Win32::SystemServices::BOOL fShow)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_DragShowNolock(fShow);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_GetDragImage(Windows::Win32::DisplayDevices::POINT* ppt, Windows::Win32::DisplayDevices::POINT* pptHotspot)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetDragImage(ppt, pptHotspot);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_Read(Windows::Win32::StructuredStorage::IStream* pstm)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Read(pstm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_Write(Windows::Win32::Controls::HIMAGELIST himl, Windows::Win32::StructuredStorage::IStream* pstm)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Write(himl, pstm);
        return win32_impl_result;
    }
    inline int32_t ImageList_ReadEx(uint32_t dwFlags, Windows::Win32::StructuredStorage::IStream* pstm, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_ReadEx(dwFlags, pstm, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t ImageList_WriteEx(Windows::Win32::Controls::HIMAGELIST himl, uint32_t dwFlags, Windows::Win32::StructuredStorage::IStream* pstm)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_WriteEx(himl, dwFlags, pstm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_GetIconSize(Windows::Win32::Controls::HIMAGELIST himl, int32_t* cx, int32_t* cy)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetIconSize(himl, cx, cy);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_SetIconSize(Windows::Win32::Controls::HIMAGELIST himl, int32_t cx, int32_t cy)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_SetIconSize(himl, cx, cy);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImageList_GetImageInfo(Windows::Win32::Controls::HIMAGELIST himl, int32_t i, Windows::Win32::Controls::IMAGEINFO* pImageInfo)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_GetImageInfo(himl, i, pImageInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_Merge(Windows::Win32::Controls::HIMAGELIST himl1, int32_t i1, Windows::Win32::Controls::HIMAGELIST himl2, int32_t i2, int32_t dx, int32_t dy)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Merge(himl1, i1, himl2, i2, dx, dy);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::HIMAGELIST ImageList_Duplicate(Windows::Win32::Controls::HIMAGELIST himl)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_Duplicate(himl);
        return win32_impl_result;
    }
    inline int32_t HIMAGELIST_QueryInterface(Windows::Win32::Controls::HIMAGELIST himl, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_HIMAGELIST_QueryInterface(himl, riid, ppv);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND CreateToolbarEx(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t ws, uint32_t wID, int32_t nBitmaps, Windows::Win32::SystemServices::HINSTANCE hBMInst, size_t wBMID, Windows::Win32::Controls::TBBUTTON* lpButtons, int32_t iNumButtons, int32_t dxButton, int32_t dyButton, int32_t dxBitmap, int32_t dyBitmap, uint32_t uStructSize)
    {
        auto win32_impl_result = WIN32_IMPL_CreateToolbarEx(hwnd, ws, wID, nBitmaps, hBMInst, wBMID, lpButtons, iNumButtons, dxButton, dyButton, dxBitmap, dyBitmap, uStructSize);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateMappedBitmap(Windows::Win32::SystemServices::HINSTANCE hInstance, intptr_t idBitmap, uint32_t wFlags, Windows::Win32::Controls::COLORMAP* lpColorMap, int32_t iNumMaps)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMappedBitmap(hInstance, idBitmap, wFlags, lpColorMap, iNumMaps);
        return win32_impl_result;
    }
    inline void DrawStatusTextA(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc, int8_t* pszText, uint32_t uFlags)
    {
        WIN32_IMPL_DrawStatusTextA(hDC, lprc, pszText, uFlags);
    }
    inline void DrawStatusTextW(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc, uint16_t* pszText, uint32_t uFlags)
    {
        WIN32_IMPL_DrawStatusTextW(hDC, lprc, pszText, uFlags);
    }
    inline Windows::Win32::WindowsAndMessaging::HWND CreateStatusWindowA(int32_t style, int8_t* lpszText, Windows::Win32::WindowsAndMessaging::HWND hwndParent, uint32_t wID)
    {
        auto win32_impl_result = WIN32_IMPL_CreateStatusWindowA(style, lpszText, hwndParent, wID);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND CreateStatusWindowW(int32_t style, uint16_t* lpszText, Windows::Win32::WindowsAndMessaging::HWND hwndParent, uint32_t wID)
    {
        auto win32_impl_result = WIN32_IMPL_CreateStatusWindowW(style, lpszText, hwndParent, wID);
        return win32_impl_result;
    }
    inline void MenuHelp(uint32_t uMsg, Windows::Win32::WindowsAndMessaging::WPARAM wParam, Windows::Win32::WindowsAndMessaging::LPARAM lParam, Windows::Win32::MenusAndResources::HMENU hMainMenu, Windows::Win32::SystemServices::HINSTANCE hInst, Windows::Win32::WindowsAndMessaging::HWND hwndStatus, uint32_t* lpwIDs)
    {
        WIN32_IMPL_MenuHelp(uMsg, wParam, lParam, hMainMenu, hInst, hwndStatus, lpwIDs);
    }
    inline Windows::Win32::SystemServices::BOOL ShowHideMenuCtl(Windows::Win32::WindowsAndMessaging::HWND hWnd, size_t uFlags, int32_t* lpInfo)
    {
        auto win32_impl_result = WIN32_IMPL_ShowHideMenuCtl(hWnd, uFlags, lpInfo);
        return win32_impl_result;
    }
    inline void GetEffectiveClientRect(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lprc, int32_t* lpInfo)
    {
        WIN32_IMPL_GetEffectiveClientRect(hWnd, lprc, lpInfo);
    }
    inline Windows::Win32::SystemServices::BOOL MakeDragList(Windows::Win32::WindowsAndMessaging::HWND hLB)
    {
        auto win32_impl_result = WIN32_IMPL_MakeDragList(hLB);
        return win32_impl_result;
    }
    inline void DrawInsert(Windows::Win32::WindowsAndMessaging::HWND handParent, Windows::Win32::WindowsAndMessaging::HWND hLB, int32_t nItem)
    {
        WIN32_IMPL_DrawInsert(handParent, hLB, nItem);
    }
    inline int32_t LBItemFromPt(Windows::Win32::WindowsAndMessaging::HWND hLB, Windows::Win32::DisplayDevices::POINT pt, Windows::Win32::SystemServices::BOOL bAutoScroll)
    {
        auto win32_impl_result = WIN32_IMPL_LBItemFromPt(hLB, pt, bAutoScroll);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND CreateUpDownControl(uint32_t dwStyle, int32_t x, int32_t y, int32_t cx, int32_t cy, Windows::Win32::WindowsAndMessaging::HWND hParent, int32_t nID, Windows::Win32::SystemServices::HINSTANCE hInst, Windows::Win32::WindowsAndMessaging::HWND hBuddy, int32_t nUpper, int32_t nLower, int32_t nPos)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUpDownControl(dwStyle, x, y, cx, cy, hParent, nID, hInst, hBuddy, nUpper, nLower, nPos);
        return win32_impl_result;
    }
    inline int32_t TaskDialogIndirect(Windows::Win32::Controls::TASKDIALOGCONFIG* pTaskConfig, int32_t* pnButton, int32_t* pnRadioButton, int32_t* pfVerificationFlagChecked)
    {
        auto win32_impl_result = WIN32_IMPL_TaskDialogIndirect(pTaskConfig, pnButton, pnRadioButton, pfVerificationFlagChecked);
        return win32_impl_result;
    }
    inline int32_t TaskDialog(Windows::Win32::WindowsAndMessaging::HWND hwndOwner, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszWindowTitle, uint16_t* pszMainInstruction, uint16_t* pszContent, int32_t dwCommonButtons, uint16_t* pszIcon, int32_t* pnButton)
    {
        auto win32_impl_result = WIN32_IMPL_TaskDialog(hwndOwner, hInstance, pszWindowTitle, pszMainInstruction, pszContent, dwCommonButtons, pszIcon, pnButton);
        return win32_impl_result;
    }
    inline void InitMUILanguage(uint16_t uiLang)
    {
        WIN32_IMPL_InitMUILanguage(uiLang);
    }
    inline uint16_t GetMUILanguage()
    {
        auto win32_impl_result = WIN32_IMPL_GetMUILanguage();
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::_DSA* DSA_Create(int32_t cbItem, int32_t cItemGrow)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_Create(cbItem, cItemGrow);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DSA_Destroy(Windows::Win32::Controls::_DSA* hdsa)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_Destroy(hdsa);
        return win32_impl_result;
    }
    inline void DSA_DestroyCallback(Windows::Win32::Controls::_DSA* hdsa, Windows::Win32::Controls::PFNDAENUMCALLBACK* pfnCB, void* pData)
    {
        WIN32_IMPL_DSA_DestroyCallback(hdsa, pfnCB, pData);
    }
    inline Windows::Win32::SystemServices::BOOL DSA_DeleteItem(Windows::Win32::Controls::_DSA* hdsa, int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_DeleteItem(hdsa, i);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DSA_DeleteAllItems(Windows::Win32::Controls::_DSA* hdsa)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_DeleteAllItems(hdsa);
        return win32_impl_result;
    }
    inline void DSA_EnumCallback(Windows::Win32::Controls::_DSA* hdsa, Windows::Win32::Controls::PFNDAENUMCALLBACK* pfnCB, void* pData)
    {
        WIN32_IMPL_DSA_EnumCallback(hdsa, pfnCB, pData);
    }
    inline int32_t DSA_InsertItem(Windows::Win32::Controls::_DSA* hdsa, int32_t i, void* pitem)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_InsertItem(hdsa, i, pitem);
        return win32_impl_result;
    }
    inline void* DSA_GetItemPtr(Windows::Win32::Controls::_DSA* hdsa, int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_GetItemPtr(hdsa, i);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DSA_GetItem(Windows::Win32::Controls::_DSA* hdsa, int32_t i, void* pitem)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_GetItem(hdsa, i, pitem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DSA_SetItem(Windows::Win32::Controls::_DSA* hdsa, int32_t i, void* pitem)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_SetItem(hdsa, i, pitem);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::_DSA* DSA_Clone(Windows::Win32::Controls::_DSA* hdsa)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_Clone(hdsa);
        return win32_impl_result;
    }
    inline uint64_t DSA_GetSize(Windows::Win32::Controls::_DSA* hdsa)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_GetSize(hdsa);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DSA_Sort(Windows::Win32::Controls::_DSA* pdsa, Windows::Win32::Controls::PFNDACOMPARE* pfnCompare, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_DSA_Sort(pdsa, pfnCompare, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::_DPA* DPA_Create(int32_t cItemGrow)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Create(cItemGrow);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::_DPA* DPA_CreateEx(int32_t cpGrow, Windows::Win32::SystemServices::HANDLE hheap)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_CreateEx(cpGrow, hheap);
        return win32_impl_result;
    }
    inline Windows::Win32::Controls::_DPA* DPA_Clone(Windows::Win32::Controls::_DPA* hdpa, Windows::Win32::Controls::_DPA* hdpaNew)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Clone(hdpa, hdpaNew);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPA_Destroy(Windows::Win32::Controls::_DPA* hdpa)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Destroy(hdpa);
        return win32_impl_result;
    }
    inline void DPA_DestroyCallback(Windows::Win32::Controls::_DPA* hdpa, Windows::Win32::Controls::PFNDAENUMCALLBACK* pfnCB, void* pData)
    {
        WIN32_IMPL_DPA_DestroyCallback(hdpa, pfnCB, pData);
    }
    inline void* DPA_DeletePtr(Windows::Win32::Controls::_DPA* hdpa, int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_DeletePtr(hdpa, i);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPA_DeleteAllPtrs(Windows::Win32::Controls::_DPA* hdpa)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_DeleteAllPtrs(hdpa);
        return win32_impl_result;
    }
    inline void DPA_EnumCallback(Windows::Win32::Controls::_DPA* hdpa, Windows::Win32::Controls::PFNDAENUMCALLBACK* pfnCB, void* pData)
    {
        WIN32_IMPL_DPA_EnumCallback(hdpa, pfnCB, pData);
    }
    inline Windows::Win32::SystemServices::BOOL DPA_Grow(Windows::Win32::Controls::_DPA* pdpa, int32_t cp)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Grow(pdpa, cp);
        return win32_impl_result;
    }
    inline int32_t DPA_InsertPtr(Windows::Win32::Controls::_DPA* hdpa, int32_t i, void* p)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_InsertPtr(hdpa, i, p);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPA_SetPtr(Windows::Win32::Controls::_DPA* hdpa, int32_t i, void* p)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_SetPtr(hdpa, i, p);
        return win32_impl_result;
    }
    inline void* DPA_GetPtr(Windows::Win32::Controls::_DPA* hdpa, intptr_t i)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_GetPtr(hdpa, i);
        return win32_impl_result;
    }
    inline int32_t DPA_GetPtrIndex(Windows::Win32::Controls::_DPA* hdpa, void* p)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_GetPtrIndex(hdpa, p);
        return win32_impl_result;
    }
    inline uint64_t DPA_GetSize(Windows::Win32::Controls::_DPA* hdpa)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_GetSize(hdpa);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPA_Sort(Windows::Win32::Controls::_DPA* hdpa, Windows::Win32::Controls::PFNDACOMPARE* pfnCompare, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Sort(hdpa, pfnCompare, lParam);
        return win32_impl_result;
    }
    inline int32_t DPA_LoadStream(Windows::Win32::Controls::_DPA** phdpa, Windows::Win32::Controls::PFNDPASTREAM* pfn, Windows::Win32::StructuredStorage::IStream* pstream, void* pvInstData)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_LoadStream(phdpa, pfn, pstream, pvInstData);
        return win32_impl_result;
    }
    inline int32_t DPA_SaveStream(Windows::Win32::Controls::_DPA* hdpa, Windows::Win32::Controls::PFNDPASTREAM* pfn, Windows::Win32::StructuredStorage::IStream* pstream, void* pvInstData)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_SaveStream(hdpa, pfn, pstream, pvInstData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPA_Merge(Windows::Win32::Controls::_DPA* hdpaDest, Windows::Win32::Controls::_DPA* hdpaSrc, uint32_t dwFlags, Windows::Win32::Controls::PFNDACOMPARE* pfnCompare, Windows::Win32::Controls::PFNDPAMERGE* pfnMerge, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Merge(hdpaDest, hdpaSrc, dwFlags, pfnCompare, pfnMerge, lParam);
        return win32_impl_result;
    }
    inline int32_t DPA_Search(Windows::Win32::Controls::_DPA* hdpa, void* pFind, int32_t iStart, Windows::Win32::Controls::PFNDACOMPARE* pfnCompare, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t options)
    {
        auto win32_impl_result = WIN32_IMPL_DPA_Search(hdpa, pFind, iStart, pfnCompare, lParam, options);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Str_SetPtrW(uint16_t** ppsz, uint16_t* psz)
    {
        auto win32_impl_result = WIN32_IMPL_Str_SetPtrW(ppsz, psz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_EnableScrollBar(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t param1, uint32_t param2)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_EnableScrollBar(param0, param1, param2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_ShowScrollBar(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, Windows::Win32::SystemServices::BOOL param2)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_ShowScrollBar(param0, code, param2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_GetScrollRange(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, int32_t* param2, int32_t* param3)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_GetScrollRange(param0, code, param2, param3);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_GetScrollInfo(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, Windows::Win32::Controls::SCROLLINFO* param2)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_GetScrollInfo(param0, code, param2);
        return win32_impl_result;
    }
    inline int32_t FlatSB_GetScrollPos(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_GetScrollPos(param0, code);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_GetScrollProp(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t propIndex, int32_t* param2)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_GetScrollProp(param0, propIndex, param2);
        return win32_impl_result;
    }
    inline int32_t FlatSB_SetScrollPos(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, int32_t pos, Windows::Win32::SystemServices::BOOL fRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_SetScrollPos(param0, code, pos, fRedraw);
        return win32_impl_result;
    }
    inline int32_t FlatSB_SetScrollInfo(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, Windows::Win32::Controls::SCROLLINFO* psi, Windows::Win32::SystemServices::BOOL fRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_SetScrollInfo(param0, code, psi, fRedraw);
        return win32_impl_result;
    }
    inline int32_t FlatSB_SetScrollRange(Windows::Win32::WindowsAndMessaging::HWND param0, int32_t code, int32_t min, int32_t max, Windows::Win32::SystemServices::BOOL fRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_SetScrollRange(param0, code, min, max, fRedraw);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlatSB_SetScrollProp(Windows::Win32::WindowsAndMessaging::HWND param0, uint32_t index, intptr_t newValue, Windows::Win32::SystemServices::BOOL param3)
    {
        auto win32_impl_result = WIN32_IMPL_FlatSB_SetScrollProp(param0, index, newValue, param3);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeFlatSB(Windows::Win32::WindowsAndMessaging::HWND param0)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeFlatSB(param0);
        return win32_impl_result;
    }
    inline int32_t UninitializeFlatSB(Windows::Win32::WindowsAndMessaging::HWND param0)
    {
        auto win32_impl_result = WIN32_IMPL_UninitializeFlatSB(param0);
        return win32_impl_result;
    }
    inline int32_t LoadIconMetric(Windows::Win32::SystemServices::HINSTANCE hinst, uint16_t* pszName, int32_t lims, Windows::Win32::Gdi::HICON* phico)
    {
        auto win32_impl_result = WIN32_IMPL_LoadIconMetric(hinst, pszName, lims, phico);
        return win32_impl_result;
    }
    inline int32_t LoadIconWithScaleDown(Windows::Win32::SystemServices::HINSTANCE hinst, uint16_t* pszName, int32_t cx, int32_t cy, Windows::Win32::Gdi::HICON* phico)
    {
        auto win32_impl_result = WIN32_IMPL_LoadIconWithScaleDown(hinst, pszName, cx, cy, phico);
        return win32_impl_result;
    }
    inline int32_t DrawShadowText(Windows::Win32::Gdi::HDC hdc, uint16_t* pszText, uint32_t cch, Windows::Win32::DisplayDevices::RECT* prc, uint32_t dwFlags, uint32_t crText, uint32_t crShadow, int32_t ixOffset, int32_t iyOffset)
    {
        auto win32_impl_result = WIN32_IMPL_DrawShadowText(hdc, pszText, cch, prc, dwFlags, crText, crShadow, ixOffset, iyOffset);
        return win32_impl_result;
    }
    inline int32_t ImageList_CoCreateInstance(::win32::guid* rclsid, Windows::Win32::Com::IUnknown* punkOuter, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_ImageList_CoCreateInstance(rclsid, punkOuter, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t GetThemeAnimationProperty(intptr_t hTheme, int32_t iStoryboardId, int32_t iTargetId, Windows::Win32::Controls::TA_PROPERTY eProperty, void* pvProperty, uint32_t cbSize, uint32_t* pcbSizeOut)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeAnimationProperty(hTheme, iStoryboardId, iTargetId, eProperty, pvProperty, cbSize, pcbSizeOut);
        return win32_impl_result;
    }
    inline int32_t GetThemeAnimationTransform(intptr_t hTheme, int32_t iStoryboardId, int32_t iTargetId, uint32_t dwTransformIndex, Windows::Win32::Controls::TA_TRANSFORM* pTransform, uint32_t cbSize, uint32_t* pcbSizeOut)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeAnimationTransform(hTheme, iStoryboardId, iTargetId, dwTransformIndex, pTransform, cbSize, pcbSizeOut);
        return win32_impl_result;
    }
    inline int32_t GetThemeTimingFunction(intptr_t hTheme, int32_t iTimingFunctionId, Windows::Win32::Controls::TA_TIMINGFUNCTION* pTimingFunction, uint32_t cbSize, uint32_t* pcbSizeOut)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeTimingFunction(hTheme, iTimingFunctionId, pTimingFunction, cbSize, pcbSizeOut);
        return win32_impl_result;
    }
    inline intptr_t OpenThemeData(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* pszClassList)
    {
        auto win32_impl_result = WIN32_IMPL_OpenThemeData(hwnd, pszClassList);
        return win32_impl_result;
    }
    inline intptr_t OpenThemeDataEx(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* pszClassList, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_OpenThemeDataEx(hwnd, pszClassList, dwFlags);
        return win32_impl_result;
    }
    inline int32_t CloseThemeData(intptr_t hTheme)
    {
        auto win32_impl_result = WIN32_IMPL_CloseThemeData(hTheme);
        return win32_impl_result;
    }
    inline int32_t DrawThemeBackground(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::DisplayDevices::RECT* pClipRect)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeBackground(hTheme, hdc, iPartId, iStateId, pRect, pClipRect);
        return win32_impl_result;
    }
    inline int32_t DrawThemeBackgroundEx(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::Controls::DTBGOPTS* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeBackgroundEx(hTheme, hdc, iPartId, iStateId, pRect, pOptions);
        return win32_impl_result;
    }
    inline int32_t DrawThemeText(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, uint16_t* pszText, int32_t cchText, uint32_t dwTextFlags, uint32_t dwTextFlags2, Windows::Win32::DisplayDevices::RECT* pRect)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeText(hTheme, hdc, iPartId, iStateId, pszText, cchText, dwTextFlags, dwTextFlags2, pRect);
        return win32_impl_result;
    }
    inline int32_t GetThemeBackgroundContentRect(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pBoundingRect, Windows::Win32::DisplayDevices::RECT* pContentRect)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeBackgroundContentRect(hTheme, hdc, iPartId, iStateId, pBoundingRect, pContentRect);
        return win32_impl_result;
    }
    inline int32_t GetThemeBackgroundExtent(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pContentRect, Windows::Win32::DisplayDevices::RECT* pExtentRect)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeBackgroundExtent(hTheme, hdc, iPartId, iStateId, pContentRect, pExtentRect);
        return win32_impl_result;
    }
    inline int32_t GetThemeBackgroundRegion(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::Gdi::HRGN* pRegion)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeBackgroundRegion(hTheme, hdc, iPartId, iStateId, pRect, pRegion);
        return win32_impl_result;
    }
    inline int32_t GetThemePartSize(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* prc, Windows::Win32::Controls::THEMESIZE eSize, Windows::Win32::DisplayDevices::SIZE* psz)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemePartSize(hTheme, hdc, iPartId, iStateId, prc, eSize, psz);
        return win32_impl_result;
    }
    inline int32_t GetThemeTextExtent(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, uint16_t* pszText, int32_t cchCharCount, uint32_t dwTextFlags, Windows::Win32::DisplayDevices::RECT* pBoundingRect, Windows::Win32::DisplayDevices::RECT* pExtentRect)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeTextExtent(hTheme, hdc, iPartId, iStateId, pszText, cchCharCount, dwTextFlags, pBoundingRect, pExtentRect);
        return win32_impl_result;
    }
    inline int32_t GetThemeTextMetrics(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::Gdi::TEXTMETRICW* ptm)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeTextMetrics(hTheme, hdc, iPartId, iStateId, ptm);
        return win32_impl_result;
    }
    inline int32_t HitTestThemeBackground(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, uint32_t dwOptions, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::Gdi::HRGN hrgn, Windows::Win32::DisplayDevices::POINT ptTest, uint16_t* pwHitTestCode)
    {
        auto win32_impl_result = WIN32_IMPL_HitTestThemeBackground(hTheme, hdc, iPartId, iStateId, dwOptions, pRect, hrgn, ptTest, pwHitTestCode);
        return win32_impl_result;
    }
    inline int32_t DrawThemeEdge(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pDestRect, uint32_t uEdge, uint32_t uFlags, Windows::Win32::DisplayDevices::RECT* pContentRect)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeEdge(hTheme, hdc, iPartId, iStateId, pDestRect, uEdge, uFlags, pContentRect);
        return win32_impl_result;
    }
    inline int32_t DrawThemeIcon(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::Controls::HIMAGELIST himl, int32_t iImageIndex)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeIcon(hTheme, hdc, iPartId, iStateId, pRect, himl, iImageIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsThemePartDefined(intptr_t hTheme, int32_t iPartId, int32_t iStateId)
    {
        auto win32_impl_result = WIN32_IMPL_IsThemePartDefined(hTheme, iPartId, iStateId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsThemeBackgroundPartiallyTransparent(intptr_t hTheme, int32_t iPartId, int32_t iStateId)
    {
        auto win32_impl_result = WIN32_IMPL_IsThemeBackgroundPartiallyTransparent(hTheme, iPartId, iStateId);
        return win32_impl_result;
    }
    inline int32_t GetThemeColor(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, uint32_t* pColor)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeColor(hTheme, iPartId, iStateId, iPropId, pColor);
        return win32_impl_result;
    }
    inline int32_t GetThemeMetric(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, int32_t iPropId, int32_t* piVal)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeMetric(hTheme, hdc, iPartId, iStateId, iPropId, piVal);
        return win32_impl_result;
    }
    inline int32_t GetThemeString(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, uint16_t* pszBuff, int32_t cchMaxBuffChars)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeString(hTheme, iPartId, iStateId, iPropId, pszBuff, cchMaxBuffChars);
        return win32_impl_result;
    }
    inline int32_t GetThemeBool(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, int32_t* pfVal)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeBool(hTheme, iPartId, iStateId, iPropId, pfVal);
        return win32_impl_result;
    }
    inline int32_t GetThemeInt(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, int32_t* piVal)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeInt(hTheme, iPartId, iStateId, iPropId, piVal);
        return win32_impl_result;
    }
    inline int32_t GetThemeEnumValue(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, int32_t* piVal)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeEnumValue(hTheme, iPartId, iStateId, iPropId, piVal);
        return win32_impl_result;
    }
    inline int32_t GetThemePosition(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::DisplayDevices::POINT* pPoint)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemePosition(hTheme, iPartId, iStateId, iPropId, pPoint);
        return win32_impl_result;
    }
    inline int32_t GetThemeFont(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::Shell::LOGFONTW* pFont)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeFont(hTheme, hdc, iPartId, iStateId, iPropId, pFont);
        return win32_impl_result;
    }
    inline int32_t GetThemeRect(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::DisplayDevices::RECT* pRect)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeRect(hTheme, iPartId, iStateId, iPropId, pRect);
        return win32_impl_result;
    }
    inline int32_t GetThemeMargins(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::DisplayDevices::RECT* prc, Windows::Win32::Controls::MARGINS* pMargins)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeMargins(hTheme, hdc, iPartId, iStateId, iPropId, prc, pMargins);
        return win32_impl_result;
    }
    inline int32_t GetThemeIntList(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::Controls::INTLIST* pIntList)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeIntList(hTheme, iPartId, iStateId, iPropId, pIntList);
        return win32_impl_result;
    }
    inline int32_t GetThemePropertyOrigin(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, Windows::Win32::Controls::PROPERTYORIGIN* pOrigin)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemePropertyOrigin(hTheme, iPartId, iStateId, iPropId, pOrigin);
        return win32_impl_result;
    }
    inline int32_t SetWindowTheme(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* pszSubAppName, uint16_t* pszSubIdList)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowTheme(hwnd, pszSubAppName, pszSubIdList);
        return win32_impl_result;
    }
    inline int32_t GetThemeFilename(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, uint16_t* pszThemeFileName, int32_t cchMaxBuffChars)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeFilename(hTheme, iPartId, iStateId, iPropId, pszThemeFileName, cchMaxBuffChars);
        return win32_impl_result;
    }
    inline uint32_t GetThemeSysColor(intptr_t hTheme, int32_t iColorId)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysColor(hTheme, iColorId);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH GetThemeSysColorBrush(intptr_t hTheme, int32_t iColorId)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysColorBrush(hTheme, iColorId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThemeSysBool(intptr_t hTheme, int32_t iBoolId)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysBool(hTheme, iBoolId);
        return win32_impl_result;
    }
    inline int32_t GetThemeSysSize(intptr_t hTheme, int32_t iSizeId)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysSize(hTheme, iSizeId);
        return win32_impl_result;
    }
    inline int32_t GetThemeSysFont(intptr_t hTheme, int32_t iFontId, Windows::Win32::Shell::LOGFONTW* plf)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysFont(hTheme, iFontId, plf);
        return win32_impl_result;
    }
    inline int32_t GetThemeSysString(intptr_t hTheme, int32_t iStringId, uint16_t* pszStringBuff, int32_t cchMaxStringChars)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysString(hTheme, iStringId, pszStringBuff, cchMaxStringChars);
        return win32_impl_result;
    }
    inline int32_t GetThemeSysInt(intptr_t hTheme, int32_t iIntId, int32_t* piValue)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeSysInt(hTheme, iIntId, piValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsThemeActive()
    {
        auto win32_impl_result = WIN32_IMPL_IsThemeActive();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsAppThemed()
    {
        auto win32_impl_result = WIN32_IMPL_IsAppThemed();
        return win32_impl_result;
    }
    inline intptr_t GetWindowTheme(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowTheme(hwnd);
        return win32_impl_result;
    }
    inline int32_t EnableThemeDialogTexture(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnableThemeDialogTexture(hwnd, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsThemeDialogTextureEnabled(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_IsThemeDialogTextureEnabled(hwnd);
        return win32_impl_result;
    }
    inline uint32_t GetThemeAppProperties()
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeAppProperties();
        return win32_impl_result;
    }
    inline void SetThemeAppProperties(uint32_t dwFlags)
    {
        WIN32_IMPL_SetThemeAppProperties(dwFlags);
    }
    inline int32_t GetCurrentThemeName(uint16_t* pszThemeFileName, int32_t cchMaxNameChars, uint16_t* pszColorBuff, int32_t cchMaxColorChars, uint16_t* pszSizeBuff, int32_t cchMaxSizeChars)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentThemeName(pszThemeFileName, cchMaxNameChars, pszColorBuff, cchMaxColorChars, pszSizeBuff, cchMaxSizeChars);
        return win32_impl_result;
    }
    inline int32_t GetThemeDocumentationProperty(uint16_t* pszThemeName, uint16_t* pszPropertyName, uint16_t* pszValueBuff, int32_t cchMaxValChars)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeDocumentationProperty(pszThemeName, pszPropertyName, pszValueBuff, cchMaxValChars);
        return win32_impl_result;
    }
    inline int32_t DrawThemeParentBackground(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* prc)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeParentBackground(hwnd, hdc, prc);
        return win32_impl_result;
    }
    inline int32_t EnableTheming(Windows::Win32::SystemServices::BOOL fEnable)
    {
        auto win32_impl_result = WIN32_IMPL_EnableTheming(fEnable);
        return win32_impl_result;
    }
    inline int32_t DrawThemeParentBackgroundEx(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdc, uint32_t dwFlags, Windows::Win32::DisplayDevices::RECT* prc)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeParentBackgroundEx(hwnd, hdc, dwFlags, prc);
        return win32_impl_result;
    }
    inline int32_t SetWindowThemeAttribute(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Controls::WINDOWTHEMEATTRIBUTETYPE eAttribute, void* pvAttribute, uint32_t cbAttribute)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowThemeAttribute(hwnd, eAttribute, pvAttribute, cbAttribute);
        return win32_impl_result;
    }
    inline int32_t DrawThemeTextEx(intptr_t hTheme, Windows::Win32::Gdi::HDC hdc, int32_t iPartId, int32_t iStateId, uint16_t* pszText, int32_t cchText, uint32_t dwTextFlags, Windows::Win32::DisplayDevices::RECT* pRect, Windows::Win32::Controls::DTTOPTS* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_DrawThemeTextEx(hTheme, hdc, iPartId, iStateId, pszText, cchText, dwTextFlags, pRect, pOptions);
        return win32_impl_result;
    }
    inline int32_t GetThemeBitmap(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, uint32_t dwFlags, Windows::Win32::Gdi::HBITMAP* phBitmap)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeBitmap(hTheme, iPartId, iStateId, iPropId, dwFlags, phBitmap);
        return win32_impl_result;
    }
    inline int32_t GetThemeStream(intptr_t hTheme, int32_t iPartId, int32_t iStateId, int32_t iPropId, void** ppvStream, uint32_t* pcbStream, Windows::Win32::SystemServices::HINSTANCE hInst)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeStream(hTheme, iPartId, iStateId, iPropId, ppvStream, pcbStream, hInst);
        return win32_impl_result;
    }
    inline int32_t BufferedPaintInit()
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintInit();
        return win32_impl_result;
    }
    inline int32_t BufferedPaintUnInit()
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintUnInit();
        return win32_impl_result;
    }
    inline intptr_t BeginBufferedPaint(Windows::Win32::Gdi::HDC hdcTarget, Windows::Win32::DisplayDevices::RECT* prcTarget, Windows::Win32::Controls::BP_BUFFERFORMAT dwFormat, Windows::Win32::Controls::BP_PAINTPARAMS* pPaintParams, Windows::Win32::Gdi::HDC* phdc)
    {
        auto win32_impl_result = WIN32_IMPL_BeginBufferedPaint(hdcTarget, prcTarget, dwFormat, pPaintParams, phdc);
        return win32_impl_result;
    }
    inline int32_t EndBufferedPaint(intptr_t hBufferedPaint, Windows::Win32::SystemServices::BOOL fUpdateTarget)
    {
        auto win32_impl_result = WIN32_IMPL_EndBufferedPaint(hBufferedPaint, fUpdateTarget);
        return win32_impl_result;
    }
    inline int32_t GetBufferedPaintTargetRect(intptr_t hBufferedPaint, Windows::Win32::DisplayDevices::RECT* prc)
    {
        auto win32_impl_result = WIN32_IMPL_GetBufferedPaintTargetRect(hBufferedPaint, prc);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC GetBufferedPaintTargetDC(intptr_t hBufferedPaint)
    {
        auto win32_impl_result = WIN32_IMPL_GetBufferedPaintTargetDC(hBufferedPaint);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC GetBufferedPaintDC(intptr_t hBufferedPaint)
    {
        auto win32_impl_result = WIN32_IMPL_GetBufferedPaintDC(hBufferedPaint);
        return win32_impl_result;
    }
    inline int32_t GetBufferedPaintBits(intptr_t hBufferedPaint, Windows::Win32::Gdi::RGBQUAD** ppbBuffer, int32_t* pcxRow)
    {
        auto win32_impl_result = WIN32_IMPL_GetBufferedPaintBits(hBufferedPaint, ppbBuffer, pcxRow);
        return win32_impl_result;
    }
    inline int32_t BufferedPaintClear(intptr_t hBufferedPaint, Windows::Win32::DisplayDevices::RECT* prc)
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintClear(hBufferedPaint, prc);
        return win32_impl_result;
    }
    inline int32_t BufferedPaintSetAlpha(intptr_t hBufferedPaint, Windows::Win32::DisplayDevices::RECT* prc, uint8_t alpha)
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintSetAlpha(hBufferedPaint, prc, alpha);
        return win32_impl_result;
    }
    inline int32_t BufferedPaintStopAllAnimations(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintStopAllAnimations(hwnd);
        return win32_impl_result;
    }
    inline intptr_t BeginBufferedAnimation(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdcTarget, Windows::Win32::DisplayDevices::RECT* prcTarget, Windows::Win32::Controls::BP_BUFFERFORMAT dwFormat, Windows::Win32::Controls::BP_PAINTPARAMS* pPaintParams, Windows::Win32::Controls::BP_ANIMATIONPARAMS* pAnimationParams, Windows::Win32::Gdi::HDC* phdcFrom, Windows::Win32::Gdi::HDC* phdcTo)
    {
        auto win32_impl_result = WIN32_IMPL_BeginBufferedAnimation(hwnd, hdcTarget, prcTarget, dwFormat, pPaintParams, pAnimationParams, phdcFrom, phdcTo);
        return win32_impl_result;
    }
    inline int32_t EndBufferedAnimation(intptr_t hbpAnimation, Windows::Win32::SystemServices::BOOL fUpdateTarget)
    {
        auto win32_impl_result = WIN32_IMPL_EndBufferedAnimation(hbpAnimation, fUpdateTarget);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BufferedPaintRenderAnimation(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdcTarget)
    {
        auto win32_impl_result = WIN32_IMPL_BufferedPaintRenderAnimation(hwnd, hdcTarget);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsCompositionActive()
    {
        auto win32_impl_result = WIN32_IMPL_IsCompositionActive();
        return win32_impl_result;
    }
    inline int32_t GetThemeTransitionDuration(intptr_t hTheme, int32_t iPartId, int32_t iStateIdFrom, int32_t iStateIdTo, int32_t iPropId, uint32_t* pdwDuration)
    {
        auto win32_impl_result = WIN32_IMPL_GetThemeTransitionDuration(hTheme, iPartId, iStateIdFrom, iStateIdTo, iPropId, pdwDuration);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CheckDlgButton(Windows::Win32::WindowsAndMessaging::HWND hDlg, int32_t nIDButton, uint32_t uCheck)
    {
        auto win32_impl_result = WIN32_IMPL_CheckDlgButton(hDlg, nIDButton, uCheck);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CheckRadioButton(Windows::Win32::WindowsAndMessaging::HWND hDlg, int32_t nIDFirstButton, int32_t nIDLastButton, int32_t nIDCheckButton)
    {
        auto win32_impl_result = WIN32_IMPL_CheckRadioButton(hDlg, nIDFirstButton, nIDLastButton, nIDCheckButton);
        return win32_impl_result;
    }
    inline uint32_t IsDlgButtonChecked(Windows::Win32::WindowsAndMessaging::HWND hDlg, int32_t nIDButton)
    {
        auto win32_impl_result = WIN32_IMPL_IsDlgButtonChecked(hDlg, nIDButton);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsCharLowerW(uint16_t ch)
    {
        auto win32_impl_result = WIN32_IMPL_IsCharLowerW(ch);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeTouchInjection(uint32_t maxCount, uint32_t dwMode)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeTouchInjection(maxCount, dwMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InjectTouchInput(uint32_t count, Windows::Win32::PointerInput::POINTER_TOUCH_INFO* contacts)
    {
        auto win32_impl_result = WIN32_IMPL_InjectTouchInput(count, contacts);
        return win32_impl_result;
    }
    inline intptr_t CreateSyntheticPointerDevice(uint32_t pointerType, uint32_t maxCount, Windows::Win32::Controls::POINTER_FEEDBACK_MODE mode)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSyntheticPointerDevice(pointerType, maxCount, mode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InjectSyntheticPointerInput(intptr_t device, Windows::Win32::Controls::POINTER_TYPE_INFO* pointerInfo, uint32_t count)
    {
        auto win32_impl_result = WIN32_IMPL_InjectSyntheticPointerInput(device, pointerInfo, count);
        return win32_impl_result;
    }
    inline void DestroySyntheticPointerDevice(intptr_t device)
    {
        WIN32_IMPL_DestroySyntheticPointerDevice(device);
    }
    inline Windows::Win32::SystemServices::BOOL RegisterTouchHitTestingWindow(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t value)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterTouchHitTestingWindow(hwnd, value);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EvaluateProximityToRect(Windows::Win32::DisplayDevices::RECT* controlBoundingBox, Windows::Win32::Controls::TOUCH_HIT_TESTING_INPUT* pHitTestingInput, Windows::Win32::Controls::TOUCH_HIT_TESTING_PROXIMITY_EVALUATION* pProximityEval)
    {
        auto win32_impl_result = WIN32_IMPL_EvaluateProximityToRect(controlBoundingBox, pHitTestingInput, pProximityEval);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EvaluateProximityToPolygon(uint32_t numVertices, Windows::Win32::DisplayDevices::POINT* controlPolygon, Windows::Win32::Controls::TOUCH_HIT_TESTING_INPUT* pHitTestingInput, Windows::Win32::Controls::TOUCH_HIT_TESTING_PROXIMITY_EVALUATION* pProximityEval)
    {
        auto win32_impl_result = WIN32_IMPL_EvaluateProximityToPolygon(numVertices, controlPolygon, pHitTestingInput, pProximityEval);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT PackTouchHitTestingProximityEvaluation(Windows::Win32::Controls::TOUCH_HIT_TESTING_INPUT* pHitTestingInput, Windows::Win32::Controls::TOUCH_HIT_TESTING_PROXIMITY_EVALUATION* pProximityEval)
    {
        auto win32_impl_result = WIN32_IMPL_PackTouchHitTestingProximityEvaluation(pHitTestingInput, pProximityEval);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetWindowFeedbackSetting(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Controls::FEEDBACK_TYPE feedback, uint32_t dwFlags, uint32_t* pSize, void* config)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowFeedbackSetting(hwnd, feedback, dwFlags, pSize, config);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWindowFeedbackSetting(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Controls::FEEDBACK_TYPE feedback, uint32_t dwFlags, uint32_t size, void* configuration)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowFeedbackSetting(hwnd, feedback, dwFlags, size, configuration);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScrollWindow(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t XAmount, int32_t YAmount, Windows::Win32::DisplayDevices::RECT* lpRect, Windows::Win32::DisplayDevices::RECT* lpClipRect)
    {
        auto win32_impl_result = WIN32_IMPL_ScrollWindow(hWnd, XAmount, YAmount, lpRect, lpClipRect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScrollDC(Windows::Win32::Gdi::HDC hDC, int32_t dx, int32_t dy, Windows::Win32::DisplayDevices::RECT* lprcScroll, Windows::Win32::DisplayDevices::RECT* lprcClip, Windows::Win32::Gdi::HRGN hrgnUpdate, Windows::Win32::DisplayDevices::RECT* lprcUpdate)
    {
        auto win32_impl_result = WIN32_IMPL_ScrollDC(hDC, dx, dy, lprcScroll, lprcClip, hrgnUpdate, lprcUpdate);
        return win32_impl_result;
    }
    inline int32_t ScrollWindowEx(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t dx, int32_t dy, Windows::Win32::DisplayDevices::RECT* prcScroll, Windows::Win32::DisplayDevices::RECT* prcClip, Windows::Win32::Gdi::HRGN hrgnUpdate, Windows::Win32::DisplayDevices::RECT* prcUpdate, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ScrollWindowEx(hWnd, dx, dy, prcScroll, prcClip, hrgnUpdate, prcUpdate, flags);
        return win32_impl_result;
    }
    inline int32_t SetScrollPos(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t nBar, int32_t nPos, Windows::Win32::SystemServices::BOOL bRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_SetScrollPos(hWnd, nBar, nPos, bRedraw);
        return win32_impl_result;
    }
    inline int32_t GetScrollPos(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t nBar)
    {
        auto win32_impl_result = WIN32_IMPL_GetScrollPos(hWnd, nBar);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetScrollRange(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t nBar, int32_t nMinPos, int32_t nMaxPos, Windows::Win32::SystemServices::BOOL bRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_SetScrollRange(hWnd, nBar, nMinPos, nMaxPos, bRedraw);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetScrollRange(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t nBar, int32_t* lpMinPos, int32_t* lpMaxPos)
    {
        auto win32_impl_result = WIN32_IMPL_GetScrollRange(hWnd, nBar, lpMinPos, lpMaxPos);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ShowScrollBar(Windows::Win32::WindowsAndMessaging::HWND hWnd, int32_t wBar, Windows::Win32::SystemServices::BOOL bShow)
    {
        auto win32_impl_result = WIN32_IMPL_ShowScrollBar(hWnd, wBar, bShow);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnableScrollBar(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint32_t wSBflags, uint32_t wArrows)
    {
        auto win32_impl_result = WIN32_IMPL_EnableScrollBar(hWnd, wSBflags, wArrows);
        return win32_impl_result;
    }
    inline int32_t DlgDirListA(Windows::Win32::WindowsAndMessaging::HWND hDlg, int8_t* lpPathSpec, int32_t nIDListBox, int32_t nIDStaticPath, uint32_t uFileType)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirListA(hDlg, lpPathSpec, nIDListBox, nIDStaticPath, uFileType);
        return win32_impl_result;
    }
    inline int32_t DlgDirListW(Windows::Win32::WindowsAndMessaging::HWND hDlg, uint16_t* lpPathSpec, int32_t nIDListBox, int32_t nIDStaticPath, uint32_t uFileType)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirListW(hDlg, lpPathSpec, nIDListBox, nIDStaticPath, uFileType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DlgDirSelectExA(Windows::Win32::WindowsAndMessaging::HWND hwndDlg, int8_t* lpString, int32_t chCount, int32_t idListBox)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirSelectExA(hwndDlg, lpString, chCount, idListBox);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DlgDirSelectExW(Windows::Win32::WindowsAndMessaging::HWND hwndDlg, uint16_t* lpString, int32_t chCount, int32_t idListBox)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirSelectExW(hwndDlg, lpString, chCount, idListBox);
        return win32_impl_result;
    }
    inline int32_t DlgDirListComboBoxA(Windows::Win32::WindowsAndMessaging::HWND hDlg, int8_t* lpPathSpec, int32_t nIDComboBox, int32_t nIDStaticPath, uint32_t uFiletype)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirListComboBoxA(hDlg, lpPathSpec, nIDComboBox, nIDStaticPath, uFiletype);
        return win32_impl_result;
    }
    inline int32_t DlgDirListComboBoxW(Windows::Win32::WindowsAndMessaging::HWND hDlg, uint16_t* lpPathSpec, int32_t nIDComboBox, int32_t nIDStaticPath, uint32_t uFiletype)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirListComboBoxW(hDlg, lpPathSpec, nIDComboBox, nIDStaticPath, uFiletype);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DlgDirSelectComboBoxExA(Windows::Win32::WindowsAndMessaging::HWND hwndDlg, int8_t* lpString, int32_t cchOut, int32_t idComboBox)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirSelectComboBoxExA(hwndDlg, lpString, cchOut, idComboBox);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DlgDirSelectComboBoxExW(Windows::Win32::WindowsAndMessaging::HWND hwndDlg, uint16_t* lpString, int32_t cchOut, int32_t idComboBox)
    {
        auto win32_impl_result = WIN32_IMPL_DlgDirSelectComboBoxExW(hwndDlg, lpString, cchOut, idComboBox);
        return win32_impl_result;
    }
    inline int32_t SetScrollInfo(Windows::Win32::WindowsAndMessaging::HWND hwnd, int32_t nBar, Windows::Win32::Controls::SCROLLINFO* lpsi, Windows::Win32::SystemServices::BOOL redraw)
    {
        auto win32_impl_result = WIN32_IMPL_SetScrollInfo(hwnd, nBar, lpsi, redraw);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetScrollInfo(Windows::Win32::WindowsAndMessaging::HWND hwnd, int32_t nBar, Windows::Win32::Controls::SCROLLINFO* lpsi)
    {
        auto win32_impl_result = WIN32_IMPL_GetScrollInfo(hwnd, nBar, lpsi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetScrollBarInfo(Windows::Win32::WindowsAndMessaging::HWND hwnd, int32_t idObject, Windows::Win32::Controls::SCROLLBARINFO* psbi)
    {
        auto win32_impl_result = WIN32_IMPL_GetScrollBarInfo(hwnd, idObject, psbi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetComboBoxInfo(Windows::Win32::WindowsAndMessaging::HWND hwndCombo, Windows::Win32::Controls::COMBOBOXINFO* pcbi)
    {
        auto win32_impl_result = WIN32_IMPL_GetComboBoxInfo(hwndCombo, pcbi);
        return win32_impl_result;
    }
    inline uint32_t GetListBoxInfo(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_GetListBoxInfo(hwnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPointerDevices(uint32_t* deviceCount, Windows::Win32::Controls::POINTER_DEVICE_INFO* pointerDevices)
    {
        auto win32_impl_result = WIN32_IMPL_GetPointerDevices(deviceCount, pointerDevices);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPointerDevice(Windows::Win32::SystemServices::HANDLE device, Windows::Win32::Controls::POINTER_DEVICE_INFO* pointerDevice)
    {
        auto win32_impl_result = WIN32_IMPL_GetPointerDevice(device, pointerDevice);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPointerDeviceProperties(Windows::Win32::SystemServices::HANDLE device, uint32_t* propertyCount, Windows::Win32::Controls::POINTER_DEVICE_PROPERTY* pointerProperties)
    {
        auto win32_impl_result = WIN32_IMPL_GetPointerDeviceProperties(device, propertyCount, pointerProperties);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RegisterPointerDeviceNotifications(Windows::Win32::WindowsAndMessaging::HWND window, Windows::Win32::SystemServices::BOOL notifyRange)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterPointerDeviceNotifications(window, notifyRange);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPointerDeviceRects(Windows::Win32::SystemServices::HANDLE device, Windows::Win32::DisplayDevices::RECT* pointerDeviceRect, Windows::Win32::DisplayDevices::RECT* displayRect)
    {
        auto win32_impl_result = WIN32_IMPL_GetPointerDeviceRects(device, pointerDeviceRect, displayRect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPointerDeviceCursors(Windows::Win32::SystemServices::HANDLE device, uint32_t* cursorCount, Windows::Win32::Controls::POINTER_DEVICE_CURSOR_INFO* deviceCursors)
    {
        auto win32_impl_result = WIN32_IMPL_GetPointerDeviceCursors(device, cursorCount, deviceCursors);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetRawPointerDeviceData(uint32_t pointerId, uint32_t historyCount, uint32_t propertiesCount, Windows::Win32::Controls::POINTER_DEVICE_PROPERTY* pProperties, int32_t* pValues)
    {
        auto win32_impl_result = WIN32_IMPL_GetRawPointerDeviceData(pointerId, historyCount, propertiesCount, pProperties, pValues);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentInputMessageSource(Windows::Win32::Controls::INPUT_MESSAGE_SOURCE* inputMessageSource)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentInputMessageSource(inputMessageSource);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCIMSSM(Windows::Win32::Controls::INPUT_MESSAGE_SOURCE* inputMessageSource)
    {
        auto win32_impl_result = WIN32_IMPL_GetCIMSSM(inputMessageSource);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
