// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_DataExchange_H
#define WIN32_Windows_Win32_DataExchange_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.DataExchange.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::DataExchange
{
#pragma region methods
    inline Windows::Win32::SystemServices::BOOL OpenClipboard(Windows::Win32::WindowsAndMessaging::HWND hWndNewOwner)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClipboard(hWndNewOwner);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClipboard()
    {
        auto win32_impl_result = WIN32_IMPL_CloseClipboard();
        return win32_impl_result;
    }
    inline uint32_t GetClipboardSequenceNumber()
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardSequenceNumber();
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND GetClipboardOwner()
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardOwner();
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND SetClipboardViewer(Windows::Win32::WindowsAndMessaging::HWND hWndNewViewer)
    {
        auto win32_impl_result = WIN32_IMPL_SetClipboardViewer(hWndNewViewer);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND GetClipboardViewer()
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardViewer();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ChangeClipboardChain(Windows::Win32::WindowsAndMessaging::HWND hWndRemove, Windows::Win32::WindowsAndMessaging::HWND hWndNewNext)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeClipboardChain(hWndRemove, hWndNewNext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE SetClipboardData(uint32_t uFormat, Windows::Win32::SystemServices::HANDLE hMem)
    {
        auto win32_impl_result = WIN32_IMPL_SetClipboardData(uFormat, hMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetClipboardData(uint32_t uFormat)
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardData(uFormat);
        return win32_impl_result;
    }
    inline uint32_t RegisterClipboardFormatA(int8_t* lpszFormat)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterClipboardFormatA(lpszFormat);
        return win32_impl_result;
    }
    inline uint32_t RegisterClipboardFormatW(uint16_t* lpszFormat)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterClipboardFormatW(lpszFormat);
        return win32_impl_result;
    }
    inline int32_t CountClipboardFormats()
    {
        auto win32_impl_result = WIN32_IMPL_CountClipboardFormats();
        return win32_impl_result;
    }
    inline uint32_t EnumClipboardFormats(uint32_t format)
    {
        auto win32_impl_result = WIN32_IMPL_EnumClipboardFormats(format);
        return win32_impl_result;
    }
    inline int32_t GetClipboardFormatNameA(uint32_t format, int8_t* lpszFormatName, int32_t cchMaxCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardFormatNameA(format, lpszFormatName, cchMaxCount);
        return win32_impl_result;
    }
    inline int32_t GetClipboardFormatNameW(uint32_t format, uint16_t* lpszFormatName, int32_t cchMaxCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetClipboardFormatNameW(format, lpszFormatName, cchMaxCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EmptyClipboard()
    {
        auto win32_impl_result = WIN32_IMPL_EmptyClipboard();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsClipboardFormatAvailable(uint32_t format)
    {
        auto win32_impl_result = WIN32_IMPL_IsClipboardFormatAvailable(format);
        return win32_impl_result;
    }
    inline int32_t GetPriorityClipboardFormat(uint32_t* paFormatPriorityList, int32_t cFormats)
    {
        auto win32_impl_result = WIN32_IMPL_GetPriorityClipboardFormat(paFormatPriorityList, cFormats);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND GetOpenClipboardWindow()
    {
        auto win32_impl_result = WIN32_IMPL_GetOpenClipboardWindow();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddClipboardFormatListener(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_AddClipboardFormatListener(hwnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveClipboardFormatListener(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClipboardFormatListener(hwnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUpdatedClipboardFormats(uint32_t* lpuiFormats, uint32_t cFormats, uint32_t* pcFormatsOut)
    {
        auto win32_impl_result = WIN32_IMPL_GetUpdatedClipboardFormats(lpuiFormats, cFormats, pcFormatsOut);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeSetQualityOfService(Windows::Win32::WindowsAndMessaging::HWND hwndClient, Windows::Win32::Security::SECURITY_QUALITY_OF_SERVICE* pqosNew, Windows::Win32::Security::SECURITY_QUALITY_OF_SERVICE* pqosPrev)
    {
        auto win32_impl_result = WIN32_IMPL_DdeSetQualityOfService(hwndClient, pqosNew, pqosPrev);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ImpersonateDdeClientWindow(Windows::Win32::WindowsAndMessaging::HWND hWndClient, Windows::Win32::WindowsAndMessaging::HWND hWndServer)
    {
        auto win32_impl_result = WIN32_IMPL_ImpersonateDdeClientWindow(hWndClient, hWndServer);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::LPARAM PackDDElParam(uint32_t msg, size_t uiLo, size_t uiHi)
    {
        auto win32_impl_result = WIN32_IMPL_PackDDElParam(msg, uiLo, uiHi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnpackDDElParam(uint32_t msg, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t* puiLo, uint32_t* puiHi)
    {
        auto win32_impl_result = WIN32_IMPL_UnpackDDElParam(msg, lParam, puiLo, puiHi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeDDElParam(uint32_t msg, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_FreeDDElParam(msg, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::LPARAM ReuseDDElParam(Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t msgIn, uint32_t msgOut, size_t uiLo, size_t uiHi)
    {
        auto win32_impl_result = WIN32_IMPL_ReuseDDElParam(lParam, msgIn, msgOut, uiLo, uiHi);
        return win32_impl_result;
    }
    inline uint32_t DdeInitializeA(uint32_t* pidInst, Windows::Win32::DataExchange::PFNCALLBACK* pfnCallback, uint32_t afCmd, uint32_t ulRes)
    {
        auto win32_impl_result = WIN32_IMPL_DdeInitializeA(pidInst, pfnCallback, afCmd, ulRes);
        return win32_impl_result;
    }
    inline uint32_t DdeInitializeW(uint32_t* pidInst, Windows::Win32::DataExchange::PFNCALLBACK* pfnCallback, uint32_t afCmd, uint32_t ulRes)
    {
        auto win32_impl_result = WIN32_IMPL_DdeInitializeW(pidInst, pfnCallback, afCmd, ulRes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeUninitialize(uint32_t idInst)
    {
        auto win32_impl_result = WIN32_IMPL_DdeUninitialize(idInst);
        return win32_impl_result;
    }
    inline intptr_t DdeConnectList(uint32_t idInst, intptr_t hszService, intptr_t hszTopic, intptr_t hConvList, Windows::Win32::DataExchange::CONVCONTEXT* pCC)
    {
        auto win32_impl_result = WIN32_IMPL_DdeConnectList(idInst, hszService, hszTopic, hConvList, pCC);
        return win32_impl_result;
    }
    inline intptr_t DdeQueryNextServer(intptr_t hConvList, intptr_t hConvPrev)
    {
        auto win32_impl_result = WIN32_IMPL_DdeQueryNextServer(hConvList, hConvPrev);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeDisconnectList(intptr_t hConvList)
    {
        auto win32_impl_result = WIN32_IMPL_DdeDisconnectList(hConvList);
        return win32_impl_result;
    }
    inline intptr_t DdeConnect(uint32_t idInst, intptr_t hszService, intptr_t hszTopic, Windows::Win32::DataExchange::CONVCONTEXT* pCC)
    {
        auto win32_impl_result = WIN32_IMPL_DdeConnect(idInst, hszService, hszTopic, pCC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeDisconnect(intptr_t hConv)
    {
        auto win32_impl_result = WIN32_IMPL_DdeDisconnect(hConv);
        return win32_impl_result;
    }
    inline intptr_t DdeReconnect(intptr_t hConv)
    {
        auto win32_impl_result = WIN32_IMPL_DdeReconnect(hConv);
        return win32_impl_result;
    }
    inline uint32_t DdeQueryConvInfo(intptr_t hConv, uint32_t idTransaction, Windows::Win32::DataExchange::CONVINFO* pConvInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DdeQueryConvInfo(hConv, idTransaction, pConvInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeSetUserHandle(intptr_t hConv, uint32_t id, size_t hUser)
    {
        auto win32_impl_result = WIN32_IMPL_DdeSetUserHandle(hConv, id, hUser);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeAbandonTransaction(uint32_t idInst, intptr_t hConv, uint32_t idTransaction)
    {
        auto win32_impl_result = WIN32_IMPL_DdeAbandonTransaction(idInst, hConv, idTransaction);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdePostAdvise(uint32_t idInst, intptr_t hszTopic, intptr_t hszItem)
    {
        auto win32_impl_result = WIN32_IMPL_DdePostAdvise(idInst, hszTopic, hszItem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeEnableCallback(uint32_t idInst, intptr_t hConv, uint32_t wCmd)
    {
        auto win32_impl_result = WIN32_IMPL_DdeEnableCallback(idInst, hConv, wCmd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeImpersonateClient(intptr_t hConv)
    {
        auto win32_impl_result = WIN32_IMPL_DdeImpersonateClient(hConv);
        return win32_impl_result;
    }
    inline intptr_t DdeNameService(uint32_t idInst, intptr_t hsz1, intptr_t hsz2, uint32_t afCmd)
    {
        auto win32_impl_result = WIN32_IMPL_DdeNameService(idInst, hsz1, hsz2, afCmd);
        return win32_impl_result;
    }
    inline intptr_t DdeClientTransaction(uint8_t* pData, uint32_t cbData, intptr_t hConv, intptr_t hszItem, uint32_t wFmt, uint32_t wType, uint32_t dwTimeout, uint32_t* pdwResult)
    {
        auto win32_impl_result = WIN32_IMPL_DdeClientTransaction(pData, cbData, hConv, hszItem, wFmt, wType, dwTimeout, pdwResult);
        return win32_impl_result;
    }
    inline intptr_t DdeCreateDataHandle(uint32_t idInst, uint8_t* pSrc, uint32_t cb, uint32_t cbOff, intptr_t hszItem, uint32_t wFmt, uint32_t afCmd)
    {
        auto win32_impl_result = WIN32_IMPL_DdeCreateDataHandle(idInst, pSrc, cb, cbOff, hszItem, wFmt, afCmd);
        return win32_impl_result;
    }
    inline intptr_t DdeAddData(intptr_t hData, uint8_t* pSrc, uint32_t cb, uint32_t cbOff)
    {
        auto win32_impl_result = WIN32_IMPL_DdeAddData(hData, pSrc, cb, cbOff);
        return win32_impl_result;
    }
    inline uint32_t DdeGetData(intptr_t hData, uint8_t* pDst, uint32_t cbMax, uint32_t cbOff)
    {
        auto win32_impl_result = WIN32_IMPL_DdeGetData(hData, pDst, cbMax, cbOff);
        return win32_impl_result;
    }
    inline uint8_t* DdeAccessData(intptr_t hData, uint32_t* pcbDataSize)
    {
        auto win32_impl_result = WIN32_IMPL_DdeAccessData(hData, pcbDataSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeUnaccessData(intptr_t hData)
    {
        auto win32_impl_result = WIN32_IMPL_DdeUnaccessData(hData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeFreeDataHandle(intptr_t hData)
    {
        auto win32_impl_result = WIN32_IMPL_DdeFreeDataHandle(hData);
        return win32_impl_result;
    }
    inline uint32_t DdeGetLastError(uint32_t idInst)
    {
        auto win32_impl_result = WIN32_IMPL_DdeGetLastError(idInst);
        return win32_impl_result;
    }
    inline intptr_t DdeCreateStringHandleA(uint32_t idInst, int8_t* psz, int32_t iCodePage)
    {
        auto win32_impl_result = WIN32_IMPL_DdeCreateStringHandleA(idInst, psz, iCodePage);
        return win32_impl_result;
    }
    inline intptr_t DdeCreateStringHandleW(uint32_t idInst, uint16_t* psz, int32_t iCodePage)
    {
        auto win32_impl_result = WIN32_IMPL_DdeCreateStringHandleW(idInst, psz, iCodePage);
        return win32_impl_result;
    }
    inline uint32_t DdeQueryStringA(uint32_t idInst, intptr_t hsz, int8_t* psz, uint32_t cchMax, int32_t iCodePage)
    {
        auto win32_impl_result = WIN32_IMPL_DdeQueryStringA(idInst, hsz, psz, cchMax, iCodePage);
        return win32_impl_result;
    }
    inline uint32_t DdeQueryStringW(uint32_t idInst, intptr_t hsz, uint16_t* psz, uint32_t cchMax, int32_t iCodePage)
    {
        auto win32_impl_result = WIN32_IMPL_DdeQueryStringW(idInst, hsz, psz, cchMax, iCodePage);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeFreeStringHandle(uint32_t idInst, intptr_t hsz)
    {
        auto win32_impl_result = WIN32_IMPL_DdeFreeStringHandle(idInst, hsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DdeKeepStringHandle(uint32_t idInst, intptr_t hsz)
    {
        auto win32_impl_result = WIN32_IMPL_DdeKeepStringHandle(idInst, hsz);
        return win32_impl_result;
    }
    inline int32_t DdeCmpStringHandles(intptr_t hsz1, intptr_t hsz2)
    {
        auto win32_impl_result = WIN32_IMPL_DdeCmpStringHandles(hsz1, hsz2);
        return win32_impl_result;
    }
    inline uint16_t GlobalDeleteAtom(uint16_t nAtom)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalDeleteAtom(nAtom);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitAtomTable(uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_InitAtomTable(nSize);
        return win32_impl_result;
    }
    inline uint16_t DeleteAtom(uint16_t nAtom)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteAtom(nAtom);
        return win32_impl_result;
    }
    inline uint16_t GlobalAddAtomA(int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalAddAtomA(lpString);
        return win32_impl_result;
    }
    inline uint16_t GlobalAddAtomW(uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalAddAtomW(lpString);
        return win32_impl_result;
    }
    inline uint16_t GlobalAddAtomExA(int8_t* lpString, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalAddAtomExA(lpString, Flags);
        return win32_impl_result;
    }
    inline uint16_t GlobalAddAtomExW(uint16_t* lpString, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalAddAtomExW(lpString, Flags);
        return win32_impl_result;
    }
    inline uint16_t GlobalFindAtomA(int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalFindAtomA(lpString);
        return win32_impl_result;
    }
    inline uint16_t GlobalFindAtomW(uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalFindAtomW(lpString);
        return win32_impl_result;
    }
    inline uint32_t GlobalGetAtomNameA(uint16_t nAtom, int8_t* lpBuffer, int32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalGetAtomNameA(nAtom, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline uint32_t GlobalGetAtomNameW(uint16_t nAtom, uint16_t* lpBuffer, int32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalGetAtomNameW(nAtom, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline uint16_t AddAtomA(int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_AddAtomA(lpString);
        return win32_impl_result;
    }
    inline uint16_t AddAtomW(uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_AddAtomW(lpString);
        return win32_impl_result;
    }
    inline uint16_t FindAtomA(int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_FindAtomA(lpString);
        return win32_impl_result;
    }
    inline uint16_t FindAtomW(uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_FindAtomW(lpString);
        return win32_impl_result;
    }
    inline uint32_t GetAtomNameA(uint16_t nAtom, int8_t* lpBuffer, int32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetAtomNameA(nAtom, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetAtomNameW(uint16_t nAtom, uint16_t* lpBuffer, int32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetAtomNameW(nAtom, lpBuffer, nSize);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
