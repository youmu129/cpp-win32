// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Dhcp_H
#define WIN32_Windows_Win32_Dhcp_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Dhcp.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Dhcp
{
#pragma region methods
    inline void Dhcpv6CApiInitialize(uint32_t* Version)
    {
        WIN32_IMPL_Dhcpv6CApiInitialize(Version);
    }
    inline void Dhcpv6CApiCleanup()
    {
        WIN32_IMPL_Dhcpv6CApiCleanup();
    }
    inline uint32_t Dhcpv6RequestParams(Windows::Win32::SystemServices::BOOL forceNewInform, void* reserved, uint16_t* adapterName, Windows::Win32::Dhcp::DHCPV6CAPI_CLASSID* classId, Windows::Win32::Dhcp::DHCPV6CAPI_PARAMS_ARRAY recdParams, uint8_t* buffer, uint32_t* pSize)
    {
        auto win32_impl_result = WIN32_IMPL_Dhcpv6RequestParams(forceNewInform, reserved, adapterName, classId, recdParams, buffer, pSize);
        return win32_impl_result;
    }
    inline uint32_t Dhcpv6RequestPrefix(uint16_t* adapterName, Windows::Win32::Dhcp::DHCPV6CAPI_CLASSID* pclassId, Windows::Win32::Dhcp::DHCPV6PrefixLeaseInformation* prefixleaseInfo, uint32_t* pdwTimeToWait)
    {
        auto win32_impl_result = WIN32_IMPL_Dhcpv6RequestPrefix(adapterName, pclassId, prefixleaseInfo, pdwTimeToWait);
        return win32_impl_result;
    }
    inline uint32_t Dhcpv6RenewPrefix(uint16_t* adapterName, Windows::Win32::Dhcp::DHCPV6CAPI_CLASSID* pclassId, Windows::Win32::Dhcp::DHCPV6PrefixLeaseInformation* prefixleaseInfo, uint32_t* pdwTimeToWait, uint32_t bValidatePrefix)
    {
        auto win32_impl_result = WIN32_IMPL_Dhcpv6RenewPrefix(adapterName, pclassId, prefixleaseInfo, pdwTimeToWait, bValidatePrefix);
        return win32_impl_result;
    }
    inline uint32_t Dhcpv6ReleasePrefix(uint16_t* adapterName, Windows::Win32::Dhcp::DHCPV6CAPI_CLASSID* classId, Windows::Win32::Dhcp::DHCPV6PrefixLeaseInformation* leaseInfo)
    {
        auto win32_impl_result = WIN32_IMPL_Dhcpv6ReleasePrefix(adapterName, classId, leaseInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpCApiInitialize(uint32_t* Version)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCApiInitialize(Version);
        return win32_impl_result;
    }
    inline void DhcpCApiCleanup()
    {
        WIN32_IMPL_DhcpCApiCleanup();
    }
    inline uint32_t DhcpRequestParams(uint32_t Flags, void* Reserved, uint16_t* AdapterName, Windows::Win32::Dhcp::DHCPCAPI_CLASSID* ClassId, Windows::Win32::Dhcp::DHCPCAPI_PARAMS_ARRAY SendParams, Windows::Win32::Dhcp::DHCPCAPI_PARAMS_ARRAY RecdParams, uint8_t* Buffer, uint32_t* pSize, uint16_t* RequestIdStr)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRequestParams(Flags, Reserved, AdapterName, ClassId, SendParams, RecdParams, Buffer, pSize, RequestIdStr);
        return win32_impl_result;
    }
    inline uint32_t DhcpUndoRequestParams(uint32_t Flags, void* Reserved, uint16_t* AdapterName, uint16_t* RequestIdStr)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpUndoRequestParams(Flags, Reserved, AdapterName, RequestIdStr);
        return win32_impl_result;
    }
    inline uint32_t DhcpRegisterParamChange(uint32_t Flags, void* Reserved, uint16_t* AdapterName, Windows::Win32::Dhcp::DHCPCAPI_CLASSID* ClassId, Windows::Win32::Dhcp::DHCPCAPI_PARAMS_ARRAY Params, void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRegisterParamChange(Flags, Reserved, AdapterName, ClassId, Params, Handle);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeRegisterParamChange(uint32_t Flags, void* Reserved, void* Event)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeRegisterParamChange(Flags, Reserved, Event);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveDNSRegistrations()
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveDNSRegistrations();
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOriginalSubnetMask(uint16_t* sAdapterName, uint32_t* dwSubnetMask)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOriginalSubnetMask(sAdapterName, dwSubnetMask);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddFilterV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FILTER_ADD_INFO* AddFilterInfo, Windows::Win32::SystemServices::BOOL ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddFilterV4(ServerIpAddress, AddFilterInfo, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteFilterV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_ADDR_PATTERN* DeleteFilterInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteFilterV4(ServerIpAddress, DeleteFilterInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetFilterV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FILTER_GLOBAL_INFO* GlobalFilterInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetFilterV4(ServerIpAddress, GlobalFilterInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetFilterV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FILTER_GLOBAL_INFO* GlobalFilterInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetFilterV4(ServerIpAddress, GlobalFilterInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumFilterV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_ADDR_PATTERN* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_FILTER_LIST_TYPE ListType, Windows::Win32::Dhcp::DHCP_FILTER_ENUM_INFO** EnumFilterInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumFilterV4(ServerIpAddress, ResumeHandle, PreferredMaximum, ListType, EnumFilterInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateSubnet(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateSubnet(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetSubnetInfo(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetSubnetInfo(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetSubnetInfo(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO** SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetSubnetInfo(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnets(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_IP_ARRAY** EnumInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnets(ServerIpAddress, ResumeHandle, PreferredMaximum, EnumInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddSubnetElement(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA* AddElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddSubnetElement(ServerIpAddress, SubnetAddress, AddElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetElements(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_TYPE EnumElementType, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_INFO_ARRAY** EnumElementInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetElements(ServerIpAddress, SubnetAddress, EnumElementType, ResumeHandle, PreferredMaximum, EnumElementInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveSubnetElement(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA* RemoveElementInfo, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveSubnetElement(ServerIpAddress, SubnetAddress, RemoveElementInfo, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteSubnet(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteSubnet(ServerIpAddress, SubnetAddress, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateOption(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateOption(ServerIpAddress, OptionID, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionInfo(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionInfo(ServerIpAddress, OptionID, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionInfo(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION** OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionInfo(ServerIpAddress, OptionID, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptions(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_ARRAY** Options, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptions(ServerIpAddress, ResumeHandle, PreferredMaximum, Options, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOption(uint16_t* ServerIpAddress, uint32_t OptionID)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOption(ServerIpAddress, OptionID);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionValue(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_DATA* OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionValue(ServerIpAddress, OptionID, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionValues(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY* OptionValues)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionValues(ServerIpAddress, ScopeInfo, OptionValues);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionValue(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE** OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionValue(ServerIpAddress, OptionID, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptionValues(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY** OptionValues, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptionValues(ServerIpAddress, ScopeInfo, ResumeHandle, PreferredMaximum, OptionValues, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOptionValue(uint16_t* ServerIpAddress, uint32_t OptionID, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOptionValue(ServerIpAddress, OptionID, ScopeInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateClientInfoVQ(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_VQ* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateClientInfoVQ(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetClientInfoVQ(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_VQ* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetClientInfoVQ(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClientInfoVQ(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_VQ** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClientInfoVQ(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClientsVQ(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_ARRAY_VQ** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClientsVQ(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClientsFilterStatusInfo(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClientsFilterStatusInfo(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateClientInfo(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetClientInfo(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClientInfo(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteClientInfo(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClients(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_ARRAY** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClients(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClientOptions(uint16_t* ServerIpAddress, uint32_t ClientIpAddress, uint32_t ClientSubnetMask, Windows::Win32::Dhcp::DHCP_OPTION_LIST** ClientOptions)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClientOptions(ServerIpAddress, ClientIpAddress, ClientSubnetMask, ClientOptions);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetMibInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_MIB_INFO** MibInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetMibInfo(ServerIpAddress, MibInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetConfig(uint16_t* ServerIpAddress, uint32_t FieldsToSet, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO* ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetConfig(ServerIpAddress, FieldsToSet, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerGetConfig(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO** ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerGetConfig(ServerIpAddress, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpScanDatabase(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t FixFlag, Windows::Win32::Dhcp::DHCP_SCAN_LIST** ScanList)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpScanDatabase(ServerIpAddress, SubnetAddress, FixFlag, ScanList);
        return win32_impl_result;
    }
    inline void DhcpRpcFreeMemory(void* BufferPointer)
    {
        WIN32_IMPL_DhcpRpcFreeMemory(BufferPointer);
    }
    inline uint32_t DhcpGetVersion(uint16_t* ServerIpAddress, uint32_t* MajorVersion, uint32_t* MinorVersion)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetVersion(ServerIpAddress, MajorVersion, MinorVersion);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddSubnetElementV4(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V4* AddElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddSubnetElementV4(ServerIpAddress, SubnetAddress, AddElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetElementsV4(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_TYPE EnumElementType, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4** EnumElementInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetElementsV4(ServerIpAddress, SubnetAddress, EnumElementType, ResumeHandle, PreferredMaximum, EnumElementInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveSubnetElementV4(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V4* RemoveElementInfo, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveSubnetElementV4(ServerIpAddress, SubnetAddress, RemoveElementInfo, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateClientInfoV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V4* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateClientInfoV4(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetClientInfoV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V4* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetClientInfoV4(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClientInfoV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V4** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClientInfoV4(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClientsV4(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_ARRAY_V4** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClientsV4(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetConfigV4(uint16_t* ServerIpAddress, uint32_t FieldsToSet, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_V4* ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetConfigV4(ServerIpAddress, FieldsToSet, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerGetConfigV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_V4** ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerGetConfigV4(ServerIpAddress, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetSuperScopeV4(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint16_t* SuperScopeName, int32_t ChangeExisting)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetSuperScopeV4(ServerIpAddress, SubnetAddress, SuperScopeName, ChangeExisting);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteSuperScopeV4(uint16_t* ServerIpAddress, uint16_t* SuperScopeName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteSuperScopeV4(ServerIpAddress, SuperScopeName);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetSuperScopeInfoV4(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SUPER_SCOPE_TABLE** SuperScopeTable)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetSuperScopeInfoV4(ServerIpAddress, SuperScopeTable);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClientsV5(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_ARRAY_V5** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClientsV5(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateOptionV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionId, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateOptionV5(ServerIpAddress, Flags, OptionId, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionInfoV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionInfoV5(ServerIpAddress, Flags, OptionID, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionInfoV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION** OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionInfoV5(ServerIpAddress, Flags, OptionID, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptionsV5(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* ClassName, uint16_t* VendorName, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_ARRAY** Options, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptionsV5(ServerIpAddress, Flags, ClassName, VendorName, ResumeHandle, PreferredMaximum, Options, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOptionV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOptionV5(ServerIpAddress, Flags, OptionID, ClassName, VendorName);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionValueV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionId, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_DATA* OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionValueV5(ServerIpAddress, Flags, OptionId, ClassName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionValuesV5(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY* OptionValues)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionValuesV5(ServerIpAddress, Flags, ClassName, VendorName, ScopeInfo, OptionValues);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionValueV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE** OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionValueV5(ServerIpAddress, Flags, OptionID, ClassName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionValueV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE** OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionValueV6(ServerIpAddress, Flags, OptionID, ClassName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptionValuesV5(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY** OptionValues, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptionValuesV5(ServerIpAddress, Flags, ClassName, VendorName, ScopeInfo, ResumeHandle, PreferredMaximum, OptionValues, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOptionValueV5(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOptionValueV5(ServerIpAddress, Flags, OptionID, ClassName, VendorName, ScopeInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateClass(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, Windows::Win32::Dhcp::DHCP_CLASS_INFO* ClassInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateClass(ServerIpAddress, ReservedMustBeZero, ClassInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpModifyClass(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, Windows::Win32::Dhcp::DHCP_CLASS_INFO* ClassInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpModifyClass(ServerIpAddress, ReservedMustBeZero, ClassInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteClass(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, uint16_t* ClassName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteClass(ServerIpAddress, ReservedMustBeZero, ClassName);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClassInfo(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, Windows::Win32::Dhcp::DHCP_CLASS_INFO* PartialClassInfo, Windows::Win32::Dhcp::DHCP_CLASS_INFO** FilledClassInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClassInfo(ServerIpAddress, ReservedMustBeZero, PartialClassInfo, FilledClassInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumClasses(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLASS_INFO_ARRAY** ClassInfoArray, uint32_t* nRead, uint32_t* nTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumClasses(ServerIpAddress, ReservedMustBeZero, ResumeHandle, PreferredMaximum, ClassInfoArray, nRead, nTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetAllOptions(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_ALL_OPTIONS** OptionStruct)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetAllOptions(ServerIpAddress, Flags, OptionStruct);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetAllOptionsV6(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_ALL_OPTIONS** OptionStruct)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetAllOptionsV6(ServerIpAddress, Flags, OptionStruct);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetAllOptionValues(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_ALL_OPTION_VALUES** Values)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetAllOptionValues(ServerIpAddress, Flags, ScopeInfo, Values);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetAllOptionValuesV6(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, Windows::Win32::Dhcp::DHCP_ALL_OPTION_VALUES** Values)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetAllOptionValuesV6(ServerIpAddress, Flags, ScopeInfo, Values);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumServers(uint32_t Flags, void* IdInfo, Windows::Win32::Dhcp::DHCPDS_SERVERS** Servers, void* CallbackFn, void* CallbackData)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumServers(Flags, IdInfo, Servers, CallbackFn, CallbackData);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddServer(uint32_t Flags, void* IdInfo, Windows::Win32::Dhcp::DHCPDS_SERVER* NewServer, void* CallbackFn, void* CallbackData)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddServer(Flags, IdInfo, NewServer, CallbackFn, CallbackData);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteServer(uint32_t Flags, void* IdInfo, Windows::Win32::Dhcp::DHCPDS_SERVER* NewServer, void* CallbackFn, void* CallbackData)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteServer(Flags, IdInfo, NewServer, CallbackFn, CallbackData);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetServerBindingInfo(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_BIND_ELEMENT_ARRAY** BindElementsInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetServerBindingInfo(ServerIpAddress, Flags, BindElementsInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetServerBindingInfo(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_BIND_ELEMENT_ARRAY* BindElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetServerBindingInfo(ServerIpAddress, Flags, BindElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddSubnetElementV5(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V5* AddElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddSubnetElementV5(ServerIpAddress, SubnetAddress, AddElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetElementsV5(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_TYPE EnumElementType, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5** EnumElementInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetElementsV5(ServerIpAddress, SubnetAddress, EnumElementType, ResumeHandle, PreferredMaximum, EnumElementInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveSubnetElementV5(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V5* RemoveElementInfo, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveSubnetElementV5(ServerIpAddress, SubnetAddress, RemoveElementInfo, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4EnumSubnetReservations(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_RESERVATION_INFO_ARRAY** EnumElementInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4EnumSubnetReservations(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, EnumElementInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateOptionV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionId, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateOptionV6(ServerIpAddress, Flags, OptionId, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOptionV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOptionV6(ServerIpAddress, Flags, OptionID, ClassName, VendorName);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptionsV6(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* ClassName, uint16_t* VendorName, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_ARRAY** Options, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptionsV6(ServerIpAddress, Flags, ClassName, VendorName, ResumeHandle, PreferredMaximum, Options, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveOptionValueV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveOptionValueV6(ServerIpAddress, Flags, OptionID, ClassName, VendorName, ScopeInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetOptionInfoV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION** OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetOptionInfoV6(ServerIpAddress, Flags, OptionID, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionInfoV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION* OptionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionInfoV6(ServerIpAddress, Flags, OptionID, ClassName, VendorName, OptionInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetOptionValueV6(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionId, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_DATA* OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetOptionValueV6(ServerIpAddress, Flags, OptionId, ClassName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetSubnetInfoVQ(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_VQ** SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetSubnetInfoVQ(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateSubnetVQ(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_VQ* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateSubnetVQ(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetSubnetInfoVQ(uint16_t* ServerIpAddress, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_VQ* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetSubnetInfoVQ(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumOptionValuesV6(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* ClassName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY** OptionValues, uint32_t* OptionsRead, uint32_t* OptionsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumOptionValuesV6(ServerIpAddress, Flags, ClassName, VendorName, ScopeInfo, ResumeHandle, PreferredMaximum, OptionValues, OptionsRead, OptionsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpDsInit()
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDsInit();
        return win32_impl_result;
    }
    inline void DhcpDsCleanup()
    {
        WIN32_IMPL_DhcpDsCleanup();
    }
    inline uint32_t DhcpSetThreadOptions(uint32_t Flags, void* Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetThreadOptions(Flags, Reserved);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetThreadOptions(uint32_t* pFlags, void* Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetThreadOptions(pFlags, Reserved);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerQueryAttribute(uint16_t* ServerIpAddr, uint32_t dwReserved, uint32_t DhcpAttribId, Windows::Win32::Dhcp::DHCP_ATTRIB** pDhcpAttrib)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerQueryAttribute(ServerIpAddr, dwReserved, DhcpAttribId, pDhcpAttrib);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerQueryAttributes(uint16_t* ServerIpAddr, uint32_t dwReserved, uint32_t dwAttribCount, uint32_t* pDhcpAttribs, Windows::Win32::Dhcp::DHCP_ATTRIB_ARRAY** pDhcpAttribArr)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerQueryAttributes(ServerIpAddr, dwReserved, dwAttribCount, pDhcpAttribs, pDhcpAttribArr);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerRedoAuthorization(uint16_t* ServerIpAddr, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerRedoAuthorization(ServerIpAddr, dwReserved);
        return win32_impl_result;
    }
    inline uint32_t DhcpAuditLogSetParams(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* AuditLogDir, uint32_t DiskCheckInterval, uint32_t MaxLogFilesSize, uint32_t MinSpaceOnDisk)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAuditLogSetParams(ServerIpAddress, Flags, AuditLogDir, DiskCheckInterval, MaxLogFilesSize, MinSpaceOnDisk);
        return win32_impl_result;
    }
    inline uint32_t DhcpAuditLogGetParams(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t** AuditLogDir, uint32_t* DiskCheckInterval, uint32_t* MaxLogFilesSize, uint32_t* MinSpaceOnDisk)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAuditLogGetParams(ServerIpAddress, Flags, AuditLogDir, DiskCheckInterval, MaxLogFilesSize, MinSpaceOnDisk);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerQueryDnsRegCredentials(uint16_t* ServerIpAddress, uint32_t UnameSize, uint16_t* Uname, uint32_t DomainSize, uint16_t* Domain)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerQueryDnsRegCredentials(ServerIpAddress, UnameSize, Uname, DomainSize, Domain);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetDnsRegCredentials(uint16_t* ServerIpAddress, uint16_t* Uname, uint16_t* Domain, uint16_t* Passwd)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetDnsRegCredentials(ServerIpAddress, Uname, Domain, Passwd);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetDnsRegCredentialsV5(uint16_t* ServerIpAddress, uint16_t* Uname, uint16_t* Domain, uint16_t* Passwd)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetDnsRegCredentialsV5(ServerIpAddress, Uname, Domain, Passwd);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerBackupDatabase(uint16_t* ServerIpAddress, uint16_t* Path)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerBackupDatabase(ServerIpAddress, Path);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerRestoreDatabase(uint16_t* ServerIpAddress, uint16_t* Path)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerRestoreDatabase(ServerIpAddress, Path);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetConfigVQ(uint16_t* ServerIpAddress, uint32_t FieldsToSet, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_VQ* ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetConfigVQ(ServerIpAddress, FieldsToSet, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerGetConfigVQ(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_VQ** ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerGetConfigVQ(ServerIpAddress, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetServerSpecificStrings(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SERVER_SPECIFIC_STRINGS** ServerSpecificStrings)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetServerSpecificStrings(ServerIpAddress, ServerSpecificStrings);
        return win32_impl_result;
    }
    inline void DhcpServerAuditlogParamsFree(Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_VQ* ConfigInfo)
    {
        WIN32_IMPL_DhcpServerAuditlogParamsFree(ConfigInfo);
    }
    inline uint32_t DhcpCreateSubnetV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_V6* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateSubnetV6(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteSubnetV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteSubnetV6(ServerIpAddress, SubnetAddress, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetsV6(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCPV6_IP_ARRAY** EnumInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetsV6(ServerIpAddress, ResumeHandle, PreferredMaximum, EnumInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddSubnetElementV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V6* AddElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddSubnetElementV6(ServerIpAddress, SubnetAddress, AddElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpRemoveSubnetElementV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_DATA_V6* RemoveElementInfo, Windows::Win32::Dhcp::DHCP_FORCE_FLAG ForceFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpRemoveSubnetElementV6(ServerIpAddress, SubnetAddress, RemoveElementInfo, ForceFlag);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetElementsV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_TYPE_V6 EnumElementType, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6** EnumElementInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetElementsV6(ServerIpAddress, SubnetAddress, EnumElementType, ResumeHandle, PreferredMaximum, EnumElementInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetSubnetInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_V6** SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetSubnetInfoV6(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumSubnetClientsV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_ARRAY_V6** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumSubnetClientsV6(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerGetConfigV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_V6** ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerGetConfigV6(ServerIpAddress, ScopeInfo, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpServerSetConfigV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO6* ScopeInfo, uint32_t FieldsToSet, Windows::Win32::Dhcp::DHCP_SERVER_CONFIG_INFO_V6* ConfigInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpServerSetConfigV6(ServerIpAddress, ScopeInfo, FieldsToSet, ConfigInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetSubnetInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCP_SUBNET_INFO_V6* SubnetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetSubnetInfoV6(ServerIpAddress, SubnetAddress, SubnetInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetMibInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_MIB_INFO_V6** MibInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetMibInfoV6(ServerIpAddress, MibInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetServerBindingInfoV6(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCPV6_BIND_ELEMENT_ARRAY** BindElementsInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetServerBindingInfoV6(ServerIpAddress, Flags, BindElementsInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetServerBindingInfoV6(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCPV6_BIND_ELEMENT_ARRAY* BindElementInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetServerBindingInfoV6(ServerIpAddress, Flags, BindElementInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetClientInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V6* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetClientInfoV6(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetClientInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO_V6* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V6** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetClientInfoV6(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteClientInfoV6(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO_V6* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteClientInfoV6(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpCreateClassV6(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, Windows::Win32::Dhcp::DHCP_CLASS_INFO_V6* ClassInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpCreateClassV6(ServerIpAddress, ReservedMustBeZero, ClassInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpModifyClassV6(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, Windows::Win32::Dhcp::DHCP_CLASS_INFO_V6* ClassInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpModifyClassV6(ServerIpAddress, ReservedMustBeZero, ClassInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpDeleteClassV6(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, uint16_t* ClassName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpDeleteClassV6(ServerIpAddress, ReservedMustBeZero, ClassName);
        return win32_impl_result;
    }
    inline uint32_t DhcpEnumClassesV6(uint16_t* ServerIpAddress, uint32_t ReservedMustBeZero, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLASS_INFO_ARRAY_V6** ClassInfoArray, uint32_t* nRead, uint32_t* nTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpEnumClassesV6(ServerIpAddress, ReservedMustBeZero, ResumeHandle, PreferredMaximum, ClassInfoArray, nRead, nTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpSetSubnetDelayOffer(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint16_t TimeDelayInMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpSetSubnetDelayOffer(ServerIpAddress, SubnetAddress, TimeDelayInMilliseconds);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetSubnetDelayOffer(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint16_t* TimeDelayInMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetSubnetDelayOffer(ServerIpAddress, SubnetAddress, TimeDelayInMilliseconds);
        return win32_impl_result;
    }
    inline uint32_t DhcpGetMibInfoV5(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_MIB_INFO_V5** MibInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpGetMibInfoV5(ServerIpAddress, MibInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpAddSecurityGroup(uint16_t* pServer)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpAddSecurityGroup(pServer);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetOptionValue(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* PolicyName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE** OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetOptionValue(ServerIpAddress, Flags, OptionID, PolicyName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4SetOptionValue(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionId, uint16_t* PolicyName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_DATA* OptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4SetOptionValue(ServerIpAddress, Flags, OptionId, PolicyName, VendorName, ScopeInfo, OptionValue);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4SetOptionValues(uint16_t* ServerIpAddress, uint32_t Flags, uint16_t* PolicyName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_OPTION_VALUE_ARRAY* OptionValues)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4SetOptionValues(ServerIpAddress, Flags, PolicyName, VendorName, ScopeInfo, OptionValues);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4RemoveOptionValue(uint16_t* ServerIpAddress, uint32_t Flags, uint32_t OptionID, uint16_t* PolicyName, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4RemoveOptionValue(ServerIpAddress, Flags, OptionID, PolicyName, VendorName, ScopeInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetAllOptionValues(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_OPTION_SCOPE_INFO* ScopeInfo, Windows::Win32::Dhcp::DHCP_ALL_OPTION_VALUES_PB** Values)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetAllOptionValues(ServerIpAddress, Flags, ScopeInfo, Values);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverCreateRelationship(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP* pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverCreateRelationship(ServerIpAddress, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverSetRelationship(uint16_t* ServerIpAddress, uint32_t Flags, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP* pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverSetRelationship(ServerIpAddress, Flags, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverDeleteRelationship(uint16_t* ServerIpAddress, uint16_t* pRelationshipName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverDeleteRelationship(ServerIpAddress, pRelationshipName);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetRelationship(uint16_t* ServerIpAddress, uint16_t* pRelationshipName, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP** pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetRelationship(ServerIpAddress, pRelationshipName, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverEnumRelationship(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP_ARRAY** pRelationship, uint32_t* RelationshipRead, uint32_t* RelationshipTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverEnumRelationship(ServerIpAddress, ResumeHandle, PreferredMaximum, pRelationship, RelationshipRead, RelationshipTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverAddScopeToRelationship(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP* pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverAddScopeToRelationship(ServerIpAddress, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverDeleteScopeFromRelationship(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP* pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverDeleteScopeFromRelationship(ServerIpAddress, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetScopeRelationship(uint16_t* ServerIpAddress, uint32_t ScopeId, Windows::Win32::Dhcp::DHCP_FAILOVER_RELATIONSHIP** pRelationship)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetScopeRelationship(ServerIpAddress, ScopeId, pRelationship);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetScopeStatistics(uint16_t* ServerIpAddress, uint32_t ScopeId, Windows::Win32::Dhcp::DHCP_FAILOVER_STATISTICS** pStats)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetScopeStatistics(ServerIpAddress, ScopeId, pStats);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCPV4_FAILOVER_CLIENT_INFO** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetClientInfo(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetSystemTime(uint16_t* ServerIpAddress, uint32_t* pTime, uint32_t* pMaxAllowedDeltaTime)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetSystemTime(ServerIpAddress, pTime, pMaxAllowedDeltaTime);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverGetAddressStatus(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* pStatus)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverGetAddressStatus(ServerIpAddress, SubnetAddress, pStatus);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4FailoverTriggerAddrAllocation(uint16_t* ServerIpAddress, uint16_t* pFailRelName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4FailoverTriggerAddrAllocation(ServerIpAddress, pFailRelName);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprCreateV4Policy(uint16_t* PolicyName, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t Subnet, uint32_t ProcessingOrder, Windows::Win32::Dhcp::DHCP_POL_LOGIC_OPER RootOperator, uint16_t* Description, Windows::Win32::SystemServices::BOOL Enabled, Windows::Win32::Dhcp::DHCP_POLICY** Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprCreateV4Policy(PolicyName, fGlobalPolicy, Subnet, ProcessingOrder, RootOperator, Description, Enabled, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprCreateV4PolicyEx(uint16_t* PolicyName, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t Subnet, uint32_t ProcessingOrder, Windows::Win32::Dhcp::DHCP_POL_LOGIC_OPER RootOperator, uint16_t* Description, Windows::Win32::SystemServices::BOOL Enabled, Windows::Win32::Dhcp::DHCP_POLICY_EX** Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprCreateV4PolicyEx(PolicyName, fGlobalPolicy, Subnet, ProcessingOrder, RootOperator, Description, Enabled, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprAddV4PolicyExpr(Windows::Win32::Dhcp::DHCP_POLICY* Policy, uint32_t ParentExpr, Windows::Win32::Dhcp::DHCP_POL_LOGIC_OPER Operator, uint32_t* ExprIndex)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprAddV4PolicyExpr(Policy, ParentExpr, Operator, ExprIndex);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprAddV4PolicyCondition(Windows::Win32::Dhcp::DHCP_POLICY* Policy, uint32_t ParentExpr, Windows::Win32::Dhcp::DHCP_POL_ATTR_TYPE Type, uint32_t OptionID, uint32_t SubOptionID, uint16_t* VendorName, Windows::Win32::Dhcp::DHCP_POL_COMPARATOR Operator, uint8_t* Value, uint32_t ValueLength, uint32_t* ConditionIndex)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprAddV4PolicyCondition(Policy, ParentExpr, Type, OptionID, SubOptionID, VendorName, Operator, Value, ValueLength, ConditionIndex);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprAddV4PolicyRange(Windows::Win32::Dhcp::DHCP_POLICY* Policy, Windows::Win32::Dhcp::DHCP_IP_RANGE* Range)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprAddV4PolicyRange(Policy, Range);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprResetV4PolicyExpr(Windows::Win32::Dhcp::DHCP_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprResetV4PolicyExpr(Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprModifyV4PolicyExpr(Windows::Win32::Dhcp::DHCP_POLICY* Policy, Windows::Win32::Dhcp::DHCP_POL_LOGIC_OPER Operator)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprModifyV4PolicyExpr(Policy, Operator);
        return win32_impl_result;
    }
    inline void DhcpHlprFreeV4Policy(Windows::Win32::Dhcp::DHCP_POLICY* Policy)
    {
        WIN32_IMPL_DhcpHlprFreeV4Policy(Policy);
    }
    inline void DhcpHlprFreeV4PolicyArray(Windows::Win32::Dhcp::DHCP_POLICY_ARRAY* PolicyArray)
    {
        WIN32_IMPL_DhcpHlprFreeV4PolicyArray(PolicyArray);
    }
    inline void DhcpHlprFreeV4PolicyEx(Windows::Win32::Dhcp::DHCP_POLICY_EX* PolicyEx)
    {
        WIN32_IMPL_DhcpHlprFreeV4PolicyEx(PolicyEx);
    }
    inline void DhcpHlprFreeV4PolicyExArray(Windows::Win32::Dhcp::DHCP_POLICY_EX_ARRAY* PolicyExArray)
    {
        WIN32_IMPL_DhcpHlprFreeV4PolicyExArray(PolicyExArray);
    }
    inline void DhcpHlprFreeV4DhcpProperty(Windows::Win32::Dhcp::DHCP_PROPERTY* Property)
    {
        WIN32_IMPL_DhcpHlprFreeV4DhcpProperty(Property);
    }
    inline void DhcpHlprFreeV4DhcpPropertyArray(Windows::Win32::Dhcp::DHCP_PROPERTY_ARRAY* PropertyArray)
    {
        WIN32_IMPL_DhcpHlprFreeV4DhcpPropertyArray(PropertyArray);
    }
    inline Windows::Win32::Dhcp::DHCP_PROPERTY* DhcpHlprFindV4DhcpProperty(Windows::Win32::Dhcp::DHCP_PROPERTY_ARRAY* PropertyArray, Windows::Win32::Dhcp::DHCP_PROPERTY_ID ID, Windows::Win32::Dhcp::DHCP_PROPERTY_TYPE Type)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprFindV4DhcpProperty(PropertyArray, ID, Type);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DhcpHlprIsV4PolicySingleUC(Windows::Win32::Dhcp::DHCP_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprIsV4PolicySingleUC(Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4QueryPolicyEnforcement(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, int32_t* Enabled)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4QueryPolicyEnforcement(ServerIpAddress, fGlobalPolicy, SubnetAddress, Enabled);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4SetPolicyEnforcement(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, Windows::Win32::SystemServices::BOOL Enable)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4SetPolicyEnforcement(ServerIpAddress, fGlobalPolicy, SubnetAddress, Enable);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DhcpHlprIsV4PolicyWellFormed(Windows::Win32::Dhcp::DHCP_POLICY* pPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprIsV4PolicyWellFormed(pPolicy);
        return win32_impl_result;
    }
    inline uint32_t DhcpHlprIsV4PolicyValid(Windows::Win32::Dhcp::DHCP_POLICY* pPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpHlprIsV4PolicyValid(pPolicy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4CreatePolicy(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_POLICY* pPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4CreatePolicy(ServerIpAddress, pPolicy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetPolicy(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_POLICY** Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetPolicy(ServerIpAddress, fGlobalPolicy, SubnetAddress, PolicyName, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4SetPolicy(uint16_t* ServerIpAddress, uint32_t FieldsModified, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4SetPolicy(ServerIpAddress, FieldsModified, fGlobalPolicy, SubnetAddress, PolicyName, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4DeletePolicy(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, uint16_t* PolicyName)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4DeletePolicy(ServerIpAddress, fGlobalPolicy, SubnetAddress, PolicyName);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4EnumPolicies(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::SystemServices::BOOL fGlobalPolicy, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_POLICY_ARRAY** EnumInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4EnumPolicies(ServerIpAddress, ResumeHandle, PreferredMaximum, fGlobalPolicy, SubnetAddress, EnumInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4AddPolicyRange(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_IP_RANGE* Range)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4AddPolicyRange(ServerIpAddress, SubnetAddress, PolicyName, Range);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4RemovePolicyRange(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_IP_RANGE* Range)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4RemovePolicyRange(ServerIpAddress, SubnetAddress, PolicyName, Range);
        return win32_impl_result;
    }
    inline uint32_t DhcpV6SetStatelessStoreParams(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fServerLevel, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, uint32_t FieldModified, Windows::Win32::Dhcp::DHCPV6_STATELESS_PARAMS* Params)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV6SetStatelessStoreParams(ServerIpAddress, fServerLevel, SubnetAddress, FieldModified, Params);
        return win32_impl_result;
    }
    inline uint32_t DhcpV6GetStatelessStoreParams(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL fServerLevel, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS SubnetAddress, Windows::Win32::Dhcp::DHCPV6_STATELESS_PARAMS** Params)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV6GetStatelessStoreParams(ServerIpAddress, fServerLevel, SubnetAddress, Params);
        return win32_impl_result;
    }
    inline uint32_t DhcpV6GetStatelessStatistics(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCPV6_STATELESS_STATS** StatelessStats)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV6GetStatelessStatistics(ServerIpAddress, StatelessStats);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4CreateClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_PB* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4CreateClientInfo(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4EnumSubnetClients(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_PB_ARRAY** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4EnumSubnetClients(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_PB** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetClientInfo(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV6CreateClientInfo(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_V6* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV6CreateClientInfo(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetFreeIPAddress(uint16_t* ServerIpAddress, uint32_t ScopeId, uint32_t StartIP, uint32_t EndIP, uint32_t NumFreeAddrReq, Windows::Win32::Dhcp::DHCP_IP_ARRAY** IPAddrList)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetFreeIPAddress(ServerIpAddress, ScopeId, StartIP, EndIP, NumFreeAddrReq, IPAddrList);
        return win32_impl_result;
    }
    inline uint32_t DhcpV6GetFreeIPAddress(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS ScopeId, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS StartIP, Windows::Win32::Dhcp::DHCP_IPV6_ADDRESS EndIP, uint32_t NumFreeAddrReq, Windows::Win32::Dhcp::DHCPV6_IP_ARRAY** IPAddrList)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV6GetFreeIPAddress(ServerIpAddress, ScopeId, StartIP, EndIP, NumFreeAddrReq, IPAddrList);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4CreateClientInfoEx(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_EX* ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4CreateClientInfoEx(ServerIpAddress, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4EnumSubnetClientsEx(uint16_t* ServerIpAddress, uint32_t SubnetAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_EX_ARRAY** ClientInfo, uint32_t* ClientsRead, uint32_t* ClientsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4EnumSubnetClientsEx(ServerIpAddress, SubnetAddress, ResumeHandle, PreferredMaximum, ClientInfo, ClientsRead, ClientsTotal);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetClientInfoEx(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_SEARCH_INFO* SearchInfo, Windows::Win32::Dhcp::DHCP_CLIENT_INFO_EX** ClientInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetClientInfoEx(ServerIpAddress, SearchInfo, ClientInfo);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4CreatePolicyEx(uint16_t* ServerIpAddress, Windows::Win32::Dhcp::DHCP_POLICY_EX* PolicyEx)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4CreatePolicyEx(ServerIpAddress, PolicyEx);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4GetPolicyEx(uint16_t* ServerIpAddress, Windows::Win32::SystemServices::BOOL GlobalPolicy, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_POLICY_EX** Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4GetPolicyEx(ServerIpAddress, GlobalPolicy, SubnetAddress, PolicyName, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4SetPolicyEx(uint16_t* ServerIpAddress, uint32_t FieldsModified, Windows::Win32::SystemServices::BOOL GlobalPolicy, uint32_t SubnetAddress, uint16_t* PolicyName, Windows::Win32::Dhcp::DHCP_POLICY_EX* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4SetPolicyEx(ServerIpAddress, FieldsModified, GlobalPolicy, SubnetAddress, PolicyName, Policy);
        return win32_impl_result;
    }
    inline uint32_t DhcpV4EnumPoliciesEx(uint16_t* ServerIpAddress, uint32_t* ResumeHandle, uint32_t PreferredMaximum, Windows::Win32::SystemServices::BOOL GlobalPolicy, uint32_t SubnetAddress, Windows::Win32::Dhcp::DHCP_POLICY_EX_ARRAY** EnumInfo, uint32_t* ElementsRead, uint32_t* ElementsTotal)
    {
        auto win32_impl_result = WIN32_IMPL_DhcpV4EnumPoliciesEx(ServerIpAddress, ResumeHandle, PreferredMaximum, GlobalPolicy, SubnetAddress, EnumInfo, ElementsRead, ElementsTotal);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
