// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_DirectML_H
#define WIN32_Windows_Win32_DirectML_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.DirectML.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::DirectML
{
#pragma region methods
    inline int32_t DMLCreateDevice(Windows::Win32::Direct3D12::ID3D12Device* d3d12Device, Windows::Win32::DirectML::DML_CREATE_DEVICE_FLAGS flags, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_DMLCreateDevice(d3d12Device, flags, riid, ppv);
        return win32_impl_result;
    }
    inline int32_t DMLCreateDevice1(Windows::Win32::Direct3D12::ID3D12Device* d3d12Device, Windows::Win32::DirectML::DML_CREATE_DEVICE_FLAGS flags, Windows::Win32::DirectML::DML_FEATURE_LEVEL minimumFeatureLevel, ::win32::guid* riid, void** ppv)
    {
        auto win32_impl_result = WIN32_IMPL_DMLCreateDevice1(d3d12Device, flags, minimumFeatureLevel, riid, ppv);
        return win32_impl_result;
    }

    inline constexpr uint32_t DML_TENSOR_DIMENSION_COUNT_MAX = 0x5;
    inline constexpr uint32_t DML_TEMPORARY_BUFFER_ALIGNMENT = 0x100;
    inline constexpr uint32_t DML_PERSISTENT_BUFFER_ALIGNMENT = 0x100;
    inline constexpr uint32_t DML_MINIMUM_BUFFER_TENSOR_ALIGNMENT = 0x10;
#pragma endregion methods

}
#endif
