// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_DirectShow_H
#define WIN32_Windows_Win32_DirectShow_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.DirectShow.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::DirectShow
{
#pragma region methods
    inline uint32_t AMGetErrorTextA(int32_t hr, int8_t* pbuffer, uint32_t MaxLen)
    {
        auto win32_impl_result = WIN32_IMPL_AMGetErrorTextA(hr, pbuffer, MaxLen);
        return win32_impl_result;
    }
    inline uint32_t AMGetErrorTextW(int32_t hr, uint16_t* pbuffer, uint32_t MaxLen)
    {
        auto win32_impl_result = WIN32_IMPL_AMGetErrorTextW(hr, pbuffer, MaxLen);
        return win32_impl_result;
    }
    inline int32_t DMORegister(uint16_t* szName, ::win32::guid* clsidDMO, ::win32::guid* guidCategory, uint32_t dwFlags, uint32_t cInTypes, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pInTypes, uint32_t cOutTypes, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pOutTypes)
    {
        auto win32_impl_result = WIN32_IMPL_DMORegister(szName, clsidDMO, guidCategory, dwFlags, cInTypes, pInTypes, cOutTypes, pOutTypes);
        return win32_impl_result;
    }
    inline int32_t DMOUnregister(::win32::guid* clsidDMO, ::win32::guid* guidCategory)
    {
        auto win32_impl_result = WIN32_IMPL_DMOUnregister(clsidDMO, guidCategory);
        return win32_impl_result;
    }
    inline int32_t DMOEnum(::win32::guid* guidCategory, uint32_t dwFlags, uint32_t cInTypes, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pInTypes, uint32_t cOutTypes, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pOutTypes, Windows::Win32::DirectShow::IEnumDMO** ppEnum)
    {
        auto win32_impl_result = WIN32_IMPL_DMOEnum(guidCategory, dwFlags, cInTypes, pInTypes, cOutTypes, pOutTypes, ppEnum);
        return win32_impl_result;
    }
    inline int32_t DMOGetTypes(::win32::guid* clsidDMO, uint32_t ulInputTypesRequested, uint32_t* pulInputTypesSupplied, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pInputTypes, uint32_t ulOutputTypesRequested, uint32_t* pulOutputTypesSupplied, Windows::Win32::DirectShow::DMO_PARTIAL_MEDIATYPE* pOutputTypes)
    {
        auto win32_impl_result = WIN32_IMPL_DMOGetTypes(clsidDMO, ulInputTypesRequested, pulInputTypesSupplied, pInputTypes, ulOutputTypesRequested, pulOutputTypesSupplied, pOutputTypes);
        return win32_impl_result;
    }
    inline int32_t DMOGetName(::win32::guid* clsidDMO, uint16_t* szName)
    {
        auto win32_impl_result = WIN32_IMPL_DMOGetName(clsidDMO, szName);
        return win32_impl_result;
    }
    inline int32_t MoInitMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmt, uint32_t cbFormat)
    {
        auto win32_impl_result = WIN32_IMPL_MoInitMediaType(pmt, cbFormat);
        return win32_impl_result;
    }
    inline int32_t MoFreeMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmt)
    {
        auto win32_impl_result = WIN32_IMPL_MoFreeMediaType(pmt);
        return win32_impl_result;
    }
    inline int32_t MoCopyMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmtDest, Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmtSrc)
    {
        auto win32_impl_result = WIN32_IMPL_MoCopyMediaType(pmtDest, pmtSrc);
        return win32_impl_result;
    }
    inline int32_t MoCreateMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE** ppmt, uint32_t cbFormat)
    {
        auto win32_impl_result = WIN32_IMPL_MoCreateMediaType(ppmt, cbFormat);
        return win32_impl_result;
    }
    inline int32_t MoDeleteMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmt)
    {
        auto win32_impl_result = WIN32_IMPL_MoDeleteMediaType(pmt);
        return win32_impl_result;
    }
    inline int32_t MoDuplicateMediaType(Windows::Win32::DirectShow::AM_MEDIA_TYPE** ppmtDest, Windows::Win32::DirectShow::AM_MEDIA_TYPE* pmtSrc)
    {
        auto win32_impl_result = WIN32_IMPL_MoDuplicateMediaType(ppmtDest, pmtSrc);
        return win32_impl_result;
    }

    inline constexpr wchar_t const* g_wszExcludeScriptStreamDeliverySynchronization = L"ExcludeScriptStreamDeliverySynchronization";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingDuration = L"Duration";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingBitrate = L"Bitrate";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingSeekable = L"Seekable";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingStridable = L"Stridable";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingBroadcast = L"Broadcast";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingProtected = L"Is_Protected";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingTrusted = L"Is_Trusted";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingSignature_Name = L"Signature_Name";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasAudio = L"HasAudio";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasImage = L"HasImage";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasScript = L"HasScript";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasVideo = L"HasVideo";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingCurrentBitrate = L"CurrentBitrate";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingOptimalBitrate = L"OptimalBitrate";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasAttachedImages = L"HasAttachedImages";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingSkipBackward = L"Can_Skip_Backward";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingSkipForward = L"Can_Skip_Forward";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNumberOfFrames = L"NumberOfFrames";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingFileSize = L"FileSize";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasArbitraryDataStream = L"HasArbitraryDataStream";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingHasFileTransferStream = L"HasFileTransferStream";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingTitle = L"Title";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAuthor = L"Author";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingDescription = L"Description";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingRating = L"Rating";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingCopyright = L"Copyright";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingUse_DRM = L"Use_DRM";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingDRM_Flags = L"DRM_Flags";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingDRM_Level = L"DRM_Level";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAlbumTitle = L"WM/AlbumTitle";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingTrack = L"WM/Track";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingPromotionURL = L"WM/PromotionURL";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAlbumCoverURL = L"WM/AlbumCoverURL";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingGenre = L"WM/Genre";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingYear = L"WM/Year";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingGenreID = L"WM/GenreID";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingMCDI = L"WM/MCDI";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingComposer = L"WM/Composer";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingLyrics = L"WM/Lyrics";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingTrackNumber = L"WM/TrackNumber";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingToolName = L"WM/ToolName";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingToolVersion = L"WM/ToolVersion";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingIsVBR = L"IsVBR";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAlbumArtist = L"WM/AlbumArtist";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingBannerImageType = L"BannerImageType";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingBannerImageData = L"BannerImageData";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingBannerImageURL = L"BannerImageURL";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingCopyrightURL = L"CopyrightURL";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAspectRatioX = L"AspectRatioX";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingAspectRatioY = L"AspectRatioY";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNSCName = L"NSC_Name";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNSCAddress = L"NSC_Address";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNSCPhone = L"NSC_Phone";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNSCEmail = L"NSC_Email";
    inline constexpr wchar_t const* g_wszStreamBufferRecordingNSCDescription = L"NSC_Description";
    inline constexpr int32_t STREAMBUFFER_EC_TIMEHOLE = 806;
    inline constexpr int32_t STREAMBUFFER_EC_STALE_DATA_READ = 807;
    inline constexpr int32_t STREAMBUFFER_EC_STALE_FILE_DELETED = 808;
    inline constexpr int32_t STREAMBUFFER_EC_CONTENT_BECOMING_STALE = 809;
    inline constexpr int32_t STREAMBUFFER_EC_WRITE_FAILURE = 810;
    inline constexpr int32_t STREAMBUFFER_EC_WRITE_FAILURE_CLEAR = 811;
    inline constexpr int32_t STREAMBUFFER_EC_READ_FAILURE = 812;
    inline constexpr int32_t STREAMBUFFER_EC_RATE_CHANGED = 813;
    inline constexpr int32_t STREAMBUFFER_EC_PRIMARY_AUDIO = 814;
    inline constexpr int32_t STREAMBUFFER_EC_RATE_CHANGING_FOR_SETPOSITIONS = 815;
    inline constexpr int32_t STREAMBUFFER_EC_SETPOSITIONS_EVENTS_DONE = 816;
#pragma endregion methods

}
#endif
