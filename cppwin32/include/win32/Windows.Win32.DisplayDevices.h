// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_DisplayDevices_H
#define WIN32_Windows_Win32_DisplayDevices_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.DisplayDevices.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::DisplayDevices
{
#pragma region methods
    inline void* BRUSHOBJ_pvAllocRbrush(Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, uint32_t cj)
    {
        auto win32_impl_result = WIN32_IMPL_BRUSHOBJ_pvAllocRbrush(pbo, cj);
        return win32_impl_result;
    }
    inline void* BRUSHOBJ_pvGetRbrush(Windows::Win32::DisplayDevices::BRUSHOBJ* pbo)
    {
        auto win32_impl_result = WIN32_IMPL_BRUSHOBJ_pvGetRbrush(pbo);
        return win32_impl_result;
    }
    inline uint32_t BRUSHOBJ_ulGetBrushColor(Windows::Win32::DisplayDevices::BRUSHOBJ* pbo)
    {
        auto win32_impl_result = WIN32_IMPL_BRUSHOBJ_ulGetBrushColor(pbo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE BRUSHOBJ_hGetColorTransform(Windows::Win32::DisplayDevices::BRUSHOBJ* pbo)
    {
        auto win32_impl_result = WIN32_IMPL_BRUSHOBJ_hGetColorTransform(pbo);
        return win32_impl_result;
    }
    inline uint32_t CLIPOBJ_cEnumStart(Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::SystemServices::BOOL bAll, uint32_t iType, uint32_t iDirection, uint32_t cLimit)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPOBJ_cEnumStart(pco, bAll, iType, iDirection, cLimit);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CLIPOBJ_bEnum(Windows::Win32::DisplayDevices::CLIPOBJ* pco, uint32_t cj, uint32_t* pul)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPOBJ_bEnum(pco, cj, pul);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::PATHOBJ* CLIPOBJ_ppoGetPath(Windows::Win32::DisplayDevices::CLIPOBJ* pco)
    {
        auto win32_impl_result = WIN32_IMPL_CLIPOBJ_ppoGetPath(pco);
        return win32_impl_result;
    }
    inline uint32_t FONTOBJ_cGetAllGlyphHandles(Windows::Win32::DisplayDevices::FONTOBJ* pfo, uint32_t* phg)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_cGetAllGlyphHandles(pfo, phg);
        return win32_impl_result;
    }
    inline void FONTOBJ_vGetInfo(Windows::Win32::DisplayDevices::FONTOBJ* pfo, uint32_t cjSize, Windows::Win32::DisplayDevices::FONTINFO* pfi)
    {
        WIN32_IMPL_FONTOBJ_vGetInfo(pfo, cjSize, pfi);
    }
    inline uint32_t FONTOBJ_cGetGlyphs(Windows::Win32::DisplayDevices::FONTOBJ* pfo, uint32_t iMode, uint32_t cGlyph, uint32_t* phg, void** ppvGlyph)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_cGetGlyphs(pfo, iMode, cGlyph, phg, ppvGlyph);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::XFORMOBJ* FONTOBJ_pxoGetXform(Windows::Win32::DisplayDevices::FONTOBJ* pfo)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_pxoGetXform(pfo);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::IFIMETRICS* FONTOBJ_pifi(Windows::Win32::DisplayDevices::FONTOBJ* pfo)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_pifi(pfo);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::FD_GLYPHSET* FONTOBJ_pfdg(Windows::Win32::DisplayDevices::FONTOBJ* pfo)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_pfdg(pfo);
        return win32_impl_result;
    }
    inline void* FONTOBJ_pvTrueTypeFontFile(Windows::Win32::DisplayDevices::FONTOBJ* pfo, uint32_t* pcjFile)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_pvTrueTypeFontFile(pfo, pcjFile);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::FD_GLYPHATTR* FONTOBJ_pQueryGlyphAttrs(Windows::Win32::DisplayDevices::FONTOBJ* pfo, uint32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_FONTOBJ_pQueryGlyphAttrs(pfo, iMode);
        return win32_impl_result;
    }
    inline void PATHOBJ_vEnumStart(Windows::Win32::DisplayDevices::PATHOBJ* ppo)
    {
        WIN32_IMPL_PATHOBJ_vEnumStart(ppo);
    }
    inline Windows::Win32::SystemServices::BOOL PATHOBJ_bEnum(Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::DisplayDevices::PATHDATA* ppd)
    {
        auto win32_impl_result = WIN32_IMPL_PATHOBJ_bEnum(ppo, ppd);
        return win32_impl_result;
    }
    inline void PATHOBJ_vEnumStartClipLines(Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::LINEATTRS* pla)
    {
        WIN32_IMPL_PATHOBJ_vEnumStartClipLines(ppo, pco, pso, pla);
    }
    inline Windows::Win32::SystemServices::BOOL PATHOBJ_bEnumClipLines(Windows::Win32::DisplayDevices::PATHOBJ* ppo, uint32_t cb, Windows::Win32::DisplayDevices::CLIPLINE* pcl)
    {
        auto win32_impl_result = WIN32_IMPL_PATHOBJ_bEnumClipLines(ppo, cb, pcl);
        return win32_impl_result;
    }
    inline void PATHOBJ_vGetBounds(Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::SystemServices::RECTFX* prectfx)
    {
        WIN32_IMPL_PATHOBJ_vGetBounds(ppo, prectfx);
    }
    inline void STROBJ_vEnumStart(Windows::Win32::DisplayDevices::STROBJ* pstro)
    {
        WIN32_IMPL_STROBJ_vEnumStart(pstro);
    }
    inline Windows::Win32::SystemServices::BOOL STROBJ_bEnum(Windows::Win32::DisplayDevices::STROBJ* pstro, uint32_t* pc, Windows::Win32::DisplayDevices::GLYPHPOS** ppgpos)
    {
        auto win32_impl_result = WIN32_IMPL_STROBJ_bEnum(pstro, pc, ppgpos);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL STROBJ_bEnumPositionsOnly(Windows::Win32::DisplayDevices::STROBJ* pstro, uint32_t* pc, Windows::Win32::DisplayDevices::GLYPHPOS** ppgpos)
    {
        auto win32_impl_result = WIN32_IMPL_STROBJ_bEnumPositionsOnly(pstro, pc, ppgpos);
        return win32_impl_result;
    }
    inline uint32_t STROBJ_dwGetCodePage(Windows::Win32::DisplayDevices::STROBJ* pstro)
    {
        auto win32_impl_result = WIN32_IMPL_STROBJ_dwGetCodePage(pstro);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL STROBJ_bGetAdvanceWidths(Windows::Win32::DisplayDevices::STROBJ* pso, uint32_t iFirst, uint32_t c, Windows::Win32::SystemServices::POINTQF* pptqD)
    {
        auto win32_impl_result = WIN32_IMPL_STROBJ_bGetAdvanceWidths(pso, iFirst, c, pptqD);
        return win32_impl_result;
    }
    inline uint32_t XFORMOBJ_iGetXform(Windows::Win32::SystemServices::XFORMOBJ* pxo, Windows::Win32::DisplayDevices::XFORML* pxform)
    {
        auto win32_impl_result = WIN32_IMPL_XFORMOBJ_iGetXform(pxo, pxform);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL XFORMOBJ_bApplyXform(Windows::Win32::SystemServices::XFORMOBJ* pxo, uint32_t iMode, uint32_t cPoints, void* pvIn, void* pvOut)
    {
        auto win32_impl_result = WIN32_IMPL_XFORMOBJ_bApplyXform(pxo, iMode, cPoints, pvIn, pvOut);
        return win32_impl_result;
    }
    inline uint32_t XLATEOBJ_iXlate(Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, uint32_t iColor)
    {
        auto win32_impl_result = WIN32_IMPL_XLATEOBJ_iXlate(pxlo, iColor);
        return win32_impl_result;
    }
    inline uint32_t* XLATEOBJ_piVector(Windows::Win32::DisplayDevices::XLATEOBJ* pxlo)
    {
        auto win32_impl_result = WIN32_IMPL_XLATEOBJ_piVector(pxlo);
        return win32_impl_result;
    }
    inline uint32_t XLATEOBJ_cGetPalette(Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, uint32_t iPal, uint32_t cPal, uint32_t* pPal)
    {
        auto win32_impl_result = WIN32_IMPL_XLATEOBJ_cGetPalette(pxlo, iPal, cPal, pPal);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE XLATEOBJ_hGetColorTransform(Windows::Win32::DisplayDevices::XLATEOBJ* pxlo)
    {
        auto win32_impl_result = WIN32_IMPL_XLATEOBJ_hGetColorTransform(pxlo);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP EngCreateBitmap(Windows::Win32::DisplayDevices::SIZE sizl, int32_t lWidth, uint32_t iFormat, uint32_t fl, void* pvBits)
    {
        auto win32_impl_result = WIN32_IMPL_EngCreateBitmap(sizl, lWidth, iFormat, fl, pvBits);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HSURF__* EngCreateDeviceSurface(Windows::Win32::SystemServices::DHSURF__* dhsurf, Windows::Win32::DisplayDevices::SIZE sizl, uint32_t iFormatCompat)
    {
        auto win32_impl_result = WIN32_IMPL_EngCreateDeviceSurface(dhsurf, sizl, iFormatCompat);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP EngCreateDeviceBitmap(Windows::Win32::SystemServices::DHSURF__* dhsurf, Windows::Win32::DisplayDevices::SIZE sizl, uint32_t iFormatCompat)
    {
        auto win32_impl_result = WIN32_IMPL_EngCreateDeviceBitmap(dhsurf, sizl, iFormatCompat);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngDeleteSurface(Windows::Win32::SystemServices::HSURF__* hsurf)
    {
        auto win32_impl_result = WIN32_IMPL_EngDeleteSurface(hsurf);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::SURFOBJ* EngLockSurface(Windows::Win32::SystemServices::HSURF__* hsurf)
    {
        auto win32_impl_result = WIN32_IMPL_EngLockSurface(hsurf);
        return win32_impl_result;
    }
    inline void EngUnlockSurface(Windows::Win32::DisplayDevices::SURFOBJ* pso)
    {
        WIN32_IMPL_EngUnlockSurface(pso);
    }
    inline Windows::Win32::SystemServices::BOOL EngEraseSurface(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::RECTL* prcl, uint32_t iColor)
    {
        auto win32_impl_result = WIN32_IMPL_EngEraseSurface(pso, prcl, iColor);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngAssociateSurface(Windows::Win32::SystemServices::HSURF__* hsurf, Windows::Win32::SystemServices::HDEV__* hdev, uint32_t flHooks)
    {
        auto win32_impl_result = WIN32_IMPL_EngAssociateSurface(hsurf, hdev, flHooks);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngMarkBandingSurface(Windows::Win32::SystemServices::HSURF__* hsurf)
    {
        auto win32_impl_result = WIN32_IMPL_EngMarkBandingSurface(hsurf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngCheckAbort(Windows::Win32::DisplayDevices::SURFOBJ* pso)
    {
        auto win32_impl_result = WIN32_IMPL_EngCheckAbort(pso);
        return win32_impl_result;
    }
    inline void EngDeletePath(Windows::Win32::DisplayDevices::PATHOBJ* ppo)
    {
        WIN32_IMPL_EngDeletePath(ppo);
    }
    inline Windows::Win32::Gdi::HPALETTE EngCreatePalette(uint32_t iMode, uint32_t cColors, uint32_t* pulColors, uint32_t flRed, uint32_t flGreen, uint32_t flBlue)
    {
        auto win32_impl_result = WIN32_IMPL_EngCreatePalette(iMode, cColors, pulColors, flRed, flGreen, flBlue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngDeletePalette(Windows::Win32::Gdi::HPALETTE hpal)
    {
        auto win32_impl_result = WIN32_IMPL_EngDeletePalette(hpal);
        return win32_impl_result;
    }
    inline Windows::Win32::DisplayDevices::CLIPOBJ* EngCreateClip()
    {
        auto win32_impl_result = WIN32_IMPL_EngCreateClip();
        return win32_impl_result;
    }
    inline void EngDeleteClip(Windows::Win32::DisplayDevices::CLIPOBJ* pco)
    {
        WIN32_IMPL_EngDeleteClip(pco);
    }
    inline Windows::Win32::SystemServices::BOOL EngBitBlt(Windows::Win32::DisplayDevices::SURFOBJ* psoTrg, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::SURFOBJ* psoMask, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::DisplayDevices::RECTL* prclTrg, Windows::Win32::DisplayDevices::POINTL* pptlSrc, Windows::Win32::DisplayDevices::POINTL* pptlMask, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, Windows::Win32::DisplayDevices::POINTL* pptlBrush, uint32_t rop4)
    {
        auto win32_impl_result = WIN32_IMPL_EngBitBlt(psoTrg, psoSrc, psoMask, pco, pxlo, prclTrg, pptlSrc, pptlMask, pbo, pptlBrush, rop4);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngLineTo(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, int32_t x1, int32_t y1, int32_t x2, int32_t y2, Windows::Win32::DisplayDevices::RECTL* prclBounds, uint32_t mix)
    {
        auto win32_impl_result = WIN32_IMPL_EngLineTo(pso, pco, pbo, x1, y1, x2, y2, prclBounds, mix);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngStretchBlt(Windows::Win32::DisplayDevices::SURFOBJ* psoDest, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::SURFOBJ* psoMask, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::Gdi::COLORADJUSTMENT* pca, Windows::Win32::DisplayDevices::POINTL* pptlHTOrg, Windows::Win32::DisplayDevices::RECTL* prclDest, Windows::Win32::DisplayDevices::RECTL* prclSrc, Windows::Win32::DisplayDevices::POINTL* pptlMask, uint32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_EngStretchBlt(psoDest, psoSrc, psoMask, pco, pxlo, pca, pptlHTOrg, prclDest, prclSrc, pptlMask, iMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngStretchBltROP(Windows::Win32::DisplayDevices::SURFOBJ* psoDest, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::SURFOBJ* psoMask, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::Gdi::COLORADJUSTMENT* pca, Windows::Win32::DisplayDevices::POINTL* pptlHTOrg, Windows::Win32::DisplayDevices::RECTL* prclDest, Windows::Win32::DisplayDevices::RECTL* prclSrc, Windows::Win32::DisplayDevices::POINTL* pptlMask, uint32_t iMode, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, uint32_t rop4)
    {
        auto win32_impl_result = WIN32_IMPL_EngStretchBltROP(psoDest, psoSrc, psoMask, pco, pxlo, pca, pptlHTOrg, prclDest, prclSrc, pptlMask, iMode, pbo, rop4);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngAlphaBlend(Windows::Win32::DisplayDevices::SURFOBJ* psoDest, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::DisplayDevices::RECTL* prclDest, Windows::Win32::DisplayDevices::RECTL* prclSrc, Windows::Win32::DisplayDevices::BLENDOBJ* pBlendObj)
    {
        auto win32_impl_result = WIN32_IMPL_EngAlphaBlend(psoDest, psoSrc, pco, pxlo, prclDest, prclSrc, pBlendObj);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngGradientFill(Windows::Win32::DisplayDevices::SURFOBJ* psoDest, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::Gdi::TRIVERTEX* pVertex, uint32_t nVertex, void* pMesh, uint32_t nMesh, Windows::Win32::DisplayDevices::RECTL* prclExtents, Windows::Win32::DisplayDevices::POINTL* pptlDitherOrg, uint32_t ulMode)
    {
        auto win32_impl_result = WIN32_IMPL_EngGradientFill(psoDest, pco, pxlo, pVertex, nVertex, pMesh, nMesh, prclExtents, pptlDitherOrg, ulMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngTransparentBlt(Windows::Win32::DisplayDevices::SURFOBJ* psoDst, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::DisplayDevices::RECTL* prclDst, Windows::Win32::DisplayDevices::RECTL* prclSrc, uint32_t TransColor, uint32_t bCalledFromBitBlt)
    {
        auto win32_impl_result = WIN32_IMPL_EngTransparentBlt(psoDst, psoSrc, pco, pxlo, prclDst, prclSrc, TransColor, bCalledFromBitBlt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngTextOut(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::STROBJ* pstro, Windows::Win32::DisplayDevices::FONTOBJ* pfo, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::RECTL* prclExtra, Windows::Win32::DisplayDevices::RECTL* prclOpaque, Windows::Win32::DisplayDevices::BRUSHOBJ* pboFore, Windows::Win32::DisplayDevices::BRUSHOBJ* pboOpaque, Windows::Win32::DisplayDevices::POINTL* pptlOrg, uint32_t mix)
    {
        auto win32_impl_result = WIN32_IMPL_EngTextOut(pso, pstro, pfo, pco, prclExtra, prclOpaque, pboFore, pboOpaque, pptlOrg, mix);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngStrokePath(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::SystemServices::XFORMOBJ* pxo, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, Windows::Win32::DisplayDevices::POINTL* pptlBrushOrg, Windows::Win32::DisplayDevices::LINEATTRS* plineattrs, uint32_t mix)
    {
        auto win32_impl_result = WIN32_IMPL_EngStrokePath(pso, ppo, pco, pxo, pbo, pptlBrushOrg, plineattrs, mix);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngFillPath(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, Windows::Win32::DisplayDevices::POINTL* pptlBrushOrg, uint32_t mix, uint32_t flOptions)
    {
        auto win32_impl_result = WIN32_IMPL_EngFillPath(pso, ppo, pco, pbo, pptlBrushOrg, mix, flOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngStrokeAndFillPath(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::PATHOBJ* ppo, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::SystemServices::XFORMOBJ* pxo, Windows::Win32::DisplayDevices::BRUSHOBJ* pboStroke, Windows::Win32::DisplayDevices::LINEATTRS* plineattrs, Windows::Win32::DisplayDevices::BRUSHOBJ* pboFill, Windows::Win32::DisplayDevices::POINTL* pptlBrushOrg, uint32_t mixFill, uint32_t flOptions)
    {
        auto win32_impl_result = WIN32_IMPL_EngStrokeAndFillPath(pso, ppo, pco, pxo, pboStroke, plineattrs, pboFill, pptlBrushOrg, mixFill, flOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngPaint(Windows::Win32::DisplayDevices::SURFOBJ* pso, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::BRUSHOBJ* pbo, Windows::Win32::DisplayDevices::POINTL* pptlBrushOrg, uint32_t mix)
    {
        auto win32_impl_result = WIN32_IMPL_EngPaint(pso, pco, pbo, pptlBrushOrg, mix);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngCopyBits(Windows::Win32::DisplayDevices::SURFOBJ* psoDest, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::DisplayDevices::RECTL* prclDest, Windows::Win32::DisplayDevices::POINTL* pptlSrc)
    {
        auto win32_impl_result = WIN32_IMPL_EngCopyBits(psoDest, psoSrc, pco, pxlo, prclDest, pptlSrc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngPlgBlt(Windows::Win32::DisplayDevices::SURFOBJ* psoTrg, Windows::Win32::DisplayDevices::SURFOBJ* psoSrc, Windows::Win32::DisplayDevices::SURFOBJ* psoMsk, Windows::Win32::DisplayDevices::CLIPOBJ* pco, Windows::Win32::DisplayDevices::XLATEOBJ* pxlo, Windows::Win32::Gdi::COLORADJUSTMENT* pca, Windows::Win32::DisplayDevices::POINTL* pptlBrushOrg, Windows::Win32::SystemServices::POINTFIX* pptfx, Windows::Win32::DisplayDevices::RECTL* prcl, Windows::Win32::DisplayDevices::POINTL* pptl, uint32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_EngPlgBlt(psoTrg, psoSrc, psoMsk, pco, pxlo, pca, pptlBrushOrg, pptfx, prcl, pptl, iMode);
        return win32_impl_result;
    }
    inline int32_t HT_Get8BPPFormatPalette(Windows::Win32::Direct2D::PALETTEENTRY* pPaletteEntry, uint16_t RedGamma, uint16_t GreenGamma, uint16_t BlueGamma)
    {
        auto win32_impl_result = WIN32_IMPL_HT_Get8BPPFormatPalette(pPaletteEntry, RedGamma, GreenGamma, BlueGamma);
        return win32_impl_result;
    }
    inline int32_t HT_Get8BPPMaskPalette(Windows::Win32::Direct2D::PALETTEENTRY* pPaletteEntry, Windows::Win32::SystemServices::BOOL Use8BPPMaskPal, uint8_t CMYMask, uint16_t RedGamma, uint16_t GreenGamma, uint16_t BlueGamma)
    {
        auto win32_impl_result = WIN32_IMPL_HT_Get8BPPMaskPalette(pPaletteEntry, Use8BPPMaskPal, CMYMask, RedGamma, GreenGamma, BlueGamma);
        return win32_impl_result;
    }
    inline uint16_t* EngGetPrinterDataFileName(Windows::Win32::SystemServices::HDEV__* hdev)
    {
        auto win32_impl_result = WIN32_IMPL_EngGetPrinterDataFileName(hdev);
        return win32_impl_result;
    }
    inline uint16_t* EngGetDriverName(Windows::Win32::SystemServices::HDEV__* hdev)
    {
        auto win32_impl_result = WIN32_IMPL_EngGetDriverName(hdev);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE EngLoadModule(uint16_t* pwsz)
    {
        auto win32_impl_result = WIN32_IMPL_EngLoadModule(pwsz);
        return win32_impl_result;
    }
    inline void* EngFindResource(Windows::Win32::SystemServices::HANDLE h, int32_t iName, int32_t iType, uint32_t* pulSize)
    {
        auto win32_impl_result = WIN32_IMPL_EngFindResource(h, iName, iType, pulSize);
        return win32_impl_result;
    }
    inline void EngFreeModule(Windows::Win32::SystemServices::HANDLE h)
    {
        WIN32_IMPL_EngFreeModule(h);
    }
    inline Windows::Win32::SystemServices::HSEMAPHORE__* EngCreateSemaphore()
    {
        auto win32_impl_result = WIN32_IMPL_EngCreateSemaphore();
        return win32_impl_result;
    }
    inline void EngAcquireSemaphore(Windows::Win32::SystemServices::HSEMAPHORE__* hsem)
    {
        WIN32_IMPL_EngAcquireSemaphore(hsem);
    }
    inline void EngReleaseSemaphore(Windows::Win32::SystemServices::HSEMAPHORE__* hsem)
    {
        WIN32_IMPL_EngReleaseSemaphore(hsem);
    }
    inline void EngDeleteSemaphore(Windows::Win32::SystemServices::HSEMAPHORE__* hsem)
    {
        WIN32_IMPL_EngDeleteSemaphore(hsem);
    }
    inline void EngMultiByteToUnicodeN(uint16_t* UnicodeString, uint32_t MaxBytesInUnicodeString, uint32_t* BytesInUnicodeString, int8_t* MultiByteString, uint32_t BytesInMultiByteString)
    {
        WIN32_IMPL_EngMultiByteToUnicodeN(UnicodeString, MaxBytesInUnicodeString, BytesInUnicodeString, MultiByteString, BytesInMultiByteString);
    }
    inline void EngUnicodeToMultiByteN(int8_t* MultiByteString, uint32_t MaxBytesInMultiByteString, uint32_t* BytesInMultiByteString, uint16_t* UnicodeString, uint32_t BytesInUnicodeString)
    {
        WIN32_IMPL_EngUnicodeToMultiByteN(MultiByteString, MaxBytesInMultiByteString, BytesInMultiByteString, UnicodeString, BytesInUnicodeString);
    }
    inline void EngQueryLocalTime(Windows::Win32::DisplayDevices::ENG_TIME_FIELDS* param0)
    {
        WIN32_IMPL_EngQueryLocalTime(param0);
    }
    inline Windows::Win32::DisplayDevices::FD_GLYPHSET* EngComputeGlyphSet(int32_t nCodePage, int32_t nFirstChar, int32_t cChars)
    {
        auto win32_impl_result = WIN32_IMPL_EngComputeGlyphSet(nCodePage, nFirstChar, cChars);
        return win32_impl_result;
    }
    inline int32_t EngMultiByteToWideChar(uint32_t CodePage, uint16_t* WideCharString, int32_t BytesInWideCharString, int8_t* MultiByteString, int32_t BytesInMultiByteString)
    {
        auto win32_impl_result = WIN32_IMPL_EngMultiByteToWideChar(CodePage, WideCharString, BytesInWideCharString, MultiByteString, BytesInMultiByteString);
        return win32_impl_result;
    }
    inline int32_t EngWideCharToMultiByte(uint32_t CodePage, uint16_t* WideCharString, int32_t BytesInWideCharString, int8_t* MultiByteString, int32_t BytesInMultiByteString)
    {
        auto win32_impl_result = WIN32_IMPL_EngWideCharToMultiByte(CodePage, WideCharString, BytesInWideCharString, MultiByteString, BytesInMultiByteString);
        return win32_impl_result;
    }
    inline void EngGetCurrentCodePage(uint16_t* OemCodePage, uint16_t* AnsiCodePage)
    {
        WIN32_IMPL_EngGetCurrentCodePage(OemCodePage, AnsiCodePage);
    }
    inline int32_t GetDisplayConfigBufferSizes(uint32_t flags, uint32_t* numPathArrayElements, uint32_t* numModeInfoArrayElements)
    {
        auto win32_impl_result = WIN32_IMPL_GetDisplayConfigBufferSizes(flags, numPathArrayElements, numModeInfoArrayElements);
        return win32_impl_result;
    }
    inline int32_t SetDisplayConfig(uint32_t numPathArrayElements, Windows::Win32::DisplayDevices::DISPLAYCONFIG_PATH_INFO* pathArray, uint32_t numModeInfoArrayElements, Windows::Win32::DisplayDevices::DISPLAYCONFIG_MODE_INFO* modeInfoArray, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetDisplayConfig(numPathArrayElements, pathArray, numModeInfoArrayElements, modeInfoArray, flags);
        return win32_impl_result;
    }
    inline int32_t QueryDisplayConfig(uint32_t flags, uint32_t* numPathArrayElements, Windows::Win32::DisplayDevices::DISPLAYCONFIG_PATH_INFO* pathArray, uint32_t* numModeInfoArrayElements, Windows::Win32::DisplayDevices::DISPLAYCONFIG_MODE_INFO* modeInfoArray, Windows::Win32::DisplayDevices::DISPLAYCONFIG_TOPOLOGY_ID* currentTopologyId)
    {
        auto win32_impl_result = WIN32_IMPL_QueryDisplayConfig(flags, numPathArrayElements, pathArray, numModeInfoArrayElements, modeInfoArray, currentTopologyId);
        return win32_impl_result;
    }
    inline int32_t DisplayConfigGetDeviceInfo(Windows::Win32::DisplayDevices::DISPLAYCONFIG_DEVICE_INFO_HEADER* requestPacket)
    {
        auto win32_impl_result = WIN32_IMPL_DisplayConfigGetDeviceInfo(requestPacket);
        return win32_impl_result;
    }
    inline int32_t DisplayConfigSetDeviceInfo(Windows::Win32::DisplayDevices::DISPLAYCONFIG_DEVICE_INFO_HEADER* setPacket)
    {
        auto win32_impl_result = WIN32_IMPL_DisplayConfigSetDeviceInfo(setPacket);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
