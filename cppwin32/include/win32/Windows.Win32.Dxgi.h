// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Dxgi_H
#define WIN32_Windows_Win32_Dxgi_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Dxgi.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Dxgi
{
#pragma region methods
    inline int32_t CreateDXGIFactory(::win32::guid* riid, void** ppFactory)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDXGIFactory(riid, ppFactory);
        return win32_impl_result;
    }
    inline int32_t CreateDXGIFactory1(::win32::guid* riid, void** ppFactory)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDXGIFactory1(riid, ppFactory);
        return win32_impl_result;
    }
    inline int32_t CreateDXGIFactory2(uint32_t Flags, ::win32::guid* riid, void** ppFactory)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDXGIFactory2(Flags, riid, ppFactory);
        return win32_impl_result;
    }
    inline int32_t DXGIGetDebugInterface1(uint32_t Flags, ::win32::guid* riid, void** pDebug)
    {
        auto win32_impl_result = WIN32_IMPL_DXGIGetDebugInterface1(Flags, riid, pDebug);
        return win32_impl_result;
    }
    inline int32_t DXGIDeclareAdapterRemovalSupport()
    {
        auto win32_impl_result = WIN32_IMPL_DXGIDeclareAdapterRemovalSupport();
        return win32_impl_result;
    }

    inline constexpr uint32_t DXGI_USAGE_SHADER_INPUT = 0x10;
    inline constexpr uint32_t DXGI_USAGE_RENDER_TARGET_OUTPUT = 0x20;
    inline constexpr uint32_t DXGI_USAGE_BACK_BUFFER = 0x40;
    inline constexpr uint32_t DXGI_USAGE_SHARED = 0x80;
    inline constexpr uint32_t DXGI_USAGE_READ_ONLY = 0x100;
    inline constexpr uint32_t DXGI_USAGE_DISCARD_ON_PRESENT = 0x200;
    inline constexpr uint32_t DXGI_USAGE_UNORDERED_ACCESS = 0x400;
    inline constexpr uint32_t DXGI_RESOURCE_PRIORITY_MINIMUM = 0x28000000;
    inline constexpr uint32_t DXGI_RESOURCE_PRIORITY_LOW = 0x50000000;
    inline constexpr uint32_t DXGI_RESOURCE_PRIORITY_NORMAL = 0x78000000;
    inline constexpr uint32_t DXGI_RESOURCE_PRIORITY_HIGH = 0xa0000000;
    inline constexpr uint32_t DXGI_RESOURCE_PRIORITY_MAXIMUM = 0xc8000000;
    inline constexpr uint32_t DXGI_MAP_READ = 0x1;
    inline constexpr uint32_t DXGI_MAP_WRITE = 0x2;
    inline constexpr uint32_t DXGI_MAP_DISCARD = 0x4;
    inline constexpr uint32_t DXGI_ENUM_MODES_INTERLACED = 0x1;
    inline constexpr uint32_t DXGI_ENUM_MODES_SCALING = 0x2;
    inline constexpr uint32_t DXGI_MAX_SWAP_CHAIN_BUFFERS = 0x10;
    inline constexpr uint32_t DXGI_PRESENT_TEST = 0x1;
    inline constexpr uint32_t DXGI_PRESENT_DO_NOT_SEQUENCE = 0x2;
    inline constexpr uint32_t DXGI_PRESENT_RESTART = 0x4;
    inline constexpr uint32_t DXGI_PRESENT_DO_NOT_WAIT = 0x8;
    inline constexpr uint32_t DXGI_PRESENT_STEREO_PREFER_RIGHT = 0x10;
    inline constexpr uint32_t DXGI_PRESENT_STEREO_TEMPORARY_MONO = 0x20;
    inline constexpr uint32_t DXGI_PRESENT_RESTRICT_TO_OUTPUT = 0x40;
    inline constexpr uint32_t DXGI_PRESENT_USE_DURATION = 0x100;
    inline constexpr uint32_t DXGI_PRESENT_ALLOW_TEARING = 0x200;
    inline constexpr uint32_t DXGI_MWA_NO_WINDOW_CHANGES = 0x1;
    inline constexpr uint32_t DXGI_MWA_NO_ALT_ENTER = 0x2;
    inline constexpr uint32_t DXGI_MWA_NO_PRINT_SCREEN = 0x4;
    inline constexpr uint32_t DXGI_MWA_VALID = 0x7;
#pragma endregion methods

}
#endif
