// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Etw_H
#define WIN32_Windows_Win32_Etw_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Etw.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Etw
{
#pragma region methods
    inline uint32_t StartTraceW(uint64_t* TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_StartTraceW(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t StartTraceA(uint64_t* TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_StartTraceA(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t StopTraceW(uint64_t TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_StopTraceW(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t StopTraceA(uint64_t TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_StopTraceA(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t QueryTraceW(uint64_t TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_QueryTraceW(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t QueryTraceA(uint64_t TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_QueryTraceA(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t UpdateTraceW(uint64_t TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_UpdateTraceW(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t UpdateTraceA(uint64_t TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_UpdateTraceA(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t FlushTraceW(uint64_t TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_FlushTraceW(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t FlushTraceA(uint64_t TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties)
    {
        auto win32_impl_result = WIN32_IMPL_FlushTraceA(TraceHandle, InstanceName, Properties);
        return win32_impl_result;
    }
    inline uint32_t ControlTraceW(uint64_t TraceHandle, uint16_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties, uint32_t ControlCode)
    {
        auto win32_impl_result = WIN32_IMPL_ControlTraceW(TraceHandle, InstanceName, Properties, ControlCode);
        return win32_impl_result;
    }
    inline uint32_t ControlTraceA(uint64_t TraceHandle, int8_t* InstanceName, Windows::Win32::Etw::EVENT_TRACE_PROPERTIES* Properties, uint32_t ControlCode)
    {
        auto win32_impl_result = WIN32_IMPL_ControlTraceA(TraceHandle, InstanceName, Properties, ControlCode);
        return win32_impl_result;
    }
    inline uint32_t QueryAllTracesW(Windows::Win32::Etw::EVENT_TRACE_PROPERTIES** PropertyArray, uint32_t PropertyArrayCount, uint32_t* LoggerCount)
    {
        auto win32_impl_result = WIN32_IMPL_QueryAllTracesW(PropertyArray, PropertyArrayCount, LoggerCount);
        return win32_impl_result;
    }
    inline uint32_t QueryAllTracesA(Windows::Win32::Etw::EVENT_TRACE_PROPERTIES** PropertyArray, uint32_t PropertyArrayCount, uint32_t* LoggerCount)
    {
        auto win32_impl_result = WIN32_IMPL_QueryAllTracesA(PropertyArray, PropertyArrayCount, LoggerCount);
        return win32_impl_result;
    }
    inline uint32_t EnableTrace(uint32_t Enable, uint32_t EnableFlag, uint32_t EnableLevel, ::win32::guid* ControlGuid, uint64_t TraceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_EnableTrace(Enable, EnableFlag, EnableLevel, ControlGuid, TraceHandle);
        return win32_impl_result;
    }
    inline uint32_t EnableTraceEx(::win32::guid* ProviderId, ::win32::guid* SourceId, uint64_t TraceHandle, uint32_t IsEnabled, uint8_t Level, uint64_t MatchAnyKeyword, uint64_t MatchAllKeyword, uint32_t EnableProperty, Windows::Win32::Etw::EVENT_FILTER_DESCRIPTOR* EnableFilterDesc)
    {
        auto win32_impl_result = WIN32_IMPL_EnableTraceEx(ProviderId, SourceId, TraceHandle, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, EnableFilterDesc);
        return win32_impl_result;
    }
    inline uint32_t EnableTraceEx2(uint64_t TraceHandle, ::win32::guid* ProviderId, uint32_t ControlCode, uint8_t Level, uint64_t MatchAnyKeyword, uint64_t MatchAllKeyword, uint32_t Timeout, Windows::Win32::Etw::ENABLE_TRACE_PARAMETERS* EnableParameters)
    {
        auto win32_impl_result = WIN32_IMPL_EnableTraceEx2(TraceHandle, ProviderId, ControlCode, Level, MatchAnyKeyword, MatchAllKeyword, Timeout, EnableParameters);
        return win32_impl_result;
    }
    inline uint32_t EnumerateTraceGuidsEx(Windows::Win32::Etw::TRACE_QUERY_INFO_CLASS TraceQueryInfoClass, void* InBuffer, uint32_t InBufferSize, void* OutBuffer, uint32_t OutBufferSize, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_EnumerateTraceGuidsEx(TraceQueryInfoClass, InBuffer, InBufferSize, OutBuffer, OutBufferSize, ReturnLength);
        return win32_impl_result;
    }
    inline uint32_t TraceSetInformation(uint64_t SessionHandle, Windows::Win32::Etw::TRACE_QUERY_INFO_CLASS InformationClass, void* TraceInformation, uint32_t InformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_TraceSetInformation(SessionHandle, InformationClass, TraceInformation, InformationLength);
        return win32_impl_result;
    }
    inline uint32_t TraceQueryInformation(uint64_t SessionHandle, Windows::Win32::Etw::TRACE_QUERY_INFO_CLASS InformationClass, void* TraceInformation, uint32_t InformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_TraceQueryInformation(SessionHandle, InformationClass, TraceInformation, InformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline uint32_t CreateTraceInstanceId(Windows::Win32::SystemServices::HANDLE RegHandle, Windows::Win32::Etw::EVENT_INSTANCE_INFO* InstInfo)
    {
        auto win32_impl_result = WIN32_IMPL_CreateTraceInstanceId(RegHandle, InstInfo);
        return win32_impl_result;
    }
    inline uint32_t TraceEvent(uint64_t TraceHandle, Windows::Win32::Etw::EVENT_TRACE_HEADER* EventTrace)
    {
        auto win32_impl_result = WIN32_IMPL_TraceEvent(TraceHandle, EventTrace);
        return win32_impl_result;
    }
    inline uint32_t TraceEventInstance(uint64_t TraceHandle, Windows::Win32::Etw::EVENT_INSTANCE_HEADER* EventTrace, Windows::Win32::Etw::EVENT_INSTANCE_INFO* InstInfo, Windows::Win32::Etw::EVENT_INSTANCE_INFO* ParentInstInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TraceEventInstance(TraceHandle, EventTrace, InstInfo, ParentInstInfo);
        return win32_impl_result;
    }
    inline uint32_t RegisterTraceGuidsW(Windows::Win32::Etw::WMIDPREQUEST* RequestAddress, void* RequestContext, ::win32::guid* ControlGuid, uint32_t GuidCount, Windows::Win32::Etw::TRACE_GUID_REGISTRATION* TraceGuidReg, uint16_t* MofImagePath, uint16_t* MofResourceName, uint64_t* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t RegisterTraceGuidsA(Windows::Win32::Etw::WMIDPREQUEST* RequestAddress, void* RequestContext, ::win32::guid* ControlGuid, uint32_t GuidCount, Windows::Win32::Etw::TRACE_GUID_REGISTRATION* TraceGuidReg, int8_t* MofImagePath, int8_t* MofResourceName, uint64_t* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t EnumerateTraceGuids(Windows::Win32::Etw::TRACE_GUID_PROPERTIES** GuidPropertiesArray, uint32_t PropertyArrayCount, uint32_t* GuidCount)
    {
        auto win32_impl_result = WIN32_IMPL_EnumerateTraceGuids(GuidPropertiesArray, PropertyArrayCount, GuidCount);
        return win32_impl_result;
    }
    inline uint32_t UnregisterTraceGuids(uint64_t RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterTraceGuids(RegistrationHandle);
        return win32_impl_result;
    }
    inline uint64_t GetTraceLoggerHandle(void* Buffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetTraceLoggerHandle(Buffer);
        return win32_impl_result;
    }
    inline uint8_t GetTraceEnableLevel(uint64_t TraceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_GetTraceEnableLevel(TraceHandle);
        return win32_impl_result;
    }
    inline uint32_t GetTraceEnableFlags(uint64_t TraceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_GetTraceEnableFlags(TraceHandle);
        return win32_impl_result;
    }
    inline uint64_t OpenTraceW(Windows::Win32::Etw::EVENT_TRACE_LOGFILEW* Logfile)
    {
        auto win32_impl_result = WIN32_IMPL_OpenTraceW(Logfile);
        return win32_impl_result;
    }
    inline uint32_t ProcessTrace(uint64_t* HandleArray, uint32_t HandleCount, Windows::Win32::WindowsProgramming::FILETIME* StartTime, Windows::Win32::WindowsProgramming::FILETIME* EndTime)
    {
        auto win32_impl_result = WIN32_IMPL_ProcessTrace(HandleArray, HandleCount, StartTime, EndTime);
        return win32_impl_result;
    }
    inline uint32_t CloseTrace(uint64_t TraceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_CloseTrace(TraceHandle);
        return win32_impl_result;
    }
    inline uint32_t QueryTraceProcessingHandle(uint64_t ProcessingHandle, Windows::Win32::Etw::ETW_PROCESS_HANDLE_INFO_TYPE InformationClass, void* InBuffer, uint32_t InBufferSize, void* OutBuffer, uint32_t OutBufferSize, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_QueryTraceProcessingHandle(ProcessingHandle, InformationClass, InBuffer, InBufferSize, OutBuffer, OutBufferSize, ReturnLength);
        return win32_impl_result;
    }
    inline uint64_t OpenTraceA(Windows::Win32::Etw::EVENT_TRACE_LOGFILEA* Logfile)
    {
        auto win32_impl_result = WIN32_IMPL_OpenTraceA(Logfile);
        return win32_impl_result;
    }
    inline uint32_t SetTraceCallback(::win32::guid* pGuid, Windows::Win32::Etw::PEVENT_CALLBACK* EventCallback)
    {
        auto win32_impl_result = WIN32_IMPL_SetTraceCallback(pGuid, EventCallback);
        return win32_impl_result;
    }
    inline uint32_t RemoveTraceCallback(::win32::guid* pGuid)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveTraceCallback(pGuid);
        return win32_impl_result;
    }
    inline uint32_t TraceMessage(uint64_t LoggerHandle, uint32_t MessageFlags, ::win32::guid* MessageGuid, uint16_t MessageNumber)
    {
        auto win32_impl_result = WIN32_IMPL_TraceMessage(LoggerHandle, MessageFlags, MessageGuid, MessageNumber);
        return win32_impl_result;
    }
    inline uint32_t TraceMessageVa(uint64_t LoggerHandle, uint32_t MessageFlags, ::win32::guid* MessageGuid, uint16_t MessageNumber, int8_t* MessageArgList)
    {
        auto win32_impl_result = WIN32_IMPL_TraceMessageVa(LoggerHandle, MessageFlags, MessageGuid, MessageNumber, MessageArgList);
        return win32_impl_result;
    }
    inline uint32_t EventRegister(::win32::guid* ProviderId, Windows::Win32::Etw::PENABLECALLBACK* EnableCallback, void* CallbackContext, uint64_t* RegHandle)
    {
        auto win32_impl_result = WIN32_IMPL_EventRegister(ProviderId, EnableCallback, CallbackContext, RegHandle);
        return win32_impl_result;
    }
    inline uint32_t EventUnregister(uint64_t RegHandle)
    {
        auto win32_impl_result = WIN32_IMPL_EventUnregister(RegHandle);
        return win32_impl_result;
    }
    inline uint32_t EventSetInformation(uint64_t RegHandle, Windows::Win32::Etw::EVENT_INFO_CLASS InformationClass, void* EventInformation, uint32_t InformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_EventSetInformation(RegHandle, InformationClass, EventInformation, InformationLength);
        return win32_impl_result;
    }
    inline uint8_t EventEnabled(uint64_t RegHandle, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_EventEnabled(RegHandle, EventDescriptor);
        return win32_impl_result;
    }
    inline uint8_t EventProviderEnabled(uint64_t RegHandle, uint8_t Level, uint64_t Keyword)
    {
        auto win32_impl_result = WIN32_IMPL_EventProviderEnabled(RegHandle, Level, Keyword);
        return win32_impl_result;
    }
    inline uint32_t EventWrite(uint64_t RegHandle, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor, uint32_t UserDataCount, Windows::Win32::Etw::EVENT_DATA_DESCRIPTOR* UserData)
    {
        auto win32_impl_result = WIN32_IMPL_EventWrite(RegHandle, EventDescriptor, UserDataCount, UserData);
        return win32_impl_result;
    }
    inline uint32_t EventWriteTransfer(uint64_t RegHandle, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor, ::win32::guid* ActivityId, ::win32::guid* RelatedActivityId, uint32_t UserDataCount, Windows::Win32::Etw::EVENT_DATA_DESCRIPTOR* UserData)
    {
        auto win32_impl_result = WIN32_IMPL_EventWriteTransfer(RegHandle, EventDescriptor, ActivityId, RelatedActivityId, UserDataCount, UserData);
        return win32_impl_result;
    }
    inline uint32_t EventWriteEx(uint64_t RegHandle, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor, uint64_t Filter, uint32_t Flags, ::win32::guid* ActivityId, ::win32::guid* RelatedActivityId, uint32_t UserDataCount, Windows::Win32::Etw::EVENT_DATA_DESCRIPTOR* UserData)
    {
        auto win32_impl_result = WIN32_IMPL_EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, ActivityId, RelatedActivityId, UserDataCount, UserData);
        return win32_impl_result;
    }
    inline uint32_t EventWriteString(uint64_t RegHandle, uint8_t Level, uint64_t Keyword, uint16_t* String)
    {
        auto win32_impl_result = WIN32_IMPL_EventWriteString(RegHandle, Level, Keyword, String);
        return win32_impl_result;
    }
    inline uint32_t EventActivityIdControl(uint32_t ControlCode, ::win32::guid* ActivityId)
    {
        auto win32_impl_result = WIN32_IMPL_EventActivityIdControl(ControlCode, ActivityId);
        return win32_impl_result;
    }
    inline uint32_t EventAccessControl(::win32::guid* Guid, uint32_t Operation, void* Sid, uint32_t Rights, uint8_t AllowOrDeny)
    {
        auto win32_impl_result = WIN32_IMPL_EventAccessControl(Guid, Operation, Sid, Rights, AllowOrDeny);
        return win32_impl_result;
    }
    inline uint32_t EventAccessQuery(::win32::guid* Guid, void* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_EventAccessQuery(Guid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t EventAccessRemove(::win32::guid* Guid)
    {
        auto win32_impl_result = WIN32_IMPL_EventAccessRemove(Guid);
        return win32_impl_result;
    }
    inline uint32_t TdhCreatePayloadFilter(::win32::guid* ProviderGuid, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor, uint8_t EventMatchANY, uint32_t PayloadPredicateCount, Windows::Win32::Etw::PAYLOAD_FILTER_PREDICATE* PayloadPredicates, void** PayloadFilter)
    {
        auto win32_impl_result = WIN32_IMPL_TdhCreatePayloadFilter(ProviderGuid, EventDescriptor, EventMatchANY, PayloadPredicateCount, PayloadPredicates, PayloadFilter);
        return win32_impl_result;
    }
    inline uint32_t TdhDeletePayloadFilter(void** PayloadFilter)
    {
        auto win32_impl_result = WIN32_IMPL_TdhDeletePayloadFilter(PayloadFilter);
        return win32_impl_result;
    }
    inline uint32_t TdhAggregatePayloadFilters(uint32_t PayloadFilterCount, void** PayloadFilterPtrs, uint8_t* EventMatchALLFlags, Windows::Win32::Etw::EVENT_FILTER_DESCRIPTOR* EventFilterDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_TdhAggregatePayloadFilters(PayloadFilterCount, PayloadFilterPtrs, EventMatchALLFlags, EventFilterDescriptor);
        return win32_impl_result;
    }
    inline uint32_t TdhCleanupPayloadEventFilterDescriptor(Windows::Win32::Etw::EVENT_FILTER_DESCRIPTOR* EventFilterDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_TdhCleanupPayloadEventFilterDescriptor(EventFilterDescriptor);
        return win32_impl_result;
    }
    inline uint32_t TdhGetEventInformation(Windows::Win32::Etw::EVENT_RECORD* Event, uint32_t TdhContextCount, Windows::Win32::Etw::TDH_CONTEXT* TdhContext, Windows::Win32::Etw::TRACE_EVENT_INFO* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetEventInformation(Event, TdhContextCount, TdhContext, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhGetEventMapInformation(Windows::Win32::Etw::EVENT_RECORD* pEvent, uint16_t* pMapName, Windows::Win32::Etw::EVENT_MAP_INFO* pBuffer, uint32_t* pBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetEventMapInformation(pEvent, pMapName, pBuffer, pBufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhGetPropertySize(Windows::Win32::Etw::EVENT_RECORD* pEvent, uint32_t TdhContextCount, Windows::Win32::Etw::TDH_CONTEXT* pTdhContext, uint32_t PropertyDataCount, Windows::Win32::Etw::PROPERTY_DATA_DESCRIPTOR* pPropertyData, uint32_t* pPropertySize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetPropertySize(pEvent, TdhContextCount, pTdhContext, PropertyDataCount, pPropertyData, pPropertySize);
        return win32_impl_result;
    }
    inline uint32_t TdhGetProperty(Windows::Win32::Etw::EVENT_RECORD* pEvent, uint32_t TdhContextCount, Windows::Win32::Etw::TDH_CONTEXT* pTdhContext, uint32_t PropertyDataCount, Windows::Win32::Etw::PROPERTY_DATA_DESCRIPTOR* pPropertyData, uint32_t BufferSize, uint8_t* pBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetProperty(pEvent, TdhContextCount, pTdhContext, PropertyDataCount, pPropertyData, BufferSize, pBuffer);
        return win32_impl_result;
    }
    inline uint32_t TdhEnumerateProviders(Windows::Win32::Etw::PROVIDER_ENUMERATION_INFO* pBuffer, uint32_t* pBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhEnumerateProviders(pBuffer, pBufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhQueryProviderFieldInformation(::win32::guid* pGuid, uint64_t EventFieldValue, Windows::Win32::Etw::EVENT_FIELD_TYPE EventFieldType, Windows::Win32::Etw::PROVIDER_FIELD_INFOARRAY* pBuffer, uint32_t* pBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhQueryProviderFieldInformation(pGuid, EventFieldValue, EventFieldType, pBuffer, pBufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhEnumerateProviderFieldInformation(::win32::guid* pGuid, Windows::Win32::Etw::EVENT_FIELD_TYPE EventFieldType, Windows::Win32::Etw::PROVIDER_FIELD_INFOARRAY* pBuffer, uint32_t* pBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhEnumerateProviderFieldInformation(pGuid, EventFieldType, pBuffer, pBufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhEnumerateProviderFilters(::win32::guid* Guid, uint32_t TdhContextCount, Windows::Win32::Etw::TDH_CONTEXT* TdhContext, uint32_t* FilterCount, Windows::Win32::Etw::PROVIDER_FILTER_INFO** Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhEnumerateProviderFilters(Guid, TdhContextCount, TdhContext, FilterCount, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhLoadManifest(uint16_t* Manifest)
    {
        auto win32_impl_result = WIN32_IMPL_TdhLoadManifest(Manifest);
        return win32_impl_result;
    }
    inline uint32_t TdhLoadManifestFromMemory(void* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_TdhLoadManifestFromMemory(pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t TdhUnloadManifest(uint16_t* Manifest)
    {
        auto win32_impl_result = WIN32_IMPL_TdhUnloadManifest(Manifest);
        return win32_impl_result;
    }
    inline uint32_t TdhUnloadManifestFromMemory(void* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_TdhUnloadManifestFromMemory(pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t TdhFormatProperty(Windows::Win32::Etw::TRACE_EVENT_INFO* EventInfo, Windows::Win32::Etw::EVENT_MAP_INFO* MapInfo, uint32_t PointerSize, uint16_t PropertyInType, uint16_t PropertyOutType, uint16_t PropertyLength, uint16_t UserDataLength, uint8_t* UserData, uint32_t* BufferSize, uint16_t* Buffer, uint16_t* UserDataConsumed)
    {
        auto win32_impl_result = WIN32_IMPL_TdhFormatProperty(EventInfo, MapInfo, PointerSize, PropertyInType, PropertyOutType, PropertyLength, UserDataLength, UserData, BufferSize, Buffer, UserDataConsumed);
        return win32_impl_result;
    }
    inline uint32_t TdhOpenDecodingHandle(Windows::Win32::Etw::TDH_HANDLE* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_TdhOpenDecodingHandle(Handle);
        return win32_impl_result;
    }
    inline uint32_t TdhSetDecodingParameter(Windows::Win32::Etw::TDH_HANDLE Handle, Windows::Win32::Etw::TDH_CONTEXT* TdhContext)
    {
        auto win32_impl_result = WIN32_IMPL_TdhSetDecodingParameter(Handle, TdhContext);
        return win32_impl_result;
    }
    inline uint32_t TdhGetDecodingParameter(Windows::Win32::Etw::TDH_HANDLE Handle, Windows::Win32::Etw::TDH_CONTEXT* TdhContext)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetDecodingParameter(Handle, TdhContext);
        return win32_impl_result;
    }
    inline uint32_t TdhGetWppProperty(Windows::Win32::Etw::TDH_HANDLE Handle, Windows::Win32::Etw::EVENT_RECORD* EventRecord, uint16_t* PropertyName, uint32_t* BufferSize, uint8_t* Buffer)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetWppProperty(Handle, EventRecord, PropertyName, BufferSize, Buffer);
        return win32_impl_result;
    }
    inline uint32_t TdhGetWppMessage(Windows::Win32::Etw::TDH_HANDLE Handle, Windows::Win32::Etw::EVENT_RECORD* EventRecord, uint32_t* BufferSize, uint8_t* Buffer)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetWppMessage(Handle, EventRecord, BufferSize, Buffer);
        return win32_impl_result;
    }
    inline uint32_t TdhCloseDecodingHandle(Windows::Win32::Etw::TDH_HANDLE Handle)
    {
        auto win32_impl_result = WIN32_IMPL_TdhCloseDecodingHandle(Handle);
        return win32_impl_result;
    }
    inline uint32_t TdhLoadManifestFromBinary(uint16_t* BinaryPath)
    {
        auto win32_impl_result = WIN32_IMPL_TdhLoadManifestFromBinary(BinaryPath);
        return win32_impl_result;
    }
    inline uint32_t TdhEnumerateManifestProviderEvents(::win32::guid* ProviderGuid, Windows::Win32::Etw::PROVIDER_EVENT_INFO* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhEnumerateManifestProviderEvents(ProviderGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t TdhGetManifestEventInformation(::win32::guid* ProviderGuid, Windows::Win32::Etw::EVENT_DESCRIPTOR* EventDescriptor, Windows::Win32::Etw::TRACE_EVENT_INFO* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_TdhGetManifestEventInformation(ProviderGuid, EventDescriptor, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline int32_t CveEventWrite(uint16_t* CveId, uint16_t* AdditionalDetails)
    {
        auto win32_impl_result = WIN32_IMPL_CveEventWrite(CveId, AdditionalDetails);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
