// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Gdi_H
#define WIN32_Windows_Win32_Gdi_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Gdi.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Gdi
{
#pragma region methods
    inline int32_t AddFontResourceA(int8_t* param0)
    {
        auto win32_impl_result = WIN32_IMPL_AddFontResourceA(param0);
        return win32_impl_result;
    }
    inline int32_t AddFontResourceW(uint16_t* param0)
    {
        auto win32_impl_result = WIN32_IMPL_AddFontResourceW(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AnimatePalette(Windows::Win32::Gdi::HPALETTE hPal, uint32_t iStartIndex, uint32_t cEntries, Windows::Win32::Direct2D::PALETTEENTRY* ppe)
    {
        auto win32_impl_result = WIN32_IMPL_AnimatePalette(hPal, iStartIndex, cEntries, ppe);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Arc(Windows::Win32::Gdi::HDC hdc, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3, int32_t x4, int32_t y4)
    {
        auto win32_impl_result = WIN32_IMPL_Arc(hdc, x1, y1, x2, y2, x3, y3, x4, y4);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BitBlt(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, int32_t cx, int32_t cy, Windows::Win32::Gdi::HDC hdcSrc, int32_t x1, int32_t y1, uint32_t rop)
    {
        auto win32_impl_result = WIN32_IMPL_BitBlt(hdc, x, y, cx, cy, hdcSrc, x1, y1, rop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CancelDC(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CancelDC(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Chord(Windows::Win32::Gdi::HDC hdc, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3, int32_t x4, int32_t y4)
    {
        auto win32_impl_result = WIN32_IMPL_Chord(hdc, x1, y1, x2, y2, x3, y3, x4, y4);
        return win32_impl_result;
    }
    inline intptr_t CloseMetaFile(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CloseMetaFile(hdc);
        return win32_impl_result;
    }
    inline int32_t CombineRgn(Windows::Win32::Gdi::HRGN hrgnDst, Windows::Win32::Gdi::HRGN hrgnSrc1, Windows::Win32::Gdi::HRGN hrgnSrc2, int32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_CombineRgn(hrgnDst, hrgnSrc1, hrgnSrc2, iMode);
        return win32_impl_result;
    }
    inline intptr_t CopyMetaFileA(intptr_t param0, int8_t* param1)
    {
        auto win32_impl_result = WIN32_IMPL_CopyMetaFileA(param0, param1);
        return win32_impl_result;
    }
    inline intptr_t CopyMetaFileW(intptr_t param0, uint16_t* param1)
    {
        auto win32_impl_result = WIN32_IMPL_CopyMetaFileW(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateBitmap(int32_t nWidth, int32_t nHeight, uint32_t nPlanes, uint32_t nBitCount, void* lpBits)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBitmap(nWidth, nHeight, nPlanes, nBitCount, lpBits);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateBitmapIndirect(Windows::Win32::Gdi::BITMAP* pbm)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBitmapIndirect(pbm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreateBrushIndirect(Windows::Win32::Gdi::LOGBRUSH* plbrush)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBrushIndirect(plbrush);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateCompatibleBitmap(Windows::Win32::Gdi::HDC hdc, int32_t cx, int32_t cy)
    {
        auto win32_impl_result = WIN32_IMPL_CreateCompatibleBitmap(hdc, cx, cy);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateDiscardableBitmap(Windows::Win32::Gdi::HDC hdc, int32_t cx, int32_t cy)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDiscardableBitmap(hdc, cx, cy);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC CreateCompatibleDC(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateCompatibleDC(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC CreateDCA(int8_t* pwszDriver, int8_t* pwszDevice, int8_t* pszPort, Windows::Win32::Xps::DEVMODEA* pdm)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDCA(pwszDriver, pwszDevice, pszPort, pdm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC CreateDCW(uint16_t* pwszDriver, uint16_t* pwszDevice, uint16_t* pszPort, Windows::Win32::DisplayDevices::DEVMODEW* pdm)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDCW(pwszDriver, pwszDevice, pszPort, pdm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateDIBitmap(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DirectShow::BITMAPINFOHEADER* pbmih, uint32_t flInit, void* pjBits, Windows::Win32::Gdi::BITMAPINFO* pbmi, uint32_t iUsage)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDIBitmap(hdc, pbmih, flInit, pjBits, pbmi, iUsage);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreateDIBPatternBrush(intptr_t h, uint32_t iUsage)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDIBPatternBrush(h, iUsage);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreateDIBPatternBrushPt(void* lpPackedDIB, uint32_t iUsage)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDIBPatternBrushPt(lpPackedDIB, iUsage);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreateEllipticRgn(int32_t x1, int32_t y1, int32_t x2, int32_t y2)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEllipticRgn(x1, y1, x2, y2);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreateEllipticRgnIndirect(Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEllipticRgnIndirect(lprect);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontIndirectA(Windows::Win32::Shell::LOGFONTA* lplf)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontIndirectA(lplf);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontIndirectW(Windows::Win32::Shell::LOGFONTW* lplf)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontIndirectW(lplf);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontA(int32_t cHeight, int32_t cWidth, int32_t cEscapement, int32_t cOrientation, int32_t cWeight, uint32_t bItalic, uint32_t bUnderline, uint32_t bStrikeOut, uint32_t iCharSet, uint32_t iOutPrecision, uint32_t iClipPrecision, uint32_t iQuality, uint32_t iPitchAndFamily, int8_t* pszFaceName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontA(cHeight, cWidth, cEscapement, cOrientation, cWeight, bItalic, bUnderline, bStrikeOut, iCharSet, iOutPrecision, iClipPrecision, iQuality, iPitchAndFamily, pszFaceName);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontW(int32_t cHeight, int32_t cWidth, int32_t cEscapement, int32_t cOrientation, int32_t cWeight, uint32_t bItalic, uint32_t bUnderline, uint32_t bStrikeOut, uint32_t iCharSet, uint32_t iOutPrecision, uint32_t iClipPrecision, uint32_t iQuality, uint32_t iPitchAndFamily, uint16_t* pszFaceName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontW(cHeight, cWidth, cEscapement, cOrientation, cWeight, bItalic, bUnderline, bStrikeOut, iCharSet, iOutPrecision, iClipPrecision, iQuality, iPitchAndFamily, pszFaceName);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreateHatchBrush(int32_t iHatch, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_CreateHatchBrush(iHatch, color);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC CreateICA(int8_t* pszDriver, int8_t* pszDevice, int8_t* pszPort, Windows::Win32::Xps::DEVMODEA* pdm)
    {
        auto win32_impl_result = WIN32_IMPL_CreateICA(pszDriver, pszDevice, pszPort, pdm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC CreateICW(uint16_t* pszDriver, uint16_t* pszDevice, uint16_t* pszPort, Windows::Win32::DisplayDevices::DEVMODEW* pdm)
    {
        auto win32_impl_result = WIN32_IMPL_CreateICW(pszDriver, pszDevice, pszPort, pdm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HdcMetdataFileHandle CreateMetaFileA(int8_t* pszFile)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMetaFileA(pszFile);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HdcMetdataFileHandle CreateMetaFileW(uint16_t* pszFile)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMetaFileW(pszFile);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPALETTE CreatePalette(Windows::Win32::Gdi::LOGPALETTE* plpal)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePalette(plpal);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPEN CreatePen(int32_t iStyle, int32_t cWidth, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePen(iStyle, cWidth, color);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPEN CreatePenIndirect(Windows::Win32::Gdi::LOGPEN* plpen)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePenIndirect(plpen);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreatePolyPolygonRgn(Windows::Win32::DisplayDevices::POINT* pptl, int32_t* pc, int32_t cPoly, int32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePolyPolygonRgn(pptl, pc, cPoly, iMode);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreatePatternBrush(Windows::Win32::Gdi::HBITMAP hbm)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePatternBrush(hbm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreateRectRgn(int32_t x1, int32_t y1, int32_t x2, int32_t y2)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRectRgn(x1, y1, x2, y2);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreateRectRgnIndirect(Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRectRgnIndirect(lprect);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreateRoundRectRgn(int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t w, int32_t h)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRoundRectRgn(x1, y1, x2, y2, w, h);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateScalableFontResourceA(uint32_t fdwHidden, int8_t* lpszFont, int8_t* lpszFile, int8_t* lpszPath)
    {
        auto win32_impl_result = WIN32_IMPL_CreateScalableFontResourceA(fdwHidden, lpszFont, lpszFile, lpszPath);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateScalableFontResourceW(uint32_t fdwHidden, uint16_t* lpszFont, uint16_t* lpszFile, uint16_t* lpszPath)
    {
        auto win32_impl_result = WIN32_IMPL_CreateScalableFontResourceW(fdwHidden, lpszFont, lpszFile, lpszPath);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH CreateSolidBrush(uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSolidBrush(color);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteDC(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteDC(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteMetaFile(intptr_t hmf)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteMetaFile(hmf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteObject(intptr_t ho)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteObject(ho);
        return win32_impl_result;
    }
    inline int32_t DrawEscape(Windows::Win32::Gdi::HDC hdc, int32_t iEscape, int32_t cjIn, int8_t* lpIn)
    {
        auto win32_impl_result = WIN32_IMPL_DrawEscape(hdc, iEscape, cjIn, lpIn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Ellipse(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom)
    {
        auto win32_impl_result = WIN32_IMPL_Ellipse(hdc, left, top, right, bottom);
        return win32_impl_result;
    }
    inline int32_t EnumFontFamiliesExA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Shell::LOGFONTA* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCA* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontFamiliesExA(hdc, lpLogfont, lpProc, lParam, dwFlags);
        return win32_impl_result;
    }
    inline int32_t EnumFontFamiliesExW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Shell::LOGFONTW* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCW* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontFamiliesExW(hdc, lpLogfont, lpProc, lParam, dwFlags);
        return win32_impl_result;
    }
    inline int32_t EnumFontFamiliesA(Windows::Win32::Gdi::HDC hdc, int8_t* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCA* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontFamiliesA(hdc, lpLogfont, lpProc, lParam);
        return win32_impl_result;
    }
    inline int32_t EnumFontFamiliesW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCW* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontFamiliesW(hdc, lpLogfont, lpProc, lParam);
        return win32_impl_result;
    }
    inline int32_t EnumFontsA(Windows::Win32::Gdi::HDC hdc, int8_t* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCA* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontsA(hdc, lpLogfont, lpProc, lParam);
        return win32_impl_result;
    }
    inline int32_t EnumFontsW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpLogfont, Windows::Win32::Gdi::FONTENUMPROCW* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFontsW(hdc, lpLogfont, lpProc, lParam);
        return win32_impl_result;
    }
    inline int32_t EnumObjects(Windows::Win32::Gdi::HDC hdc, int32_t nType, Windows::Win32::Gdi::GOBJENUMPROC* lpFunc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumObjects(hdc, nType, lpFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EqualRgn(Windows::Win32::Gdi::HRGN hrgn1, Windows::Win32::Gdi::HRGN hrgn2)
    {
        auto win32_impl_result = WIN32_IMPL_EqualRgn(hrgn1, hrgn2);
        return win32_impl_result;
    }
    inline int32_t ExcludeClipRect(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom)
    {
        auto win32_impl_result = WIN32_IMPL_ExcludeClipRect(hdc, left, top, right, bottom);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN ExtCreateRegion(Windows::Win32::Gdi::XFORM* lpx, uint32_t nCount, Windows::Win32::Gdi::RGNDATA* lpData)
    {
        auto win32_impl_result = WIN32_IMPL_ExtCreateRegion(lpx, nCount, lpData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ExtFloodFill(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t color, uint32_t type)
    {
        auto win32_impl_result = WIN32_IMPL_ExtFloodFill(hdc, x, y, color, type);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FillRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn, Windows::Win32::Gdi::HBRUSH hbr)
    {
        auto win32_impl_result = WIN32_IMPL_FillRgn(hdc, hrgn, hbr);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FloodFill(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_FloodFill(hdc, x, y, color);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FrameRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn, Windows::Win32::Gdi::HBRUSH hbr, int32_t w, int32_t h)
    {
        auto win32_impl_result = WIN32_IMPL_FrameRgn(hdc, hrgn, hbr, w, h);
        return win32_impl_result;
    }
    inline int32_t GetROP2(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetROP2(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetAspectRatioFilterEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::SIZE* lpsize)
    {
        auto win32_impl_result = WIN32_IMPL_GetAspectRatioFilterEx(hdc, lpsize);
        return win32_impl_result;
    }
    inline uint32_t GetBkColor(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetBkColor(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetDCBrushColor(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetDCBrushColor(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetDCPenColor(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetDCPenColor(hdc);
        return win32_impl_result;
    }
    inline int32_t GetBkMode(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetBkMode(hdc);
        return win32_impl_result;
    }
    inline int32_t GetBitmapBits(Windows::Win32::Gdi::HBITMAP hbit, int32_t cb, void* lpvBits)
    {
        auto win32_impl_result = WIN32_IMPL_GetBitmapBits(hbit, cb, lpvBits);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetBitmapDimensionEx(Windows::Win32::Gdi::HBITMAP hbit, Windows::Win32::DisplayDevices::SIZE* lpsize)
    {
        auto win32_impl_result = WIN32_IMPL_GetBitmapDimensionEx(hbit, lpsize);
        return win32_impl_result;
    }
    inline uint32_t GetBoundsRect(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprect, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetBoundsRect(hdc, lprect, flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetBrushOrgEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_GetBrushOrgEx(hdc, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidthA(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, int32_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidthA(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidthW(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, int32_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidthW(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidth32A(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, int32_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidth32A(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidth32W(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, int32_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidth32W(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidthFloatA(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, float* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidthFloatA(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidthFloatW(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, float* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidthFloatW(hdc, iFirst, iLast, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharABCWidthsA(Windows::Win32::Gdi::HDC hdc, uint32_t wFirst, uint32_t wLast, Windows::Win32::Gdi::ABC* lpABC)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharABCWidthsA(hdc, wFirst, wLast, lpABC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharABCWidthsW(Windows::Win32::Gdi::HDC hdc, uint32_t wFirst, uint32_t wLast, Windows::Win32::Gdi::ABC* lpABC)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharABCWidthsW(hdc, wFirst, wLast, lpABC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharABCWidthsFloatA(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, Windows::Win32::Gdi::ABCFLOAT* lpABC)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharABCWidthsFloatA(hdc, iFirst, iLast, lpABC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharABCWidthsFloatW(Windows::Win32::Gdi::HDC hdc, uint32_t iFirst, uint32_t iLast, Windows::Win32::Gdi::ABCFLOAT* lpABC)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharABCWidthsFloatW(hdc, iFirst, iLast, lpABC);
        return win32_impl_result;
    }
    inline int32_t GetClipBox(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_GetClipBox(hdc, lprect);
        return win32_impl_result;
    }
    inline int32_t GetClipRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn)
    {
        auto win32_impl_result = WIN32_IMPL_GetClipRgn(hdc, hrgn);
        return win32_impl_result;
    }
    inline int32_t GetMetaRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn)
    {
        auto win32_impl_result = WIN32_IMPL_GetMetaRgn(hdc, hrgn);
        return win32_impl_result;
    }
    inline intptr_t GetCurrentObject(Windows::Win32::Gdi::HDC hdc, uint32_t type)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentObject(hdc, type);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentPositionEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentPositionEx(hdc, lppt);
        return win32_impl_result;
    }
    inline int32_t GetDeviceCaps(Windows::Win32::Gdi::HDC hdc, int32_t index)
    {
        auto win32_impl_result = WIN32_IMPL_GetDeviceCaps(hdc, index);
        return win32_impl_result;
    }
    inline int32_t GetDIBits(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HBITMAP hbm, uint32_t start, uint32_t cLines, void* lpvBits, Windows::Win32::Gdi::BITMAPINFO* lpbmi, uint32_t usage)
    {
        auto win32_impl_result = WIN32_IMPL_GetDIBits(hdc, hbm, start, cLines, lpvBits, lpbmi, usage);
        return win32_impl_result;
    }
    inline uint32_t GetFontData(Windows::Win32::Gdi::HDC hdc, uint32_t dwTable, uint32_t dwOffset, void* pvBuffer, uint32_t cjBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetFontData(hdc, dwTable, dwOffset, pvBuffer, cjBuffer);
        return win32_impl_result;
    }
    inline uint32_t GetGlyphOutlineA(Windows::Win32::Gdi::HDC hdc, uint32_t uChar, uint32_t fuFormat, Windows::Win32::Gdi::GLYPHMETRICS* lpgm, uint32_t cjBuffer, void* pvBuffer, Windows::Win32::Gdi::MAT2* lpmat2)
    {
        auto win32_impl_result = WIN32_IMPL_GetGlyphOutlineA(hdc, uChar, fuFormat, lpgm, cjBuffer, pvBuffer, lpmat2);
        return win32_impl_result;
    }
    inline uint32_t GetGlyphOutlineW(Windows::Win32::Gdi::HDC hdc, uint32_t uChar, uint32_t fuFormat, Windows::Win32::Gdi::GLYPHMETRICS* lpgm, uint32_t cjBuffer, void* pvBuffer, Windows::Win32::Gdi::MAT2* lpmat2)
    {
        auto win32_impl_result = WIN32_IMPL_GetGlyphOutlineW(hdc, uChar, fuFormat, lpgm, cjBuffer, pvBuffer, lpmat2);
        return win32_impl_result;
    }
    inline int32_t GetGraphicsMode(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetGraphicsMode(hdc);
        return win32_impl_result;
    }
    inline int32_t GetMapMode(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetMapMode(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetMetaFileBitsEx(intptr_t hMF, uint32_t cbBuffer, void* lpData)
    {
        auto win32_impl_result = WIN32_IMPL_GetMetaFileBitsEx(hMF, cbBuffer, lpData);
        return win32_impl_result;
    }
    inline intptr_t GetMetaFileA(int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetMetaFileA(lpName);
        return win32_impl_result;
    }
    inline intptr_t GetMetaFileW(uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetMetaFileW(lpName);
        return win32_impl_result;
    }
    inline uint32_t GetNearestColor(Windows::Win32::Gdi::HDC hdc, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_GetNearestColor(hdc, color);
        return win32_impl_result;
    }
    inline uint32_t GetNearestPaletteIndex(Windows::Win32::Gdi::HPALETTE h, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_GetNearestPaletteIndex(h, color);
        return win32_impl_result;
    }
    inline uint32_t GetObjectType(intptr_t h)
    {
        auto win32_impl_result = WIN32_IMPL_GetObjectType(h);
        return win32_impl_result;
    }
    inline uint32_t GetOutlineTextMetricsA(Windows::Win32::Gdi::HDC hdc, uint32_t cjCopy, Windows::Win32::Gdi::OUTLINETEXTMETRICA* potm)
    {
        auto win32_impl_result = WIN32_IMPL_GetOutlineTextMetricsA(hdc, cjCopy, potm);
        return win32_impl_result;
    }
    inline uint32_t GetOutlineTextMetricsW(Windows::Win32::Gdi::HDC hdc, uint32_t cjCopy, Windows::Win32::Gdi::OUTLINETEXTMETRICW* potm)
    {
        auto win32_impl_result = WIN32_IMPL_GetOutlineTextMetricsW(hdc, cjCopy, potm);
        return win32_impl_result;
    }
    inline uint32_t GetPaletteEntries(Windows::Win32::Gdi::HPALETTE hpal, uint32_t iStart, uint32_t cEntries, Windows::Win32::Direct2D::PALETTEENTRY* pPalEntries)
    {
        auto win32_impl_result = WIN32_IMPL_GetPaletteEntries(hpal, iStart, cEntries, pPalEntries);
        return win32_impl_result;
    }
    inline uint32_t GetPixel(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_GetPixel(hdc, x, y);
        return win32_impl_result;
    }
    inline int32_t GetPolyFillMode(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetPolyFillMode(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetRasterizerCaps(Windows::Win32::Gdi::RASTERIZER_STATUS* lpraststat, uint32_t cjBytes)
    {
        auto win32_impl_result = WIN32_IMPL_GetRasterizerCaps(lpraststat, cjBytes);
        return win32_impl_result;
    }
    inline int32_t GetRandomRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn, int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_GetRandomRgn(hdc, hrgn, i);
        return win32_impl_result;
    }
    inline uint32_t GetRegionData(Windows::Win32::Gdi::HRGN hrgn, uint32_t nCount, Windows::Win32::Gdi::RGNDATA* lpRgnData)
    {
        auto win32_impl_result = WIN32_IMPL_GetRegionData(hrgn, nCount, lpRgnData);
        return win32_impl_result;
    }
    inline int32_t GetRgnBox(Windows::Win32::Gdi::HRGN hrgn, Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_GetRgnBox(hrgn, lprc);
        return win32_impl_result;
    }
    inline intptr_t GetStockObject(int32_t i)
    {
        auto win32_impl_result = WIN32_IMPL_GetStockObject(i);
        return win32_impl_result;
    }
    inline int32_t GetStretchBltMode(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetStretchBltMode(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetSystemPaletteEntries(Windows::Win32::Gdi::HDC hdc, uint32_t iStart, uint32_t cEntries, Windows::Win32::Direct2D::PALETTEENTRY* pPalEntries)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemPaletteEntries(hdc, iStart, cEntries, pPalEntries);
        return win32_impl_result;
    }
    inline uint32_t GetSystemPaletteUse(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemPaletteUse(hdc);
        return win32_impl_result;
    }
    inline int32_t GetTextCharacterExtra(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextCharacterExtra(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetTextAlign(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextAlign(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetTextColor(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextColor(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentPointA(Windows::Win32::Gdi::HDC hdc, int8_t* lpString, int32_t c, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentPointA(hdc, lpString, c, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentPointW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpString, int32_t c, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentPointW(hdc, lpString, c, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentPoint32A(Windows::Win32::Gdi::HDC hdc, int8_t* lpString, int32_t c, Windows::Win32::DisplayDevices::SIZE* psizl)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentPoint32A(hdc, lpString, c, psizl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentPoint32W(Windows::Win32::Gdi::HDC hdc, uint16_t* lpString, int32_t c, Windows::Win32::DisplayDevices::SIZE* psizl)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentPoint32W(hdc, lpString, c, psizl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentExPointA(Windows::Win32::Gdi::HDC hdc, int8_t* lpszString, int32_t cchString, int32_t nMaxExtent, int32_t* lpnFit, int32_t* lpnDx, Windows::Win32::DisplayDevices::SIZE* lpSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentExPointA(hdc, lpszString, cchString, nMaxExtent, lpnFit, lpnDx, lpSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentExPointW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpszString, int32_t cchString, int32_t nMaxExtent, int32_t* lpnFit, int32_t* lpnDx, Windows::Win32::DisplayDevices::SIZE* lpSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentExPointW(hdc, lpszString, cchString, nMaxExtent, lpnFit, lpnDx, lpSize);
        return win32_impl_result;
    }
    inline uint32_t GetFontLanguageInfo(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetFontLanguageInfo(hdc);
        return win32_impl_result;
    }
    inline uint32_t GetCharacterPlacementA(Windows::Win32::Gdi::HDC hdc, int8_t* lpString, int32_t nCount, int32_t nMexExtent, Windows::Win32::Gdi::GCP_RESULTSA* lpResults, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharacterPlacementA(hdc, lpString, nCount, nMexExtent, lpResults, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t GetCharacterPlacementW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpString, int32_t nCount, int32_t nMexExtent, Windows::Win32::Gdi::GCP_RESULTSW* lpResults, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharacterPlacementW(hdc, lpString, nCount, nMexExtent, lpResults, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t GetFontUnicodeRanges(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::GLYPHSET* lpgs)
    {
        auto win32_impl_result = WIN32_IMPL_GetFontUnicodeRanges(hdc, lpgs);
        return win32_impl_result;
    }
    inline uint32_t GetGlyphIndicesA(Windows::Win32::Gdi::HDC hdc, int8_t* lpstr, int32_t c, uint16_t* pgi, uint32_t fl)
    {
        auto win32_impl_result = WIN32_IMPL_GetGlyphIndicesA(hdc, lpstr, c, pgi, fl);
        return win32_impl_result;
    }
    inline uint32_t GetGlyphIndicesW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpstr, int32_t c, uint16_t* pgi, uint32_t fl)
    {
        auto win32_impl_result = WIN32_IMPL_GetGlyphIndicesW(hdc, lpstr, c, pgi, fl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentPointI(Windows::Win32::Gdi::HDC hdc, uint16_t* pgiIn, int32_t cgi, Windows::Win32::DisplayDevices::SIZE* psize)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentPointI(hdc, pgiIn, cgi, psize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextExtentExPointI(Windows::Win32::Gdi::HDC hdc, uint16_t* lpwszString, int32_t cwchString, int32_t nMaxExtent, int32_t* lpnFit, int32_t* lpnDx, Windows::Win32::DisplayDevices::SIZE* lpSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextExtentExPointI(hdc, lpwszString, cwchString, nMaxExtent, lpnFit, lpnDx, lpSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharWidthI(Windows::Win32::Gdi::HDC hdc, uint32_t giFirst, uint32_t cgi, uint16_t* pgi, int32_t* piWidths)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharWidthI(hdc, giFirst, cgi, pgi, piWidths);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCharABCWidthsI(Windows::Win32::Gdi::HDC hdc, uint32_t giFirst, uint32_t cgi, uint16_t* pgi, Windows::Win32::Gdi::ABC* pabc)
    {
        auto win32_impl_result = WIN32_IMPL_GetCharABCWidthsI(hdc, giFirst, cgi, pgi, pabc);
        return win32_impl_result;
    }
    inline int32_t AddFontResourceExA(int8_t* name, uint32_t fl, void* res)
    {
        auto win32_impl_result = WIN32_IMPL_AddFontResourceExA(name, fl, res);
        return win32_impl_result;
    }
    inline int32_t AddFontResourceExW(uint16_t* name, uint32_t fl, void* res)
    {
        auto win32_impl_result = WIN32_IMPL_AddFontResourceExW(name, fl, res);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveFontResourceExA(int8_t* name, uint32_t fl, void* pdv)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveFontResourceExA(name, fl, pdv);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveFontResourceExW(uint16_t* name, uint32_t fl, void* pdv)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveFontResourceExW(name, fl, pdv);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE AddFontMemResourceEx(void* pFileView, uint32_t cjSize, void* pvResrved, uint32_t* pNumFonts)
    {
        auto win32_impl_result = WIN32_IMPL_AddFontMemResourceEx(pFileView, cjSize, pvResrved, pNumFonts);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveFontMemResourceEx(Windows::Win32::SystemServices::HANDLE h)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveFontMemResourceEx(h);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontIndirectExA(Windows::Win32::Gdi::ENUMLOGFONTEXDVA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontIndirectExA(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HFONT CreateFontIndirectExW(Windows::Win32::Gdi::ENUMLOGFONTEXDVW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontIndirectExW(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetViewportExtEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::SIZE* lpsize)
    {
        auto win32_impl_result = WIN32_IMPL_GetViewportExtEx(hdc, lpsize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetViewportOrgEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppoint)
    {
        auto win32_impl_result = WIN32_IMPL_GetViewportOrgEx(hdc, lppoint);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetWindowExtEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::SIZE* lpsize)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowExtEx(hdc, lpsize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetWindowOrgEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppoint)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowOrgEx(hdc, lppoint);
        return win32_impl_result;
    }
    inline int32_t IntersectClipRect(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom)
    {
        auto win32_impl_result = WIN32_IMPL_IntersectClipRect(hdc, left, top, right, bottom);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InvertRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn)
    {
        auto win32_impl_result = WIN32_IMPL_InvertRgn(hdc, hrgn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LineDDA(int32_t xStart, int32_t yStart, int32_t xEnd, int32_t yEnd, Windows::Win32::Gdi::LINEDDAPROC* lpProc, Windows::Win32::WindowsAndMessaging::LPARAM data)
    {
        auto win32_impl_result = WIN32_IMPL_LineDDA(xStart, yStart, xEnd, yEnd, lpProc, data);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LineTo(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_LineTo(hdc, x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL MaskBlt(Windows::Win32::Gdi::HDC hdcDest, int32_t xDest, int32_t yDest, int32_t width, int32_t height, Windows::Win32::Gdi::HDC hdcSrc, int32_t xSrc, int32_t ySrc, Windows::Win32::Gdi::HBITMAP hbmMask, int32_t xMask, int32_t yMask, uint32_t rop)
    {
        auto win32_impl_result = WIN32_IMPL_MaskBlt(hdcDest, xDest, yDest, width, height, hdcSrc, xSrc, ySrc, hbmMask, xMask, yMask, rop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlgBlt(Windows::Win32::Gdi::HDC hdcDest, Windows::Win32::DisplayDevices::POINT* lpPoint, Windows::Win32::Gdi::HDC hdcSrc, int32_t xSrc, int32_t ySrc, int32_t width, int32_t height, Windows::Win32::Gdi::HBITMAP hbmMask, int32_t xMask, int32_t yMask)
    {
        auto win32_impl_result = WIN32_IMPL_PlgBlt(hdcDest, lpPoint, hdcSrc, xSrc, ySrc, width, height, hbmMask, xMask, yMask);
        return win32_impl_result;
    }
    inline int32_t OffsetClipRgn(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_OffsetClipRgn(hdc, x, y);
        return win32_impl_result;
    }
    inline int32_t OffsetRgn(Windows::Win32::Gdi::HRGN hrgn, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_OffsetRgn(hrgn, x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PatBlt(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, int32_t w, int32_t h, uint32_t rop)
    {
        auto win32_impl_result = WIN32_IMPL_PatBlt(hdc, x, y, w, h, rop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Pie(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom, int32_t xr1, int32_t yr1, int32_t xr2, int32_t yr2)
    {
        auto win32_impl_result = WIN32_IMPL_Pie(hdc, left, top, right, bottom, xr1, yr1, xr2, yr2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlayMetaFile(Windows::Win32::Gdi::HDC hdc, intptr_t hmf)
    {
        auto win32_impl_result = WIN32_IMPL_PlayMetaFile(hdc, hmf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PaintRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn)
    {
        auto win32_impl_result = WIN32_IMPL_PaintRgn(hdc, hrgn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyPolygon(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, int32_t* asz, int32_t csz)
    {
        auto win32_impl_result = WIN32_IMPL_PolyPolygon(hdc, apt, asz, csz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PtInRegion(Windows::Win32::Gdi::HRGN hrgn, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_PtInRegion(hrgn, x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PtVisible(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y)
    {
        auto win32_impl_result = WIN32_IMPL_PtVisible(hdc, x, y);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RectInRegion(Windows::Win32::Gdi::HRGN hrgn, Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_RectInRegion(hrgn, lprect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RectVisible(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_RectVisible(hdc, lprect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Rectangle(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom)
    {
        auto win32_impl_result = WIN32_IMPL_Rectangle(hdc, left, top, right, bottom);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RestoreDC(Windows::Win32::Gdi::HDC hdc, int32_t nSavedDC)
    {
        auto win32_impl_result = WIN32_IMPL_RestoreDC(hdc, nSavedDC);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC ResetDCA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Xps::DEVMODEA* lpdm)
    {
        auto win32_impl_result = WIN32_IMPL_ResetDCA(hdc, lpdm);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC ResetDCW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::DEVMODEW* lpdm)
    {
        auto win32_impl_result = WIN32_IMPL_ResetDCW(hdc, lpdm);
        return win32_impl_result;
    }
    inline uint32_t RealizePalette(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_RealizePalette(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveFontResourceA(int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveFontResourceA(lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveFontResourceW(uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveFontResourceW(lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RoundRect(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom, int32_t width, int32_t height)
    {
        auto win32_impl_result = WIN32_IMPL_RoundRect(hdc, left, top, right, bottom, width, height);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResizePalette(Windows::Win32::Gdi::HPALETTE hpal, uint32_t n)
    {
        auto win32_impl_result = WIN32_IMPL_ResizePalette(hpal, n);
        return win32_impl_result;
    }
    inline int32_t SaveDC(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_SaveDC(hdc);
        return win32_impl_result;
    }
    inline int32_t SelectClipRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn)
    {
        auto win32_impl_result = WIN32_IMPL_SelectClipRgn(hdc, hrgn);
        return win32_impl_result;
    }
    inline int32_t ExtSelectClipRgn(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HRGN hrgn, int32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_ExtSelectClipRgn(hdc, hrgn, mode);
        return win32_impl_result;
    }
    inline int32_t SetMetaRgn(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_SetMetaRgn(hdc);
        return win32_impl_result;
    }
    inline intptr_t SelectObject(Windows::Win32::Gdi::HDC hdc, intptr_t h)
    {
        auto win32_impl_result = WIN32_IMPL_SelectObject(hdc, h);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPALETTE SelectPalette(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HPALETTE hPal, Windows::Win32::SystemServices::BOOL bForceBkgd)
    {
        auto win32_impl_result = WIN32_IMPL_SelectPalette(hdc, hPal, bForceBkgd);
        return win32_impl_result;
    }
    inline uint32_t SetBkColor(Windows::Win32::Gdi::HDC hdc, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetBkColor(hdc, color);
        return win32_impl_result;
    }
    inline uint32_t SetDCBrushColor(Windows::Win32::Gdi::HDC hdc, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetDCBrushColor(hdc, color);
        return win32_impl_result;
    }
    inline uint32_t SetDCPenColor(Windows::Win32::Gdi::HDC hdc, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetDCPenColor(hdc, color);
        return win32_impl_result;
    }
    inline int32_t SetBkMode(Windows::Win32::Gdi::HDC hdc, int32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_SetBkMode(hdc, mode);
        return win32_impl_result;
    }
    inline int32_t SetBitmapBits(Windows::Win32::Gdi::HBITMAP hbm, uint32_t cb, void* pvBits)
    {
        auto win32_impl_result = WIN32_IMPL_SetBitmapBits(hbm, cb, pvBits);
        return win32_impl_result;
    }
    inline uint32_t SetBoundsRect(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprect, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetBoundsRect(hdc, lprect, flags);
        return win32_impl_result;
    }
    inline int32_t SetDIBits(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HBITMAP hbm, uint32_t start, uint32_t cLines, void* lpBits, Windows::Win32::Gdi::BITMAPINFO* lpbmi, uint32_t ColorUse)
    {
        auto win32_impl_result = WIN32_IMPL_SetDIBits(hdc, hbm, start, cLines, lpBits, lpbmi, ColorUse);
        return win32_impl_result;
    }
    inline int32_t SetDIBitsToDevice(Windows::Win32::Gdi::HDC hdc, int32_t xDest, int32_t yDest, uint32_t w, uint32_t h, int32_t xSrc, int32_t ySrc, uint32_t StartScan, uint32_t cLines, void* lpvBits, Windows::Win32::Gdi::BITMAPINFO* lpbmi, uint32_t ColorUse)
    {
        auto win32_impl_result = WIN32_IMPL_SetDIBitsToDevice(hdc, xDest, yDest, w, h, xSrc, ySrc, StartScan, cLines, lpvBits, lpbmi, ColorUse);
        return win32_impl_result;
    }
    inline uint32_t SetMapperFlags(Windows::Win32::Gdi::HDC hdc, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetMapperFlags(hdc, flags);
        return win32_impl_result;
    }
    inline int32_t SetGraphicsMode(Windows::Win32::Gdi::HDC hdc, int32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_SetGraphicsMode(hdc, iMode);
        return win32_impl_result;
    }
    inline int32_t SetMapMode(Windows::Win32::Gdi::HDC hdc, int32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_SetMapMode(hdc, iMode);
        return win32_impl_result;
    }
    inline uint32_t SetLayout(Windows::Win32::Gdi::HDC hdc, uint32_t l)
    {
        auto win32_impl_result = WIN32_IMPL_SetLayout(hdc, l);
        return win32_impl_result;
    }
    inline uint32_t GetLayout(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetLayout(hdc);
        return win32_impl_result;
    }
    inline intptr_t SetMetaFileBitsEx(uint32_t cbBuffer, uint8_t* lpData)
    {
        auto win32_impl_result = WIN32_IMPL_SetMetaFileBitsEx(cbBuffer, lpData);
        return win32_impl_result;
    }
    inline uint32_t SetPaletteEntries(Windows::Win32::Gdi::HPALETTE hpal, uint32_t iStart, uint32_t cEntries, Windows::Win32::Direct2D::PALETTEENTRY* pPalEntries)
    {
        auto win32_impl_result = WIN32_IMPL_SetPaletteEntries(hpal, iStart, cEntries, pPalEntries);
        return win32_impl_result;
    }
    inline uint32_t SetPixel(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetPixel(hdc, x, y, color);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPixelV(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetPixelV(hdc, x, y, color);
        return win32_impl_result;
    }
    inline int32_t SetPolyFillMode(Windows::Win32::Gdi::HDC hdc, int32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_SetPolyFillMode(hdc, mode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL StretchBlt(Windows::Win32::Gdi::HDC hdcDest, int32_t xDest, int32_t yDest, int32_t wDest, int32_t hDest, Windows::Win32::Gdi::HDC hdcSrc, int32_t xSrc, int32_t ySrc, int32_t wSrc, int32_t hSrc, uint32_t rop)
    {
        auto win32_impl_result = WIN32_IMPL_StretchBlt(hdcDest, xDest, yDest, wDest, hDest, hdcSrc, xSrc, ySrc, wSrc, hSrc, rop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetRectRgn(Windows::Win32::Gdi::HRGN hrgn, int32_t left, int32_t top, int32_t right, int32_t bottom)
    {
        auto win32_impl_result = WIN32_IMPL_SetRectRgn(hrgn, left, top, right, bottom);
        return win32_impl_result;
    }
    inline int32_t StretchDIBits(Windows::Win32::Gdi::HDC hdc, int32_t xDest, int32_t yDest, int32_t DestWidth, int32_t DestHeight, int32_t xSrc, int32_t ySrc, int32_t SrcWidth, int32_t SrcHeight, void* lpBits, Windows::Win32::Gdi::BITMAPINFO* lpbmi, uint32_t iUsage, uint32_t rop)
    {
        auto win32_impl_result = WIN32_IMPL_StretchDIBits(hdc, xDest, yDest, DestWidth, DestHeight, xSrc, ySrc, SrcWidth, SrcHeight, lpBits, lpbmi, iUsage, rop);
        return win32_impl_result;
    }
    inline int32_t SetROP2(Windows::Win32::Gdi::HDC hdc, int32_t rop2)
    {
        auto win32_impl_result = WIN32_IMPL_SetROP2(hdc, rop2);
        return win32_impl_result;
    }
    inline int32_t SetStretchBltMode(Windows::Win32::Gdi::HDC hdc, int32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_SetStretchBltMode(hdc, mode);
        return win32_impl_result;
    }
    inline uint32_t SetSystemPaletteUse(Windows::Win32::Gdi::HDC hdc, uint32_t use)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemPaletteUse(hdc, use);
        return win32_impl_result;
    }
    inline int32_t SetTextCharacterExtra(Windows::Win32::Gdi::HDC hdc, int32_t extra)
    {
        auto win32_impl_result = WIN32_IMPL_SetTextCharacterExtra(hdc, extra);
        return win32_impl_result;
    }
    inline uint32_t SetTextColor(Windows::Win32::Gdi::HDC hdc, uint32_t color)
    {
        auto win32_impl_result = WIN32_IMPL_SetTextColor(hdc, color);
        return win32_impl_result;
    }
    inline uint32_t SetTextAlign(Windows::Win32::Gdi::HDC hdc, uint32_t align)
    {
        auto win32_impl_result = WIN32_IMPL_SetTextAlign(hdc, align);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetTextJustification(Windows::Win32::Gdi::HDC hdc, int32_t extra, int32_t count)
    {
        auto win32_impl_result = WIN32_IMPL_SetTextJustification(hdc, extra, count);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UpdateColors(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_UpdateColors(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AlphaBlend(Windows::Win32::Gdi::HDC hdcDest, int32_t xoriginDest, int32_t yoriginDest, int32_t wDest, int32_t hDest, Windows::Win32::Gdi::HDC hdcSrc, int32_t xoriginSrc, int32_t yoriginSrc, int32_t wSrc, int32_t hSrc, Windows::Win32::Gdi::BLENDFUNCTION ftn)
    {
        auto win32_impl_result = WIN32_IMPL_AlphaBlend(hdcDest, xoriginDest, yoriginDest, wDest, hDest, hdcSrc, xoriginSrc, yoriginSrc, wSrc, hSrc, ftn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TransparentBlt(Windows::Win32::Gdi::HDC hdcDest, int32_t xoriginDest, int32_t yoriginDest, int32_t wDest, int32_t hDest, Windows::Win32::Gdi::HDC hdcSrc, int32_t xoriginSrc, int32_t yoriginSrc, int32_t wSrc, int32_t hSrc, uint32_t crTransparent)
    {
        auto win32_impl_result = WIN32_IMPL_TransparentBlt(hdcDest, xoriginDest, yoriginDest, wDest, hDest, hdcSrc, xoriginSrc, yoriginSrc, wSrc, hSrc, crTransparent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GradientFill(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::TRIVERTEX* pVertex, uint32_t nVertex, void* pMesh, uint32_t nMesh, uint32_t ulMode)
    {
        auto win32_impl_result = WIN32_IMPL_GradientFill(hdc, pVertex, nVertex, pMesh, nMesh, ulMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GdiAlphaBlend(Windows::Win32::Gdi::HDC hdcDest, int32_t xoriginDest, int32_t yoriginDest, int32_t wDest, int32_t hDest, Windows::Win32::Gdi::HDC hdcSrc, int32_t xoriginSrc, int32_t yoriginSrc, int32_t wSrc, int32_t hSrc, Windows::Win32::Gdi::BLENDFUNCTION ftn)
    {
        auto win32_impl_result = WIN32_IMPL_GdiAlphaBlend(hdcDest, xoriginDest, yoriginDest, wDest, hDest, hdcSrc, xoriginSrc, yoriginSrc, wSrc, hSrc, ftn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GdiTransparentBlt(Windows::Win32::Gdi::HDC hdcDest, int32_t xoriginDest, int32_t yoriginDest, int32_t wDest, int32_t hDest, Windows::Win32::Gdi::HDC hdcSrc, int32_t xoriginSrc, int32_t yoriginSrc, int32_t wSrc, int32_t hSrc, uint32_t crTransparent)
    {
        auto win32_impl_result = WIN32_IMPL_GdiTransparentBlt(hdcDest, xoriginDest, yoriginDest, wDest, hDest, hdcSrc, xoriginSrc, yoriginSrc, wSrc, hSrc, crTransparent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GdiGradientFill(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::TRIVERTEX* pVertex, uint32_t nVertex, void* pMesh, uint32_t nCount, uint32_t ulMode)
    {
        auto win32_impl_result = WIN32_IMPL_GdiGradientFill(hdc, pVertex, nVertex, pMesh, nCount, ulMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlayMetaFileRecord(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HANDLETABLE* lpHandleTable, Windows::Win32::Gdi::METARECORD* lpMR, uint32_t noObjs)
    {
        auto win32_impl_result = WIN32_IMPL_PlayMetaFileRecord(hdc, lpHandleTable, lpMR, noObjs);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumMetaFile(Windows::Win32::Gdi::HDC hdc, intptr_t hmf, Windows::Win32::Gdi::MFENUMPROC* proc, Windows::Win32::WindowsAndMessaging::LPARAM param3)
    {
        auto win32_impl_result = WIN32_IMPL_EnumMetaFile(hdc, hmf, proc, param3);
        return win32_impl_result;
    }
    inline intptr_t CloseEnhMetaFile(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CloseEnhMetaFile(hdc);
        return win32_impl_result;
    }
    inline intptr_t CopyEnhMetaFileA(intptr_t hEnh, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_CopyEnhMetaFileA(hEnh, lpFileName);
        return win32_impl_result;
    }
    inline intptr_t CopyEnhMetaFileW(intptr_t hEnh, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_CopyEnhMetaFileW(hEnh, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HdcMetdataEnhFileHandle CreateEnhMetaFileA(Windows::Win32::Gdi::HDC hdc, int8_t* lpFilename, Windows::Win32::DisplayDevices::RECT* lprc, int8_t* lpDesc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEnhMetaFileA(hdc, lpFilename, lprc, lpDesc);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HdcMetdataEnhFileHandle CreateEnhMetaFileW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpFilename, Windows::Win32::DisplayDevices::RECT* lprc, uint16_t* lpDesc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEnhMetaFileW(hdc, lpFilename, lprc, lpDesc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteEnhMetaFile(intptr_t hmf)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteEnhMetaFile(hmf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumEnhMetaFile(Windows::Win32::Gdi::HDC hdc, intptr_t hmf, Windows::Win32::Gdi::ENHMFENUMPROC* proc, void* param3, Windows::Win32::DisplayDevices::RECT* lpRect)
    {
        auto win32_impl_result = WIN32_IMPL_EnumEnhMetaFile(hdc, hmf, proc, param3, lpRect);
        return win32_impl_result;
    }
    inline intptr_t GetEnhMetaFileA(int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileA(lpName);
        return win32_impl_result;
    }
    inline intptr_t GetEnhMetaFileW(uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileW(lpName);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFileBits(intptr_t hEMF, uint32_t nSize, uint8_t* lpData)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileBits(hEMF, nSize, lpData);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFileDescriptionA(intptr_t hemf, uint32_t cchBuffer, int8_t* lpDescription)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileDescriptionA(hemf, cchBuffer, lpDescription);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFileDescriptionW(intptr_t hemf, uint32_t cchBuffer, uint16_t* lpDescription)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileDescriptionW(hemf, cchBuffer, lpDescription);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFileHeader(intptr_t hemf, uint32_t nSize, Windows::Win32::Gdi::ENHMETAHEADER* lpEnhMetaHeader)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFileHeader(hemf, nSize, lpEnhMetaHeader);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFilePaletteEntries(intptr_t hemf, uint32_t nNumEntries, Windows::Win32::Direct2D::PALETTEENTRY* lpPaletteEntries)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFilePaletteEntries(hemf, nNumEntries, lpPaletteEntries);
        return win32_impl_result;
    }
    inline uint32_t GetWinMetaFileBits(intptr_t hemf, uint32_t cbData16, uint8_t* pData16, int32_t iMapMode, Windows::Win32::Gdi::HDC hdcRef)
    {
        auto win32_impl_result = WIN32_IMPL_GetWinMetaFileBits(hemf, cbData16, pData16, iMapMode, hdcRef);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlayEnhMetaFile(Windows::Win32::Gdi::HDC hdc, intptr_t hmf, Windows::Win32::DisplayDevices::RECT* lprect)
    {
        auto win32_impl_result = WIN32_IMPL_PlayEnhMetaFile(hdc, hmf, lprect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlayEnhMetaFileRecord(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HANDLETABLE* pht, Windows::Win32::Gdi::ENHMETARECORD* pmr, uint32_t cht)
    {
        auto win32_impl_result = WIN32_IMPL_PlayEnhMetaFileRecord(hdc, pht, pmr, cht);
        return win32_impl_result;
    }
    inline intptr_t SetEnhMetaFileBits(uint32_t nSize, uint8_t* pb)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnhMetaFileBits(nSize, pb);
        return win32_impl_result;
    }
    inline intptr_t SetWinMetaFileBits(uint32_t nSize, uint8_t* lpMeta16Data, Windows::Win32::Gdi::HDC hdcRef, Windows::Win32::DataExchange::METAFILEPICT* lpMFP)
    {
        auto win32_impl_result = WIN32_IMPL_SetWinMetaFileBits(nSize, lpMeta16Data, hdcRef, lpMFP);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GdiComment(Windows::Win32::Gdi::HDC hdc, uint32_t nSize, uint8_t* lpData)
    {
        auto win32_impl_result = WIN32_IMPL_GdiComment(hdc, nSize, lpData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextMetricsA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::TEXTMETRICA* lptm)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextMetricsA(hdc, lptm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTextMetricsW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::TEXTMETRICW* lptm)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextMetricsW(hdc, lptm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AngleArc(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t r, float StartAngle, float SweepAngle)
    {
        auto win32_impl_result = WIN32_IMPL_AngleArc(hdc, x, y, r, StartAngle, SweepAngle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyPolyline(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint32_t* asz, uint32_t csz)
    {
        auto win32_impl_result = WIN32_IMPL_PolyPolyline(hdc, apt, asz, csz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetWorldTransform(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::XFORM* lpxf)
    {
        auto win32_impl_result = WIN32_IMPL_GetWorldTransform(hdc, lpxf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWorldTransform(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::XFORM* lpxf)
    {
        auto win32_impl_result = WIN32_IMPL_SetWorldTransform(hdc, lpxf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ModifyWorldTransform(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::XFORM* lpxf, uint32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_ModifyWorldTransform(hdc, lpxf, mode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CombineTransform(Windows::Win32::Gdi::XFORM* lpxfOut, Windows::Win32::Gdi::XFORM* lpxf1, Windows::Win32::Gdi::XFORM* lpxf2)
    {
        auto win32_impl_result = WIN32_IMPL_CombineTransform(lpxfOut, lpxf1, lpxf2);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP CreateDIBSection(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::BITMAPINFO* pbmi, uint32_t usage, void** ppvBits, Windows::Win32::SystemServices::HANDLE hSection, uint32_t offset)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDIBSection(hdc, pbmi, usage, ppvBits, hSection, offset);
        return win32_impl_result;
    }
    inline uint32_t GetDIBColorTable(Windows::Win32::Gdi::HDC hdc, uint32_t iStart, uint32_t cEntries, Windows::Win32::Gdi::RGBQUAD* prgbq)
    {
        auto win32_impl_result = WIN32_IMPL_GetDIBColorTable(hdc, iStart, cEntries, prgbq);
        return win32_impl_result;
    }
    inline uint32_t SetDIBColorTable(Windows::Win32::Gdi::HDC hdc, uint32_t iStart, uint32_t cEntries, Windows::Win32::Gdi::RGBQUAD* prgbq)
    {
        auto win32_impl_result = WIN32_IMPL_SetDIBColorTable(hdc, iStart, cEntries, prgbq);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetColorAdjustment(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::COLORADJUSTMENT* lpca)
    {
        auto win32_impl_result = WIN32_IMPL_SetColorAdjustment(hdc, lpca);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetColorAdjustment(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::COLORADJUSTMENT* lpca)
    {
        auto win32_impl_result = WIN32_IMPL_GetColorAdjustment(hdc, lpca);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPALETTE CreateHalftonePalette(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateHalftonePalette(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AbortPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_AbortPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ArcTo(Windows::Win32::Gdi::HDC hdc, int32_t left, int32_t top, int32_t right, int32_t bottom, int32_t xr1, int32_t yr1, int32_t xr2, int32_t yr2)
    {
        auto win32_impl_result = WIN32_IMPL_ArcTo(hdc, left, top, right, bottom, xr1, yr1, xr2, yr2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BeginPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_BeginPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseFigure(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_CloseFigure(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EndPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_EndPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FillPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_FillPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlattenPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_FlattenPath(hdc);
        return win32_impl_result;
    }
    inline int32_t GetPath(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint8_t* aj, int32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_GetPath(hdc, apt, aj, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN PathToRegion(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_PathToRegion(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyDraw(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint8_t* aj, int32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_PolyDraw(hdc, apt, aj, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SelectClipPath(Windows::Win32::Gdi::HDC hdc, int32_t mode)
    {
        auto win32_impl_result = WIN32_IMPL_SelectClipPath(hdc, mode);
        return win32_impl_result;
    }
    inline int32_t SetArcDirection(Windows::Win32::Gdi::HDC hdc, int32_t dir)
    {
        auto win32_impl_result = WIN32_IMPL_SetArcDirection(hdc, dir);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetMiterLimit(Windows::Win32::Gdi::HDC hdc, float limit, float* old)
    {
        auto win32_impl_result = WIN32_IMPL_SetMiterLimit(hdc, limit, old);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL StrokeAndFillPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_StrokeAndFillPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL StrokePath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_StrokePath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WidenPath(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_WidenPath(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPEN ExtCreatePen(uint32_t iPenStyle, uint32_t cWidth, Windows::Win32::Gdi::LOGBRUSH* plbrush, uint32_t cStyle, uint32_t* pstyle)
    {
        auto win32_impl_result = WIN32_IMPL_ExtCreatePen(iPenStyle, cWidth, plbrush, cStyle, pstyle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetMiterLimit(Windows::Win32::Gdi::HDC hdc, float* plimit)
    {
        auto win32_impl_result = WIN32_IMPL_GetMiterLimit(hdc, plimit);
        return win32_impl_result;
    }
    inline int32_t GetArcDirection(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetArcDirection(hdc);
        return win32_impl_result;
    }
    inline int32_t GetObjectA(Windows::Win32::SystemServices::HANDLE h, int32_t c, void* pv)
    {
        auto win32_impl_result = WIN32_IMPL_GetObjectA(h, c, pv);
        return win32_impl_result;
    }
    inline int32_t GetObjectW(Windows::Win32::SystemServices::HANDLE h, int32_t c, void* pv)
    {
        auto win32_impl_result = WIN32_IMPL_GetObjectW(h, c, pv);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL MoveToEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_MoveToEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TextOutA(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, int8_t* lpString, int32_t c)
    {
        auto win32_impl_result = WIN32_IMPL_TextOutA(hdc, x, y, lpString, c);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TextOutW(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint16_t* lpString, int32_t c)
    {
        auto win32_impl_result = WIN32_IMPL_TextOutW(hdc, x, y, lpString, c);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ExtTextOutA(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t options, Windows::Win32::DisplayDevices::RECT* lprect, int8_t* lpString, uint32_t c, int32_t* lpDx)
    {
        auto win32_impl_result = WIN32_IMPL_ExtTextOutA(hdc, x, y, options, lprect, lpString, c, lpDx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ExtTextOutW(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint32_t options, Windows::Win32::DisplayDevices::RECT* lprect, uint16_t* lpString, uint32_t c, int32_t* lpDx)
    {
        auto win32_impl_result = WIN32_IMPL_ExtTextOutW(hdc, x, y, options, lprect, lpString, c, lpDx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyTextOutA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::POLYTEXTA* ppt, int32_t nstrings)
    {
        auto win32_impl_result = WIN32_IMPL_PolyTextOutA(hdc, ppt, nstrings);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyTextOutW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::POLYTEXTW* ppt, int32_t nstrings)
    {
        auto win32_impl_result = WIN32_IMPL_PolyTextOutW(hdc, ppt, nstrings);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HRGN CreatePolygonRgn(Windows::Win32::DisplayDevices::POINT* pptl, int32_t cPoint, int32_t iMode)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePolygonRgn(pptl, cPoint, iMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DPtoLP(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppt, int32_t c)
    {
        auto win32_impl_result = WIN32_IMPL_DPtoLP(hdc, lppt, c);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LPtoDP(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppt, int32_t c)
    {
        auto win32_impl_result = WIN32_IMPL_LPtoDP(hdc, lppt, c);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Polygon(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, int32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_Polygon(hdc, apt, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL Polyline(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, int32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_Polyline(hdc, apt, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyBezier(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_PolyBezier(hdc, apt, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolyBezierTo(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_PolyBezierTo(hdc, apt, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PolylineTo(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* apt, uint32_t cpt)
    {
        auto win32_impl_result = WIN32_IMPL_PolylineTo(hdc, apt, cpt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetViewportExtEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_SetViewportExtEx(hdc, x, y, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetViewportOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_SetViewportOrgEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWindowExtEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowExtEx(hdc, x, y, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWindowOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowOrgEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OffsetViewportOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_OffsetViewportOrgEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OffsetWindowOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_OffsetWindowOrgEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScaleViewportExtEx(Windows::Win32::Gdi::HDC hdc, int32_t xn, int32_t dx, int32_t yn, int32_t yd, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_ScaleViewportExtEx(hdc, xn, dx, yn, yd, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScaleWindowExtEx(Windows::Win32::Gdi::HDC hdc, int32_t xn, int32_t xd, int32_t yn, int32_t yd, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_ScaleWindowExtEx(hdc, xn, xd, yn, yd, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetBitmapDimensionEx(Windows::Win32::Gdi::HBITMAP hbm, int32_t w, int32_t h, Windows::Win32::DisplayDevices::SIZE* lpsz)
    {
        auto win32_impl_result = WIN32_IMPL_SetBitmapDimensionEx(hbm, w, h, lpsz);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetBrushOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_SetBrushOrgEx(hdc, x, y, lppt);
        return win32_impl_result;
    }
    inline int32_t GetTextFaceA(Windows::Win32::Gdi::HDC hdc, int32_t c, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextFaceA(hdc, c, lpName);
        return win32_impl_result;
    }
    inline int32_t GetTextFaceW(Windows::Win32::Gdi::HDC hdc, int32_t c, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_GetTextFaceW(hdc, c, lpName);
        return win32_impl_result;
    }
    inline uint32_t GetKerningPairsA(Windows::Win32::Gdi::HDC hdc, uint32_t nPairs, Windows::Win32::Gdi::KERNINGPAIR* lpKernPair)
    {
        auto win32_impl_result = WIN32_IMPL_GetKerningPairsA(hdc, nPairs, lpKernPair);
        return win32_impl_result;
    }
    inline uint32_t GetKerningPairsW(Windows::Win32::Gdi::HDC hdc, uint32_t nPairs, Windows::Win32::Gdi::KERNINGPAIR* lpKernPair)
    {
        auto win32_impl_result = WIN32_IMPL_GetKerningPairsW(hdc, nPairs, lpKernPair);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDCOrgEx(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::POINT* lppt)
    {
        auto win32_impl_result = WIN32_IMPL_GetDCOrgEx(hdc, lppt);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FixBrushOrgEx(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, Windows::Win32::DisplayDevices::POINT* ptl)
    {
        auto win32_impl_result = WIN32_IMPL_FixBrushOrgEx(hdc, x, y, ptl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnrealizeObject(intptr_t h)
    {
        auto win32_impl_result = WIN32_IMPL_UnrealizeObject(h);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GdiFlush()
    {
        auto win32_impl_result = WIN32_IMPL_GdiFlush();
        return win32_impl_result;
    }
    inline uint32_t GdiSetBatchLimit(uint32_t dw)
    {
        auto win32_impl_result = WIN32_IMPL_GdiSetBatchLimit(dw);
        return win32_impl_result;
    }
    inline uint32_t GdiGetBatchLimit()
    {
        auto win32_impl_result = WIN32_IMPL_GdiGetBatchLimit();
        return win32_impl_result;
    }
    inline uint32_t wglSwapMultipleBuffers(uint32_t param0, Windows::Win32::Gdi::WGLSWAP* param1)
    {
        auto win32_impl_result = WIN32_IMPL_wglSwapMultipleBuffers(param0, param1);
        return win32_impl_result;
    }
    inline uint32_t CreateFontPackage(uint8_t* puchSrcBuffer, uint32_t ulSrcBufferSize, uint8_t** ppuchFontPackageBuffer, uint32_t* pulFontPackageBufferSize, uint32_t* pulBytesWritten, uint16_t usFlag, uint16_t usTTCIndex, uint16_t usSubsetFormat, uint16_t usSubsetLanguage, uint16_t usSubsetPlatform, uint16_t usSubsetEncoding, uint16_t* pusSubsetKeepList, uint16_t usSubsetListCount, Windows::Win32::Gdi::CFP_ALLOCPROC* lpfnAllocate, Windows::Win32::Gdi::CFP_REALLOCPROC* lpfnReAllocate, Windows::Win32::Gdi::CFP_FREEPROC* lpfnFree, void* lpvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFontPackage(puchSrcBuffer, ulSrcBufferSize, ppuchFontPackageBuffer, pulFontPackageBufferSize, pulBytesWritten, usFlag, usTTCIndex, usSubsetFormat, usSubsetLanguage, usSubsetPlatform, usSubsetEncoding, pusSubsetKeepList, usSubsetListCount, lpfnAllocate, lpfnReAllocate, lpfnFree, lpvReserved);
        return win32_impl_result;
    }
    inline uint32_t MergeFontPackage(uint8_t* puchMergeFontBuffer, uint32_t ulMergeFontBufferSize, uint8_t* puchFontPackageBuffer, uint32_t ulFontPackageBufferSize, uint8_t** ppuchDestBuffer, uint32_t* pulDestBufferSize, uint32_t* pulBytesWritten, uint16_t usMode, Windows::Win32::Gdi::CFP_ALLOCPROC* lpfnAllocate, Windows::Win32::Gdi::CFP_REALLOCPROC* lpfnReAllocate, Windows::Win32::Gdi::CFP_FREEPROC* lpfnFree, void* lpvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_MergeFontPackage(puchMergeFontBuffer, ulMergeFontBufferSize, puchFontPackageBuffer, ulFontPackageBufferSize, ppuchDestBuffer, pulDestBufferSize, pulBytesWritten, usMode, lpfnAllocate, lpfnReAllocate, lpfnFree, lpvReserved);
        return win32_impl_result;
    }
    inline int32_t TTEmbedFont(Windows::Win32::Gdi::HDC hDC, uint32_t ulFlags, uint32_t ulCharSet, uint32_t* pulPrivStatus, uint32_t* pulStatus, Windows::Win32::Gdi::WRITEEMBEDPROC* lpfnWriteToStream, void* lpvWriteStream, uint16_t* pusCharCodeSet, uint16_t usCharCodeCount, uint16_t usLanguage, Windows::Win32::Gdi::TTEMBEDINFO* pTTEmbedInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TTEmbedFont(hDC, ulFlags, ulCharSet, pulPrivStatus, pulStatus, lpfnWriteToStream, lpvWriteStream, pusCharCodeSet, usCharCodeCount, usLanguage, pTTEmbedInfo);
        return win32_impl_result;
    }
    inline int32_t TTEmbedFontFromFileA(Windows::Win32::Gdi::HDC hDC, int8_t* szFontFileName, uint16_t usTTCIndex, uint32_t ulFlags, uint32_t ulCharSet, uint32_t* pulPrivStatus, uint32_t* pulStatus, Windows::Win32::Gdi::WRITEEMBEDPROC* lpfnWriteToStream, void* lpvWriteStream, uint16_t* pusCharCodeSet, uint16_t usCharCodeCount, uint16_t usLanguage, Windows::Win32::Gdi::TTEMBEDINFO* pTTEmbedInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TTEmbedFontFromFileA(hDC, szFontFileName, usTTCIndex, ulFlags, ulCharSet, pulPrivStatus, pulStatus, lpfnWriteToStream, lpvWriteStream, pusCharCodeSet, usCharCodeCount, usLanguage, pTTEmbedInfo);
        return win32_impl_result;
    }
    inline int32_t TTLoadEmbeddedFont(Windows::Win32::SystemServices::HANDLE* phFontReference, uint32_t ulFlags, uint32_t* pulPrivStatus, uint32_t ulPrivs, uint32_t* pulStatus, Windows::Win32::Gdi::READEMBEDPROC* lpfnReadFromStream, void* lpvReadStream, uint16_t* szWinFamilyName, int8_t* szMacFamilyName, Windows::Win32::Gdi::TTLOADINFO* pTTLoadInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TTLoadEmbeddedFont(phFontReference, ulFlags, pulPrivStatus, ulPrivs, pulStatus, lpfnReadFromStream, lpvReadStream, szWinFamilyName, szMacFamilyName, pTTLoadInfo);
        return win32_impl_result;
    }
    inline int32_t TTGetEmbeddedFontInfo(uint32_t ulFlags, uint32_t* pulPrivStatus, uint32_t ulPrivs, uint32_t* pulStatus, Windows::Win32::Gdi::READEMBEDPROC* lpfnReadFromStream, void* lpvReadStream, Windows::Win32::Gdi::TTLOADINFO* pTTLoadInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TTGetEmbeddedFontInfo(ulFlags, pulPrivStatus, ulPrivs, pulStatus, lpfnReadFromStream, lpvReadStream, pTTLoadInfo);
        return win32_impl_result;
    }
    inline int32_t TTDeleteEmbeddedFont(Windows::Win32::SystemServices::HANDLE hFontReference, uint32_t ulFlags, uint32_t* pulStatus)
    {
        auto win32_impl_result = WIN32_IMPL_TTDeleteEmbeddedFont(hFontReference, ulFlags, pulStatus);
        return win32_impl_result;
    }
    inline int32_t TTGetEmbeddingType(Windows::Win32::Gdi::HDC hDC, uint32_t* pulEmbedType)
    {
        auto win32_impl_result = WIN32_IMPL_TTGetEmbeddingType(hDC, pulEmbedType);
        return win32_impl_result;
    }
    inline int32_t TTCharToUnicode(Windows::Win32::Gdi::HDC hDC, uint8_t* pucCharCodes, uint32_t ulCharCodeSize, uint16_t* pusShortCodes, uint32_t ulShortCodeSize, uint32_t ulFlags)
    {
        auto win32_impl_result = WIN32_IMPL_TTCharToUnicode(hDC, pucCharCodes, ulCharCodeSize, pusShortCodes, ulShortCodeSize, ulFlags);
        return win32_impl_result;
    }
    inline int32_t TTRunValidationTests(Windows::Win32::Gdi::HDC hDC, Windows::Win32::Gdi::TTVALIDATIONTESTSPARAMS* pTestParam)
    {
        auto win32_impl_result = WIN32_IMPL_TTRunValidationTests(hDC, pTestParam);
        return win32_impl_result;
    }
    inline int32_t TTIsEmbeddingEnabled(Windows::Win32::Gdi::HDC hDC, int32_t* pbEnabled)
    {
        auto win32_impl_result = WIN32_IMPL_TTIsEmbeddingEnabled(hDC, pbEnabled);
        return win32_impl_result;
    }
    inline int32_t TTIsEmbeddingEnabledForFacename(int8_t* lpszFacename, int32_t* pbEnabled)
    {
        auto win32_impl_result = WIN32_IMPL_TTIsEmbeddingEnabledForFacename(lpszFacename, pbEnabled);
        return win32_impl_result;
    }
    inline int32_t TTEnableEmbeddingForFacename(int8_t* lpszFacename, Windows::Win32::SystemServices::BOOL bEnable)
    {
        auto win32_impl_result = WIN32_IMPL_TTEnableEmbeddingForFacename(lpszFacename, bEnable);
        return win32_impl_result;
    }
    inline int32_t TTEmbedFontEx(Windows::Win32::Gdi::HDC hDC, uint32_t ulFlags, uint32_t ulCharSet, uint32_t* pulPrivStatus, uint32_t* pulStatus, Windows::Win32::Gdi::WRITEEMBEDPROC* lpfnWriteToStream, void* lpvWriteStream, uint32_t* pulCharCodeSet, uint16_t usCharCodeCount, uint16_t usLanguage, Windows::Win32::Gdi::TTEMBEDINFO* pTTEmbedInfo)
    {
        auto win32_impl_result = WIN32_IMPL_TTEmbedFontEx(hDC, ulFlags, ulCharSet, pulPrivStatus, pulStatus, lpfnWriteToStream, lpvWriteStream, pulCharCodeSet, usCharCodeCount, usLanguage, pTTEmbedInfo);
        return win32_impl_result;
    }
    inline int32_t TTRunValidationTestsEx(Windows::Win32::Gdi::HDC hDC, Windows::Win32::Gdi::TTVALIDATIONTESTSPARAMSEX* pTestParam)
    {
        auto win32_impl_result = WIN32_IMPL_TTRunValidationTestsEx(hDC, pTestParam);
        return win32_impl_result;
    }
    inline int32_t TTGetNewFontName(Windows::Win32::SystemServices::HANDLE* phFontReference, uint16_t* wzWinFamilyName, int32_t cchMaxWinName, int8_t* szMacFamilyName, int32_t cchMaxMacName)
    {
        auto win32_impl_result = WIN32_IMPL_TTGetNewFontName(phFontReference, wzWinFamilyName, cchMaxWinName, szMacFamilyName, cchMaxMacName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawEdge(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* qrc, uint32_t edge, uint32_t grfFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawEdge(hdc, qrc, edge, grfFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawFrameControl(Windows::Win32::Gdi::HDC param0, Windows::Win32::DisplayDevices::RECT* param1, uint32_t param2, uint32_t param3)
    {
        auto win32_impl_result = WIN32_IMPL_DrawFrameControl(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawCaption(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprect, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawCaption(hwnd, hdc, lprect, flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawAnimatedRects(Windows::Win32::WindowsAndMessaging::HWND hwnd, int32_t idAni, Windows::Win32::DisplayDevices::RECT* lprcFrom, Windows::Win32::DisplayDevices::RECT* lprcTo)
    {
        auto win32_impl_result = WIN32_IMPL_DrawAnimatedRects(hwnd, idAni, lprcFrom, lprcTo);
        return win32_impl_result;
    }
    inline int32_t DrawTextA(Windows::Win32::Gdi::HDC hdc, int8_t* lpchText, int32_t cchText, Windows::Win32::DisplayDevices::RECT* lprc, uint32_t format)
    {
        auto win32_impl_result = WIN32_IMPL_DrawTextA(hdc, lpchText, cchText, lprc, format);
        return win32_impl_result;
    }
    inline int32_t DrawTextW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpchText, int32_t cchText, Windows::Win32::DisplayDevices::RECT* lprc, uint32_t format)
    {
        auto win32_impl_result = WIN32_IMPL_DrawTextW(hdc, lpchText, cchText, lprc, format);
        return win32_impl_result;
    }
    inline int32_t DrawTextExA(Windows::Win32::Gdi::HDC hdc, int8_t* lpchText, int32_t cchText, Windows::Win32::DisplayDevices::RECT* lprc, uint32_t format, Windows::Win32::Gdi::DRAWTEXTPARAMS* lpdtp)
    {
        auto win32_impl_result = WIN32_IMPL_DrawTextExA(hdc, lpchText, cchText, lprc, format, lpdtp);
        return win32_impl_result;
    }
    inline int32_t DrawTextExW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpchText, int32_t cchText, Windows::Win32::DisplayDevices::RECT* lprc, uint32_t format, Windows::Win32::Gdi::DRAWTEXTPARAMS* lpdtp)
    {
        auto win32_impl_result = WIN32_IMPL_DrawTextExW(hdc, lpchText, cchText, lprc, format, lpdtp);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GrayStringA(Windows::Win32::Gdi::HDC hDC, Windows::Win32::Gdi::HBRUSH hBrush, Windows::Win32::Gdi::GRAYSTRINGPROC* lpOutputFunc, Windows::Win32::WindowsAndMessaging::LPARAM lpData, int32_t nCount, int32_t X, int32_t Y, int32_t nWidth, int32_t nHeight)
    {
        auto win32_impl_result = WIN32_IMPL_GrayStringA(hDC, hBrush, lpOutputFunc, lpData, nCount, X, Y, nWidth, nHeight);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GrayStringW(Windows::Win32::Gdi::HDC hDC, Windows::Win32::Gdi::HBRUSH hBrush, Windows::Win32::Gdi::GRAYSTRINGPROC* lpOutputFunc, Windows::Win32::WindowsAndMessaging::LPARAM lpData, int32_t nCount, int32_t X, int32_t Y, int32_t nWidth, int32_t nHeight)
    {
        auto win32_impl_result = WIN32_IMPL_GrayStringW(hDC, hBrush, lpOutputFunc, lpData, nCount, X, Y, nWidth, nHeight);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawStateA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HBRUSH hbrFore, Windows::Win32::Gdi::DRAWSTATEPROC* qfnCallBack, Windows::Win32::WindowsAndMessaging::LPARAM lData, Windows::Win32::WindowsAndMessaging::WPARAM wData, int32_t x, int32_t y, int32_t cx, int32_t cy, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawStateA(hdc, hbrFore, qfnCallBack, lData, wData, x, y, cx, cy, uFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawStateW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Gdi::HBRUSH hbrFore, Windows::Win32::Gdi::DRAWSTATEPROC* qfnCallBack, Windows::Win32::WindowsAndMessaging::LPARAM lData, Windows::Win32::WindowsAndMessaging::WPARAM wData, int32_t x, int32_t y, int32_t cx, int32_t cy, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawStateW(hdc, hbrFore, qfnCallBack, lData, wData, x, y, cx, cy, uFlags);
        return win32_impl_result;
    }
    inline int32_t TabbedTextOutA(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, int8_t* lpString, int32_t chCount, int32_t nTabPositions, int32_t* lpnTabStopPositions, int32_t nTabOrigin)
    {
        auto win32_impl_result = WIN32_IMPL_TabbedTextOutA(hdc, x, y, lpString, chCount, nTabPositions, lpnTabStopPositions, nTabOrigin);
        return win32_impl_result;
    }
    inline int32_t TabbedTextOutW(Windows::Win32::Gdi::HDC hdc, int32_t x, int32_t y, uint16_t* lpString, int32_t chCount, int32_t nTabPositions, int32_t* lpnTabStopPositions, int32_t nTabOrigin)
    {
        auto win32_impl_result = WIN32_IMPL_TabbedTextOutW(hdc, x, y, lpString, chCount, nTabPositions, lpnTabStopPositions, nTabOrigin);
        return win32_impl_result;
    }
    inline uint32_t GetTabbedTextExtentA(Windows::Win32::Gdi::HDC hdc, int8_t* lpString, int32_t chCount, int32_t nTabPositions, int32_t* lpnTabStopPositions)
    {
        auto win32_impl_result = WIN32_IMPL_GetTabbedTextExtentA(hdc, lpString, chCount, nTabPositions, lpnTabStopPositions);
        return win32_impl_result;
    }
    inline uint32_t GetTabbedTextExtentW(Windows::Win32::Gdi::HDC hdc, uint16_t* lpString, int32_t chCount, int32_t nTabPositions, int32_t* lpnTabStopPositions)
    {
        auto win32_impl_result = WIN32_IMPL_GetTabbedTextExtentW(hdc, lpString, chCount, nTabPositions, lpnTabStopPositions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UpdateWindow(Windows::Win32::WindowsAndMessaging::HWND hWnd)
    {
        auto win32_impl_result = WIN32_IMPL_UpdateWindow(hWnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PaintDesktop(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_PaintDesktop(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND WindowFromDC(Windows::Win32::Gdi::HDC hDC)
    {
        auto win32_impl_result = WIN32_IMPL_WindowFromDC(hDC);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC GetDC(Windows::Win32::WindowsAndMessaging::HWND hWnd)
    {
        auto win32_impl_result = WIN32_IMPL_GetDC(hWnd);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC GetDCEx(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hrgnClip, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetDCEx(hWnd, hrgnClip, flags);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC GetWindowDC(Windows::Win32::WindowsAndMessaging::HWND hWnd)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowDC(hWnd);
        return win32_impl_result;
    }
    inline int32_t ReleaseDC(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HDC hDC)
    {
        auto win32_impl_result = WIN32_IMPL_ReleaseDC(hWnd, hDC);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC BeginPaint(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::PAINTSTRUCT* lpPaint)
    {
        auto win32_impl_result = WIN32_IMPL_BeginPaint(hWnd, lpPaint);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EndPaint(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::PAINTSTRUCT* lpPaint)
    {
        auto win32_impl_result = WIN32_IMPL_EndPaint(hWnd, lpPaint);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUpdateRect(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lpRect, Windows::Win32::SystemServices::BOOL bErase)
    {
        auto win32_impl_result = WIN32_IMPL_GetUpdateRect(hWnd, lpRect, bErase);
        return win32_impl_result;
    }
    inline int32_t GetUpdateRgn(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hRgn, Windows::Win32::SystemServices::BOOL bErase)
    {
        auto win32_impl_result = WIN32_IMPL_GetUpdateRgn(hWnd, hRgn, bErase);
        return win32_impl_result;
    }
    inline int32_t SetWindowRgn(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hRgn, Windows::Win32::SystemServices::BOOL bRedraw)
    {
        auto win32_impl_result = WIN32_IMPL_SetWindowRgn(hWnd, hRgn, bRedraw);
        return win32_impl_result;
    }
    inline int32_t GetWindowRgn(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hRgn)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowRgn(hWnd, hRgn);
        return win32_impl_result;
    }
    inline int32_t GetWindowRgnBox(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowRgnBox(hWnd, lprc);
        return win32_impl_result;
    }
    inline int32_t ExcludeUpdateRgn(Windows::Win32::Gdi::HDC hDC, Windows::Win32::WindowsAndMessaging::HWND hWnd)
    {
        auto win32_impl_result = WIN32_IMPL_ExcludeUpdateRgn(hDC, hWnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InvalidateRect(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lpRect, Windows::Win32::SystemServices::BOOL bErase)
    {
        auto win32_impl_result = WIN32_IMPL_InvalidateRect(hWnd, lpRect, bErase);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ValidateRect(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lpRect)
    {
        auto win32_impl_result = WIN32_IMPL_ValidateRect(hWnd, lpRect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InvalidateRgn(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hRgn, Windows::Win32::SystemServices::BOOL bErase)
    {
        auto win32_impl_result = WIN32_IMPL_InvalidateRgn(hWnd, hRgn, bErase);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ValidateRgn(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::Gdi::HRGN hRgn)
    {
        auto win32_impl_result = WIN32_IMPL_ValidateRgn(hWnd, hRgn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RedrawWindow(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::RECT* lprcUpdate, Windows::Win32::Gdi::HRGN hrgnUpdate, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_RedrawWindow(hWnd, lprcUpdate, hrgnUpdate, flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LockWindowUpdate(Windows::Win32::WindowsAndMessaging::HWND hWndLock)
    {
        auto win32_impl_result = WIN32_IMPL_LockWindowUpdate(hWndLock);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClientToScreen(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::POINT* lpPoint)
    {
        auto win32_impl_result = WIN32_IMPL_ClientToScreen(hWnd, lpPoint);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScreenToClient(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::DisplayDevices::POINT* lpPoint)
    {
        auto win32_impl_result = WIN32_IMPL_ScreenToClient(hWnd, lpPoint);
        return win32_impl_result;
    }
    inline int32_t MapWindowPoints(Windows::Win32::WindowsAndMessaging::HWND hWndFrom, Windows::Win32::WindowsAndMessaging::HWND hWndTo, Windows::Win32::DisplayDevices::POINT* lpPoints, uint32_t cPoints)
    {
        auto win32_impl_result = WIN32_IMPL_MapWindowPoints(hWndFrom, hWndTo, lpPoints, cPoints);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBRUSH GetSysColorBrush(int32_t nIndex)
    {
        auto win32_impl_result = WIN32_IMPL_GetSysColorBrush(nIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawFocusRect(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_DrawFocusRect(hDC, lprc);
        return win32_impl_result;
    }
    inline int32_t FillRect(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc, Windows::Win32::Gdi::HBRUSH hbr)
    {
        auto win32_impl_result = WIN32_IMPL_FillRect(hDC, lprc, hbr);
        return win32_impl_result;
    }
    inline int32_t FrameRect(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc, Windows::Win32::Gdi::HBRUSH hbr)
    {
        auto win32_impl_result = WIN32_IMPL_FrameRect(hDC, lprc, hbr);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InvertRect(Windows::Win32::Gdi::HDC hDC, Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_InvertRect(hDC, lprc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetRect(Windows::Win32::DisplayDevices::RECT* lprc, int32_t xLeft, int32_t yTop, int32_t xRight, int32_t yBottom)
    {
        auto win32_impl_result = WIN32_IMPL_SetRect(lprc, xLeft, yTop, xRight, yBottom);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetRectEmpty(Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_SetRectEmpty(lprc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CopyRect(Windows::Win32::DisplayDevices::RECT* lprcDst, Windows::Win32::DisplayDevices::RECT* lprcSrc)
    {
        auto win32_impl_result = WIN32_IMPL_CopyRect(lprcDst, lprcSrc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InflateRect(Windows::Win32::DisplayDevices::RECT* lprc, int32_t dx, int32_t dy)
    {
        auto win32_impl_result = WIN32_IMPL_InflateRect(lprc, dx, dy);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IntersectRect(Windows::Win32::DisplayDevices::RECT* lprcDst, Windows::Win32::DisplayDevices::RECT* lprcSrc1, Windows::Win32::DisplayDevices::RECT* lprcSrc2)
    {
        auto win32_impl_result = WIN32_IMPL_IntersectRect(lprcDst, lprcSrc1, lprcSrc2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnionRect(Windows::Win32::DisplayDevices::RECT* lprcDst, Windows::Win32::DisplayDevices::RECT* lprcSrc1, Windows::Win32::DisplayDevices::RECT* lprcSrc2)
    {
        auto win32_impl_result = WIN32_IMPL_UnionRect(lprcDst, lprcSrc1, lprcSrc2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SubtractRect(Windows::Win32::DisplayDevices::RECT* lprcDst, Windows::Win32::DisplayDevices::RECT* lprcSrc1, Windows::Win32::DisplayDevices::RECT* lprcSrc2)
    {
        auto win32_impl_result = WIN32_IMPL_SubtractRect(lprcDst, lprcSrc1, lprcSrc2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OffsetRect(Windows::Win32::DisplayDevices::RECT* lprc, int32_t dx, int32_t dy)
    {
        auto win32_impl_result = WIN32_IMPL_OffsetRect(lprc, dx, dy);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsRectEmpty(Windows::Win32::DisplayDevices::RECT* lprc)
    {
        auto win32_impl_result = WIN32_IMPL_IsRectEmpty(lprc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EqualRect(Windows::Win32::DisplayDevices::RECT* lprc1, Windows::Win32::DisplayDevices::RECT* lprc2)
    {
        auto win32_impl_result = WIN32_IMPL_EqualRect(lprc1, lprc2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PtInRect(Windows::Win32::DisplayDevices::RECT* lprc, Windows::Win32::DisplayDevices::POINT pt)
    {
        auto win32_impl_result = WIN32_IMPL_PtInRect(lprc, pt);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP LoadBitmapA(Windows::Win32::SystemServices::HINSTANCE hInstance, int8_t* lpBitmapName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadBitmapA(hInstance, lpBitmapName);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HBITMAP LoadBitmapW(Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* lpBitmapName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadBitmapW(hInstance, lpBitmapName);
        return win32_impl_result;
    }
    inline int32_t ChangeDisplaySettingsA(Windows::Win32::Xps::DEVMODEA* lpDevMode, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeDisplaySettingsA(lpDevMode, dwFlags);
        return win32_impl_result;
    }
    inline int32_t ChangeDisplaySettingsW(Windows::Win32::DisplayDevices::DEVMODEW* lpDevMode, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeDisplaySettingsW(lpDevMode, dwFlags);
        return win32_impl_result;
    }
    inline int32_t ChangeDisplaySettingsExA(int8_t* lpszDeviceName, Windows::Win32::Xps::DEVMODEA* lpDevMode, Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t dwflags, void* lParam)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeDisplaySettingsExA(lpszDeviceName, lpDevMode, hwnd, dwflags, lParam);
        return win32_impl_result;
    }
    inline int32_t ChangeDisplaySettingsExW(uint16_t* lpszDeviceName, Windows::Win32::DisplayDevices::DEVMODEW* lpDevMode, Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t dwflags, void* lParam)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeDisplaySettingsExW(lpszDeviceName, lpDevMode, hwnd, dwflags, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplaySettingsA(int8_t* lpszDeviceName, uint32_t iModeNum, Windows::Win32::Xps::DEVMODEA* lpDevMode)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplaySettingsA(lpszDeviceName, iModeNum, lpDevMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplaySettingsW(uint16_t* lpszDeviceName, uint32_t iModeNum, Windows::Win32::DisplayDevices::DEVMODEW* lpDevMode)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplaySettingsW(lpszDeviceName, iModeNum, lpDevMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplaySettingsExA(int8_t* lpszDeviceName, uint32_t iModeNum, Windows::Win32::Xps::DEVMODEA* lpDevMode, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplaySettingsExA(lpszDeviceName, iModeNum, lpDevMode, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplaySettingsExW(uint16_t* lpszDeviceName, uint32_t iModeNum, Windows::Win32::DisplayDevices::DEVMODEW* lpDevMode, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplaySettingsExW(lpszDeviceName, iModeNum, lpDevMode, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplayDevicesA(int8_t* lpDevice, uint32_t iDevNum, Windows::Win32::Gdi::DISPLAY_DEVICEA* lpDisplayDevice, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplayDevicesA(lpDevice, iDevNum, lpDisplayDevice, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplayDevicesW(uint16_t* lpDevice, uint32_t iDevNum, Windows::Win32::Gdi::DISPLAY_DEVICEW* lpDisplayDevice, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplayDevicesW(lpDevice, iDevNum, lpDisplayDevice, dwFlags);
        return win32_impl_result;
    }
    inline intptr_t MonitorFromPoint(Windows::Win32::DisplayDevices::POINT pt, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_MonitorFromPoint(pt, dwFlags);
        return win32_impl_result;
    }
    inline intptr_t MonitorFromRect(Windows::Win32::DisplayDevices::RECT* lprc, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_MonitorFromRect(lprc, dwFlags);
        return win32_impl_result;
    }
    inline intptr_t MonitorFromWindow(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_MonitorFromWindow(hwnd, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetMonitorInfoA(intptr_t hMonitor, Windows::Win32::Gdi::MONITORINFO* lpmi)
    {
        auto win32_impl_result = WIN32_IMPL_GetMonitorInfoA(hMonitor, lpmi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetMonitorInfoW(intptr_t hMonitor, Windows::Win32::Gdi::MONITORINFO* lpmi)
    {
        auto win32_impl_result = WIN32_IMPL_GetMonitorInfoW(hMonitor, lpmi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDisplayMonitors(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprcClip, Windows::Win32::Gdi::MONITORENUMPROC* lpfnEnum, Windows::Win32::WindowsAndMessaging::LPARAM dwData)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDisplayMonitors(hdc, lprcClip, lpfnEnum, dwData);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
