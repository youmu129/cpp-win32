// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Hid_H
#define WIN32_Windows_Win32_Hid_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Hid.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Hid
{
#pragma region methods
    inline int32_t DirectInput8Create(Windows::Win32::SystemServices::HINSTANCE hinst, uint32_t dwVersion, ::win32::guid* riidltf, void** ppvOut, Windows::Win32::Com::IUnknown* punkOuter)
    {
        auto win32_impl_result = WIN32_IMPL_DirectInput8Create(hinst, dwVersion, riidltf, ppvOut, punkOuter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetCaps(intptr_t PreparsedData, Windows::Win32::Hid::HIDP_CAPS* Capabilities)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetCaps(PreparsedData, Capabilities);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetLinkCollectionNodes(Windows::Win32::Hid::HIDP_LINK_COLLECTION_NODE* LinkCollectionNodes, uint32_t* LinkCollectionNodesLength, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetLinkCollectionNodes(LinkCollectionNodes, LinkCollectionNodesLength, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetSpecificButtonCaps(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, Windows::Win32::Hid::HIDP_BUTTON_CAPS* ButtonCaps, uint16_t* ButtonCapsLength, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetSpecificButtonCaps(ReportType, UsagePage, LinkCollection, Usage, ButtonCaps, ButtonCapsLength, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetButtonCaps(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, Windows::Win32::Hid::HIDP_BUTTON_CAPS* ButtonCaps, uint16_t* ButtonCapsLength, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetButtonCaps(ReportType, ButtonCaps, ButtonCapsLength, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetSpecificValueCaps(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, Windows::Win32::Hid::HIDP_VALUE_CAPS* ValueCaps, uint16_t* ValueCapsLength, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetSpecificValueCaps(ReportType, UsagePage, LinkCollection, Usage, ValueCaps, ValueCapsLength, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetValueCaps(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, Windows::Win32::Hid::HIDP_VALUE_CAPS* ValueCaps, uint16_t* ValueCapsLength, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetValueCaps(ReportType, ValueCaps, ValueCapsLength, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetExtendedAttributes(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t DataIndex, intptr_t PreparsedData, Windows::Win32::Hid::HIDP_EXTENDED_ATTRIBUTES* Attributes, uint32_t* LengthAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetExtendedAttributes(ReportType, DataIndex, PreparsedData, Attributes, LengthAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_InitializeReportForID(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint8_t ReportID, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_InitializeReportForID(ReportType, ReportID, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_SetData(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, Windows::Win32::Hid::HIDP_DATA* DataList, uint32_t* DataLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_SetData(ReportType, DataList, DataLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetData(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, Windows::Win32::Hid::HIDP_DATA* DataList, uint32_t* DataLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetData(ReportType, DataList, DataLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline uint32_t HidP_MaxDataListLength(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_MaxDataListLength(ReportType, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_SetUsages(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_SetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_UnsetUsages(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_UnsetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetUsages(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t* UsageList, uint32_t* UsageLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetUsages(ReportType, UsagePage, LinkCollection, UsageList, UsageLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetUsagesEx(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t LinkCollection, Windows::Win32::Hid::USAGE_AND_PAGE* ButtonList, uint32_t* UsageLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetUsagesEx(ReportType, LinkCollection, ButtonList, UsageLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline uint32_t HidP_MaxUsageListLength(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_MaxUsageListLength(ReportType, UsagePage, PreparsedData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_SetUsageValue(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, uint32_t UsageValue, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_SetUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_SetScaledUsageValue(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int32_t UsageValue, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_SetScaledUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_SetUsageValueArray(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int8_t* UsageValue, uint16_t UsageValueByteLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_SetUsageValueArray(ReportType, UsagePage, LinkCollection, Usage, UsageValue, UsageValueByteLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetUsageValue(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, uint32_t* UsageValue, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetScaledUsageValue(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int32_t* UsageValue, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetScaledUsageValue(ReportType, UsagePage, LinkCollection, Usage, UsageValue, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_GetUsageValueArray(Windows::Win32::Hid::HIDP_REPORT_TYPE ReportType, uint16_t UsagePage, uint16_t LinkCollection, uint16_t Usage, int8_t* UsageValue, uint16_t UsageValueByteLength, intptr_t PreparsedData, int8_t* Report, uint32_t ReportLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_GetUsageValueArray(ReportType, UsagePage, LinkCollection, Usage, UsageValue, UsageValueByteLength, PreparsedData, Report, ReportLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_UsageListDifference(uint16_t* PreviousUsageList, uint16_t* CurrentUsageList, uint16_t* BreakUsageList, uint16_t* MakeUsageList, uint32_t UsageListLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_UsageListDifference(PreviousUsageList, CurrentUsageList, BreakUsageList, MakeUsageList, UsageListLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS HidP_TranslateUsagesToI8042ScanCodes(uint16_t* ChangedUsageList, uint32_t UsageListLength, Windows::Win32::Hid::HIDP_KEYBOARD_DIRECTION KeyAction, Windows::Win32::Hid::HIDP_KEYBOARD_MODIFIER_STATE* ModifierState, Windows::Win32::Hid::PHIDP_INSERT_SCANCODES* InsertCodesProcedure, void* InsertCodesContext)
    {
        auto win32_impl_result = WIN32_IMPL_HidP_TranslateUsagesToI8042ScanCodes(ChangedUsageList, UsageListLength, KeyAction, ModifierState, InsertCodesProcedure, InsertCodesContext);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetAttributes(Windows::Win32::SystemServices::HANDLE HidDeviceObject, Windows::Win32::Hid::HIDD_ATTRIBUTES* Attributes)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetAttributes(HidDeviceObject, Attributes);
        return win32_impl_result;
    }
    inline void HidD_GetHidGuid(::win32::guid* HidGuid)
    {
        WIN32_IMPL_HidD_GetHidGuid(HidGuid);
    }
    inline uint8_t HidD_GetPreparsedData(Windows::Win32::SystemServices::HANDLE HidDeviceObject, intptr_t* PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetPreparsedData(HidDeviceObject, PreparsedData);
        return win32_impl_result;
    }
    inline uint8_t HidD_FreePreparsedData(intptr_t PreparsedData)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_FreePreparsedData(PreparsedData);
        return win32_impl_result;
    }
    inline uint8_t HidD_FlushQueue(Windows::Win32::SystemServices::HANDLE HidDeviceObject)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_FlushQueue(HidDeviceObject);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetConfiguration(Windows::Win32::SystemServices::HANDLE HidDeviceObject, Windows::Win32::Hid::HIDD_CONFIGURATION* Configuration, uint32_t ConfigurationLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetConfiguration(HidDeviceObject, Configuration, ConfigurationLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_SetConfiguration(Windows::Win32::SystemServices::HANDLE HidDeviceObject, Windows::Win32::Hid::HIDD_CONFIGURATION* Configuration, uint32_t ConfigurationLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_SetConfiguration(HidDeviceObject, Configuration, ConfigurationLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetFeature(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetFeature(HidDeviceObject, ReportBuffer, ReportBufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_SetFeature(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_SetFeature(HidDeviceObject, ReportBuffer, ReportBufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetInputReport(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetInputReport(HidDeviceObject, ReportBuffer, ReportBufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_SetOutputReport(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* ReportBuffer, uint32_t ReportBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_SetOutputReport(HidDeviceObject, ReportBuffer, ReportBufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetNumInputBuffers(Windows::Win32::SystemServices::HANDLE HidDeviceObject, uint32_t* NumberBuffers)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetNumInputBuffers(HidDeviceObject, NumberBuffers);
        return win32_impl_result;
    }
    inline uint8_t HidD_SetNumInputBuffers(Windows::Win32::SystemServices::HANDLE HidDeviceObject, uint32_t NumberBuffers)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_SetNumInputBuffers(HidDeviceObject, NumberBuffers);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetPhysicalDescriptor(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetPhysicalDescriptor(HidDeviceObject, Buffer, BufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetManufacturerString(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetManufacturerString(HidDeviceObject, Buffer, BufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetProductString(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetProductString(HidDeviceObject, Buffer, BufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetIndexedString(Windows::Win32::SystemServices::HANDLE HidDeviceObject, uint32_t StringIndex, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetIndexedString(HidDeviceObject, StringIndex, Buffer, BufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetSerialNumberString(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetSerialNumberString(HidDeviceObject, Buffer, BufferLength);
        return win32_impl_result;
    }
    inline uint8_t HidD_GetMsGenreDescriptor(Windows::Win32::SystemServices::HANDLE HidDeviceObject, void* Buffer, uint32_t BufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_HidD_GetMsGenreDescriptor(HidDeviceObject, Buffer, BufferLength);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
