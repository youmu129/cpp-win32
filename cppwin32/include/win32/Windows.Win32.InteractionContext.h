// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_InteractionContext_H
#define WIN32_Windows_Win32_InteractionContext_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.InteractionContext.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::InteractionContext
{
#pragma region methods
    inline int32_t CreateInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__** interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_CreateInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t DestroyInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t RegisterOutputCallbackInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_OUTPUT_CALLBACK* outputCallback, void* clientData)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterOutputCallbackInteractionContext(interactionContext, outputCallback, clientData);
        return win32_impl_result;
    }
    inline int32_t RegisterOutputCallbackInteractionContext2(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_OUTPUT_CALLBACK2* outputCallback, void* clientData)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterOutputCallbackInteractionContext2(interactionContext, outputCallback, clientData);
        return win32_impl_result;
    }
    inline int32_t SetInteractionConfigurationInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t configurationCount, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_CONFIGURATION* configuration)
    {
        auto win32_impl_result = WIN32_IMPL_SetInteractionConfigurationInteractionContext(interactionContext, configurationCount, configuration);
        return win32_impl_result;
    }
    inline int32_t GetInteractionConfigurationInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t configurationCount, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_CONFIGURATION* configuration)
    {
        auto win32_impl_result = WIN32_IMPL_GetInteractionConfigurationInteractionContext(interactionContext, configurationCount, configuration);
        return win32_impl_result;
    }
    inline int32_t SetPropertyInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_PROPERTY contextProperty, uint32_t value)
    {
        auto win32_impl_result = WIN32_IMPL_SetPropertyInteractionContext(interactionContext, contextProperty, value);
        return win32_impl_result;
    }
    inline int32_t GetPropertyInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_PROPERTY contextProperty, uint32_t* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetPropertyInteractionContext(interactionContext, contextProperty, value);
        return win32_impl_result;
    }
    inline int32_t SetInertiaParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INERTIA_PARAMETER inertiaParameter, float value)
    {
        auto win32_impl_result = WIN32_IMPL_SetInertiaParameterInteractionContext(interactionContext, inertiaParameter, value);
        return win32_impl_result;
    }
    inline int32_t GetInertiaParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::INERTIA_PARAMETER inertiaParameter, float* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetInertiaParameterInteractionContext(interactionContext, inertiaParameter, value);
        return win32_impl_result;
    }
    inline int32_t SetCrossSlideParametersInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t parameterCount, Windows::Win32::InteractionContext::CROSS_SLIDE_PARAMETER* crossSlideParameters)
    {
        auto win32_impl_result = WIN32_IMPL_SetCrossSlideParametersInteractionContext(interactionContext, parameterCount, crossSlideParameters);
        return win32_impl_result;
    }
    inline int32_t GetCrossSlideParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::CROSS_SLIDE_THRESHOLD threshold, float* distance)
    {
        auto win32_impl_result = WIN32_IMPL_GetCrossSlideParameterInteractionContext(interactionContext, threshold, distance);
        return win32_impl_result;
    }
    inline int32_t SetTapParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::TAP_PARAMETER parameter, float value)
    {
        auto win32_impl_result = WIN32_IMPL_SetTapParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t GetTapParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::TAP_PARAMETER parameter, float* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetTapParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t SetHoldParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::HOLD_PARAMETER parameter, float value)
    {
        auto win32_impl_result = WIN32_IMPL_SetHoldParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t GetHoldParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::HOLD_PARAMETER parameter, float* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetHoldParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t SetTranslationParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::TRANSLATION_PARAMETER parameter, float value)
    {
        auto win32_impl_result = WIN32_IMPL_SetTranslationParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t GetTranslationParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::TRANSLATION_PARAMETER parameter, float* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetTranslationParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t SetMouseWheelParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::MOUSE_WHEEL_PARAMETER parameter, float value)
    {
        auto win32_impl_result = WIN32_IMPL_SetMouseWheelParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t GetMouseWheelParameterInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::InteractionContext::MOUSE_WHEEL_PARAMETER parameter, float* value)
    {
        auto win32_impl_result = WIN32_IMPL_GetMouseWheelParameterInteractionContext(interactionContext, parameter, value);
        return win32_impl_result;
    }
    inline int32_t ResetInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_ResetInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t GetStateInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, Windows::Win32::PointerInput::POINTER_INFO* pointerInfo, Windows::Win32::InteractionContext::INTERACTION_STATE* state)
    {
        auto win32_impl_result = WIN32_IMPL_GetStateInteractionContext(interactionContext, pointerInfo, state);
        return win32_impl_result;
    }
    inline int32_t AddPointerInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t pointerId)
    {
        auto win32_impl_result = WIN32_IMPL_AddPointerInteractionContext(interactionContext, pointerId);
        return win32_impl_result;
    }
    inline int32_t RemovePointerInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t pointerId)
    {
        auto win32_impl_result = WIN32_IMPL_RemovePointerInteractionContext(interactionContext, pointerId);
        return win32_impl_result;
    }
    inline int32_t ProcessPointerFramesInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t entriesCount, uint32_t pointerCount, Windows::Win32::PointerInput::POINTER_INFO* pointerInfo)
    {
        auto win32_impl_result = WIN32_IMPL_ProcessPointerFramesInteractionContext(interactionContext, entriesCount, pointerCount, pointerInfo);
        return win32_impl_result;
    }
    inline int32_t BufferPointerPacketsInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, uint32_t entriesCount, Windows::Win32::PointerInput::POINTER_INFO* pointerInfo)
    {
        auto win32_impl_result = WIN32_IMPL_BufferPointerPacketsInteractionContext(interactionContext, entriesCount, pointerInfo);
        return win32_impl_result;
    }
    inline int32_t ProcessBufferedPacketsInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_ProcessBufferedPacketsInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t ProcessInertiaInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_ProcessInertiaInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t StopInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext)
    {
        auto win32_impl_result = WIN32_IMPL_StopInteractionContext(interactionContext);
        return win32_impl_result;
    }
    inline int32_t SetPivotInteractionContext(Windows::Win32::InteractionContext::HINTERACTIONCONTEXT__* interactionContext, float x, float y, float radius)
    {
        auto win32_impl_result = WIN32_IMPL_SetPivotInteractionContext(interactionContext, x, y, radius);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
