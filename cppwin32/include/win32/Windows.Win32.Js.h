// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Js_H
#define WIN32_Windows_Win32_Js_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Js.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Js
{
#pragma region methods
    inline Windows::Win32::Js::JsErrorCode JsCreateRuntime(Windows::Win32::Js::JsRuntimeAttributes attributes, Windows::Win32::Js::JsRuntimeVersion runtimeVersion, Windows::Win32::Js::JsThreadServiceCallback* threadService, void** runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateRuntime(attributes, runtimeVersion, threadService, runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCollectGarbage(void* runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsCollectGarbage(runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDisposeRuntime(void* runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsDisposeRuntime(runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetRuntimeMemoryUsage(void* runtime, size_t* memoryUsage)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetRuntimeMemoryUsage(runtime, memoryUsage);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetRuntimeMemoryLimit(void* runtime, size_t* memoryLimit)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetRuntimeMemoryLimit(runtime, memoryLimit);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetRuntimeMemoryLimit(void* runtime, size_t memoryLimit)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetRuntimeMemoryLimit(runtime, memoryLimit);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetRuntimeMemoryAllocationCallback(void* runtime, void* callbackState, Windows::Win32::Js::JsMemoryAllocationCallback* allocationCallback)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetRuntimeMemoryAllocationCallback(runtime, callbackState, allocationCallback);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetRuntimeBeforeCollectCallback(void* runtime, void* callbackState, Windows::Win32::Js::JsBeforeCollectCallback* beforeCollectCallback)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetRuntimeBeforeCollectCallback(runtime, callbackState, beforeCollectCallback);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsAddRef(void* ref, uint32_t* count)
    {
        auto win32_impl_result = WIN32_IMPL_JsAddRef(ref, count);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsRelease(void* ref, uint32_t* count)
    {
        auto win32_impl_result = WIN32_IMPL_JsRelease(ref, count);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateContext(void* runtime, Windows::Win32::Debug::IDebugApplication32* debugApplication, void** newContext)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateContext(runtime, debugApplication, newContext);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetCurrentContext(void** currentContext)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetCurrentContext(currentContext);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetCurrentContext(void* context)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetCurrentContext(context);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetRuntime(void* context, void** runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetRuntime(context, runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsStartDebugging(Windows::Win32::Debug::IDebugApplication32* debugApplication)
    {
        auto win32_impl_result = WIN32_IMPL_JsStartDebugging(debugApplication);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsIdle(uint32_t* nextIdleTick)
    {
        auto win32_impl_result = WIN32_IMPL_JsIdle(nextIdleTick);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsParseScript(uint16_t* script, size_t sourceContext, uint16_t* sourceUrl, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsParseScript(script, sourceContext, sourceUrl, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsRunScript(uint16_t* script, size_t sourceContext, uint16_t* sourceUrl, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsRunScript(script, sourceContext, sourceUrl, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSerializeScript(uint16_t* script, uint8_t* buffer, uint32_t* bufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_JsSerializeScript(script, buffer, bufferSize);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsParseSerializedScript(uint16_t* script, uint8_t* buffer, size_t sourceContext, uint16_t* sourceUrl, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsParseSerializedScript(script, buffer, sourceContext, sourceUrl, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsRunSerializedScript(uint16_t* script, uint8_t* buffer, size_t sourceContext, uint16_t* sourceUrl, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsRunSerializedScript(script, buffer, sourceContext, sourceUrl, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetPropertyIdFromName(uint16_t* name, void** propertyId)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetPropertyIdFromName(name, propertyId);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetPropertyNameFromId(void* propertyId, uint16_t** name)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetPropertyNameFromId(propertyId, name);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetUndefinedValue(void** undefinedValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetUndefinedValue(undefinedValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetNullValue(void** nullValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetNullValue(nullValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetTrueValue(void** trueValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetTrueValue(trueValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetFalseValue(void** falseValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetFalseValue(falseValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsBoolToBoolean(uint8_t value, void** booleanValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsBoolToBoolean(value, booleanValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsBooleanToBool(void* value, bool* boolValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsBooleanToBool(value, boolValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsConvertValueToBoolean(void* value, void** booleanValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsConvertValueToBoolean(value, booleanValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetValueType(void* value, Windows::Win32::Js::JsValueType* type)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetValueType(value, type);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDoubleToNumber(double doubleValue, void** value)
    {
        auto win32_impl_result = WIN32_IMPL_JsDoubleToNumber(doubleValue, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsIntToNumber(int32_t intValue, void** value)
    {
        auto win32_impl_result = WIN32_IMPL_JsIntToNumber(intValue, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsNumberToDouble(void* value, double* doubleValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsNumberToDouble(value, doubleValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsConvertValueToNumber(void* value, void** numberValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsConvertValueToNumber(value, numberValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetStringLength(void* stringValue, int32_t* length)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetStringLength(stringValue, length);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsPointerToString(uint16_t* stringValue, size_t stringLength, void** value)
    {
        auto win32_impl_result = WIN32_IMPL_JsPointerToString(stringValue, stringLength, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsStringToPointer(void* value, uint16_t** stringValue, size_t* stringLength)
    {
        auto win32_impl_result = WIN32_IMPL_JsStringToPointer(value, stringValue, stringLength);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsConvertValueToString(void* value, void** stringValue)
    {
        auto win32_impl_result = WIN32_IMPL_JsConvertValueToString(value, stringValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsVariantToValue(Windows::Win32::Automation::VARIANT* variant, void** value)
    {
        auto win32_impl_result = WIN32_IMPL_JsVariantToValue(variant, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsValueToVariant(void* object, Windows::Win32::Automation::VARIANT* variant)
    {
        auto win32_impl_result = WIN32_IMPL_JsValueToVariant(object, variant);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetGlobalObject(void** globalObject)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetGlobalObject(globalObject);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateObject(void** object)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateObject(object);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateExternalObject(void* data, Windows::Win32::Js::JsFinalizeCallback* finalizeCallback, void** object)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateExternalObject(data, finalizeCallback, object);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsConvertValueToObject(void* value, void** object)
    {
        auto win32_impl_result = WIN32_IMPL_JsConvertValueToObject(value, object);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetPrototype(void* object, void** prototypeObject)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetPrototype(object, prototypeObject);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetPrototype(void* object, void* prototypeObject)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetPrototype(object, prototypeObject);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetExtensionAllowed(void* object, bool* value)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetExtensionAllowed(object, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsPreventExtension(void* object)
    {
        auto win32_impl_result = WIN32_IMPL_JsPreventExtension(object);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetProperty(void* object, void* propertyId, void** value)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetProperty(object, propertyId, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetOwnPropertyDescriptor(void* object, void* propertyId, void** propertyDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetOwnPropertyDescriptor(object, propertyId, propertyDescriptor);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetOwnPropertyNames(void* object, void** propertyNames)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetOwnPropertyNames(object, propertyNames);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetProperty(void* object, void* propertyId, void* value, uint8_t useStrictRules)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetProperty(object, propertyId, value, useStrictRules);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsHasProperty(void* object, void* propertyId, bool* hasProperty)
    {
        auto win32_impl_result = WIN32_IMPL_JsHasProperty(object, propertyId, hasProperty);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDeleteProperty(void* object, void* propertyId, uint8_t useStrictRules, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsDeleteProperty(object, propertyId, useStrictRules, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDefineProperty(void* object, void* propertyId, void* propertyDescriptor, bool* result)
    {
        auto win32_impl_result = WIN32_IMPL_JsDefineProperty(object, propertyId, propertyDescriptor, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsHasIndexedProperty(void* object, void* index, bool* result)
    {
        auto win32_impl_result = WIN32_IMPL_JsHasIndexedProperty(object, index, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetIndexedProperty(void* object, void* index, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetIndexedProperty(object, index, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetIndexedProperty(void* object, void* index, void* value)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetIndexedProperty(object, index, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDeleteIndexedProperty(void* object, void* index)
    {
        auto win32_impl_result = WIN32_IMPL_JsDeleteIndexedProperty(object, index);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsEquals(void* object1, void* object2, bool* result)
    {
        auto win32_impl_result = WIN32_IMPL_JsEquals(object1, object2, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsStrictEquals(void* object1, void* object2, bool* result)
    {
        auto win32_impl_result = WIN32_IMPL_JsStrictEquals(object1, object2, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsHasExternalData(void* object, bool* value)
    {
        auto win32_impl_result = WIN32_IMPL_JsHasExternalData(object, value);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetExternalData(void* object, void** externalData)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetExternalData(object, externalData);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetExternalData(void* object, void* externalData)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetExternalData(object, externalData);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateArray(uint32_t length, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateArray(length, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCallFunction(void* function, void** arguments, uint16_t argumentCount, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsCallFunction(function, arguments, argumentCount, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsConstructObject(void* function, void** arguments, uint16_t argumentCount, void** result)
    {
        auto win32_impl_result = WIN32_IMPL_JsConstructObject(function, arguments, argumentCount, result);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateFunction(Windows::Win32::Js::JsNativeFunction* nativeFunction, void* callbackState, void** function)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateFunction(nativeFunction, callbackState, function);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateRangeError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateRangeError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateReferenceError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateReferenceError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateSyntaxError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateSyntaxError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateTypeError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateTypeError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsCreateURIError(void* message, void** error)
    {
        auto win32_impl_result = WIN32_IMPL_JsCreateURIError(message, error);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsHasException(bool* hasException)
    {
        auto win32_impl_result = WIN32_IMPL_JsHasException(hasException);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsGetAndClearException(void** exception)
    {
        auto win32_impl_result = WIN32_IMPL_JsGetAndClearException(exception);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsSetException(void* exception)
    {
        auto win32_impl_result = WIN32_IMPL_JsSetException(exception);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsDisableRuntimeExecution(void* runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsDisableRuntimeExecution(runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsEnableRuntimeExecution(void* runtime)
    {
        auto win32_impl_result = WIN32_IMPL_JsEnableRuntimeExecution(runtime);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsIsRuntimeExecutionDisabled(void* runtime, bool* isDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_JsIsRuntimeExecutionDisabled(runtime, isDisabled);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsStartProfiling(Windows::Win32::Debug::IActiveScriptProfilerCallback* callback, Windows::Win32::Debug::__MIDL___MIDL_itf_activprof_0000_0000_0002 eventMask, uint32_t context)
    {
        auto win32_impl_result = WIN32_IMPL_JsStartProfiling(callback, eventMask, context);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsStopProfiling(int32_t reason)
    {
        auto win32_impl_result = WIN32_IMPL_JsStopProfiling(reason);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsEnumerateHeap(Windows::Win32::Debug::IActiveScriptProfilerHeapEnum** enumerator)
    {
        auto win32_impl_result = WIN32_IMPL_JsEnumerateHeap(enumerator);
        return win32_impl_result;
    }
    inline Windows::Win32::Js::JsErrorCode JsIsEnumeratingHeap(bool* isEnumeratingHeap)
    {
        auto win32_impl_result = WIN32_IMPL_JsIsEnumeratingHeap(isEnumeratingHeap);
        return win32_impl_result;
    }

    inline constexpr uint64_t JS_SOURCE_CONTEXT_NONE = 0xffffffffffffffff;
    inline constexpr int32_t JsRuntimeVersionEdge = -1;
#pragma endregion methods

}
#endif
