// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_MobileDeviceManagementRegistration_H
#define WIN32_Windows_Win32_MobileDeviceManagementRegistration_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.MobileDeviceManagementRegistration.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::MobileDeviceManagementRegistration
{
#pragma region methods
    inline int32_t GetDeviceRegistrationInfo(Windows::Win32::MobileDeviceManagementRegistration::REGISTRATION_INFORMATION_CLASS DeviceInformationClass, void** ppDeviceRegistrationInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetDeviceRegistrationInfo(DeviceInformationClass, ppDeviceRegistrationInfo);
        return win32_impl_result;
    }
    inline int32_t IsDeviceRegisteredWithManagement(int32_t* pfIsDeviceRegisteredWithManagement, uint32_t cchUPN, uint16_t* pszUPN)
    {
        auto win32_impl_result = WIN32_IMPL_IsDeviceRegisteredWithManagement(pfIsDeviceRegisteredWithManagement, cchUPN, pszUPN);
        return win32_impl_result;
    }
    inline int32_t IsManagementRegistrationAllowed(int32_t* pfIsManagementRegistrationAllowed)
    {
        auto win32_impl_result = WIN32_IMPL_IsManagementRegistrationAllowed(pfIsManagementRegistrationAllowed);
        return win32_impl_result;
    }
    inline int32_t IsMdmUxWithoutAadAllowed(int32_t* isEnrollmentAllowed)
    {
        auto win32_impl_result = WIN32_IMPL_IsMdmUxWithoutAadAllowed(isEnrollmentAllowed);
        return win32_impl_result;
    }
    inline int32_t SetManagedExternally(Windows::Win32::SystemServices::BOOL IsManagedExternally)
    {
        auto win32_impl_result = WIN32_IMPL_SetManagedExternally(IsManagedExternally);
        return win32_impl_result;
    }
    inline int32_t DiscoverManagementService(uint16_t* pszUPN, Windows::Win32::MobileDeviceManagementRegistration::MANAGEMENT_SERVICE_INFO** ppMgmtInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DiscoverManagementService(pszUPN, ppMgmtInfo);
        return win32_impl_result;
    }
    inline int32_t RegisterDeviceWithManagementUsingAADCredentials(Windows::Win32::SystemServices::HANDLE UserToken)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDeviceWithManagementUsingAADCredentials(UserToken);
        return win32_impl_result;
    }
    inline int32_t RegisterDeviceWithManagementUsingAADDeviceCredentials()
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDeviceWithManagementUsingAADDeviceCredentials();
        return win32_impl_result;
    }
    inline int32_t RegisterDeviceWithManagement(uint16_t* pszUPN, uint16_t* ppszMDMServiceUri, uint16_t* ppzsAccessToken)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDeviceWithManagement(pszUPN, ppszMDMServiceUri, ppzsAccessToken);
        return win32_impl_result;
    }
    inline int32_t UnregisterDeviceWithManagement(uint16_t* enrollmentID)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterDeviceWithManagement(enrollmentID);
        return win32_impl_result;
    }
    inline int32_t GetManagementAppHyperlink(uint32_t cchHyperlink, uint16_t* pszHyperlink)
    {
        auto win32_impl_result = WIN32_IMPL_GetManagementAppHyperlink(cchHyperlink, pszHyperlink);
        return win32_impl_result;
    }
    inline int32_t DiscoverManagementServiceEx(uint16_t* pszUPN, uint16_t* pszDiscoveryServiceCandidate, Windows::Win32::MobileDeviceManagementRegistration::MANAGEMENT_SERVICE_INFO** ppMgmtInfo)
    {
        auto win32_impl_result = WIN32_IMPL_DiscoverManagementServiceEx(pszUPN, pszDiscoveryServiceCandidate, ppMgmtInfo);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
