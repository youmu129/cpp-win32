// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Multicast_H
#define WIN32_Windows_Win32_Multicast_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Multicast.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Multicast
{
#pragma region methods
    inline uint32_t McastApiStartup(uint32_t* Version)
    {
        auto win32_impl_result = WIN32_IMPL_McastApiStartup(Version);
        return win32_impl_result;
    }
    inline void McastApiCleanup()
    {
        WIN32_IMPL_McastApiCleanup();
    }
    inline uint32_t McastGenUID(Windows::Win32::Multicast::MCAST_CLIENT_UID* pRequestID)
    {
        auto win32_impl_result = WIN32_IMPL_McastGenUID(pRequestID);
        return win32_impl_result;
    }
    inline uint32_t McastEnumerateScopes(uint16_t AddrFamily, Windows::Win32::SystemServices::BOOL ReQuery, Windows::Win32::Multicast::MCAST_SCOPE_ENTRY* pScopeList, uint32_t* pScopeLen, uint32_t* pScopeCount)
    {
        auto win32_impl_result = WIN32_IMPL_McastEnumerateScopes(AddrFamily, ReQuery, pScopeList, pScopeLen, pScopeCount);
        return win32_impl_result;
    }
    inline uint32_t McastRequestAddress(uint16_t AddrFamily, Windows::Win32::Multicast::MCAST_CLIENT_UID* pRequestID, Windows::Win32::Multicast::MCAST_SCOPE_CTX* pScopeCtx, Windows::Win32::Multicast::MCAST_LEASE_REQUEST* pAddrRequest, Windows::Win32::Multicast::MCAST_LEASE_RESPONSE* pAddrResponse)
    {
        auto win32_impl_result = WIN32_IMPL_McastRequestAddress(AddrFamily, pRequestID, pScopeCtx, pAddrRequest, pAddrResponse);
        return win32_impl_result;
    }
    inline uint32_t McastRenewAddress(uint16_t AddrFamily, Windows::Win32::Multicast::MCAST_CLIENT_UID* pRequestID, Windows::Win32::Multicast::MCAST_LEASE_REQUEST* pRenewRequest, Windows::Win32::Multicast::MCAST_LEASE_RESPONSE* pRenewResponse)
    {
        auto win32_impl_result = WIN32_IMPL_McastRenewAddress(AddrFamily, pRequestID, pRenewRequest, pRenewResponse);
        return win32_impl_result;
    }
    inline uint32_t McastReleaseAddress(uint16_t AddrFamily, Windows::Win32::Multicast::MCAST_CLIENT_UID* pRequestID, Windows::Win32::Multicast::MCAST_LEASE_REQUEST* pReleaseRequest)
    {
        auto win32_impl_result = WIN32_IMPL_McastReleaseAddress(AddrFamily, pRequestID, pReleaseRequest);
        return win32_impl_result;
    }

    inline constexpr int32_t MCAST_API_VERSION_0 = 0;
    inline constexpr int32_t MCAST_API_VERSION_1 = 1;
#pragma endregion methods

}
#endif
