// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Multimedia_H
#define WIN32_Windows_Win32_Multimedia_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Multimedia.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Multimedia
{
#pragma region methods
    inline uint32_t joyConfigChanged(uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_joyConfigChanged(dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT CloseDriver(intptr_t hDriver, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_CloseDriver(hDriver, lParam1, lParam2);
        return win32_impl_result;
    }
    inline intptr_t OpenDriver(uint16_t* szDriverName, uint16_t* szSectionName, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_OpenDriver(szDriverName, szSectionName, lParam2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT SendDriverMessage(intptr_t hDriver, uint32_t message, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_SendDriverMessage(hDriver, message, lParam1, lParam2);
        return win32_impl_result;
    }
    inline intptr_t DrvGetModuleHandle(intptr_t hDriver)
    {
        auto win32_impl_result = WIN32_IMPL_DrvGetModuleHandle(hDriver);
        return win32_impl_result;
    }
    inline intptr_t GetDriverModuleHandle(intptr_t hDriver)
    {
        auto win32_impl_result = WIN32_IMPL_GetDriverModuleHandle(hDriver);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT DefDriverProc(size_t dwDriverIdentifier, intptr_t hdrvr, uint32_t uMsg, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_DefDriverProc(dwDriverIdentifier, hdrvr, uMsg, lParam1, lParam2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DriverCallback(size_t dwCallback, uint32_t dwFlags, intptr_t hDevice, uint32_t dwMsg, size_t dwUser, size_t dwParam1, size_t dwParam2)
    {
        auto win32_impl_result = WIN32_IMPL_DriverCallback(dwCallback, dwFlags, hDevice, dwMsg, dwUser, dwParam1, dwParam2);
        return win32_impl_result;
    }
    inline int32_t sndOpenSound(uint16_t* EventName, uint16_t* AppName, int32_t Flags, intptr_t* FileHandle)
    {
        auto win32_impl_result = WIN32_IMPL_sndOpenSound(EventName, AppName, Flags, FileHandle);
        return win32_impl_result;
    }
    inline uint32_t mmDrvInstall(intptr_t hDriver, uint16_t* wszDrvEntry, Windows::Win32::Multimedia::DRIVERMSGPROC* drvMessage, uint32_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_mmDrvInstall(hDriver, wszDrvEntry, drvMessage, wFlags);
        return win32_impl_result;
    }
    inline uint32_t mmioStringToFOURCCA(int8_t* sz, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_mmioStringToFOURCCA(sz, uFlags);
        return win32_impl_result;
    }
    inline uint32_t mmioStringToFOURCCW(uint16_t* sz, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_mmioStringToFOURCCW(sz, uFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::LPMMIOPROC* mmioInstallIOProcA(uint32_t fccIOProc, Windows::Win32::Multimedia::LPMMIOPROC* pIOProc, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_mmioInstallIOProcA(fccIOProc, pIOProc, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::LPMMIOPROC* mmioInstallIOProcW(uint32_t fccIOProc, Windows::Win32::Multimedia::LPMMIOPROC* pIOProc, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_mmioInstallIOProcW(fccIOProc, pIOProc, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HMMIO__* mmioOpenA(int8_t* pszFileName, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_mmioOpenA(pszFileName, pmmioinfo, fdwOpen);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HMMIO__* mmioOpenW(uint16_t* pszFileName, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_mmioOpenW(pszFileName, pmmioinfo, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t mmioRenameA(int8_t* pszFileName, int8_t* pszNewFileName, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fdwRename)
    {
        auto win32_impl_result = WIN32_IMPL_mmioRenameA(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        return win32_impl_result;
    }
    inline uint32_t mmioRenameW(uint16_t* pszFileName, uint16_t* pszNewFileName, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fdwRename)
    {
        auto win32_impl_result = WIN32_IMPL_mmioRenameW(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        return win32_impl_result;
    }
    inline uint32_t mmioClose(Windows::Win32::Multimedia::HMMIO__* hmmio, uint32_t fuClose)
    {
        auto win32_impl_result = WIN32_IMPL_mmioClose(hmmio, fuClose);
        return win32_impl_result;
    }
    inline int32_t mmioRead(Windows::Win32::Multimedia::HMMIO__* hmmio, int8_t* pch, int32_t cch)
    {
        auto win32_impl_result = WIN32_IMPL_mmioRead(hmmio, pch, cch);
        return win32_impl_result;
    }
    inline int32_t mmioWrite(Windows::Win32::Multimedia::HMMIO__* hmmio, int8_t* pch, int32_t cch)
    {
        auto win32_impl_result = WIN32_IMPL_mmioWrite(hmmio, pch, cch);
        return win32_impl_result;
    }
    inline int32_t mmioSeek(Windows::Win32::Multimedia::HMMIO__* hmmio, int32_t lOffset, int32_t iOrigin)
    {
        auto win32_impl_result = WIN32_IMPL_mmioSeek(hmmio, lOffset, iOrigin);
        return win32_impl_result;
    }
    inline uint32_t mmioGetInfo(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fuInfo)
    {
        auto win32_impl_result = WIN32_IMPL_mmioGetInfo(hmmio, pmmioinfo, fuInfo);
        return win32_impl_result;
    }
    inline uint32_t mmioSetInfo(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fuInfo)
    {
        auto win32_impl_result = WIN32_IMPL_mmioSetInfo(hmmio, pmmioinfo, fuInfo);
        return win32_impl_result;
    }
    inline uint32_t mmioSetBuffer(Windows::Win32::Multimedia::HMMIO__* hmmio, int8_t* pchBuffer, int32_t cchBuffer, uint32_t fuBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_mmioSetBuffer(hmmio, pchBuffer, cchBuffer, fuBuffer);
        return win32_impl_result;
    }
    inline uint32_t mmioFlush(Windows::Win32::Multimedia::HMMIO__* hmmio, uint32_t fuFlush)
    {
        auto win32_impl_result = WIN32_IMPL_mmioFlush(hmmio, fuFlush);
        return win32_impl_result;
    }
    inline uint32_t mmioAdvance(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMIOINFO* pmmioinfo, uint32_t fuAdvance)
    {
        auto win32_impl_result = WIN32_IMPL_mmioAdvance(hmmio, pmmioinfo, fuAdvance);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT mmioSendMessage(Windows::Win32::Multimedia::HMMIO__* hmmio, uint32_t uMsg, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_mmioSendMessage(hmmio, uMsg, lParam1, lParam2);
        return win32_impl_result;
    }
    inline uint32_t mmioDescend(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMCKINFO* pmmcki, Windows::Win32::Multimedia::MMCKINFO* pmmckiParent, uint32_t fuDescend)
    {
        auto win32_impl_result = WIN32_IMPL_mmioDescend(hmmio, pmmcki, pmmckiParent, fuDescend);
        return win32_impl_result;
    }
    inline uint32_t mmioAscend(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMCKINFO* pmmcki, uint32_t fuAscend)
    {
        auto win32_impl_result = WIN32_IMPL_mmioAscend(hmmio, pmmcki, fuAscend);
        return win32_impl_result;
    }
    inline uint32_t mmioCreateChunk(Windows::Win32::Multimedia::HMMIO__* hmmio, Windows::Win32::Multimedia::MMCKINFO* pmmcki, uint32_t fuCreate)
    {
        auto win32_impl_result = WIN32_IMPL_mmioCreateChunk(hmmio, pmmcki, fuCreate);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL sndPlaySoundA(int8_t* pszSound, uint32_t fuSound)
    {
        auto win32_impl_result = WIN32_IMPL_sndPlaySoundA(pszSound, fuSound);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL sndPlaySoundW(uint16_t* pszSound, uint32_t fuSound)
    {
        auto win32_impl_result = WIN32_IMPL_sndPlaySoundW(pszSound, fuSound);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlaySoundA(int8_t* pszSound, intptr_t hmod, uint32_t fdwSound)
    {
        auto win32_impl_result = WIN32_IMPL_PlaySoundA(pszSound, hmod, fdwSound);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PlaySoundW(uint16_t* pszSound, intptr_t hmod, uint32_t fdwSound)
    {
        auto win32_impl_result = WIN32_IMPL_PlaySoundW(pszSound, hmod, fdwSound);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t waveOutGetDevCapsA(size_t uDeviceID, Windows::Win32::Multimedia::WAVEOUTCAPSA* pwoc, uint32_t cbwoc)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetDevCapsA(uDeviceID, pwoc, cbwoc);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetDevCapsW(size_t uDeviceID, Windows::Win32::Multimedia::WAVEOUTCAPSW* pwoc, uint32_t cbwoc)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetDevCapsW(uDeviceID, pwoc, cbwoc);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetVolume(intptr_t hwo, uint32_t* pdwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetVolume(hwo, pdwVolume);
        return win32_impl_result;
    }
    inline uint32_t waveOutSetVolume(intptr_t hwo, uint32_t dwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutSetVolume(hwo, dwVolume);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetErrorTextA(uint32_t mmrError, int8_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetErrorTextA(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetErrorTextW(uint32_t mmrError, uint16_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetErrorTextW(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t waveOutOpen(intptr_t* phwo, uint32_t uDeviceID, Windows::Win32::Multimedia::WAVEFORMATEX* pwfx, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutOpen(phwo, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t waveOutClose(intptr_t hwo)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutClose(hwo);
        return win32_impl_result;
    }
    inline uint32_t waveOutPrepareHeader(intptr_t hwo, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutPrepareHeader(hwo, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveOutUnprepareHeader(intptr_t hwo, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutUnprepareHeader(hwo, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveOutWrite(intptr_t hwo, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutWrite(hwo, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveOutPause(intptr_t hwo)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutPause(hwo);
        return win32_impl_result;
    }
    inline uint32_t waveOutRestart(intptr_t hwo)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutRestart(hwo);
        return win32_impl_result;
    }
    inline uint32_t waveOutReset(intptr_t hwo)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutReset(hwo);
        return win32_impl_result;
    }
    inline uint32_t waveOutBreakLoop(intptr_t hwo)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutBreakLoop(hwo);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetPosition(intptr_t hwo, Windows::Win32::Multimedia::MMTIME* pmmt, uint32_t cbmmt)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetPosition(hwo, pmmt, cbmmt);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetPitch(intptr_t hwo, uint32_t* pdwPitch)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetPitch(hwo, pdwPitch);
        return win32_impl_result;
    }
    inline uint32_t waveOutSetPitch(intptr_t hwo, uint32_t dwPitch)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutSetPitch(hwo, dwPitch);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetPlaybackRate(intptr_t hwo, uint32_t* pdwRate)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetPlaybackRate(hwo, pdwRate);
        return win32_impl_result;
    }
    inline uint32_t waveOutSetPlaybackRate(intptr_t hwo, uint32_t dwRate)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutSetPlaybackRate(hwo, dwRate);
        return win32_impl_result;
    }
    inline uint32_t waveOutGetID(intptr_t hwo, uint32_t* puDeviceID)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutGetID(hwo, puDeviceID);
        return win32_impl_result;
    }
    inline uint32_t waveOutMessage(intptr_t hwo, uint32_t uMsg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_waveOutMessage(hwo, uMsg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t waveInGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t waveInGetDevCapsA(size_t uDeviceID, Windows::Win32::Multimedia::WAVEINCAPSA* pwic, uint32_t cbwic)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetDevCapsA(uDeviceID, pwic, cbwic);
        return win32_impl_result;
    }
    inline uint32_t waveInGetDevCapsW(size_t uDeviceID, Windows::Win32::Multimedia::WAVEINCAPSW* pwic, uint32_t cbwic)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetDevCapsW(uDeviceID, pwic, cbwic);
        return win32_impl_result;
    }
    inline uint32_t waveInGetErrorTextA(uint32_t mmrError, int8_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetErrorTextA(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t waveInGetErrorTextW(uint32_t mmrError, uint16_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetErrorTextW(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t waveInOpen(intptr_t* phwi, uint32_t uDeviceID, Windows::Win32::Multimedia::WAVEFORMATEX* pwfx, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_waveInOpen(phwi, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t waveInClose(intptr_t hwi)
    {
        auto win32_impl_result = WIN32_IMPL_waveInClose(hwi);
        return win32_impl_result;
    }
    inline uint32_t waveInPrepareHeader(intptr_t hwi, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveInPrepareHeader(hwi, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveInUnprepareHeader(intptr_t hwi, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveInUnprepareHeader(hwi, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveInAddBuffer(intptr_t hwi, Windows::Win32::Multimedia::WAVEHDR* pwh, uint32_t cbwh)
    {
        auto win32_impl_result = WIN32_IMPL_waveInAddBuffer(hwi, pwh, cbwh);
        return win32_impl_result;
    }
    inline uint32_t waveInStart(intptr_t hwi)
    {
        auto win32_impl_result = WIN32_IMPL_waveInStart(hwi);
        return win32_impl_result;
    }
    inline uint32_t waveInStop(intptr_t hwi)
    {
        auto win32_impl_result = WIN32_IMPL_waveInStop(hwi);
        return win32_impl_result;
    }
    inline uint32_t waveInReset(intptr_t hwi)
    {
        auto win32_impl_result = WIN32_IMPL_waveInReset(hwi);
        return win32_impl_result;
    }
    inline uint32_t waveInGetPosition(intptr_t hwi, Windows::Win32::Multimedia::MMTIME* pmmt, uint32_t cbmmt)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetPosition(hwi, pmmt, cbmmt);
        return win32_impl_result;
    }
    inline uint32_t waveInGetID(intptr_t hwi, uint32_t* puDeviceID)
    {
        auto win32_impl_result = WIN32_IMPL_waveInGetID(hwi, puDeviceID);
        return win32_impl_result;
    }
    inline uint32_t waveInMessage(intptr_t hwi, uint32_t uMsg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_waveInMessage(hwi, uMsg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t midiStreamOpen(intptr_t* phms, uint32_t* puDeviceID, uint32_t cMidi, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamOpen(phms, puDeviceID, cMidi, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t midiStreamClose(intptr_t hms)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamClose(hms);
        return win32_impl_result;
    }
    inline uint32_t midiStreamProperty(intptr_t hms, uint8_t* lppropdata, uint32_t dwProperty)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamProperty(hms, lppropdata, dwProperty);
        return win32_impl_result;
    }
    inline uint32_t midiStreamPosition(intptr_t hms, Windows::Win32::Multimedia::MMTIME* lpmmt, uint32_t cbmmt)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamPosition(hms, lpmmt, cbmmt);
        return win32_impl_result;
    }
    inline uint32_t midiStreamOut(intptr_t hms, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamOut(hms, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiStreamPause(intptr_t hms)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamPause(hms);
        return win32_impl_result;
    }
    inline uint32_t midiStreamRestart(intptr_t hms)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamRestart(hms);
        return win32_impl_result;
    }
    inline uint32_t midiStreamStop(intptr_t hms)
    {
        auto win32_impl_result = WIN32_IMPL_midiStreamStop(hms);
        return win32_impl_result;
    }
    inline uint32_t midiConnect(intptr_t hmi, intptr_t hmo, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_midiConnect(hmi, hmo, pReserved);
        return win32_impl_result;
    }
    inline uint32_t midiDisconnect(intptr_t hmi, intptr_t hmo, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_midiDisconnect(hmi, hmo, pReserved);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetDevCapsA(size_t uDeviceID, Windows::Win32::Multimedia::MIDIOUTCAPSA* pmoc, uint32_t cbmoc)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetDevCapsA(uDeviceID, pmoc, cbmoc);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetDevCapsW(size_t uDeviceID, Windows::Win32::Multimedia::MIDIOUTCAPSW* pmoc, uint32_t cbmoc)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetDevCapsW(uDeviceID, pmoc, cbmoc);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetVolume(intptr_t hmo, uint32_t* pdwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetVolume(hmo, pdwVolume);
        return win32_impl_result;
    }
    inline uint32_t midiOutSetVolume(intptr_t hmo, uint32_t dwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutSetVolume(hmo, dwVolume);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetErrorTextA(uint32_t mmrError, int8_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetErrorTextA(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetErrorTextW(uint32_t mmrError, uint16_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetErrorTextW(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t midiOutOpen(intptr_t* phmo, uint32_t uDeviceID, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutOpen(phmo, uDeviceID, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t midiOutClose(intptr_t hmo)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutClose(hmo);
        return win32_impl_result;
    }
    inline uint32_t midiOutPrepareHeader(intptr_t hmo, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutPrepareHeader(hmo, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiOutUnprepareHeader(intptr_t hmo, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutUnprepareHeader(hmo, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiOutShortMsg(intptr_t hmo, uint32_t dwMsg)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutShortMsg(hmo, dwMsg);
        return win32_impl_result;
    }
    inline uint32_t midiOutLongMsg(intptr_t hmo, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutLongMsg(hmo, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiOutReset(intptr_t hmo)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutReset(hmo);
        return win32_impl_result;
    }
    inline uint32_t midiOutCachePatches(intptr_t hmo, uint32_t uBank, uint16_t* pwpa, uint32_t fuCache)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutCachePatches(hmo, uBank, pwpa, fuCache);
        return win32_impl_result;
    }
    inline uint32_t midiOutCacheDrumPatches(intptr_t hmo, uint32_t uPatch, uint16_t* pwkya, uint32_t fuCache)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutCacheDrumPatches(hmo, uPatch, pwkya, fuCache);
        return win32_impl_result;
    }
    inline uint32_t midiOutGetID(intptr_t hmo, uint32_t* puDeviceID)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutGetID(hmo, puDeviceID);
        return win32_impl_result;
    }
    inline uint32_t midiOutMessage(intptr_t hmo, uint32_t uMsg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_midiOutMessage(hmo, uMsg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t midiInGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t midiInGetDevCapsA(size_t uDeviceID, Windows::Win32::Multimedia::MIDIINCAPSA* pmic, uint32_t cbmic)
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetDevCapsA(uDeviceID, pmic, cbmic);
        return win32_impl_result;
    }
    inline uint32_t midiInGetDevCapsW(size_t uDeviceID, Windows::Win32::Multimedia::MIDIINCAPSW* pmic, uint32_t cbmic)
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetDevCapsW(uDeviceID, pmic, cbmic);
        return win32_impl_result;
    }
    inline uint32_t midiInGetErrorTextA(uint32_t mmrError, int8_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetErrorTextA(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t midiInGetErrorTextW(uint32_t mmrError, uint16_t* pszText, uint32_t cchText)
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetErrorTextW(mmrError, pszText, cchText);
        return win32_impl_result;
    }
    inline uint32_t midiInOpen(intptr_t* phmi, uint32_t uDeviceID, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_midiInOpen(phmi, uDeviceID, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t midiInClose(intptr_t hmi)
    {
        auto win32_impl_result = WIN32_IMPL_midiInClose(hmi);
        return win32_impl_result;
    }
    inline uint32_t midiInPrepareHeader(intptr_t hmi, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiInPrepareHeader(hmi, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiInUnprepareHeader(intptr_t hmi, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiInUnprepareHeader(hmi, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiInAddBuffer(intptr_t hmi, Windows::Win32::Multimedia::MIDIHDR* pmh, uint32_t cbmh)
    {
        auto win32_impl_result = WIN32_IMPL_midiInAddBuffer(hmi, pmh, cbmh);
        return win32_impl_result;
    }
    inline uint32_t midiInStart(intptr_t hmi)
    {
        auto win32_impl_result = WIN32_IMPL_midiInStart(hmi);
        return win32_impl_result;
    }
    inline uint32_t midiInStop(intptr_t hmi)
    {
        auto win32_impl_result = WIN32_IMPL_midiInStop(hmi);
        return win32_impl_result;
    }
    inline uint32_t midiInReset(intptr_t hmi)
    {
        auto win32_impl_result = WIN32_IMPL_midiInReset(hmi);
        return win32_impl_result;
    }
    inline uint32_t midiInGetID(intptr_t hmi, uint32_t* puDeviceID)
    {
        auto win32_impl_result = WIN32_IMPL_midiInGetID(hmi, puDeviceID);
        return win32_impl_result;
    }
    inline uint32_t midiInMessage(intptr_t hmi, uint32_t uMsg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_midiInMessage(hmi, uMsg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t auxGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_auxGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t auxGetDevCapsA(size_t uDeviceID, Windows::Win32::Multimedia::AUXCAPSA* pac, uint32_t cbac)
    {
        auto win32_impl_result = WIN32_IMPL_auxGetDevCapsA(uDeviceID, pac, cbac);
        return win32_impl_result;
    }
    inline uint32_t auxGetDevCapsW(size_t uDeviceID, Windows::Win32::Multimedia::AUXCAPSW* pac, uint32_t cbac)
    {
        auto win32_impl_result = WIN32_IMPL_auxGetDevCapsW(uDeviceID, pac, cbac);
        return win32_impl_result;
    }
    inline uint32_t auxSetVolume(uint32_t uDeviceID, uint32_t dwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_auxSetVolume(uDeviceID, dwVolume);
        return win32_impl_result;
    }
    inline uint32_t auxGetVolume(uint32_t uDeviceID, uint32_t* pdwVolume)
    {
        auto win32_impl_result = WIN32_IMPL_auxGetVolume(uDeviceID, pdwVolume);
        return win32_impl_result;
    }
    inline uint32_t auxOutMessage(uint32_t uDeviceID, uint32_t uMsg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_auxOutMessage(uDeviceID, uMsg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t mixerGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t mixerGetDevCapsA(size_t uMxId, Windows::Win32::Multimedia::MIXERCAPSA* pmxcaps, uint32_t cbmxcaps)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetDevCapsA(uMxId, pmxcaps, cbmxcaps);
        return win32_impl_result;
    }
    inline uint32_t mixerGetDevCapsW(size_t uMxId, Windows::Win32::Multimedia::MIXERCAPSW* pmxcaps, uint32_t cbmxcaps)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetDevCapsW(uMxId, pmxcaps, cbmxcaps);
        return win32_impl_result;
    }
    inline uint32_t mixerOpen(intptr_t* phmx, uint32_t uMxId, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_mixerOpen(phmx, uMxId, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t mixerClose(intptr_t hmx)
    {
        auto win32_impl_result = WIN32_IMPL_mixerClose(hmx);
        return win32_impl_result;
    }
    inline uint32_t mixerMessage(intptr_t hmx, uint32_t uMsg, size_t dwParam1, size_t dwParam2)
    {
        auto win32_impl_result = WIN32_IMPL_mixerMessage(hmx, uMsg, dwParam1, dwParam2);
        return win32_impl_result;
    }
    inline uint32_t mixerGetLineInfoA(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERLINEA* pmxl, uint32_t fdwInfo)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetLineInfoA(hmxobj, pmxl, fdwInfo);
        return win32_impl_result;
    }
    inline uint32_t mixerGetLineInfoW(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERLINEW* pmxl, uint32_t fdwInfo)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetLineInfoW(hmxobj, pmxl, fdwInfo);
        return win32_impl_result;
    }
    inline uint32_t mixerGetID(intptr_t hmxobj, uint32_t* puMxId, uint32_t fdwId)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetID(hmxobj, puMxId, fdwId);
        return win32_impl_result;
    }
    inline uint32_t mixerGetLineControlsA(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERLINECONTROLSA* pmxlc, uint32_t fdwControls)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetLineControlsA(hmxobj, pmxlc, fdwControls);
        return win32_impl_result;
    }
    inline uint32_t mixerGetLineControlsW(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERLINECONTROLSW* pmxlc, uint32_t fdwControls)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetLineControlsW(hmxobj, pmxlc, fdwControls);
        return win32_impl_result;
    }
    inline uint32_t mixerGetControlDetailsA(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERCONTROLDETAILS* pmxcd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetControlDetailsA(hmxobj, pmxcd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t mixerGetControlDetailsW(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERCONTROLDETAILS* pmxcd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_mixerGetControlDetailsW(hmxobj, pmxcd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t mixerSetControlDetails(intptr_t hmxobj, Windows::Win32::Multimedia::MIXERCONTROLDETAILS* pmxcd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_mixerSetControlDetails(hmxobj, pmxcd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t timeGetSystemTime(Windows::Win32::Multimedia::MMTIME* pmmt, uint32_t cbmmt)
    {
        auto win32_impl_result = WIN32_IMPL_timeGetSystemTime(pmmt, cbmmt);
        return win32_impl_result;
    }
    inline uint32_t timeGetTime()
    {
        auto win32_impl_result = WIN32_IMPL_timeGetTime();
        return win32_impl_result;
    }
    inline uint32_t timeGetDevCaps(Windows::Win32::Multimedia::TIMECAPS* ptc, uint32_t cbtc)
    {
        auto win32_impl_result = WIN32_IMPL_timeGetDevCaps(ptc, cbtc);
        return win32_impl_result;
    }
    inline uint32_t timeBeginPeriod(uint32_t uPeriod)
    {
        auto win32_impl_result = WIN32_IMPL_timeBeginPeriod(uPeriod);
        return win32_impl_result;
    }
    inline uint32_t timeEndPeriod(uint32_t uPeriod)
    {
        auto win32_impl_result = WIN32_IMPL_timeEndPeriod(uPeriod);
        return win32_impl_result;
    }
    inline uint32_t joyGetPosEx(uint32_t uJoyID, Windows::Win32::Multimedia::JOYINFOEX* pji)
    {
        auto win32_impl_result = WIN32_IMPL_joyGetPosEx(uJoyID, pji);
        return win32_impl_result;
    }
    inline uint32_t joyGetNumDevs()
    {
        auto win32_impl_result = WIN32_IMPL_joyGetNumDevs();
        return win32_impl_result;
    }
    inline uint32_t joyGetDevCapsA(size_t uJoyID, Windows::Win32::Multimedia::JOYCAPSA* pjc, uint32_t cbjc)
    {
        auto win32_impl_result = WIN32_IMPL_joyGetDevCapsA(uJoyID, pjc, cbjc);
        return win32_impl_result;
    }
    inline uint32_t joyGetDevCapsW(size_t uJoyID, Windows::Win32::Multimedia::JOYCAPSW* pjc, uint32_t cbjc)
    {
        auto win32_impl_result = WIN32_IMPL_joyGetDevCapsW(uJoyID, pjc, cbjc);
        return win32_impl_result;
    }
    inline uint32_t joyGetPos(uint32_t uJoyID, Windows::Win32::Multimedia::JOYINFO* pji)
    {
        auto win32_impl_result = WIN32_IMPL_joyGetPos(uJoyID, pji);
        return win32_impl_result;
    }
    inline uint32_t joyGetThreshold(uint32_t uJoyID, uint32_t* puThreshold)
    {
        auto win32_impl_result = WIN32_IMPL_joyGetThreshold(uJoyID, puThreshold);
        return win32_impl_result;
    }
    inline uint32_t joyReleaseCapture(uint32_t uJoyID)
    {
        auto win32_impl_result = WIN32_IMPL_joyReleaseCapture(uJoyID);
        return win32_impl_result;
    }
    inline uint32_t joySetCapture(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t uJoyID, uint32_t uPeriod, Windows::Win32::SystemServices::BOOL fChanged)
    {
        auto win32_impl_result = WIN32_IMPL_joySetCapture(hwnd, uJoyID, uPeriod, fChanged);
        return win32_impl_result;
    }
    inline uint32_t joySetThreshold(uint32_t uJoyID, uint32_t uThreshold)
    {
        auto win32_impl_result = WIN32_IMPL_joySetThreshold(uJoyID, uThreshold);
        return win32_impl_result;
    }
    inline uint32_t acmGetVersion()
    {
        auto win32_impl_result = WIN32_IMPL_acmGetVersion();
        return win32_impl_result;
    }
    inline uint32_t acmMetrics(Windows::Win32::Multimedia::HACMOBJ__* hao, uint32_t uMetric, void* pMetric)
    {
        auto win32_impl_result = WIN32_IMPL_acmMetrics(hao, uMetric, pMetric);
        return win32_impl_result;
    }
    inline uint32_t acmDriverEnum(Windows::Win32::Multimedia::ACMDRIVERENUMCB* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverEnum(fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmDriverID(Windows::Win32::Multimedia::HACMOBJ__* hao, Windows::Win32::Multimedia::HACMDRIVERID__** phadid, uint32_t fdwDriverID)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverID(hao, phadid, fdwDriverID);
        return win32_impl_result;
    }
    inline uint32_t acmDriverAddA(Windows::Win32::Multimedia::HACMDRIVERID__** phadid, Windows::Win32::SystemServices::HINSTANCE hinstModule, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t dwPriority, uint32_t fdwAdd)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverAddA(phadid, hinstModule, lParam, dwPriority, fdwAdd);
        return win32_impl_result;
    }
    inline uint32_t acmDriverAddW(Windows::Win32::Multimedia::HACMDRIVERID__** phadid, Windows::Win32::SystemServices::HINSTANCE hinstModule, Windows::Win32::WindowsAndMessaging::LPARAM lParam, uint32_t dwPriority, uint32_t fdwAdd)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverAddW(phadid, hinstModule, lParam, dwPriority, fdwAdd);
        return win32_impl_result;
    }
    inline uint32_t acmDriverRemove(Windows::Win32::Multimedia::HACMDRIVERID__* hadid, uint32_t fdwRemove)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverRemove(hadid, fdwRemove);
        return win32_impl_result;
    }
    inline uint32_t acmDriverOpen(Windows::Win32::Multimedia::HACMDRIVER__** phad, Windows::Win32::Multimedia::HACMDRIVERID__* hadid, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverOpen(phad, hadid, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t acmDriverClose(Windows::Win32::Multimedia::HACMDRIVER__* had, uint32_t fdwClose)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverClose(had, fdwClose);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT acmDriverMessage(Windows::Win32::Multimedia::HACMDRIVER__* had, uint32_t uMsg, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverMessage(had, uMsg, lParam1, lParam2);
        return win32_impl_result;
    }
    inline uint32_t acmDriverPriority(Windows::Win32::Multimedia::HACMDRIVERID__* hadid, uint32_t dwPriority, uint32_t fdwPriority)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverPriority(hadid, dwPriority, fdwPriority);
        return win32_impl_result;
    }
    inline uint32_t acmDriverDetailsA(Windows::Win32::Multimedia::HACMDRIVERID__* hadid, Windows::Win32::Multimedia::tACMDRIVERDETAILSA* padd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverDetailsA(hadid, padd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmDriverDetailsW(Windows::Win32::Multimedia::HACMDRIVERID__* hadid, Windows::Win32::Multimedia::tACMDRIVERDETAILSW* padd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmDriverDetailsW(hadid, padd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFormatTagDetailsA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATTAGDETAILSA* paftd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatTagDetailsA(had, paftd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFormatTagDetailsW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATTAGDETAILSW* paftd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatTagDetailsW(had, paftd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFormatTagEnumA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATTAGDETAILSA* paftd, Windows::Win32::Multimedia::ACMFORMATTAGENUMCBA* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatTagEnumA(had, paftd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFormatTagEnumW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATTAGDETAILSW* paftd, Windows::Win32::Multimedia::ACMFORMATTAGENUMCBW* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatTagEnumW(had, paftd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFormatDetailsA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATDETAILSA* pafd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatDetailsA(had, pafd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFormatDetailsW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATDETAILSW* pafd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatDetailsW(had, pafd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFormatEnumA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATDETAILSA* pafd, Windows::Win32::Multimedia::ACMFORMATENUMCBA* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatEnumA(had, pafd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFormatEnumW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFORMATDETAILSW* pafd, Windows::Win32::Multimedia::ACMFORMATENUMCBW* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatEnumW(had, pafd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFormatSuggest(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::WAVEFORMATEX* pwfxSrc, Windows::Win32::Multimedia::WAVEFORMATEX* pwfxDst, uint32_t cbwfxDst, uint32_t fdwSuggest)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatSuggest(had, pwfxSrc, pwfxDst, cbwfxDst, fdwSuggest);
        return win32_impl_result;
    }
    inline uint32_t acmFormatChooseA(Windows::Win32::Multimedia::tACMFORMATCHOOSEA* pafmtc)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatChooseA(pafmtc);
        return win32_impl_result;
    }
    inline uint32_t acmFormatChooseW(Windows::Win32::Multimedia::tACMFORMATCHOOSEW* pafmtc)
    {
        auto win32_impl_result = WIN32_IMPL_acmFormatChooseW(pafmtc);
        return win32_impl_result;
    }
    inline uint32_t acmFilterTagDetailsA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERTAGDETAILSA* paftd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterTagDetailsA(had, paftd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFilterTagDetailsW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERTAGDETAILSW* paftd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterTagDetailsW(had, paftd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFilterTagEnumA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERTAGDETAILSA* paftd, Windows::Win32::Multimedia::ACMFILTERTAGENUMCBA* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterTagEnumA(had, paftd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFilterTagEnumW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERTAGDETAILSW* paftd, Windows::Win32::Multimedia::ACMFILTERTAGENUMCBW* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterTagEnumW(had, paftd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFilterDetailsA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERDETAILSA* pafd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterDetailsA(had, pafd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFilterDetailsW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERDETAILSW* pafd, uint32_t fdwDetails)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterDetailsW(had, pafd, fdwDetails);
        return win32_impl_result;
    }
    inline uint32_t acmFilterEnumA(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERDETAILSA* pafd, Windows::Win32::Multimedia::ACMFILTERENUMCBA* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterEnumA(had, pafd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFilterEnumW(Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::tACMFILTERDETAILSW* pafd, Windows::Win32::Multimedia::ACMFILTERENUMCBW* fnCallback, size_t dwInstance, uint32_t fdwEnum)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterEnumW(had, pafd, fnCallback, dwInstance, fdwEnum);
        return win32_impl_result;
    }
    inline uint32_t acmFilterChooseA(Windows::Win32::Multimedia::tACMFILTERCHOOSEA* pafltrc)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterChooseA(pafltrc);
        return win32_impl_result;
    }
    inline uint32_t acmFilterChooseW(Windows::Win32::Multimedia::tACMFILTERCHOOSEW* pafltrc)
    {
        auto win32_impl_result = WIN32_IMPL_acmFilterChooseW(pafltrc);
        return win32_impl_result;
    }
    inline uint32_t acmStreamOpen(Windows::Win32::Multimedia::HACMSTREAM__** phas, Windows::Win32::Multimedia::HACMDRIVER__* had, Windows::Win32::Multimedia::WAVEFORMATEX* pwfxSrc, Windows::Win32::Multimedia::WAVEFORMATEX* pwfxDst, Windows::Win32::Multimedia::WAVEFILTER* pwfltr, size_t dwCallback, size_t dwInstance, uint32_t fdwOpen)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamOpen(phas, had, pwfxSrc, pwfxDst, pwfltr, dwCallback, dwInstance, fdwOpen);
        return win32_impl_result;
    }
    inline uint32_t acmStreamClose(Windows::Win32::Multimedia::HACMSTREAM__* has, uint32_t fdwClose)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamClose(has, fdwClose);
        return win32_impl_result;
    }
    inline uint32_t acmStreamSize(Windows::Win32::Multimedia::HACMSTREAM__* has, uint32_t cbInput, uint32_t* pdwOutputBytes, uint32_t fdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamSize(has, cbInput, pdwOutputBytes, fdwSize);
        return win32_impl_result;
    }
    inline uint32_t acmStreamReset(Windows::Win32::Multimedia::HACMSTREAM__* has, uint32_t fdwReset)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamReset(has, fdwReset);
        return win32_impl_result;
    }
    inline uint32_t acmStreamMessage(Windows::Win32::Multimedia::HACMSTREAM__* has, uint32_t uMsg, Windows::Win32::WindowsAndMessaging::LPARAM lParam1, Windows::Win32::WindowsAndMessaging::LPARAM lParam2)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamMessage(has, uMsg, lParam1, lParam2);
        return win32_impl_result;
    }
    inline uint32_t acmStreamConvert(Windows::Win32::Multimedia::HACMSTREAM__* has, Windows::Win32::Multimedia::ACMSTREAMHEADER* pash, uint32_t fdwConvert)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamConvert(has, pash, fdwConvert);
        return win32_impl_result;
    }
    inline uint32_t acmStreamPrepareHeader(Windows::Win32::Multimedia::HACMSTREAM__* has, Windows::Win32::Multimedia::ACMSTREAMHEADER* pash, uint32_t fdwPrepare)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamPrepareHeader(has, pash, fdwPrepare);
        return win32_impl_result;
    }
    inline uint32_t acmStreamUnprepareHeader(Windows::Win32::Multimedia::HACMSTREAM__* has, Windows::Win32::Multimedia::ACMSTREAMHEADER* pash, uint32_t fdwUnprepare)
    {
        auto win32_impl_result = WIN32_IMPL_acmStreamUnprepareHeader(has, pash, fdwUnprepare);
        return win32_impl_result;
    }
    inline uint32_t VideoForWindowsVersion()
    {
        auto win32_impl_result = WIN32_IMPL_VideoForWindowsVersion();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ICInfo(uint32_t fccType, uint32_t fccHandler, Windows::Win32::Multimedia::ICINFO* lpicinfo)
    {
        auto win32_impl_result = WIN32_IMPL_ICInfo(fccType, fccHandler, lpicinfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ICInstall(uint32_t fccType, uint32_t fccHandler, Windows::Win32::WindowsAndMessaging::LPARAM lParam, int8_t* szDesc, uint32_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ICInstall(fccType, fccHandler, lParam, szDesc, wFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ICRemove(uint32_t fccType, uint32_t fccHandler, uint32_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ICRemove(fccType, fccHandler, wFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT ICGetInfo(Windows::Win32::Multimedia::HIC__* hic, Windows::Win32::Multimedia::ICINFO* picinfo, uint32_t cb)
    {
        auto win32_impl_result = WIN32_IMPL_ICGetInfo(hic, picinfo, cb);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HIC__* ICOpen(uint32_t fccType, uint32_t fccHandler, uint32_t wMode)
    {
        auto win32_impl_result = WIN32_IMPL_ICOpen(fccType, fccHandler, wMode);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HIC__* ICOpenFunction(uint32_t fccType, uint32_t fccHandler, uint32_t wMode, Windows::Win32::SystemServices::FARPROC* lpfnHandler)
    {
        auto win32_impl_result = WIN32_IMPL_ICOpenFunction(fccType, fccHandler, wMode, lpfnHandler);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT ICClose(Windows::Win32::Multimedia::HIC__* hic)
    {
        auto win32_impl_result = WIN32_IMPL_ICClose(hic);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT ICSendMessage(Windows::Win32::Multimedia::HIC__* hic, uint32_t msg, size_t dw1, size_t dw2)
    {
        auto win32_impl_result = WIN32_IMPL_ICSendMessage(hic, msg, dw1, dw2);
        return win32_impl_result;
    }
    inline uint32_t ICCompress(Windows::Win32::Multimedia::HIC__* hic, uint32_t dwFlags, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiOutput, void* lpData, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiInput, void* lpBits, uint32_t* lpckid, uint32_t* lpdwFlags, int32_t lFrameNum, uint32_t dwFrameSize, uint32_t dwQuality, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiPrev, void* lpPrev)
    {
        auto win32_impl_result = WIN32_IMPL_ICCompress(hic, dwFlags, lpbiOutput, lpData, lpbiInput, lpBits, lpckid, lpdwFlags, lFrameNum, dwFrameSize, dwQuality, lpbiPrev, lpPrev);
        return win32_impl_result;
    }
    inline uint32_t ICDecompress(Windows::Win32::Multimedia::HIC__* hic, uint32_t dwFlags, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiFormat, void* lpData, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi, void* lpBits)
    {
        auto win32_impl_result = WIN32_IMPL_ICDecompress(hic, dwFlags, lpbiFormat, lpData, lpbi, lpBits);
        return win32_impl_result;
    }
    inline uint32_t ICDrawBegin(Windows::Win32::Multimedia::HIC__* hic, uint32_t dwFlags, Windows::Win32::Gdi::HPALETTE hpal, Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdc, int32_t xDst, int32_t yDst, int32_t dxDst, int32_t dyDst, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi, int32_t xSrc, int32_t ySrc, int32_t dxSrc, int32_t dySrc, uint32_t dwRate, uint32_t dwScale)
    {
        auto win32_impl_result = WIN32_IMPL_ICDrawBegin(hic, dwFlags, hpal, hwnd, hdc, xDst, yDst, dxDst, dyDst, lpbi, xSrc, ySrc, dxSrc, dySrc, dwRate, dwScale);
        return win32_impl_result;
    }
    inline uint32_t ICDraw(Windows::Win32::Multimedia::HIC__* hic, uint32_t dwFlags, void* lpFormat, void* lpData, uint32_t cbData, int32_t lTime)
    {
        auto win32_impl_result = WIN32_IMPL_ICDraw(hic, dwFlags, lpFormat, lpData, cbData, lTime);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HIC__* ICLocate(uint32_t fccType, uint32_t fccHandler, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiIn, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiOut, uint16_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ICLocate(fccType, fccHandler, lpbiIn, lpbiOut, wFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::HIC__* ICGetDisplayFormat(Windows::Win32::Multimedia::HIC__* hic, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiIn, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiOut, int32_t BitDepth, int32_t dx, int32_t dy)
    {
        auto win32_impl_result = WIN32_IMPL_ICGetDisplayFormat(hic, lpbiIn, lpbiOut, BitDepth, dx, dy);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE ICImageCompress(Windows::Win32::Multimedia::HIC__* hic, uint32_t uiFlags, Windows::Win32::Gdi::BITMAPINFO* lpbiIn, void* lpBits, Windows::Win32::Gdi::BITMAPINFO* lpbiOut, int32_t lQuality, int32_t* plSize)
    {
        auto win32_impl_result = WIN32_IMPL_ICImageCompress(hic, uiFlags, lpbiIn, lpBits, lpbiOut, lQuality, plSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE ICImageDecompress(Windows::Win32::Multimedia::HIC__* hic, uint32_t uiFlags, Windows::Win32::Gdi::BITMAPINFO* lpbiIn, void* lpBits, Windows::Win32::Gdi::BITMAPINFO* lpbiOut)
    {
        auto win32_impl_result = WIN32_IMPL_ICImageDecompress(hic, uiFlags, lpbiIn, lpBits, lpbiOut);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ICCompressorChoose(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t uiFlags, void* pvIn, void* lpData, Windows::Win32::Multimedia::COMPVARS* pc, int8_t* lpszTitle)
    {
        auto win32_impl_result = WIN32_IMPL_ICCompressorChoose(hwnd, uiFlags, pvIn, lpData, pc, lpszTitle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ICSeqCompressFrameStart(Windows::Win32::Multimedia::COMPVARS* pc, Windows::Win32::Gdi::BITMAPINFO* lpbiIn)
    {
        auto win32_impl_result = WIN32_IMPL_ICSeqCompressFrameStart(pc, lpbiIn);
        return win32_impl_result;
    }
    inline void ICSeqCompressFrameEnd(Windows::Win32::Multimedia::COMPVARS* pc)
    {
        WIN32_IMPL_ICSeqCompressFrameEnd(pc);
    }
    inline void* ICSeqCompressFrame(Windows::Win32::Multimedia::COMPVARS* pc, uint32_t uiFlags, void* lpBits, int32_t* pfKey, int32_t* plSize)
    {
        auto win32_impl_result = WIN32_IMPL_ICSeqCompressFrame(pc, uiFlags, lpBits, pfKey, plSize);
        return win32_impl_result;
    }
    inline void ICCompressorFree(Windows::Win32::Multimedia::COMPVARS* pc)
    {
        WIN32_IMPL_ICCompressorFree(pc);
    }
    inline intptr_t DrawDibOpen()
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibOpen();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibClose(intptr_t hdd)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibClose(hdd);
        return win32_impl_result;
    }
    inline void* DrawDibGetBuffer(intptr_t hdd, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi, uint32_t dwSize, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibGetBuffer(hdd, lpbi, dwSize, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HPALETTE DrawDibGetPalette(intptr_t hdd)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibGetPalette(hdd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibSetPalette(intptr_t hdd, Windows::Win32::Gdi::HPALETTE hpal)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibSetPalette(hdd, hpal);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibChangePalette(intptr_t hdd, int32_t iStart, int32_t iLen, Windows::Win32::Direct2D::PALETTEENTRY* lppe)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibChangePalette(hdd, iStart, iLen, lppe);
        return win32_impl_result;
    }
    inline uint32_t DrawDibRealize(intptr_t hdd, Windows::Win32::Gdi::HDC hdc, Windows::Win32::SystemServices::BOOL fBackground)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibRealize(hdd, hdc, fBackground);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibStart(intptr_t hdd, uint32_t rate)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibStart(hdd, rate);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibStop(intptr_t hdd)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibStop(hdd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibBegin(intptr_t hdd, Windows::Win32::Gdi::HDC hdc, int32_t dxDst, int32_t dyDst, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi, int32_t dxSrc, int32_t dySrc, uint32_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibBegin(hdd, hdc, dxDst, dyDst, lpbi, dxSrc, dySrc, wFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibDraw(intptr_t hdd, Windows::Win32::Gdi::HDC hdc, int32_t xDst, int32_t yDst, int32_t dxDst, int32_t dyDst, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi, void* lpBits, int32_t xSrc, int32_t ySrc, int32_t dxSrc, int32_t dySrc, uint32_t wFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibDraw(hdd, hdc, xDst, yDst, dxDst, dyDst, lpbi, lpBits, xSrc, ySrc, dxSrc, dySrc, wFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibEnd(intptr_t hdd)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibEnd(hdd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DrawDibTime(intptr_t hdd, Windows::Win32::Multimedia::DRAWDIBTIME* lpddtime)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibTime(hdd, lpddtime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT DrawDibProfileDisplay(Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbi)
    {
        auto win32_impl_result = WIN32_IMPL_DrawDibProfileDisplay(lpbi);
        return win32_impl_result;
    }
    inline void AVIFileInit()
    {
        WIN32_IMPL_AVIFileInit();
    }
    inline void AVIFileExit()
    {
        WIN32_IMPL_AVIFileExit();
    }
    inline uint32_t AVIFileAddRef(Windows::Win32::Multimedia::IAVIFile* pfile)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileAddRef(pfile);
        return win32_impl_result;
    }
    inline uint32_t AVIFileRelease(Windows::Win32::Multimedia::IAVIFile* pfile)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileRelease(pfile);
        return win32_impl_result;
    }
    inline int32_t AVIFileOpenA(Windows::Win32::Multimedia::IAVIFile** ppfile, int8_t* szFile, uint32_t uMode, ::win32::guid* lpHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileOpenA(ppfile, szFile, uMode, lpHandler);
        return win32_impl_result;
    }
    inline int32_t AVIFileOpenW(Windows::Win32::Multimedia::IAVIFile** ppfile, uint16_t* szFile, uint32_t uMode, ::win32::guid* lpHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileOpenW(ppfile, szFile, uMode, lpHandler);
        return win32_impl_result;
    }
    inline int32_t AVIFileInfoW(Windows::Win32::Multimedia::IAVIFile* pfile, Windows::Win32::Multimedia::AVIFILEINFOW* pfi, int32_t lSize)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileInfoW(pfile, pfi, lSize);
        return win32_impl_result;
    }
    inline int32_t AVIFileInfoA(Windows::Win32::Multimedia::IAVIFile* pfile, Windows::Win32::Multimedia::AVIFILEINFOA* pfi, int32_t lSize)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileInfoA(pfile, pfi, lSize);
        return win32_impl_result;
    }
    inline int32_t AVIFileGetStream(Windows::Win32::Multimedia::IAVIFile* pfile, Windows::Win32::Multimedia::IAVIStream** ppavi, uint32_t fccType, int32_t lParam)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileGetStream(pfile, ppavi, fccType, lParam);
        return win32_impl_result;
    }
    inline int32_t AVIFileCreateStreamW(Windows::Win32::Multimedia::IAVIFile* pfile, Windows::Win32::Multimedia::IAVIStream** ppavi, Windows::Win32::Multimedia::AVISTREAMINFOW* psi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileCreateStreamW(pfile, ppavi, psi);
        return win32_impl_result;
    }
    inline int32_t AVIFileCreateStreamA(Windows::Win32::Multimedia::IAVIFile* pfile, Windows::Win32::Multimedia::IAVIStream** ppavi, Windows::Win32::Multimedia::AVISTREAMINFOA* psi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileCreateStreamA(pfile, ppavi, psi);
        return win32_impl_result;
    }
    inline int32_t AVIFileWriteData(Windows::Win32::Multimedia::IAVIFile* pfile, uint32_t ckid, void* lpData, int32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileWriteData(pfile, ckid, lpData, cbData);
        return win32_impl_result;
    }
    inline int32_t AVIFileReadData(Windows::Win32::Multimedia::IAVIFile* pfile, uint32_t ckid, void* lpData, int32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileReadData(pfile, ckid, lpData, lpcbData);
        return win32_impl_result;
    }
    inline int32_t AVIFileEndRecord(Windows::Win32::Multimedia::IAVIFile* pfile)
    {
        auto win32_impl_result = WIN32_IMPL_AVIFileEndRecord(pfile);
        return win32_impl_result;
    }
    inline uint32_t AVIStreamAddRef(Windows::Win32::Multimedia::IAVIStream* pavi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamAddRef(pavi);
        return win32_impl_result;
    }
    inline uint32_t AVIStreamRelease(Windows::Win32::Multimedia::IAVIStream* pavi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamRelease(pavi);
        return win32_impl_result;
    }
    inline int32_t AVIStreamInfoW(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::Multimedia::AVISTREAMINFOW* psi, int32_t lSize)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamInfoW(pavi, psi, lSize);
        return win32_impl_result;
    }
    inline int32_t AVIStreamInfoA(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::Multimedia::AVISTREAMINFOA* psi, int32_t lSize)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamInfoA(pavi, psi, lSize);
        return win32_impl_result;
    }
    inline int32_t AVIStreamFindSample(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lPos, int32_t lFlags)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamFindSample(pavi, lPos, lFlags);
        return win32_impl_result;
    }
    inline int32_t AVIStreamReadFormat(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lPos, void* lpFormat, int32_t* lpcbFormat)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamReadFormat(pavi, lPos, lpFormat, lpcbFormat);
        return win32_impl_result;
    }
    inline int32_t AVIStreamSetFormat(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lPos, void* lpFormat, int32_t cbFormat)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamSetFormat(pavi, lPos, lpFormat, cbFormat);
        return win32_impl_result;
    }
    inline int32_t AVIStreamReadData(Windows::Win32::Multimedia::IAVIStream* pavi, uint32_t fcc, void* lp, int32_t* lpcb)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamReadData(pavi, fcc, lp, lpcb);
        return win32_impl_result;
    }
    inline int32_t AVIStreamWriteData(Windows::Win32::Multimedia::IAVIStream* pavi, uint32_t fcc, void* lp, int32_t cb)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamWriteData(pavi, fcc, lp, cb);
        return win32_impl_result;
    }
    inline int32_t AVIStreamRead(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lStart, int32_t lSamples, void* lpBuffer, int32_t cbBuffer, int32_t* plBytes, int32_t* plSamples)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamRead(pavi, lStart, lSamples, lpBuffer, cbBuffer, plBytes, plSamples);
        return win32_impl_result;
    }
    inline int32_t AVIStreamWrite(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lStart, int32_t lSamples, void* lpBuffer, int32_t cbBuffer, uint32_t dwFlags, int32_t* plSampWritten, int32_t* plBytesWritten)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamWrite(pavi, lStart, lSamples, lpBuffer, cbBuffer, dwFlags, plSampWritten, plBytesWritten);
        return win32_impl_result;
    }
    inline int32_t AVIStreamStart(Windows::Win32::Multimedia::IAVIStream* pavi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamStart(pavi);
        return win32_impl_result;
    }
    inline int32_t AVIStreamLength(Windows::Win32::Multimedia::IAVIStream* pavi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamLength(pavi);
        return win32_impl_result;
    }
    inline int32_t AVIStreamTimeToSample(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lTime)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamTimeToSample(pavi, lTime);
        return win32_impl_result;
    }
    inline int32_t AVIStreamSampleToTime(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lSample)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamSampleToTime(pavi, lSample);
        return win32_impl_result;
    }
    inline int32_t AVIStreamBeginStreaming(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t lStart, int32_t lEnd, int32_t lRate)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamBeginStreaming(pavi, lStart, lEnd, lRate);
        return win32_impl_result;
    }
    inline int32_t AVIStreamEndStreaming(Windows::Win32::Multimedia::IAVIStream* pavi)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamEndStreaming(pavi);
        return win32_impl_result;
    }
    inline Windows::Win32::Multimedia::IGetFrame* AVIStreamGetFrameOpen(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::DirectShow::BITMAPINFOHEADER* lpbiWanted)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamGetFrameOpen(pavi, lpbiWanted);
        return win32_impl_result;
    }
    inline void* AVIStreamGetFrame(Windows::Win32::Multimedia::IGetFrame* pg, int32_t lPos)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamGetFrame(pg, lPos);
        return win32_impl_result;
    }
    inline int32_t AVIStreamGetFrameClose(Windows::Win32::Multimedia::IGetFrame* pg)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamGetFrameClose(pg);
        return win32_impl_result;
    }
    inline int32_t AVIStreamOpenFromFileA(Windows::Win32::Multimedia::IAVIStream** ppavi, int8_t* szFile, uint32_t fccType, int32_t lParam, uint32_t mode, ::win32::guid* pclsidHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamOpenFromFileA(ppavi, szFile, fccType, lParam, mode, pclsidHandler);
        return win32_impl_result;
    }
    inline int32_t AVIStreamOpenFromFileW(Windows::Win32::Multimedia::IAVIStream** ppavi, uint16_t* szFile, uint32_t fccType, int32_t lParam, uint32_t mode, ::win32::guid* pclsidHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamOpenFromFileW(ppavi, szFile, fccType, lParam, mode, pclsidHandler);
        return win32_impl_result;
    }
    inline int32_t AVIStreamCreate(Windows::Win32::Multimedia::IAVIStream** ppavi, int32_t lParam1, int32_t lParam2, ::win32::guid* pclsidHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIStreamCreate(ppavi, lParam1, lParam2, pclsidHandler);
        return win32_impl_result;
    }
    inline int32_t AVIMakeCompressedStream(Windows::Win32::Multimedia::IAVIStream** ppsCompressed, Windows::Win32::Multimedia::IAVIStream* ppsSource, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS* lpOptions, ::win32::guid* pclsidHandler)
    {
        auto win32_impl_result = WIN32_IMPL_AVIMakeCompressedStream(ppsCompressed, ppsSource, lpOptions, pclsidHandler);
        return win32_impl_result;
    }
    inline int32_t AVISaveA(int8_t* szFile, ::win32::guid* pclsidHandler, Windows::Win32::Multimedia::AVISAVECALLBACK* lpfnCallback, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream* pfile, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS* lpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveA(szFile, pclsidHandler, lpfnCallback, nStreams, pfile, lpOptions);
        return win32_impl_result;
    }
    inline int32_t AVISaveVA(int8_t* szFile, ::win32::guid* pclsidHandler, Windows::Win32::Multimedia::AVISAVECALLBACK* lpfnCallback, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream** ppavi, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS** plpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveVA(szFile, pclsidHandler, lpfnCallback, nStreams, ppavi, plpOptions);
        return win32_impl_result;
    }
    inline int32_t AVISaveW(uint16_t* szFile, ::win32::guid* pclsidHandler, Windows::Win32::Multimedia::AVISAVECALLBACK* lpfnCallback, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream* pfile, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS* lpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveW(szFile, pclsidHandler, lpfnCallback, nStreams, pfile, lpOptions);
        return win32_impl_result;
    }
    inline int32_t AVISaveVW(uint16_t* szFile, ::win32::guid* pclsidHandler, Windows::Win32::Multimedia::AVISAVECALLBACK* lpfnCallback, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream** ppavi, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS** plpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveVW(szFile, pclsidHandler, lpfnCallback, nStreams, ppavi, plpOptions);
        return win32_impl_result;
    }
    inline intptr_t AVISaveOptions(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t uiFlags, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream** ppavi, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS** plpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveOptions(hwnd, uiFlags, nStreams, ppavi, plpOptions);
        return win32_impl_result;
    }
    inline int32_t AVISaveOptionsFree(int32_t nStreams, Windows::Win32::Multimedia::AVICOMPRESSOPTIONS** plpOptions)
    {
        auto win32_impl_result = WIN32_IMPL_AVISaveOptionsFree(nStreams, plpOptions);
        return win32_impl_result;
    }
    inline int32_t AVIBuildFilterW(uint16_t* lpszFilter, int32_t cbFilter, Windows::Win32::SystemServices::BOOL fSaving)
    {
        auto win32_impl_result = WIN32_IMPL_AVIBuildFilterW(lpszFilter, cbFilter, fSaving);
        return win32_impl_result;
    }
    inline int32_t AVIBuildFilterA(int8_t* lpszFilter, int32_t cbFilter, Windows::Win32::SystemServices::BOOL fSaving)
    {
        auto win32_impl_result = WIN32_IMPL_AVIBuildFilterA(lpszFilter, cbFilter, fSaving);
        return win32_impl_result;
    }
    inline int32_t AVIMakeFileFromStreams(Windows::Win32::Multimedia::IAVIFile** ppfile, int32_t nStreams, Windows::Win32::Multimedia::IAVIStream** papStreams)
    {
        auto win32_impl_result = WIN32_IMPL_AVIMakeFileFromStreams(ppfile, nStreams, papStreams);
        return win32_impl_result;
    }
    inline int32_t AVIMakeStreamFromClipboard(uint32_t cfFormat, Windows::Win32::SystemServices::HANDLE hGlobal, Windows::Win32::Multimedia::IAVIStream** ppstream)
    {
        auto win32_impl_result = WIN32_IMPL_AVIMakeStreamFromClipboard(cfFormat, hGlobal, ppstream);
        return win32_impl_result;
    }
    inline int32_t AVIPutFileOnClipboard(Windows::Win32::Multimedia::IAVIFile* pf)
    {
        auto win32_impl_result = WIN32_IMPL_AVIPutFileOnClipboard(pf);
        return win32_impl_result;
    }
    inline int32_t AVIGetFromClipboard(Windows::Win32::Multimedia::IAVIFile** lppf)
    {
        auto win32_impl_result = WIN32_IMPL_AVIGetFromClipboard(lppf);
        return win32_impl_result;
    }
    inline int32_t AVIClearClipboard()
    {
        auto win32_impl_result = WIN32_IMPL_AVIClearClipboard();
        return win32_impl_result;
    }
    inline int32_t CreateEditableStream(Windows::Win32::Multimedia::IAVIStream** ppsEditable, Windows::Win32::Multimedia::IAVIStream* psSource)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEditableStream(ppsEditable, psSource);
        return win32_impl_result;
    }
    inline int32_t EditStreamCut(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t* plStart, int32_t* plLength, Windows::Win32::Multimedia::IAVIStream** ppResult)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamCut(pavi, plStart, plLength, ppResult);
        return win32_impl_result;
    }
    inline int32_t EditStreamCopy(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t* plStart, int32_t* plLength, Windows::Win32::Multimedia::IAVIStream** ppResult)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamCopy(pavi, plStart, plLength, ppResult);
        return win32_impl_result;
    }
    inline int32_t EditStreamPaste(Windows::Win32::Multimedia::IAVIStream* pavi, int32_t* plPos, int32_t* plLength, Windows::Win32::Multimedia::IAVIStream* pstream, int32_t lStart, int32_t lEnd)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamPaste(pavi, plPos, plLength, pstream, lStart, lEnd);
        return win32_impl_result;
    }
    inline int32_t EditStreamClone(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::Multimedia::IAVIStream** ppResult)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamClone(pavi, ppResult);
        return win32_impl_result;
    }
    inline int32_t EditStreamSetNameA(Windows::Win32::Multimedia::IAVIStream* pavi, int8_t* lpszName)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamSetNameA(pavi, lpszName);
        return win32_impl_result;
    }
    inline int32_t EditStreamSetNameW(Windows::Win32::Multimedia::IAVIStream* pavi, uint16_t* lpszName)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamSetNameW(pavi, lpszName);
        return win32_impl_result;
    }
    inline int32_t EditStreamSetInfoW(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::Multimedia::AVISTREAMINFOW* lpInfo, int32_t cbInfo)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamSetInfoW(pavi, lpInfo, cbInfo);
        return win32_impl_result;
    }
    inline int32_t EditStreamSetInfoA(Windows::Win32::Multimedia::IAVIStream* pavi, Windows::Win32::Multimedia::AVISTREAMINFOA* lpInfo, int32_t cbInfo)
    {
        auto win32_impl_result = WIN32_IMPL_EditStreamSetInfoA(pavi, lpInfo, cbInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND MCIWndCreateA(Windows::Win32::WindowsAndMessaging::HWND hwndParent, Windows::Win32::SystemServices::HINSTANCE hInstance, uint32_t dwStyle, int8_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_MCIWndCreateA(hwndParent, hInstance, dwStyle, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND MCIWndCreateW(Windows::Win32::WindowsAndMessaging::HWND hwndParent, Windows::Win32::SystemServices::HINSTANCE hInstance, uint32_t dwStyle, uint16_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_MCIWndCreateW(hwndParent, hInstance, dwStyle, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL MCIWndRegisterClass()
    {
        auto win32_impl_result = WIN32_IMPL_MCIWndRegisterClass();
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND capCreateCaptureWindowA(int8_t* lpszWindowName, uint32_t dwStyle, int32_t x, int32_t y, int32_t nWidth, int32_t nHeight, Windows::Win32::WindowsAndMessaging::HWND hwndParent, int32_t nID)
    {
        auto win32_impl_result = WIN32_IMPL_capCreateCaptureWindowA(lpszWindowName, dwStyle, x, y, nWidth, nHeight, hwndParent, nID);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL capGetDriverDescriptionA(uint32_t wDriverIndex, int8_t* lpszName, int32_t cbName, int8_t* lpszVer, int32_t cbVer)
    {
        auto win32_impl_result = WIN32_IMPL_capGetDriverDescriptionA(wDriverIndex, lpszName, cbName, lpszVer, cbVer);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND capCreateCaptureWindowW(uint16_t* lpszWindowName, uint32_t dwStyle, int32_t x, int32_t y, int32_t nWidth, int32_t nHeight, Windows::Win32::WindowsAndMessaging::HWND hwndParent, int32_t nID)
    {
        auto win32_impl_result = WIN32_IMPL_capCreateCaptureWindowW(lpszWindowName, dwStyle, x, y, nWidth, nHeight, hwndParent, nID);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL capGetDriverDescriptionW(uint32_t wDriverIndex, uint16_t* lpszName, int32_t cbName, uint16_t* lpszVer, int32_t cbVer)
    {
        auto win32_impl_result = WIN32_IMPL_capGetDriverDescriptionW(wDriverIndex, lpszName, cbName, lpszVer, cbVer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOpenFileNamePreviewA(Windows::Win32::WindowsAndMessaging::OPENFILENAMEA* lpofn)
    {
        auto win32_impl_result = WIN32_IMPL_GetOpenFileNamePreviewA(lpofn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSaveFileNamePreviewA(Windows::Win32::WindowsAndMessaging::OPENFILENAMEA* lpofn)
    {
        auto win32_impl_result = WIN32_IMPL_GetSaveFileNamePreviewA(lpofn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOpenFileNamePreviewW(Windows::Win32::WindowsAndMessaging::OPENFILENAMEW* lpofn)
    {
        auto win32_impl_result = WIN32_IMPL_GetOpenFileNamePreviewW(lpofn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSaveFileNamePreviewW(Windows::Win32::WindowsAndMessaging::OPENFILENAMEW* lpofn)
    {
        auto win32_impl_result = WIN32_IMPL_GetSaveFileNamePreviewW(lpofn);
        return win32_impl_result;
    }
    inline uint32_t mmTaskCreate(Windows::Win32::Multimedia::LPTASKCALLBACK* lpfn, Windows::Win32::SystemServices::HANDLE* lph, size_t dwInst)
    {
        auto win32_impl_result = WIN32_IMPL_mmTaskCreate(lpfn, lph, dwInst);
        return win32_impl_result;
    }
    inline void mmTaskBlock(uint32_t h)
    {
        WIN32_IMPL_mmTaskBlock(h);
    }
    inline Windows::Win32::SystemServices::BOOL mmTaskSignal(uint32_t h)
    {
        auto win32_impl_result = WIN32_IMPL_mmTaskSignal(h);
        return win32_impl_result;
    }
    inline void mmTaskYield()
    {
        WIN32_IMPL_mmTaskYield();
    }
    inline uint32_t mmGetCurrentTask()
    {
        auto win32_impl_result = WIN32_IMPL_mmGetCurrentTask();
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
