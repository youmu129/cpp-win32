// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NativeWiFi_H
#define WIN32_Windows_Win32_NativeWiFi_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.NativeWiFi.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::NativeWiFi
{
#pragma region methods
    inline uint32_t WlanOpenHandle(uint32_t dwClientVersion, void* pReserved, uint32_t* pdwNegotiatedVersion, intptr_t* phClientHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WlanOpenHandle(dwClientVersion, pReserved, pdwNegotiatedVersion, phClientHandle);
        return win32_impl_result;
    }
    inline uint32_t WlanCloseHandle(Windows::Win32::SystemServices::HANDLE hClientHandle, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanCloseHandle(hClientHandle, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanEnumInterfaces(Windows::Win32::SystemServices::HANDLE hClientHandle, void* pReserved, Windows::Win32::NativeWiFi::WLAN_INTERFACE_INFO_LIST** ppInterfaceList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanEnumInterfaces(hClientHandle, pReserved, ppInterfaceList);
        return win32_impl_result;
    }
    inline uint32_t WlanSetAutoConfigParameter(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_AUTOCONF_OPCODE OpCode, uint32_t dwDataSize, void* pData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetAutoConfigParameter(hClientHandle, OpCode, dwDataSize, pData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanQueryAutoConfigParameter(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_AUTOCONF_OPCODE OpCode, void* pReserved, uint32_t* pdwDataSize, void** ppData, Windows::Win32::NativeWiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType)
    {
        auto win32_impl_result = WIN32_IMPL_WlanQueryAutoConfigParameter(hClientHandle, OpCode, pReserved, pdwDataSize, ppData, pWlanOpcodeValueType);
        return win32_impl_result;
    }
    inline uint32_t WlanGetInterfaceCapability(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved, Windows::Win32::NativeWiFi::WLAN_INTERFACE_CAPABILITY** ppCapability)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetInterfaceCapability(hClientHandle, pInterfaceGuid, pReserved, ppCapability);
        return win32_impl_result;
    }
    inline uint32_t WlanSetInterface(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_INTF_OPCODE OpCode, uint32_t dwDataSize, void* pData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetInterface(hClientHandle, pInterfaceGuid, OpCode, dwDataSize, pData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanQueryInterface(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_INTF_OPCODE OpCode, void* pReserved, uint32_t* pdwDataSize, void** ppData, Windows::Win32::NativeWiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType)
    {
        auto win32_impl_result = WIN32_IMPL_WlanQueryInterface(hClientHandle, pInterfaceGuid, OpCode, pReserved, pdwDataSize, ppData, pWlanOpcodeValueType);
        return win32_impl_result;
    }
    inline uint32_t WlanIhvControl(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_IHV_CONTROL_TYPE Type, uint32_t dwInBufferSize, void* pInBuffer, uint32_t dwOutBufferSize, void* pOutBuffer, uint32_t* pdwBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_WlanIhvControl(hClientHandle, pInterfaceGuid, Type, dwInBufferSize, pInBuffer, dwOutBufferSize, pOutBuffer, pdwBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t WlanScan(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::DOT11_SSID* pDot11Ssid, Windows::Win32::NativeWiFi::WLAN_RAW_DATA* pIeData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanScan(hClientHandle, pInterfaceGuid, pDot11Ssid, pIeData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanGetAvailableNetworkList(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, void* pReserved, Windows::Win32::NativeWiFi::WLAN_AVAILABLE_NETWORK_LIST** ppAvailableNetworkList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetAvailableNetworkList(hClientHandle, pInterfaceGuid, dwFlags, pReserved, ppAvailableNetworkList);
        return win32_impl_result;
    }
    inline uint32_t WlanGetAvailableNetworkList2(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, void* pReserved, Windows::Win32::NativeWiFi::WLAN_AVAILABLE_NETWORK_LIST_V2** ppAvailableNetworkList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetAvailableNetworkList2(hClientHandle, pInterfaceGuid, dwFlags, pReserved, ppAvailableNetworkList);
        return win32_impl_result;
    }
    inline uint32_t WlanGetNetworkBssList(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::DOT11_SSID* pDot11Ssid, Windows::Win32::NativeWiFi::DOT11_BSS_TYPE dot11BssType, Windows::Win32::SystemServices::BOOL bSecurityEnabled, void* pReserved, Windows::Win32::NativeWiFi::WLAN_BSS_LIST** ppWlanBssList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetNetworkBssList(hClientHandle, pInterfaceGuid, pDot11Ssid, dot11BssType, bSecurityEnabled, pReserved, ppWlanBssList);
        return win32_impl_result;
    }
    inline uint32_t WlanConnect(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_CONNECTION_PARAMETERS* pConnectionParameters, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanConnect(hClientHandle, pInterfaceGuid, pConnectionParameters, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanConnect2(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_CONNECTION_PARAMETERS_V2* pConnectionParameters, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanConnect2(hClientHandle, pInterfaceGuid, pConnectionParameters, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanDisconnect(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanDisconnect(hClientHandle, pInterfaceGuid, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanRegisterNotification(Windows::Win32::SystemServices::HANDLE hClientHandle, uint32_t dwNotifSource, Windows::Win32::SystemServices::BOOL bIgnoreDuplicate, Windows::Win32::NativeWiFi::WLAN_NOTIFICATION_CALLBACK* funcCallback, void* pCallbackContext, void* pReserved, uint32_t* pdwPrevNotifSource)
    {
        auto win32_impl_result = WIN32_IMPL_WlanRegisterNotification(hClientHandle, dwNotifSource, bIgnoreDuplicate, funcCallback, pCallbackContext, pReserved, pdwPrevNotifSource);
        return win32_impl_result;
    }
    inline uint32_t WlanGetProfile(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, void* pReserved, uint16_t** pstrProfileXml, uint32_t* pdwFlags, uint32_t* pdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetProfile(hClientHandle, pInterfaceGuid, strProfileName, pReserved, pstrProfileXml, pdwFlags, pdwGrantedAccess);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfileEapUserData(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, Windows::Win32::ExtensibleAuthenticationProtocol::EAP_METHOD_TYPE eapType, uint32_t dwFlags, uint32_t dwEapUserDataSize, uint8_t* pbEapUserData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfileEapUserData(hClientHandle, pInterfaceGuid, strProfileName, eapType, dwFlags, dwEapUserDataSize, pbEapUserData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfileEapXmlUserData(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, uint32_t dwFlags, uint16_t* strEapXmlUserData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfileEapXmlUserData(hClientHandle, pInterfaceGuid, strProfileName, dwFlags, strEapXmlUserData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfile(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwFlags, uint16_t* strProfileXml, uint16_t* strAllUserProfileSecurity, Windows::Win32::SystemServices::BOOL bOverwrite, void* pReserved, uint32_t* pdwReasonCode)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfile(hClientHandle, pInterfaceGuid, dwFlags, strProfileXml, strAllUserProfileSecurity, bOverwrite, pReserved, pdwReasonCode);
        return win32_impl_result;
    }
    inline uint32_t WlanDeleteProfile(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanDeleteProfile(hClientHandle, pInterfaceGuid, strProfileName, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanRenameProfile(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strOldProfileName, uint16_t* strNewProfileName, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanRenameProfile(hClientHandle, pInterfaceGuid, strOldProfileName, strNewProfileName, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanGetProfileList(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, void* pReserved, Windows::Win32::NativeWiFi::WLAN_PROFILE_INFO_LIST** ppProfileList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetProfileList(hClientHandle, pInterfaceGuid, pReserved, ppProfileList);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfileList(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint32_t dwItems, uint16_t** strProfileNames, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfileList(hClientHandle, pInterfaceGuid, dwItems, strProfileNames, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfilePosition(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, uint32_t dwPosition, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfilePosition(hClientHandle, pInterfaceGuid, strProfileName, dwPosition, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanSetProfileCustomUserData(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, uint32_t dwDataSize, uint8_t* pData, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetProfileCustomUserData(hClientHandle, pInterfaceGuid, strProfileName, dwDataSize, pData, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanGetProfileCustomUserData(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, void* pReserved, uint32_t* pdwDataSize, uint8_t** ppData)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetProfileCustomUserData(hClientHandle, pInterfaceGuid, strProfileName, pReserved, pdwDataSize, ppData);
        return win32_impl_result;
    }
    inline uint32_t WlanSetFilterList(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_FILTER_LIST_TYPE wlanFilterListType, Windows::Win32::NativeWiFi::DOT11_NETWORK_LIST* pNetworkList, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetFilterList(hClientHandle, wlanFilterListType, pNetworkList, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanGetFilterList(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_FILTER_LIST_TYPE wlanFilterListType, void* pReserved, Windows::Win32::NativeWiFi::DOT11_NETWORK_LIST** ppNetworkList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetFilterList(hClientHandle, wlanFilterListType, pReserved, ppNetworkList);
        return win32_impl_result;
    }
    inline uint32_t WlanSetPsdIEDataList(Windows::Win32::SystemServices::HANDLE hClientHandle, uint16_t* strFormat, Windows::Win32::NativeWiFi::WLAN_RAW_DATA_LIST* pPsdIEDataList, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetPsdIEDataList(hClientHandle, strFormat, pPsdIEDataList, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanSaveTemporaryProfile(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, uint16_t* strProfileName, uint16_t* strAllUserProfileSecurity, uint32_t dwFlags, Windows::Win32::SystemServices::BOOL bOverWrite, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSaveTemporaryProfile(hClientHandle, pInterfaceGuid, strProfileName, strAllUserProfileSecurity, dwFlags, bOverWrite, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanDeviceServiceCommand(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, ::win32::guid* pDeviceServiceGuid, uint32_t dwOpCode, uint32_t dwInBufferSize, void* pInBuffer, uint32_t dwOutBufferSize, void* pOutBuffer, uint32_t* pdwBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_WlanDeviceServiceCommand(hClientHandle, pInterfaceGuid, pDeviceServiceGuid, dwOpCode, dwInBufferSize, pInBuffer, dwOutBufferSize, pOutBuffer, pdwBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t WlanGetSupportedDeviceServices(Windows::Win32::SystemServices::HANDLE hClientHandle, ::win32::guid* pInterfaceGuid, Windows::Win32::NativeWiFi::WLAN_DEVICE_SERVICE_GUID_LIST** ppDevSvcGuidList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetSupportedDeviceServices(hClientHandle, pInterfaceGuid, ppDevSvcGuidList);
        return win32_impl_result;
    }
    inline uint32_t WlanRegisterDeviceServiceNotification(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_DEVICE_SERVICE_GUID_LIST* pDevSvcGuidList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanRegisterDeviceServiceNotification(hClientHandle, pDevSvcGuidList);
        return win32_impl_result;
    }
    inline uint32_t WlanExtractPsdIEDataList(Windows::Win32::SystemServices::HANDLE hClientHandle, uint32_t dwIeDataSize, uint8_t* pRawIeData, uint16_t* strFormat, void* pReserved, Windows::Win32::NativeWiFi::WLAN_RAW_DATA_LIST** ppPsdIEDataList)
    {
        auto win32_impl_result = WIN32_IMPL_WlanExtractPsdIEDataList(hClientHandle, dwIeDataSize, pRawIeData, strFormat, pReserved, ppPsdIEDataList);
        return win32_impl_result;
    }
    inline uint32_t WlanReasonCodeToString(uint32_t dwReasonCode, uint32_t dwBufferSize, uint16_t* pStringBuffer, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanReasonCodeToString(dwReasonCode, dwBufferSize, pStringBuffer, pReserved);
        return win32_impl_result;
    }
    inline void* WlanAllocateMemory(uint32_t dwMemorySize)
    {
        auto win32_impl_result = WIN32_IMPL_WlanAllocateMemory(dwMemorySize);
        return win32_impl_result;
    }
    inline void WlanFreeMemory(void* pMemory)
    {
        WIN32_IMPL_WlanFreeMemory(pMemory);
    }
    inline uint32_t WlanSetSecuritySettings(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_SECURABLE_OBJECT SecurableObject, uint16_t* strModifiedSDDL)
    {
        auto win32_impl_result = WIN32_IMPL_WlanSetSecuritySettings(hClientHandle, SecurableObject, strModifiedSDDL);
        return win32_impl_result;
    }
    inline uint32_t WlanGetSecuritySettings(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_SECURABLE_OBJECT SecurableObject, Windows::Win32::NativeWiFi::WLAN_OPCODE_VALUE_TYPE* pValueType, uint16_t** pstrCurrentSDDL, uint32_t* pdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_WlanGetSecuritySettings(hClientHandle, SecurableObject, pValueType, pstrCurrentSDDL, pdwGrantedAccess);
        return win32_impl_result;
    }
    inline uint32_t WlanUIEditProfile(uint32_t dwClientVersion, uint16_t* wstrProfileName, ::win32::guid* pInterfaceGuid, Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::NativeWiFi::WL_DISPLAY_PAGES wlStartPage, void* pReserved, uint32_t* pWlanReasonCode)
    {
        auto win32_impl_result = WIN32_IMPL_WlanUIEditProfile(dwClientVersion, wstrProfileName, pInterfaceGuid, hWnd, wlStartPage, pReserved, pWlanReasonCode);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkStartUsing(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkStartUsing(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkStopUsing(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkStopUsing(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkForceStart(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkForceStart(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkForceStop(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkForceStop(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkQueryProperty(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_OPCODE OpCode, uint32_t* pdwDataSize, void** ppvData, Windows::Win32::NativeWiFi::WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkQueryProperty(hClientHandle, OpCode, pdwDataSize, ppvData, pWlanOpcodeValueType, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkSetProperty(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_OPCODE OpCode, uint32_t dwDataSize, void* pvData, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkSetProperty(hClientHandle, OpCode, dwDataSize, pvData, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkInitSettings(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkInitSettings(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkRefreshSecuritySettings(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkRefreshSecuritySettings(hClientHandle, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkQueryStatus(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_STATUS** ppWlanHostedNetworkStatus, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkQueryStatus(hClientHandle, ppWlanHostedNetworkStatus, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkSetSecondaryKey(Windows::Win32::SystemServices::HANDLE hClientHandle, uint32_t dwKeyLength, uint8_t* pucKeyData, Windows::Win32::SystemServices::BOOL bIsPassPhrase, Windows::Win32::SystemServices::BOOL bPersistent, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkSetSecondaryKey(hClientHandle, dwKeyLength, pucKeyData, bIsPassPhrase, bPersistent, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanHostedNetworkQuerySecondaryKey(Windows::Win32::SystemServices::HANDLE hClientHandle, uint32_t* pdwKeyLength, uint8_t** ppucKeyData, int32_t* pbIsPassPhrase, int32_t* pbPersistent, Windows::Win32::NativeWiFi::WLAN_HOSTED_NETWORK_REASON* pFailReason, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanHostedNetworkQuerySecondaryKey(hClientHandle, pdwKeyLength, ppucKeyData, pbIsPassPhrase, pbPersistent, pFailReason, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t WlanRegisterVirtualStationNotification(Windows::Win32::SystemServices::HANDLE hClientHandle, Windows::Win32::SystemServices::BOOL bRegister, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WlanRegisterVirtualStationNotification(hClientHandle, bRegister, pReserved);
        return win32_impl_result;
    }
    inline uint32_t WFDOpenHandle(uint32_t dwClientVersion, uint32_t* pdwNegotiatedVersion, intptr_t* phClientHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WFDOpenHandle(dwClientVersion, pdwNegotiatedVersion, phClientHandle);
        return win32_impl_result;
    }
    inline uint32_t WFDCloseHandle(Windows::Win32::SystemServices::HANDLE hClientHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WFDCloseHandle(hClientHandle);
        return win32_impl_result;
    }
    inline uint32_t WFDStartOpenSession(Windows::Win32::SystemServices::HANDLE hClientHandle, uint8_t** pDeviceAddress, void* pvContext, Windows::Win32::NativeWiFi::WFD_OPEN_SESSION_COMPLETE_CALLBACK* pfnCallback, intptr_t* phSessionHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WFDStartOpenSession(hClientHandle, pDeviceAddress, pvContext, pfnCallback, phSessionHandle);
        return win32_impl_result;
    }
    inline uint32_t WFDCancelOpenSession(Windows::Win32::SystemServices::HANDLE hSessionHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WFDCancelOpenSession(hSessionHandle);
        return win32_impl_result;
    }
    inline uint32_t WFDOpenLegacySession(Windows::Win32::SystemServices::HANDLE hClientHandle, uint8_t** pLegacyMacAddress, Windows::Win32::SystemServices::HANDLE* phSessionHandle, ::win32::guid* pGuidSessionInterface)
    {
        auto win32_impl_result = WIN32_IMPL_WFDOpenLegacySession(hClientHandle, pLegacyMacAddress, phSessionHandle, pGuidSessionInterface);
        return win32_impl_result;
    }
    inline uint32_t WFDCloseSession(Windows::Win32::SystemServices::HANDLE hSessionHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WFDCloseSession(hSessionHandle);
        return win32_impl_result;
    }
    inline uint32_t WFDUpdateDeviceVisibility(uint8_t** pDeviceAddress)
    {
        auto win32_impl_result = WIN32_IMPL_WFDUpdateDeviceVisibility(pDeviceAddress);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
