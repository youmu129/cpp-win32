// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_OfflineFiles_H
#define WIN32_Windows_Win32_OfflineFiles_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.OfflineFiles.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::OfflineFiles
{
#pragma region methods
    inline uint32_t OfflineFilesEnable(Windows::Win32::SystemServices::BOOL bEnable, int32_t* pbRebootRequired)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineFilesEnable(bEnable, pbRebootRequired);
        return win32_impl_result;
    }
    inline uint32_t OfflineFilesStart()
    {
        auto win32_impl_result = WIN32_IMPL_OfflineFilesStart();
        return win32_impl_result;
    }
    inline uint32_t OfflineFilesQueryStatus(int32_t* pbActive, int32_t* pbEnabled)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineFilesQueryStatus(pbActive, pbEnabled);
        return win32_impl_result;
    }
    inline uint32_t OfflineFilesQueryStatusEx(int32_t* pbActive, int32_t* pbEnabled, int32_t* pbAvailable)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineFilesQueryStatusEx(pbActive, pbEnabled, pbAvailable);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
