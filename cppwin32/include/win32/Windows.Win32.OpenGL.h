// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_OpenGL_H
#define WIN32_Windows_Win32_OpenGL_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.OpenGL.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::OpenGL
{
#pragma region methods
    inline int32_t ChoosePixelFormat(Windows::Win32::Gdi::HDC hdc, Windows::Win32::OpenGL::PIXELFORMATDESCRIPTOR* ppfd)
    {
        auto win32_impl_result = WIN32_IMPL_ChoosePixelFormat(hdc, ppfd);
        return win32_impl_result;
    }
    inline int32_t DescribePixelFormat(Windows::Win32::Gdi::HDC hdc, int32_t iPixelFormat, uint32_t nBytes, Windows::Win32::OpenGL::PIXELFORMATDESCRIPTOR* ppfd)
    {
        auto win32_impl_result = WIN32_IMPL_DescribePixelFormat(hdc, iPixelFormat, nBytes, ppfd);
        return win32_impl_result;
    }
    inline int32_t GetPixelFormat(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_GetPixelFormat(hdc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPixelFormat(Windows::Win32::Gdi::HDC hdc, int32_t format, Windows::Win32::OpenGL::PIXELFORMATDESCRIPTOR* ppfd)
    {
        auto win32_impl_result = WIN32_IMPL_SetPixelFormat(hdc, format, ppfd);
        return win32_impl_result;
    }
    inline uint32_t GetEnhMetaFilePixelFormat(intptr_t hemf, uint32_t cbBuffer, Windows::Win32::OpenGL::PIXELFORMATDESCRIPTOR* ppfd)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnhMetaFilePixelFormat(hemf, cbBuffer, ppfd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglCopyContext(intptr_t param0, intptr_t param1, uint32_t param2)
    {
        auto win32_impl_result = WIN32_IMPL_wglCopyContext(param0, param1, param2);
        return win32_impl_result;
    }
    inline intptr_t wglCreateContext(Windows::Win32::Gdi::HDC param0)
    {
        auto win32_impl_result = WIN32_IMPL_wglCreateContext(param0);
        return win32_impl_result;
    }
    inline intptr_t wglCreateLayerContext(Windows::Win32::Gdi::HDC param0, int32_t param1)
    {
        auto win32_impl_result = WIN32_IMPL_wglCreateLayerContext(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglDeleteContext(intptr_t param0)
    {
        auto win32_impl_result = WIN32_IMPL_wglDeleteContext(param0);
        return win32_impl_result;
    }
    inline intptr_t wglGetCurrentContext()
    {
        auto win32_impl_result = WIN32_IMPL_wglGetCurrentContext();
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC wglGetCurrentDC()
    {
        auto win32_impl_result = WIN32_IMPL_wglGetCurrentDC();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::PROC* wglGetProcAddress(int8_t* param0)
    {
        auto win32_impl_result = WIN32_IMPL_wglGetProcAddress(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglMakeCurrent(Windows::Win32::Gdi::HDC param0, intptr_t param1)
    {
        auto win32_impl_result = WIN32_IMPL_wglMakeCurrent(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglShareLists(intptr_t param0, intptr_t param1)
    {
        auto win32_impl_result = WIN32_IMPL_wglShareLists(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglUseFontBitmapsA(Windows::Win32::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3)
    {
        auto win32_impl_result = WIN32_IMPL_wglUseFontBitmapsA(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglUseFontBitmapsW(Windows::Win32::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3)
    {
        auto win32_impl_result = WIN32_IMPL_wglUseFontBitmapsW(param0, param1, param2, param3);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SwapBuffers(Windows::Win32::Gdi::HDC param0)
    {
        auto win32_impl_result = WIN32_IMPL_SwapBuffers(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglUseFontOutlinesA(Windows::Win32::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, Windows::Win32::OpenGL::GLYPHMETRICSFLOAT* param7)
    {
        auto win32_impl_result = WIN32_IMPL_wglUseFontOutlinesA(param0, param1, param2, param3, param4, param5, param6, param7);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglUseFontOutlinesW(Windows::Win32::Gdi::HDC param0, uint32_t param1, uint32_t param2, uint32_t param3, float param4, float param5, int32_t param6, Windows::Win32::OpenGL::GLYPHMETRICSFLOAT* param7)
    {
        auto win32_impl_result = WIN32_IMPL_wglUseFontOutlinesW(param0, param1, param2, param3, param4, param5, param6, param7);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglDescribeLayerPlane(Windows::Win32::Gdi::HDC param0, int32_t param1, int32_t param2, uint32_t param3, Windows::Win32::OpenGL::LAYERPLANEDESCRIPTOR* param4)
    {
        auto win32_impl_result = WIN32_IMPL_wglDescribeLayerPlane(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t wglSetLayerPaletteEntries(Windows::Win32::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4)
    {
        auto win32_impl_result = WIN32_IMPL_wglSetLayerPaletteEntries(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline int32_t wglGetLayerPaletteEntries(Windows::Win32::Gdi::HDC param0, int32_t param1, int32_t param2, int32_t param3, uint32_t* param4)
    {
        auto win32_impl_result = WIN32_IMPL_wglGetLayerPaletteEntries(param0, param1, param2, param3, param4);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglRealizeLayerPalette(Windows::Win32::Gdi::HDC param0, int32_t param1, Windows::Win32::SystemServices::BOOL param2)
    {
        auto win32_impl_result = WIN32_IMPL_wglRealizeLayerPalette(param0, param1, param2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL wglSwapLayerBuffers(Windows::Win32::Gdi::HDC param0, uint32_t param1)
    {
        auto win32_impl_result = WIN32_IMPL_wglSwapLayerBuffers(param0, param1);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
