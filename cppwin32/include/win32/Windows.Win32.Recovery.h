// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Recovery_H
#define WIN32_Windows_Win32_Recovery_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Recovery.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Recovery
{
#pragma region methods
    inline int32_t RegisterApplicationRecoveryCallback(Windows::Win32::WindowsProgramming::APPLICATION_RECOVERY_CALLBACK* pRecoveyCallback, void* pvParameter, uint32_t dwPingInterval, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterApplicationRecoveryCallback(pRecoveyCallback, pvParameter, dwPingInterval, dwFlags);
        return win32_impl_result;
    }
    inline int32_t UnregisterApplicationRecoveryCallback()
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterApplicationRecoveryCallback();
        return win32_impl_result;
    }
    inline int32_t RegisterApplicationRestart(uint16_t* pwzCommandline, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterApplicationRestart(pwzCommandline, dwFlags);
        return win32_impl_result;
    }
    inline int32_t UnregisterApplicationRestart()
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterApplicationRestart();
        return win32_impl_result;
    }
    inline int32_t GetApplicationRecoveryCallback(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::WindowsProgramming::APPLICATION_RECOVERY_CALLBACK** pRecoveryCallback, void** ppvParameter, uint32_t* pdwPingInterval, uint32_t* pdwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetApplicationRecoveryCallback(hProcess, pRecoveryCallback, ppvParameter, pdwPingInterval, pdwFlags);
        return win32_impl_result;
    }
    inline int32_t GetApplicationRestartSettings(Windows::Win32::SystemServices::HANDLE hProcess, uint16_t* pwzCommandline, uint32_t* pcchSize, uint32_t* pdwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetApplicationRestartSettings(hProcess, pwzCommandline, pcchSize, pdwFlags);
        return win32_impl_result;
    }
    inline int32_t ApplicationRecoveryInProgress(int32_t* pbCancelled)
    {
        auto win32_impl_result = WIN32_IMPL_ApplicationRecoveryInProgress(pbCancelled);
        return win32_impl_result;
    }
    inline void ApplicationRecoveryFinished(Windows::Win32::SystemServices::BOOL bSuccess)
    {
        WIN32_IMPL_ApplicationRecoveryFinished(bSuccess);
    }

#pragma endregion methods

}
#endif
