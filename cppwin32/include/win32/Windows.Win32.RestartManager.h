// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_RestartManager_H
#define WIN32_Windows_Win32_RestartManager_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.RestartManager.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::RestartManager
{
#pragma region methods
    inline uint32_t RmStartSession(uint32_t* pSessionHandle, uint32_t dwSessionFlags, uint16_t* strSessionKey)
    {
        auto win32_impl_result = WIN32_IMPL_RmStartSession(pSessionHandle, dwSessionFlags, strSessionKey);
        return win32_impl_result;
    }
    inline uint32_t RmJoinSession(uint32_t* pSessionHandle, uint16_t* strSessionKey)
    {
        auto win32_impl_result = WIN32_IMPL_RmJoinSession(pSessionHandle, strSessionKey);
        return win32_impl_result;
    }
    inline uint32_t RmEndSession(uint32_t dwSessionHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RmEndSession(dwSessionHandle);
        return win32_impl_result;
    }
    inline uint32_t RmRegisterResources(uint32_t dwSessionHandle, uint32_t nFiles, uint16_t** rgsFileNames, uint32_t nApplications, Windows::Win32::RestartManager::RM_UNIQUE_PROCESS* rgApplications, uint32_t nServices, uint16_t** rgsServiceNames)
    {
        auto win32_impl_result = WIN32_IMPL_RmRegisterResources(dwSessionHandle, nFiles, rgsFileNames, nApplications, rgApplications, nServices, rgsServiceNames);
        return win32_impl_result;
    }
    inline uint32_t RmGetList(uint32_t dwSessionHandle, uint32_t* pnProcInfoNeeded, uint32_t* pnProcInfo, Windows::Win32::RestartManager::RM_PROCESS_INFO* rgAffectedApps, uint32_t* lpdwRebootReasons)
    {
        auto win32_impl_result = WIN32_IMPL_RmGetList(dwSessionHandle, pnProcInfoNeeded, pnProcInfo, rgAffectedApps, lpdwRebootReasons);
        return win32_impl_result;
    }
    inline uint32_t RmShutdown(uint32_t dwSessionHandle, uint32_t lActionFlags, Windows::Win32::RestartManager::RM_WRITE_STATUS_CALLBACK* fnStatus)
    {
        auto win32_impl_result = WIN32_IMPL_RmShutdown(dwSessionHandle, lActionFlags, fnStatus);
        return win32_impl_result;
    }
    inline uint32_t RmRestart(uint32_t dwSessionHandle, uint32_t dwRestartFlags, Windows::Win32::RestartManager::RM_WRITE_STATUS_CALLBACK* fnStatus)
    {
        auto win32_impl_result = WIN32_IMPL_RmRestart(dwSessionHandle, dwRestartFlags, fnStatus);
        return win32_impl_result;
    }
    inline uint32_t RmCancelCurrentTask(uint32_t dwSessionHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RmCancelCurrentTask(dwSessionHandle);
        return win32_impl_result;
    }
    inline uint32_t RmAddFilter(uint32_t dwSessionHandle, uint16_t* strModuleName, Windows::Win32::RestartManager::RM_UNIQUE_PROCESS* pProcess, uint16_t* strServiceShortName, Windows::Win32::RestartManager::RM_FILTER_ACTION FilterAction)
    {
        auto win32_impl_result = WIN32_IMPL_RmAddFilter(dwSessionHandle, strModuleName, pProcess, strServiceShortName, FilterAction);
        return win32_impl_result;
    }
    inline uint32_t RmRemoveFilter(uint32_t dwSessionHandle, uint16_t* strModuleName, Windows::Win32::RestartManager::RM_UNIQUE_PROCESS* pProcess, uint16_t* strServiceShortName)
    {
        auto win32_impl_result = WIN32_IMPL_RmRemoveFilter(dwSessionHandle, strModuleName, pProcess, strServiceShortName);
        return win32_impl_result;
    }
    inline uint32_t RmGetFilterList(uint32_t dwSessionHandle, uint8_t* pbFilterBuf, uint32_t cbFilterBuf, uint32_t* cbFilterBufNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_RmGetFilterList(dwSessionHandle, pbFilterBuf, cbFilterBuf, cbFilterBufNeeded);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
