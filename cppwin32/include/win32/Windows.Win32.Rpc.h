// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Rpc_H
#define WIN32_Windows_Win32_Rpc_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Rpc.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Rpc
{
#pragma region methods
    inline int32_t IUnknown_QueryInterface_Proxy(Windows::Win32::Com::IUnknown* This, ::win32::guid* riid, void** ppvObject)
    {
        auto win32_impl_result = WIN32_IMPL_IUnknown_QueryInterface_Proxy(This, riid, ppvObject);
        return win32_impl_result;
    }
    inline uint32_t IUnknown_AddRef_Proxy(Windows::Win32::Com::IUnknown* This)
    {
        auto win32_impl_result = WIN32_IMPL_IUnknown_AddRef_Proxy(This);
        return win32_impl_result;
    }
    inline uint32_t IUnknown_Release_Proxy(Windows::Win32::Com::IUnknown* This)
    {
        auto win32_impl_result = WIN32_IMPL_IUnknown_Release_Proxy(This);
        return win32_impl_result;
    }
    inline int32_t RpcBindingCopy(void* SourceBinding, void** DestinationBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingCopy(SourceBinding, DestinationBinding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingFree(void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingFree(Binding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetOption(void* hBinding, uint32_t option, size_t optionValue)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetOption(hBinding, option, optionValue);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqOption(void* hBinding, uint32_t option, size_t* pOptionValue)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqOption(hBinding, option, pOptionValue);
        return win32_impl_result;
    }
    inline int32_t RpcBindingFromStringBindingA(uint8_t* StringBinding, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingFromStringBindingA(StringBinding, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingFromStringBindingW(uint16_t* StringBinding, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingFromStringBindingW(StringBinding, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcSsGetContextBinding(void* ContextHandle, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSsGetContextBinding(ContextHandle, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqObject(void* Binding, ::win32::guid* ObjectUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqObject(Binding, ObjectUuid);
        return win32_impl_result;
    }
    inline int32_t RpcBindingReset(void* Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingReset(Binding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetObject(void* Binding, ::win32::guid* ObjectUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetObject(Binding, ObjectUuid);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqDefaultProtectLevel(uint32_t AuthnSvc, uint32_t* AuthnLevel)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqDefaultProtectLevel(AuthnSvc, AuthnLevel);
        return win32_impl_result;
    }
    inline int32_t RpcBindingToStringBindingA(void* Binding, uint8_t** StringBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingToStringBindingA(Binding, StringBinding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingToStringBindingW(void* Binding, uint16_t** StringBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingToStringBindingW(Binding, StringBinding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingVectorFree(Windows::Win32::Rpc::RPC_BINDING_VECTOR** BindingVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingVectorFree(BindingVector);
        return win32_impl_result;
    }
    inline int32_t RpcStringBindingComposeA(uint8_t* ObjUuid, uint8_t* ProtSeq, uint8_t* NetworkAddr, uint8_t* Endpoint, uint8_t* Options, uint8_t** StringBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringBindingComposeA(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        return win32_impl_result;
    }
    inline int32_t RpcStringBindingComposeW(uint16_t* ObjUuid, uint16_t* ProtSeq, uint16_t* NetworkAddr, uint16_t* Endpoint, uint16_t* Options, uint16_t** StringBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringBindingComposeW(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        return win32_impl_result;
    }
    inline int32_t RpcStringBindingParseA(uint8_t* StringBinding, uint8_t** ObjUuid, uint8_t** Protseq, uint8_t** NetworkAddr, uint8_t** Endpoint, uint8_t** NetworkOptions)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringBindingParseA(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        return win32_impl_result;
    }
    inline int32_t RpcStringBindingParseW(uint16_t* StringBinding, uint16_t** ObjUuid, uint16_t** Protseq, uint16_t** NetworkAddr, uint16_t** Endpoint, uint16_t** NetworkOptions)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringBindingParseW(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        return win32_impl_result;
    }
    inline int32_t RpcStringFreeA(uint8_t** String)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringFreeA(String);
        return win32_impl_result;
    }
    inline int32_t RpcStringFreeW(uint16_t** String)
    {
        auto win32_impl_result = WIN32_IMPL_RpcStringFreeW(String);
        return win32_impl_result;
    }
    inline int32_t RpcIfInqId(void* RpcIfHandle, Windows::Win32::Rpc::RPC_IF_ID* RpcIfId)
    {
        auto win32_impl_result = WIN32_IMPL_RpcIfInqId(RpcIfHandle, RpcIfId);
        return win32_impl_result;
    }
    inline int32_t RpcNetworkIsProtseqValidA(uint8_t* Protseq)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNetworkIsProtseqValidA(Protseq);
        return win32_impl_result;
    }
    inline int32_t RpcNetworkIsProtseqValidW(uint16_t* Protseq)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNetworkIsProtseqValidW(Protseq);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqComTimeout(void* Binding, uint32_t* Timeout)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqComTimeout(Binding, Timeout);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtSetComTimeout(void* Binding, uint32_t Timeout)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtSetComTimeout(Binding, Timeout);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtSetCancelTimeout(int32_t Timeout)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtSetCancelTimeout(Timeout);
        return win32_impl_result;
    }
    inline int32_t RpcNetworkInqProtseqsA(Windows::Win32::Rpc::RPC_PROTSEQ_VECTORA** ProtseqVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNetworkInqProtseqsA(ProtseqVector);
        return win32_impl_result;
    }
    inline int32_t RpcNetworkInqProtseqsW(Windows::Win32::Rpc::RPC_PROTSEQ_VECTORW** ProtseqVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNetworkInqProtseqsW(ProtseqVector);
        return win32_impl_result;
    }
    inline int32_t RpcObjectInqType(::win32::guid* ObjUuid, ::win32::guid* TypeUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcObjectInqType(ObjUuid, TypeUuid);
        return win32_impl_result;
    }
    inline int32_t RpcObjectSetInqFn(Windows::Win32::Rpc::RPC_OBJECT_INQ_FN** InquiryFn)
    {
        auto win32_impl_result = WIN32_IMPL_RpcObjectSetInqFn(InquiryFn);
        return win32_impl_result;
    }
    inline int32_t RpcObjectSetType(::win32::guid* ObjUuid, ::win32::guid* TypeUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcObjectSetType(ObjUuid, TypeUuid);
        return win32_impl_result;
    }
    inline int32_t RpcProtseqVectorFreeA(Windows::Win32::Rpc::RPC_PROTSEQ_VECTORA** ProtseqVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcProtseqVectorFreeA(ProtseqVector);
        return win32_impl_result;
    }
    inline int32_t RpcProtseqVectorFreeW(Windows::Win32::Rpc::RPC_PROTSEQ_VECTORW** ProtseqVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcProtseqVectorFreeW(ProtseqVector);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqBindings(Windows::Win32::Rpc::RPC_BINDING_VECTOR** BindingVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqBindings(BindingVector);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqBindingsEx(void* SecurityDescriptor, Windows::Win32::Rpc::RPC_BINDING_VECTOR** BindingVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqBindingsEx(SecurityDescriptor, BindingVector);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqIf(void* IfSpec, ::win32::guid* MgrTypeUuid, void** MgrEpv)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqIf(IfSpec, MgrTypeUuid, MgrEpv);
        return win32_impl_result;
    }
    inline int32_t RpcServerListen(uint32_t MinimumCallThreads, uint32_t MaxCalls, uint32_t DontWait)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerListen(MinimumCallThreads, MaxCalls, DontWait);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterIf(void* IfSpec, ::win32::guid* MgrTypeUuid, void* MgrEpv)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterIf(IfSpec, MgrTypeUuid, MgrEpv);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterIfEx(void* IfSpec, ::win32::guid* MgrTypeUuid, void* MgrEpv, uint32_t Flags, uint32_t MaxCalls, Windows::Win32::Rpc::RPC_IF_CALLBACK_FN** IfCallback)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterIfEx(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, IfCallback);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterIf2(void* IfSpec, ::win32::guid* MgrTypeUuid, void* MgrEpv, uint32_t Flags, uint32_t MaxCalls, uint32_t MaxRpcSize, Windows::Win32::Rpc::RPC_IF_CALLBACK_FN** IfCallbackFn)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterIf2(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallbackFn);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterIf3(void* IfSpec, ::win32::guid* MgrTypeUuid, void* MgrEpv, uint32_t Flags, uint32_t MaxCalls, uint32_t MaxRpcSize, Windows::Win32::Rpc::RPC_IF_CALLBACK_FN** IfCallback, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterIf3(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallback, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUnregisterIf(void* IfSpec, ::win32::guid* MgrTypeUuid, uint32_t WaitForCallsToComplete)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUnregisterIf(IfSpec, MgrTypeUuid, WaitForCallsToComplete);
        return win32_impl_result;
    }
    inline int32_t RpcServerUnregisterIfEx(void* IfSpec, ::win32::guid* MgrTypeUuid, int32_t RundownContextHandles)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUnregisterIfEx(IfSpec, MgrTypeUuid, RundownContextHandles);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseAllProtseqs(uint32_t MaxCalls, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseAllProtseqs(MaxCalls, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseAllProtseqsEx(uint32_t MaxCalls, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseAllProtseqsEx(MaxCalls, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseAllProtseqsIf(uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseAllProtseqsIf(MaxCalls, IfSpec, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseAllProtseqsIfEx(uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseAllProtseqsIfEx(MaxCalls, IfSpec, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqA(uint8_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqA(Protseq, MaxCalls, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqExA(uint8_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqExA(Protseq, MaxCalls, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqW(uint16_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqW(Protseq, MaxCalls, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqExW(uint16_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqExW(Protseq, MaxCalls, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqEpA(uint8_t* Protseq, uint32_t MaxCalls, uint8_t* Endpoint, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqEpA(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqEpExA(uint8_t* Protseq, uint32_t MaxCalls, uint8_t* Endpoint, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqEpExA(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqEpW(uint16_t* Protseq, uint32_t MaxCalls, uint16_t* Endpoint, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqEpW(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqEpExW(uint16_t* Protseq, uint32_t MaxCalls, uint16_t* Endpoint, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqEpExW(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqIfA(uint8_t* Protseq, uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqIfA(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqIfExA(uint8_t* Protseq, uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqIfExA(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqIfW(uint16_t* Protseq, uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqIfW(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t RpcServerUseProtseqIfExW(uint16_t* Protseq, uint32_t MaxCalls, void* IfSpec, void* SecurityDescriptor, Windows::Win32::Rpc::RPC_POLICY* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUseProtseqIfExW(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline void RpcServerYield()
    {
        WIN32_IMPL_RpcServerYield();
    }
    inline int32_t RpcMgmtStatsVectorFree(Windows::Win32::Rpc::RPC_STATS_VECTOR** StatsVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtStatsVectorFree(StatsVector);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqStats(void* Binding, Windows::Win32::Rpc::RPC_STATS_VECTOR** Statistics)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqStats(Binding, Statistics);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtIsServerListening(void* Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtIsServerListening(Binding);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtStopServerListening(void* Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtStopServerListening(Binding);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtWaitServerListen()
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtWaitServerListen();
        return win32_impl_result;
    }
    inline int32_t RpcMgmtSetServerStackSize(uint32_t ThreadStackSize)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtSetServerStackSize(ThreadStackSize);
        return win32_impl_result;
    }
    inline void RpcSsDontSerializeContext()
    {
        WIN32_IMPL_RpcSsDontSerializeContext();
    }
    inline int32_t RpcMgmtEnableIdleCleanup()
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEnableIdleCleanup();
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqIfIds(void* Binding, Windows::Win32::Rpc::RPC_IF_ID_VECTOR** IfIdVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqIfIds(Binding, IfIdVector);
        return win32_impl_result;
    }
    inline int32_t RpcIfIdVectorFree(Windows::Win32::Rpc::RPC_IF_ID_VECTOR** IfIdVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcIfIdVectorFree(IfIdVector);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqServerPrincNameA(void* Binding, uint32_t AuthnSvc, uint8_t** ServerPrincName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqServerPrincNameA(Binding, AuthnSvc, ServerPrincName);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtInqServerPrincNameW(void* Binding, uint32_t AuthnSvc, uint16_t** ServerPrincName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtInqServerPrincNameW(Binding, AuthnSvc, ServerPrincName);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqDefaultPrincNameA(uint32_t AuthnSvc, uint8_t** PrincName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqDefaultPrincNameA(AuthnSvc, PrincName);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqDefaultPrincNameW(uint32_t AuthnSvc, uint16_t** PrincName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqDefaultPrincNameW(AuthnSvc, PrincName);
        return win32_impl_result;
    }
    inline int32_t RpcEpResolveBinding(void* Binding, void* IfSpec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpResolveBinding(Binding, IfSpec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingInqEntryNameA(void* Binding, uint32_t EntryNameSyntax, uint8_t** EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingInqEntryNameA(Binding, EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingInqEntryNameW(void* Binding, uint32_t EntryNameSyntax, uint16_t** EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingInqEntryNameW(Binding, EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcBindingCreateA(Windows::Win32::Rpc::RPC_BINDING_HANDLE_TEMPLATE_V1_A* Template, Windows::Win32::Rpc::RPC_BINDING_HANDLE_SECURITY_V1_A* Security, Windows::Win32::Rpc::RPC_BINDING_HANDLE_OPTIONS_V1* Options, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingCreateA(Template, Security, Options, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcBindingCreateW(Windows::Win32::Rpc::RPC_BINDING_HANDLE_TEMPLATE_V1_W* Template, Windows::Win32::Rpc::RPC_BINDING_HANDLE_SECURITY_V1_W* Security, Windows::Win32::Rpc::RPC_BINDING_HANDLE_OPTIONS_V1* Options, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingCreateW(Template, Security, Options, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqBindingHandle(void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqBindingHandle(Binding);
        return win32_impl_result;
    }
    inline int32_t RpcImpersonateClient(void* BindingHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcImpersonateClient(BindingHandle);
        return win32_impl_result;
    }
    inline int32_t RpcImpersonateClient2(void* BindingHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcImpersonateClient2(BindingHandle);
        return win32_impl_result;
    }
    inline int32_t RpcRevertToSelfEx(void* BindingHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcRevertToSelfEx(BindingHandle);
        return win32_impl_result;
    }
    inline int32_t RpcRevertToSelf()
    {
        auto win32_impl_result = WIN32_IMPL_RpcRevertToSelf();
        return win32_impl_result;
    }
    inline int32_t RpcImpersonateClientContainer(void* BindingHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcImpersonateClientContainer(BindingHandle);
        return win32_impl_result;
    }
    inline int32_t RpcRevertContainerImpersonation()
    {
        auto win32_impl_result = WIN32_IMPL_RpcRevertContainerImpersonation();
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthClientA(void* ClientBinding, void** Privs, uint8_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, uint32_t* AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthClientA(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthClientW(void* ClientBinding, void** Privs, uint16_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, uint32_t* AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthClientW(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthClientExA(void* ClientBinding, void** Privs, uint8_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, uint32_t* AuthzSvc, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthClientExA(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthClientExW(void* ClientBinding, void** Privs, uint16_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, uint32_t* AuthzSvc, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthClientExW(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthInfoA(void* Binding, uint8_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, void** AuthIdentity, uint32_t* AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthInfoA(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthInfoW(void* Binding, uint16_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, void** AuthIdentity, uint32_t* AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthInfoW(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetAuthInfoA(void* Binding, uint8_t* ServerPrincName, uint32_t AuthnLevel, uint32_t AuthnSvc, void* AuthIdentity, uint32_t AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetAuthInfoA(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetAuthInfoExA(void* Binding, uint8_t* ServerPrincName, uint32_t AuthnLevel, uint32_t AuthnSvc, void* AuthIdentity, uint32_t AuthzSvc, Windows::Win32::Rpc::RPC_SECURITY_QOS* SecurityQos)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetAuthInfoExA(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQos);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetAuthInfoW(void* Binding, uint16_t* ServerPrincName, uint32_t AuthnLevel, uint32_t AuthnSvc, void* AuthIdentity, uint32_t AuthzSvc)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetAuthInfoW(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        return win32_impl_result;
    }
    inline int32_t RpcBindingSetAuthInfoExW(void* Binding, uint16_t* ServerPrincName, uint32_t AuthnLevel, uint32_t AuthnSvc, void* AuthIdentity, uint32_t AuthzSvc, Windows::Win32::Rpc::RPC_SECURITY_QOS* SecurityQOS)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingSetAuthInfoExW(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQOS);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthInfoExA(void* Binding, uint8_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, void** AuthIdentity, uint32_t* AuthzSvc, uint32_t RpcQosVersion, Windows::Win32::Rpc::RPC_SECURITY_QOS* SecurityQOS)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthInfoExA(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        return win32_impl_result;
    }
    inline int32_t RpcBindingInqAuthInfoExW(void* Binding, uint16_t** ServerPrincName, uint32_t* AuthnLevel, uint32_t* AuthnSvc, void** AuthIdentity, uint32_t* AuthzSvc, uint32_t RpcQosVersion, Windows::Win32::Rpc::RPC_SECURITY_QOS* SecurityQOS)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingInqAuthInfoExW(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        return win32_impl_result;
    }
    inline int32_t RpcServerCompleteSecurityCallback(void* BindingHandle, int32_t Status)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerCompleteSecurityCallback(BindingHandle, Status);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterAuthInfoA(uint8_t* ServerPrincName, uint32_t AuthnSvc, Windows::Win32::Rpc::RPC_AUTH_KEY_RETRIEVAL_FN* GetKeyFn, void* Arg)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterAuthInfoA(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        return win32_impl_result;
    }
    inline int32_t RpcServerRegisterAuthInfoW(uint16_t* ServerPrincName, uint32_t AuthnSvc, Windows::Win32::Rpc::RPC_AUTH_KEY_RETRIEVAL_FN* GetKeyFn, void* Arg)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerRegisterAuthInfoW(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        return win32_impl_result;
    }
    inline int32_t RpcBindingServerFromClient(void* ClientBinding, void** ServerBinding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingServerFromClient(ClientBinding, ServerBinding);
        return win32_impl_result;
    }
    inline void RpcRaiseException(int32_t exception)
    {
        WIN32_IMPL_RpcRaiseException(exception);
    }
    inline int32_t RpcTestCancel()
    {
        auto win32_impl_result = WIN32_IMPL_RpcTestCancel();
        return win32_impl_result;
    }
    inline int32_t RpcServerTestCancel(void* BindingHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerTestCancel(BindingHandle);
        return win32_impl_result;
    }
    inline int32_t RpcCancelThread(void* Thread)
    {
        auto win32_impl_result = WIN32_IMPL_RpcCancelThread(Thread);
        return win32_impl_result;
    }
    inline int32_t RpcCancelThreadEx(void* Thread, int32_t Timeout)
    {
        auto win32_impl_result = WIN32_IMPL_RpcCancelThreadEx(Thread, Timeout);
        return win32_impl_result;
    }
    inline int32_t UuidCreate(::win32::guid* Uuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidCreate(Uuid);
        return win32_impl_result;
    }
    inline int32_t UuidCreateSequential(::win32::guid* Uuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidCreateSequential(Uuid);
        return win32_impl_result;
    }
    inline int32_t UuidToStringA(::win32::guid* Uuid, uint8_t** StringUuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidToStringA(Uuid, StringUuid);
        return win32_impl_result;
    }
    inline int32_t UuidFromStringA(uint8_t* StringUuid, ::win32::guid* Uuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidFromStringA(StringUuid, Uuid);
        return win32_impl_result;
    }
    inline int32_t UuidToStringW(::win32::guid* Uuid, uint16_t** StringUuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidToStringW(Uuid, StringUuid);
        return win32_impl_result;
    }
    inline int32_t UuidFromStringW(uint16_t* StringUuid, ::win32::guid* Uuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidFromStringW(StringUuid, Uuid);
        return win32_impl_result;
    }
    inline int32_t UuidCompare(::win32::guid* Uuid1, ::win32::guid* Uuid2, int32_t* Status)
    {
        auto win32_impl_result = WIN32_IMPL_UuidCompare(Uuid1, Uuid2, Status);
        return win32_impl_result;
    }
    inline int32_t UuidCreateNil(::win32::guid* NilUuid)
    {
        auto win32_impl_result = WIN32_IMPL_UuidCreateNil(NilUuid);
        return win32_impl_result;
    }
    inline int32_t UuidEqual(::win32::guid* Uuid1, ::win32::guid* Uuid2, int32_t* Status)
    {
        auto win32_impl_result = WIN32_IMPL_UuidEqual(Uuid1, Uuid2, Status);
        return win32_impl_result;
    }
    inline uint16_t UuidHash(::win32::guid* Uuid, int32_t* Status)
    {
        auto win32_impl_result = WIN32_IMPL_UuidHash(Uuid, Status);
        return win32_impl_result;
    }
    inline int32_t UuidIsNil(::win32::guid* Uuid, int32_t* Status)
    {
        auto win32_impl_result = WIN32_IMPL_UuidIsNil(Uuid, Status);
        return win32_impl_result;
    }
    inline int32_t RpcEpRegisterNoReplaceA(void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVector, Windows::Win32::Rpc::UUID_VECTOR* UuidVector, uint8_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpRegisterNoReplaceA(IfSpec, BindingVector, UuidVector, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcEpRegisterNoReplaceW(void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVector, Windows::Win32::Rpc::UUID_VECTOR* UuidVector, uint16_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpRegisterNoReplaceW(IfSpec, BindingVector, UuidVector, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcEpRegisterA(void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVector, Windows::Win32::Rpc::UUID_VECTOR* UuidVector, uint8_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpRegisterA(IfSpec, BindingVector, UuidVector, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcEpRegisterW(void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVector, Windows::Win32::Rpc::UUID_VECTOR* UuidVector, uint16_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpRegisterW(IfSpec, BindingVector, UuidVector, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcEpUnregister(void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVector, Windows::Win32::Rpc::UUID_VECTOR* UuidVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcEpUnregister(IfSpec, BindingVector, UuidVector);
        return win32_impl_result;
    }
    inline int32_t DceErrorInqTextA(int32_t RpcStatus, uint8_t* ErrorText)
    {
        auto win32_impl_result = WIN32_IMPL_DceErrorInqTextA(RpcStatus, ErrorText);
        return win32_impl_result;
    }
    inline int32_t DceErrorInqTextW(int32_t RpcStatus, uint16_t* ErrorText)
    {
        auto win32_impl_result = WIN32_IMPL_DceErrorInqTextW(RpcStatus, ErrorText);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtEpEltInqBegin(void* EpBinding, uint32_t InquiryType, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t VersOption, ::win32::guid* ObjectUuid, void*** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEpEltInqBegin(EpBinding, InquiryType, IfId, VersOption, ObjectUuid, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtEpEltInqDone(void*** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEpEltInqDone(InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtEpEltInqNextA(void** InquiryContext, Windows::Win32::Rpc::RPC_IF_ID* IfId, void** Binding, ::win32::guid* ObjectUuid, uint8_t** Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEpEltInqNextA(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtEpEltInqNextW(void** InquiryContext, Windows::Win32::Rpc::RPC_IF_ID* IfId, void** Binding, ::win32::guid* ObjectUuid, uint16_t** Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEpEltInqNextW(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtEpUnregister(void* EpBinding, Windows::Win32::Rpc::RPC_IF_ID* IfId, void* Binding, ::win32::guid* ObjectUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtEpUnregister(EpBinding, IfId, Binding, ObjectUuid);
        return win32_impl_result;
    }
    inline int32_t RpcMgmtSetAuthorizationFn(Windows::Win32::Rpc::RPC_MGMT_AUTHORIZATION_FN* AuthorizationFn)
    {
        auto win32_impl_result = WIN32_IMPL_RpcMgmtSetAuthorizationFn(AuthorizationFn);
        return win32_impl_result;
    }
    inline int32_t RpcExceptionFilter(uint32_t ExceptionCode)
    {
        auto win32_impl_result = WIN32_IMPL_RpcExceptionFilter(ExceptionCode);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupCreateW(Windows::Win32::Rpc::RPC_INTERFACE_TEMPLATEW* Interfaces, uint32_t NumIfs, Windows::Win32::Rpc::RPC_ENDPOINT_TEMPLATEW* Endpoints, uint32_t NumEndpoints, uint32_t IdlePeriod, Windows::Win32::Rpc::RPC_INTERFACE_GROUP_IDLE_CALLBACK_FN* IdleCallbackFn, void* IdleCallbackContext, void** IfGroup)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupCreateW(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupCreateA(Windows::Win32::Rpc::RPC_INTERFACE_TEMPLATEA* Interfaces, uint32_t NumIfs, Windows::Win32::Rpc::RPC_ENDPOINT_TEMPLATEA* Endpoints, uint32_t NumEndpoints, uint32_t IdlePeriod, Windows::Win32::Rpc::RPC_INTERFACE_GROUP_IDLE_CALLBACK_FN* IdleCallbackFn, void* IdleCallbackContext, void** IfGroup)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupCreateA(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupClose(void* IfGroup)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupClose(IfGroup);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupActivate(void* IfGroup)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupActivate(IfGroup);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupDeactivate(void* IfGroup, uint32_t ForceDeactivation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupDeactivate(IfGroup, ForceDeactivation);
        return win32_impl_result;
    }
    inline int32_t RpcServerInterfaceGroupInqBindings(void* IfGroup, Windows::Win32::Rpc::RPC_BINDING_VECTOR** BindingVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInterfaceGroupInqBindings(IfGroup, BindingVector);
        return win32_impl_result;
    }
    inline int32_t I_RpcNegotiateTransferSyntax(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNegotiateTransferSyntax(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcGetBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcGetBuffer(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcGetBufferWithObject(Windows::Win32::Rpc::RPC_MESSAGE* Message, ::win32::guid* ObjectUuid)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcGetBufferWithObject(Message, ObjectUuid);
        return win32_impl_result;
    }
    inline int32_t I_RpcSendReceive(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcSendReceive(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcFreeBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcFreeBuffer(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcSend(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcSend(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcReceive(Windows::Win32::Rpc::RPC_MESSAGE* Message, uint32_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcReceive(Message, Size);
        return win32_impl_result;
    }
    inline int32_t I_RpcFreePipeBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcFreePipeBuffer(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcReallocPipeBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message, uint32_t NewSize)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcReallocPipeBuffer(Message, NewSize);
        return win32_impl_result;
    }
    inline void I_RpcRequestMutex(void** Mutex)
    {
        WIN32_IMPL_I_RpcRequestMutex(Mutex);
    }
    inline void I_RpcClearMutex(void* Mutex)
    {
        WIN32_IMPL_I_RpcClearMutex(Mutex);
    }
    inline void I_RpcDeleteMutex(void* Mutex)
    {
        WIN32_IMPL_I_RpcDeleteMutex(Mutex);
    }
    inline void* I_RpcAllocate(uint32_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcAllocate(Size);
        return win32_impl_result;
    }
    inline void I_RpcFree(void* Object)
    {
        WIN32_IMPL_I_RpcFree(Object);
    }
    inline void I_RpcPauseExecution(uint32_t Milliseconds)
    {
        WIN32_IMPL_I_RpcPauseExecution(Milliseconds);
    }
    inline int32_t I_RpcGetExtendedError()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcGetExtendedError();
        return win32_impl_result;
    }
    inline int32_t I_RpcSystemHandleTypeSpecificWork(void* Handle, uint8_t ActualType, uint8_t IdlType, Windows::Win32::Rpc::LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION MarshalDirection)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcSystemHandleTypeSpecificWork(Handle, ActualType, IdlType, MarshalDirection);
        return win32_impl_result;
    }
    inline void* I_RpcGetCurrentCallHandle()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcGetCurrentCallHandle();
        return win32_impl_result;
    }
    inline int32_t I_RpcNsInterfaceExported(uint32_t EntryNameSyntax, uint16_t* EntryName, Windows::Win32::Rpc::RPC_SERVER_INTERFACE* RpcInterfaceInformation)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsInterfaceExported(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        return win32_impl_result;
    }
    inline int32_t I_RpcNsInterfaceUnexported(uint32_t EntryNameSyntax, uint16_t* EntryName, Windows::Win32::Rpc::RPC_SERVER_INTERFACE* RpcInterfaceInformation)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsInterfaceUnexported(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingToStaticStringBindingW(void* Binding, uint16_t** StringBinding)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingToStaticStringBindingW(Binding, StringBinding);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqSecurityContext(void* Binding, void** SecurityContextHandle)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqSecurityContext(Binding, SecurityContextHandle);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqSecurityContextKeyInfo(void* Binding, void* KeyInfo)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqSecurityContextKeyInfo(Binding, KeyInfo);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqWireIdForSnego(void* Binding, uint8_t* WireId)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqWireIdForSnego(Binding, WireId);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqMarshalledTargetInfo(void* Binding, uint32_t* MarshalledTargetInfoSize, uint8_t** MarshalledTargetInfo)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqMarshalledTargetInfo(Binding, MarshalledTargetInfoSize, MarshalledTargetInfo);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqLocalClientPID(void* Binding, uint32_t* Pid)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqLocalClientPID(Binding, Pid);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingHandleToAsyncHandle(void* Binding, void** AsyncHandle)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingHandleToAsyncHandle(Binding, AsyncHandle);
        return win32_impl_result;
    }
    inline int32_t I_RpcNsBindingSetEntryNameW(void* Binding, uint32_t EntryNameSyntax, uint16_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsBindingSetEntryNameW(Binding, EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t I_RpcNsBindingSetEntryNameA(void* Binding, uint32_t EntryNameSyntax, uint8_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsBindingSetEntryNameA(Binding, EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerUseProtseqEp2A(uint8_t* NetworkAddress, uint8_t* Protseq, uint32_t MaxCalls, uint8_t* Endpoint, void* SecurityDescriptor, void* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerUseProtseqEp2A(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerUseProtseqEp2W(uint16_t* NetworkAddress, uint16_t* Protseq, uint32_t MaxCalls, uint16_t* Endpoint, void* SecurityDescriptor, void* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerUseProtseqEp2W(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerUseProtseq2W(uint16_t* NetworkAddress, uint16_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor, void* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerUseProtseq2W(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerUseProtseq2A(uint8_t* NetworkAddress, uint8_t* Protseq, uint32_t MaxCalls, void* SecurityDescriptor, void* Policy)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerUseProtseq2A(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerStartService(uint16_t* Protseq, uint16_t* Endpoint, void* IfSpec)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerStartService(Protseq, Endpoint, IfSpec);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqDynamicEndpointW(void* Binding, uint16_t** DynamicEndpoint)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqDynamicEndpointW(Binding, DynamicEndpoint);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqDynamicEndpointA(void* Binding, uint8_t** DynamicEndpoint)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqDynamicEndpointA(Binding, DynamicEndpoint);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerCheckClientRestriction(void* Context)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerCheckClientRestriction(Context);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqTransportType(void* Binding, uint32_t* Type)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqTransportType(Binding, Type);
        return win32_impl_result;
    }
    inline int32_t I_RpcIfInqTransferSyntaxes(void* RpcIfHandle, Windows::Win32::Rpc::RPC_TRANSFER_SYNTAX* TransferSyntaxes, uint32_t TransferSyntaxSize, uint32_t* TransferSyntaxCount)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcIfInqTransferSyntaxes(RpcIfHandle, TransferSyntaxes, TransferSyntaxSize, TransferSyntaxCount);
        return win32_impl_result;
    }
    inline int32_t I_UuidCreate(::win32::guid* Uuid)
    {
        auto win32_impl_result = WIN32_IMPL_I_UuidCreate(Uuid);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingCopy(void* SourceBinding, void** DestinationBinding)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingCopy(SourceBinding, DestinationBinding);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingIsClientLocal(void* BindingHandle, uint32_t* ClientLocalFlag)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingIsClientLocal(BindingHandle, ClientLocalFlag);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingCreateNP(uint16_t* ServerName, uint16_t* ServiceName, uint16_t* NetworkOptions, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingCreateNP(ServerName, ServiceName, NetworkOptions, Binding);
        return win32_impl_result;
    }
    inline void I_RpcSsDontSerializeContext()
    {
        WIN32_IMPL_I_RpcSsDontSerializeContext();
    }
    inline int32_t I_RpcServerRegisterForwardFunction(Windows::Win32::Rpc::RPC_FORWARD_FUNCTION** pForwardFunction)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerRegisterForwardFunction(pForwardFunction);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::RPC_ADDRESS_CHANGE_FN** I_RpcServerInqAddressChangeFn()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerInqAddressChangeFn();
        return win32_impl_result;
    }
    inline int32_t I_RpcServerSetAddressChangeFn(Windows::Win32::Rpc::RPC_ADDRESS_CHANGE_FN** pAddressChangeFn)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerSetAddressChangeFn(pAddressChangeFn);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerInqLocalConnAddress(void* Binding, void* Buffer, uint32_t* BufferSize, uint32_t* AddressFormat)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerInqLocalConnAddress(Binding, Buffer, BufferSize, AddressFormat);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerInqRemoteConnAddress(void* Binding, void* Buffer, uint32_t* BufferSize, uint32_t* AddressFormat)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerInqRemoteConnAddress(Binding, Buffer, BufferSize, AddressFormat);
        return win32_impl_result;
    }
    inline void I_RpcSessionStrictContextHandle()
    {
        WIN32_IMPL_I_RpcSessionStrictContextHandle();
    }
    inline int32_t I_RpcTurnOnEEInfoPropagation()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcTurnOnEEInfoPropagation();
        return win32_impl_result;
    }
    inline int32_t I_RpcServerInqTransportType(uint32_t* Type)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerInqTransportType(Type);
        return win32_impl_result;
    }
    inline int32_t I_RpcMapWin32Status(int32_t Status)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcMapWin32Status(Status);
        return win32_impl_result;
    }
    inline void I_RpcRecordCalloutFailure(int32_t RpcStatus, Windows::Win32::Rpc::RDR_CALLOUT_STATE* CallOutState, uint16_t* DllName)
    {
        WIN32_IMPL_I_RpcRecordCalloutFailure(RpcStatus, CallOutState, DllName);
    }
    inline int32_t I_RpcMgmtEnableDedicatedThreadPool()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcMgmtEnableDedicatedThreadPool();
        return win32_impl_result;
    }
    inline int32_t I_RpcGetDefaultSD(void** ppSecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcGetDefaultSD(ppSecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t I_RpcOpenClientProcess(void* Binding, uint32_t DesiredAccess, void** ClientProcess)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcOpenClientProcess(Binding, DesiredAccess, ClientProcess);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingIsServerLocal(void* Binding, uint32_t* ServerLocalFlag)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingIsServerLocal(Binding, ServerLocalFlag);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingSetPrivateOption(void* hBinding, uint32_t option, size_t optionValue)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingSetPrivateOption(hBinding, option, optionValue);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerSubscribeForDisconnectNotification(void* Binding, void* hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerSubscribeForDisconnectNotification(Binding, hEvent);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerGetAssociationID(void* Binding, uint32_t* AssociationID)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerGetAssociationID(Binding, AssociationID);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerDisableExceptionFilter()
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerDisableExceptionFilter();
        return win32_impl_result;
    }
    inline int32_t I_RpcServerSubscribeForDisconnectNotification2(void* Binding, void* hEvent, ::win32::guid* SubscriptionId)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerSubscribeForDisconnectNotification2(Binding, hEvent, SubscriptionId);
        return win32_impl_result;
    }
    inline int32_t I_RpcServerUnsubscribeForDisconnectNotification(void* Binding, ::win32::guid SubscriptionId)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcServerUnsubscribeForDisconnectNotification(Binding, SubscriptionId);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingExportA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVec, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingExportA(EntryNameSyntax, EntryName, IfSpec, BindingVec, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingUnexportA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingUnexportA(EntryNameSyntax, EntryName, IfSpec, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingExportW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVec, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingExportW(EntryNameSyntax, EntryName, IfSpec, BindingVec, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingUnexportW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingUnexportW(EntryNameSyntax, EntryName, IfSpec, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingExportPnPA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingExportPnPA(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingUnexportPnPA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingUnexportPnPA(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingExportPnPW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingExportPnPW(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingUnexportPnPW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, Windows::Win32::Rpc::UUID_VECTOR* ObjectVector)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingUnexportPnPW(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingLookupBeginA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, ::win32::guid* ObjUuid, uint32_t BindingMaxCount, void** LookupContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingLookupBeginA(EntryNameSyntax, EntryName, IfSpec, ObjUuid, BindingMaxCount, LookupContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingLookupBeginW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, ::win32::guid* ObjUuid, uint32_t BindingMaxCount, void** LookupContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingLookupBeginW(EntryNameSyntax, EntryName, IfSpec, ObjUuid, BindingMaxCount, LookupContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingLookupNext(void* LookupContext, Windows::Win32::Rpc::RPC_BINDING_VECTOR** BindingVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingLookupNext(LookupContext, BindingVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingLookupDone(void** LookupContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingLookupDone(LookupContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupDeleteA(uint32_t GroupNameSyntax, uint8_t* GroupName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupDeleteA(GroupNameSyntax, GroupName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrAddA(uint32_t GroupNameSyntax, uint8_t* GroupName, uint32_t MemberNameSyntax, uint8_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrAddA(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrRemoveA(uint32_t GroupNameSyntax, uint8_t* GroupName, uint32_t MemberNameSyntax, uint8_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrRemoveA(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrInqBeginA(uint32_t GroupNameSyntax, uint8_t* GroupName, uint32_t MemberNameSyntax, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrInqBeginA(GroupNameSyntax, GroupName, MemberNameSyntax, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrInqNextA(void* InquiryContext, uint8_t** MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrInqNextA(InquiryContext, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupDeleteW(uint32_t GroupNameSyntax, uint16_t* GroupName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupDeleteW(GroupNameSyntax, GroupName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrAddW(uint32_t GroupNameSyntax, uint16_t* GroupName, uint32_t MemberNameSyntax, uint16_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrAddW(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrRemoveW(uint32_t GroupNameSyntax, uint16_t* GroupName, uint32_t MemberNameSyntax, uint16_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrRemoveW(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrInqBeginW(uint32_t GroupNameSyntax, uint16_t* GroupName, uint32_t MemberNameSyntax, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrInqBeginW(GroupNameSyntax, GroupName, MemberNameSyntax, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrInqNextW(void* InquiryContext, uint16_t** MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrInqNextW(InquiryContext, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsGroupMbrInqDone(void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsGroupMbrInqDone(InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileDeleteA(uint32_t ProfileNameSyntax, uint8_t* ProfileName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileDeleteA(ProfileNameSyntax, ProfileName);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltAddA(uint32_t ProfileNameSyntax, uint8_t* ProfileName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t MemberNameSyntax, uint8_t* MemberName, uint32_t Priority, uint8_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltAddA(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName, Priority, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltRemoveA(uint32_t ProfileNameSyntax, uint8_t* ProfileName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t MemberNameSyntax, uint8_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltRemoveA(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltInqBeginA(uint32_t ProfileNameSyntax, uint8_t* ProfileName, uint32_t InquiryType, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t VersOption, uint32_t MemberNameSyntax, uint8_t* MemberName, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltInqBeginA(ProfileNameSyntax, ProfileName, InquiryType, IfId, VersOption, MemberNameSyntax, MemberName, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltInqNextA(void* InquiryContext, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint8_t** MemberName, uint32_t* Priority, uint8_t** Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltInqNextA(InquiryContext, IfId, MemberName, Priority, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileDeleteW(uint32_t ProfileNameSyntax, uint16_t* ProfileName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileDeleteW(ProfileNameSyntax, ProfileName);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltAddW(uint32_t ProfileNameSyntax, uint16_t* ProfileName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t MemberNameSyntax, uint16_t* MemberName, uint32_t Priority, uint16_t* Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltAddW(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName, Priority, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltRemoveW(uint32_t ProfileNameSyntax, uint16_t* ProfileName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t MemberNameSyntax, uint16_t* MemberName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltRemoveW(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltInqBeginW(uint32_t ProfileNameSyntax, uint16_t* ProfileName, uint32_t InquiryType, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t VersOption, uint32_t MemberNameSyntax, uint16_t* MemberName, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltInqBeginW(ProfileNameSyntax, ProfileName, InquiryType, IfId, VersOption, MemberNameSyntax, MemberName, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltInqNextW(void* InquiryContext, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint16_t** MemberName, uint32_t* Priority, uint16_t** Annotation)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltInqNextW(InquiryContext, IfId, MemberName, Priority, Annotation);
        return win32_impl_result;
    }
    inline int32_t RpcNsProfileEltInqDone(void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsProfileEltInqDone(InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryObjectInqBeginA(uint32_t EntryNameSyntax, uint8_t* EntryName, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryObjectInqBeginA(EntryNameSyntax, EntryName, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryObjectInqBeginW(uint32_t EntryNameSyntax, uint16_t* EntryName, void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryObjectInqBeginW(EntryNameSyntax, EntryName, InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryObjectInqNext(void* InquiryContext, ::win32::guid* ObjUuid)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryObjectInqNext(InquiryContext, ObjUuid);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryObjectInqDone(void** InquiryContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryObjectInqDone(InquiryContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryExpandNameA(uint32_t EntryNameSyntax, uint8_t* EntryName, uint8_t** ExpandedName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryExpandNameA(EntryNameSyntax, EntryName, ExpandedName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtBindingUnexportA(uint32_t EntryNameSyntax, uint8_t* EntryName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t VersOption, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtBindingUnexportA(EntryNameSyntax, EntryName, IfId, VersOption, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryCreateA(uint32_t EntryNameSyntax, uint8_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryCreateA(EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryDeleteA(uint32_t EntryNameSyntax, uint8_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryDeleteA(EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryInqIfIdsA(uint32_t EntryNameSyntax, uint8_t* EntryName, Windows::Win32::Rpc::RPC_IF_ID_VECTOR** IfIdVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryInqIfIdsA(EntryNameSyntax, EntryName, IfIdVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtHandleSetExpAge(void* NsHandle, uint32_t ExpirationAge)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtHandleSetExpAge(NsHandle, ExpirationAge);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtInqExpAge(uint32_t* ExpirationAge)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtInqExpAge(ExpirationAge);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtSetExpAge(uint32_t ExpirationAge)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtSetExpAge(ExpirationAge);
        return win32_impl_result;
    }
    inline int32_t RpcNsEntryExpandNameW(uint32_t EntryNameSyntax, uint16_t* EntryName, uint16_t** ExpandedName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsEntryExpandNameW(EntryNameSyntax, EntryName, ExpandedName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtBindingUnexportW(uint32_t EntryNameSyntax, uint16_t* EntryName, Windows::Win32::Rpc::RPC_IF_ID* IfId, uint32_t VersOption, Windows::Win32::Rpc::UUID_VECTOR* ObjectUuidVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtBindingUnexportW(EntryNameSyntax, EntryName, IfId, VersOption, ObjectUuidVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryCreateW(uint32_t EntryNameSyntax, uint16_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryCreateW(EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryDeleteW(uint32_t EntryNameSyntax, uint16_t* EntryName)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryDeleteW(EntryNameSyntax, EntryName);
        return win32_impl_result;
    }
    inline int32_t RpcNsMgmtEntryInqIfIdsW(uint32_t EntryNameSyntax, uint16_t* EntryName, Windows::Win32::Rpc::RPC_IF_ID_VECTOR** IfIdVec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsMgmtEntryInqIfIdsW(EntryNameSyntax, EntryName, IfIdVec);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingImportBeginA(uint32_t EntryNameSyntax, uint8_t* EntryName, void* IfSpec, ::win32::guid* ObjUuid, void** ImportContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingImportBeginA(EntryNameSyntax, EntryName, IfSpec, ObjUuid, ImportContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingImportBeginW(uint32_t EntryNameSyntax, uint16_t* EntryName, void* IfSpec, ::win32::guid* ObjUuid, void** ImportContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingImportBeginW(EntryNameSyntax, EntryName, IfSpec, ObjUuid, ImportContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingImportNext(void* ImportContext, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingImportNext(ImportContext, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingImportDone(void** ImportContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingImportDone(ImportContext);
        return win32_impl_result;
    }
    inline int32_t RpcNsBindingSelect(Windows::Win32::Rpc::RPC_BINDING_VECTOR* BindingVec, void** Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcNsBindingSelect(BindingVec, Binding);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncRegisterInfo(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncRegisterInfo(pAsync);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncInitializeHandle(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, uint32_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncInitializeHandle(pAsync, Size);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncGetCallStatus(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncGetCallStatus(pAsync);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncCompleteCall(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, void* Reply)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncCompleteCall(pAsync, Reply);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncAbortCall(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, uint32_t ExceptionCode)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncAbortCall(pAsync, ExceptionCode);
        return win32_impl_result;
    }
    inline int32_t RpcAsyncCancelCall(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, Windows::Win32::SystemServices::BOOL fAbort)
    {
        auto win32_impl_result = WIN32_IMPL_RpcAsyncCancelCall(pAsync, fAbort);
        return win32_impl_result;
    }
    inline int32_t RpcErrorStartEnumeration(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorStartEnumeration(EnumHandle);
        return win32_impl_result;
    }
    inline int32_t RpcErrorGetNextRecord(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle, Windows::Win32::SystemServices::BOOL CopyStrings, Windows::Win32::Rpc::RPC_EXTENDED_ERROR_INFO* ErrorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorGetNextRecord(EnumHandle, CopyStrings, ErrorInfo);
        return win32_impl_result;
    }
    inline int32_t RpcErrorEndEnumeration(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorEndEnumeration(EnumHandle);
        return win32_impl_result;
    }
    inline int32_t RpcErrorResetEnumeration(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorResetEnumeration(EnumHandle);
        return win32_impl_result;
    }
    inline int32_t RpcErrorGetNumberOfRecords(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle, int32_t* Records)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorGetNumberOfRecords(EnumHandle, Records);
        return win32_impl_result;
    }
    inline int32_t RpcErrorSaveErrorInfo(Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle, void** ErrorBlob, size_t* BlobSize)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorSaveErrorInfo(EnumHandle, ErrorBlob, BlobSize);
        return win32_impl_result;
    }
    inline int32_t RpcErrorLoadErrorInfo(void* ErrorBlob, size_t BlobSize, Windows::Win32::Rpc::RPC_ERROR_ENUM_HANDLE* EnumHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorLoadErrorInfo(ErrorBlob, BlobSize, EnumHandle);
        return win32_impl_result;
    }
    inline int32_t RpcErrorAddRecord(Windows::Win32::Rpc::RPC_EXTENDED_ERROR_INFO* ErrorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_RpcErrorAddRecord(ErrorInfo);
        return win32_impl_result;
    }
    inline void RpcErrorClearInformation()
    {
        WIN32_IMPL_RpcErrorClearInformation();
    }
    inline int32_t RpcGetAuthorizationContextForClient(void* ClientBinding, Windows::Win32::SystemServices::BOOL ImpersonateOnReturn, void* Reserved1, Windows::Win32::SystemServices::LARGE_INTEGER* pExpirationTime, Windows::Win32::Kernel::LUID Reserved2, uint32_t Reserved3, void* Reserved4, void** pAuthzClientContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcGetAuthorizationContextForClient(ClientBinding, ImpersonateOnReturn, Reserved1, pExpirationTime, Reserved2, Reserved3, Reserved4, pAuthzClientContext);
        return win32_impl_result;
    }
    inline int32_t RpcFreeAuthorizationContext(void** pAuthzClientContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcFreeAuthorizationContext(pAuthzClientContext);
        return win32_impl_result;
    }
    inline int32_t RpcSsContextLockExclusive(void* ServerBindingHandle, void* UserContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSsContextLockExclusive(ServerBindingHandle, UserContext);
        return win32_impl_result;
    }
    inline int32_t RpcSsContextLockShared(void* ServerBindingHandle, void* UserContext)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSsContextLockShared(ServerBindingHandle, UserContext);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqCallAttributesW(void* ClientBinding, void* RpcCallAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqCallAttributesW(ClientBinding, RpcCallAttributes);
        return win32_impl_result;
    }
    inline int32_t RpcServerInqCallAttributesA(void* ClientBinding, void* RpcCallAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerInqCallAttributesA(ClientBinding, RpcCallAttributes);
        return win32_impl_result;
    }
    inline int32_t RpcServerSubscribeForNotification(void* Binding, Windows::Win32::Rpc::RPC_NOTIFICATIONS Notification, Windows::Win32::Rpc::RPC_NOTIFICATION_TYPES NotificationType, Windows::Win32::Rpc::RPC_ASYNC_NOTIFICATION_INFO* NotificationInfo)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerSubscribeForNotification(Binding, Notification, NotificationType, NotificationInfo);
        return win32_impl_result;
    }
    inline int32_t RpcServerUnsubscribeForNotification(void* Binding, Windows::Win32::Rpc::RPC_NOTIFICATIONS Notification, uint32_t* NotificationsQueued)
    {
        auto win32_impl_result = WIN32_IMPL_RpcServerUnsubscribeForNotification(Binding, Notification, NotificationsQueued);
        return win32_impl_result;
    }
    inline int32_t RpcBindingBind(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, void* Binding, void* IfSpec)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingBind(pAsync, Binding, IfSpec);
        return win32_impl_result;
    }
    inline int32_t RpcBindingUnbind(void* Binding)
    {
        auto win32_impl_result = WIN32_IMPL_RpcBindingUnbind(Binding);
        return win32_impl_result;
    }
    inline int32_t I_RpcAsyncSetHandle(Windows::Win32::Rpc::RPC_MESSAGE* Message, Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcAsyncSetHandle(Message, pAsync);
        return win32_impl_result;
    }
    inline int32_t I_RpcAsyncAbortCall(Windows::Win32::Rpc::RPC_ASYNC_STATE* pAsync, uint32_t ExceptionCode)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcAsyncAbortCall(pAsync, ExceptionCode);
        return win32_impl_result;
    }
    inline int32_t I_RpcExceptionFilter(uint32_t ExceptionCode)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcExceptionFilter(ExceptionCode);
        return win32_impl_result;
    }
    inline int32_t I_RpcBindingInqClientTokenAttributes(void* Binding, Windows::Win32::Kernel::LUID* TokenId, Windows::Win32::Kernel::LUID* AuthenticationId, Windows::Win32::Kernel::LUID* ModifiedId)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcBindingInqClientTokenAttributes(Binding, TokenId, AuthenticationId, ModifiedId);
        return win32_impl_result;
    }
    inline void* NDRCContextBinding(intptr_t CContext)
    {
        auto win32_impl_result = WIN32_IMPL_NDRCContextBinding(CContext);
        return win32_impl_result;
    }
    inline void NDRCContextMarshall(intptr_t CContext, void* pBuff)
    {
        WIN32_IMPL_NDRCContextMarshall(CContext, pBuff);
    }
    inline void NDRCContextUnmarshall(intptr_t* pCContext, void* hBinding, void* pBuff, uint32_t DataRepresentation)
    {
        WIN32_IMPL_NDRCContextUnmarshall(pCContext, hBinding, pBuff, DataRepresentation);
    }
    inline void NDRSContextMarshall(Windows::Win32::Rpc::NDR_SCONTEXT_1* CContext, void* pBuff, Windows::Win32::Rpc::NDR_RUNDOWN* userRunDownIn)
    {
        WIN32_IMPL_NDRSContextMarshall(CContext, pBuff, userRunDownIn);
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NDRSContextUnmarshall(void* pBuff, uint32_t DataRepresentation)
    {
        auto win32_impl_result = WIN32_IMPL_NDRSContextUnmarshall(pBuff, DataRepresentation);
        return win32_impl_result;
    }
    inline void NDRSContextMarshallEx(void* BindingHandle, Windows::Win32::Rpc::NDR_SCONTEXT_1* CContext, void* pBuff, Windows::Win32::Rpc::NDR_RUNDOWN* userRunDownIn)
    {
        WIN32_IMPL_NDRSContextMarshallEx(BindingHandle, CContext, pBuff, userRunDownIn);
    }
    inline void NDRSContextMarshall2(void* BindingHandle, Windows::Win32::Rpc::NDR_SCONTEXT_1* CContext, void* pBuff, Windows::Win32::Rpc::NDR_RUNDOWN* userRunDownIn, void* CtxGuard, uint32_t Flags)
    {
        WIN32_IMPL_NDRSContextMarshall2(BindingHandle, CContext, pBuff, userRunDownIn, CtxGuard, Flags);
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NDRSContextUnmarshallEx(void* BindingHandle, void* pBuff, uint32_t DataRepresentation)
    {
        auto win32_impl_result = WIN32_IMPL_NDRSContextUnmarshallEx(BindingHandle, pBuff, DataRepresentation);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NDRSContextUnmarshall2(void* BindingHandle, void* pBuff, uint32_t DataRepresentation, void* CtxGuard, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_NDRSContextUnmarshall2(BindingHandle, pBuff, DataRepresentation, CtxGuard, Flags);
        return win32_impl_result;
    }
    inline void RpcSsDestroyClientContext(void** ContextHandle)
    {
        WIN32_IMPL_RpcSsDestroyClientContext(ContextHandle);
    }
    inline void NdrSimpleTypeMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t FormatChar)
    {
        WIN32_IMPL_NdrSimpleTypeMarshall(pStubMsg, pMemory, FormatChar);
    }
    inline uint8_t* NdrPointerMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrPointerMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantStructMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStructMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantVaryingStructMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingStructMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrFixedArrayMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrFixedArrayMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantVaryingArrayMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingArrayMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrVaryingArrayMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrVaryingArrayMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrNonConformantStringMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonConformantStringMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantStringMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStringMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrEncapsulatedUnionMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrEncapsulatedUnionMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrNonEncapsulatedUnionMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonEncapsulatedUnionMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrByteCountPointerMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrByteCountPointerMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrXmitOrRepAsMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrXmitOrRepAsMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrUserMarshalMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrUserMarshalMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrInterfacePointerMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrInterfacePointerMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline void NdrClientContextMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, intptr_t ContextHandle, int32_t fCheck)
    {
        WIN32_IMPL_NdrClientContextMarshall(pStubMsg, ContextHandle, fCheck);
    }
    inline void NdrServerContextMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::NDR_SCONTEXT_1* ContextHandle, Windows::Win32::Rpc::NDR_RUNDOWN* RundownRoutine)
    {
        WIN32_IMPL_NdrServerContextMarshall(pStubMsg, ContextHandle, RundownRoutine);
    }
    inline void NdrServerContextNewMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::NDR_SCONTEXT_1* ContextHandle, Windows::Win32::Rpc::NDR_RUNDOWN* RundownRoutine, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrServerContextNewMarshall(pStubMsg, ContextHandle, RundownRoutine, pFormat);
    }
    inline void NdrSimpleTypeUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t FormatChar)
    {
        WIN32_IMPL_NdrSimpleTypeUnmarshall(pStubMsg, pMemory, FormatChar);
    }
    inline uint8_t* NdrRangeUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrRangeUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline void NdrCorrelationInitialize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, void* pMemory, uint32_t CacheSize, uint32_t flags)
    {
        WIN32_IMPL_NdrCorrelationInitialize(pStubMsg, pMemory, CacheSize, flags);
    }
    inline void NdrCorrelationPass(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg)
    {
        WIN32_IMPL_NdrCorrelationPass(pStubMsg);
    }
    inline void NdrCorrelationFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg)
    {
        WIN32_IMPL_NdrCorrelationFree(pStubMsg);
    }
    inline uint8_t* NdrPointerUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrPointerUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantStructUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStructUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantVaryingStructUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingStructUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrFixedArrayUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrFixedArrayUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantArrayUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantArrayUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantVaryingArrayUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingArrayUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrVaryingArrayUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrVaryingArrayUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrNonConformantStringUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonConformantStringUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantStringUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStringUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrEncapsulatedUnionUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrEncapsulatedUnionUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrNonEncapsulatedUnionUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonEncapsulatedUnionUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrByteCountPointerUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrByteCountPointerUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrXmitOrRepAsUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrXmitOrRepAsUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrInterfacePointerUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrInterfacePointerUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline void NdrClientContextUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, intptr_t* pContextHandle, void* BindHandle)
    {
        WIN32_IMPL_NdrClientContextUnmarshall(pStubMsg, pContextHandle, BindHandle);
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NdrServerContextUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg)
    {
        auto win32_impl_result = WIN32_IMPL_NdrServerContextUnmarshall(pStubMsg);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NdrContextHandleInitialize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrContextHandleInitialize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::NDR_SCONTEXT_1* NdrServerContextNewUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrServerContextNewUnmarshall(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline void NdrPointerBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrPointerBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantStructBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantStructBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantVaryingStructBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantVaryingStructBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrFixedArrayBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrFixedArrayBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantVaryingArrayBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantVaryingArrayBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrVaryingArrayBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrVaryingArrayBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantStringBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantStringBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrNonConformantStringBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrNonConformantStringBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrEncapsulatedUnionBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrEncapsulatedUnionBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrNonEncapsulatedUnionBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrNonEncapsulatedUnionBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrByteCountPointerBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrByteCountPointerBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrXmitOrRepAsBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrXmitOrRepAsBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrUserMarshalBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrUserMarshalBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrInterfacePointerBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrInterfacePointerBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrContextHandleSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrContextHandleSize(pStubMsg, pMemory, pFormat);
    }
    inline uint32_t NdrPointerMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrPointerMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrSimpleStructMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrSimpleStructMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrConformantStructMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStructMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrConformantVaryingStructMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingStructMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrComplexStructMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexStructMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrFixedArrayMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrFixedArrayMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrConformantArrayMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantArrayMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrConformantVaryingArrayMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantVaryingArrayMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrVaryingArrayMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrVaryingArrayMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrComplexArrayMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexArrayMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrConformantStringMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantStringMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrNonConformantStringMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonConformantStringMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrEncapsulatedUnionMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrEncapsulatedUnionMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrNonEncapsulatedUnionMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNonEncapsulatedUnionMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrXmitOrRepAsMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrXmitOrRepAsMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrUserMarshalMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrUserMarshalMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline uint32_t NdrInterfacePointerMemorySize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrInterfacePointerMemorySize(pStubMsg, pFormat);
        return win32_impl_result;
    }
    inline void NdrPointerFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrPointerFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrSimpleStructFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrSimpleStructFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantStructFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantStructFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantVaryingStructFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantVaryingStructFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrComplexStructFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrComplexStructFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrFixedArrayFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrFixedArrayFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantArrayFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantArrayFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantVaryingArrayFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantVaryingArrayFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrVaryingArrayFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrVaryingArrayFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrComplexArrayFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrComplexArrayFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrEncapsulatedUnionFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrEncapsulatedUnionFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrNonEncapsulatedUnionFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrNonEncapsulatedUnionFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrByteCountPointerFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrByteCountPointerFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrXmitOrRepAsFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrXmitOrRepAsFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrUserMarshalFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrUserMarshalFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrInterfacePointerFree(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrInterfacePointerFree(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConvert2(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat, int32_t NumberParams)
    {
        WIN32_IMPL_NdrConvert2(pStubMsg, pFormat, NumberParams);
    }
    inline void NdrConvert(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConvert(pStubMsg, pFormat);
    }
    inline uint8_t* NdrUserMarshalSimpleTypeConvert(uint32_t* pFlags, uint8_t* pBuffer, uint8_t FormatChar)
    {
        auto win32_impl_result = WIN32_IMPL_NdrUserMarshalSimpleTypeConvert(pFlags, pBuffer, FormatChar);
        return win32_impl_result;
    }
    inline void NdrClientInitializeNew(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint32_t ProcNum)
    {
        WIN32_IMPL_NdrClientInitializeNew(pRpcMsg, pStubMsg, pStubDescriptor, ProcNum);
    }
    inline uint8_t* NdrServerInitializeNew(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_NdrServerInitializeNew(pRpcMsg, pStubMsg, pStubDescriptor);
        return win32_impl_result;
    }
    inline void NdrServerInitializePartial(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint32_t RequestedBufferSize)
    {
        WIN32_IMPL_NdrServerInitializePartial(pRpcMsg, pStubMsg, pStubDescriptor, RequestedBufferSize);
    }
    inline void NdrClientInitialize(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint32_t ProcNum)
    {
        WIN32_IMPL_NdrClientInitialize(pRpcMsg, pStubMsg, pStubDescriptor, ProcNum);
    }
    inline uint8_t* NdrServerInitialize(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_NdrServerInitialize(pRpcMsg, pStubMsg, pStubDescriptor);
        return win32_impl_result;
    }
    inline uint8_t* NdrServerInitializeUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        auto win32_impl_result = WIN32_IMPL_NdrServerInitializeUnmarshall(pStubMsg, pStubDescriptor, pRpcMsg);
        return win32_impl_result;
    }
    inline void NdrServerInitializeMarshall(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg)
    {
        WIN32_IMPL_NdrServerInitializeMarshall(pRpcMsg, pStubMsg);
    }
    inline uint8_t* NdrGetBuffer(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint32_t BufferLength, void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_NdrGetBuffer(pStubMsg, BufferLength, Handle);
        return win32_impl_result;
    }
    inline uint8_t* NdrNsGetBuffer(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint32_t BufferLength, void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNsGetBuffer(pStubMsg, BufferLength, Handle);
        return win32_impl_result;
    }
    inline uint8_t* NdrSendReceive(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pBufferEnd)
    {
        auto win32_impl_result = WIN32_IMPL_NdrSendReceive(pStubMsg, pBufferEnd);
        return win32_impl_result;
    }
    inline uint8_t* NdrNsSendReceive(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pBufferEnd, void** pAutoHandle)
    {
        auto win32_impl_result = WIN32_IMPL_NdrNsSendReceive(pStubMsg, pBufferEnd, pAutoHandle);
        return win32_impl_result;
    }
    inline void NdrFreeBuffer(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg)
    {
        WIN32_IMPL_NdrFreeBuffer(pStubMsg);
    }
    inline int32_t NdrGetDcomProtocolVersion(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, Windows::Win32::Rpc::RPC_VERSION* pVersion)
    {
        auto win32_impl_result = WIN32_IMPL_NdrGetDcomProtocolVersion(pStubMsg, pVersion);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrClientCall2(Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrClientCall2(pStubDescriptor, pFormat);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrAsyncClientCall(Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrAsyncClientCall(pStubDescriptor, pFormat);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrDcomAsyncClientCall(Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDescriptor, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrDcomAsyncClientCall(pStubDescriptor, pFormat);
        return win32_impl_result;
    }
    inline void NdrAsyncServerCall(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_NdrAsyncServerCall(pRpcMsg);
    }
    inline int32_t NdrDcomAsyncStubCall(Windows::Win32::Com::IRpcStubBuffer* pThis, Windows::Win32::Com::IRpcChannelBuffer* pChannel, Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, uint32_t* pdwStubPhase)
    {
        auto win32_impl_result = WIN32_IMPL_NdrDcomAsyncStubCall(pThis, pChannel, pRpcMsg, pdwStubPhase);
        return win32_impl_result;
    }
    inline int32_t NdrStubCall2(void* pThis, void* pChannel, Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, uint32_t* pdwStubPhase)
    {
        auto win32_impl_result = WIN32_IMPL_NdrStubCall2(pThis, pChannel, pRpcMsg, pdwStubPhase);
        return win32_impl_result;
    }
    inline void NdrServerCall2(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_NdrServerCall2(pRpcMsg);
    }
    inline int32_t NdrMapCommAndFaultStatus(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint32_t* pCommStatus, uint32_t* pFaultStatus, int32_t Status)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMapCommAndFaultStatus(pStubMsg, pCommStatus, pFaultStatus, Status);
        return win32_impl_result;
    }
    inline void* RpcSsAllocate(size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSsAllocate(Size);
        return win32_impl_result;
    }
    inline void RpcSsDisableAllocate()
    {
        WIN32_IMPL_RpcSsDisableAllocate();
    }
    inline void RpcSsEnableAllocate()
    {
        WIN32_IMPL_RpcSsEnableAllocate();
    }
    inline void RpcSsFree(void* NodeToFree)
    {
        WIN32_IMPL_RpcSsFree(NodeToFree);
    }
    inline void* RpcSsGetThreadHandle()
    {
        auto win32_impl_result = WIN32_IMPL_RpcSsGetThreadHandle();
        return win32_impl_result;
    }
    inline void RpcSsSetClientAllocFree(Windows::Win32::Rpc::RPC_CLIENT_ALLOC** ClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE** ClientFree)
    {
        WIN32_IMPL_RpcSsSetClientAllocFree(ClientAlloc, ClientFree);
    }
    inline void RpcSsSetThreadHandle(void* Id)
    {
        WIN32_IMPL_RpcSsSetThreadHandle(Id);
    }
    inline void RpcSsSwapClientAllocFree(Windows::Win32::Rpc::RPC_CLIENT_ALLOC** ClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE** ClientFree, Windows::Win32::Rpc::RPC_CLIENT_ALLOC*** OldClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE*** OldClientFree)
    {
        WIN32_IMPL_RpcSsSwapClientAllocFree(ClientAlloc, ClientFree, OldClientAlloc, OldClientFree);
    }
    inline void* RpcSmAllocate(size_t Size, int32_t* pStatus)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmAllocate(Size, pStatus);
        return win32_impl_result;
    }
    inline int32_t RpcSmClientFree(void* pNodeToFree)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmClientFree(pNodeToFree);
        return win32_impl_result;
    }
    inline int32_t RpcSmDestroyClientContext(void** ContextHandle)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmDestroyClientContext(ContextHandle);
        return win32_impl_result;
    }
    inline int32_t RpcSmDisableAllocate()
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmDisableAllocate();
        return win32_impl_result;
    }
    inline int32_t RpcSmEnableAllocate()
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmEnableAllocate();
        return win32_impl_result;
    }
    inline int32_t RpcSmFree(void* NodeToFree)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmFree(NodeToFree);
        return win32_impl_result;
    }
    inline void* RpcSmGetThreadHandle(int32_t* pStatus)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmGetThreadHandle(pStatus);
        return win32_impl_result;
    }
    inline int32_t RpcSmSetClientAllocFree(Windows::Win32::Rpc::RPC_CLIENT_ALLOC** ClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE** ClientFree)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmSetClientAllocFree(ClientAlloc, ClientFree);
        return win32_impl_result;
    }
    inline int32_t RpcSmSetThreadHandle(void* Id)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmSetThreadHandle(Id);
        return win32_impl_result;
    }
    inline int32_t RpcSmSwapClientAllocFree(Windows::Win32::Rpc::RPC_CLIENT_ALLOC** ClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE** ClientFree, Windows::Win32::Rpc::RPC_CLIENT_ALLOC*** OldClientAlloc, Windows::Win32::Rpc::RPC_CLIENT_FREE*** OldClientFree)
    {
        auto win32_impl_result = WIN32_IMPL_RpcSmSwapClientAllocFree(ClientAlloc, ClientFree, OldClientAlloc, OldClientFree);
        return win32_impl_result;
    }
    inline void NdrRpcSsEnableAllocate(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pMessage)
    {
        WIN32_IMPL_NdrRpcSsEnableAllocate(pMessage);
    }
    inline void NdrRpcSsDisableAllocate(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pMessage)
    {
        WIN32_IMPL_NdrRpcSsDisableAllocate(pMessage);
    }
    inline void NdrRpcSmSetClientToOsf(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pMessage)
    {
        WIN32_IMPL_NdrRpcSmSetClientToOsf(pMessage);
    }
    inline void* NdrRpcSmClientAllocate(size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_NdrRpcSmClientAllocate(Size);
        return win32_impl_result;
    }
    inline void NdrRpcSmClientFree(void* NodeToFree)
    {
        WIN32_IMPL_NdrRpcSmClientFree(NodeToFree);
    }
    inline void* NdrRpcSsDefaultAllocate(size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_NdrRpcSsDefaultAllocate(Size);
        return win32_impl_result;
    }
    inline void NdrRpcSsDefaultFree(void* NodeToFree)
    {
        WIN32_IMPL_NdrRpcSsDefaultFree(NodeToFree);
    }
    inline Windows::Win32::Rpc::FULL_PTR_XLAT_TABLES* NdrFullPointerXlatInit(uint32_t NumberOfPointers, Windows::Win32::Rpc::XLAT_SIDE XlatSide)
    {
        auto win32_impl_result = WIN32_IMPL_NdrFullPointerXlatInit(NumberOfPointers, XlatSide);
        return win32_impl_result;
    }
    inline void NdrFullPointerXlatFree(Windows::Win32::Rpc::FULL_PTR_XLAT_TABLES* pXlatTables)
    {
        WIN32_IMPL_NdrFullPointerXlatFree(pXlatTables);
    }
    inline void* NdrAllocate(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, size_t Len)
    {
        auto win32_impl_result = WIN32_IMPL_NdrAllocate(pStubMsg, Len);
        return win32_impl_result;
    }
    inline void NdrClearOutParameters(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pFormat, void* ArgAddr)
    {
        WIN32_IMPL_NdrClearOutParameters(pStubMsg, pFormat, ArgAddr);
    }
    inline void* NdrOleAllocate(size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_NdrOleAllocate(Size);
        return win32_impl_result;
    }
    inline void NdrOleFree(void* NodeToFree)
    {
        WIN32_IMPL_NdrOleFree(NodeToFree);
    }
    inline int32_t NdrGetUserMarshalInfo(uint32_t* pFlags, uint32_t InformationLevel, Windows::Win32::Rpc::NDR_USER_MARSHAL_INFO* pMarshalInfo)
    {
        auto win32_impl_result = WIN32_IMPL_NdrGetUserMarshalInfo(pFlags, InformationLevel, pMarshalInfo);
        return win32_impl_result;
    }
    inline int32_t NdrCreateServerInterfaceFromStub(Windows::Win32::Com::IRpcStubBuffer* pStub, Windows::Win32::Rpc::RPC_SERVER_INTERFACE* pServerIf)
    {
        auto win32_impl_result = WIN32_IMPL_NdrCreateServerInterfaceFromStub(pStub, pServerIf);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrClientCall3(Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t nProcNum, void* pReturnValue)
    {
        auto win32_impl_result = WIN32_IMPL_NdrClientCall3(pProxyInfo, nProcNum, pReturnValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN Ndr64AsyncClientCall(Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t nProcNum, void* pReturnValue)
    {
        auto win32_impl_result = WIN32_IMPL_Ndr64AsyncClientCall(pProxyInfo, nProcNum, pReturnValue);
        return win32_impl_result;
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN Ndr64DcomAsyncClientCall(Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t nProcNum, void* pReturnValue)
    {
        auto win32_impl_result = WIN32_IMPL_Ndr64DcomAsyncClientCall(pProxyInfo, nProcNum, pReturnValue);
        return win32_impl_result;
    }
    inline void Ndr64AsyncServerCall64(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_Ndr64AsyncServerCall64(pRpcMsg);
    }
    inline void Ndr64AsyncServerCallAll(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_Ndr64AsyncServerCallAll(pRpcMsg);
    }
    inline int32_t Ndr64DcomAsyncStubCall(Windows::Win32::Com::IRpcStubBuffer* pThis, Windows::Win32::Com::IRpcChannelBuffer* pChannel, Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, uint32_t* pdwStubPhase)
    {
        auto win32_impl_result = WIN32_IMPL_Ndr64DcomAsyncStubCall(pThis, pChannel, pRpcMsg, pdwStubPhase);
        return win32_impl_result;
    }
    inline int32_t NdrStubCall3(void* pThis, void* pChannel, Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg, uint32_t* pdwStubPhase)
    {
        auto win32_impl_result = WIN32_IMPL_NdrStubCall3(pThis, pChannel, pRpcMsg, pdwStubPhase);
        return win32_impl_result;
    }
    inline void NdrServerCallAll(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_NdrServerCallAll(pRpcMsg);
    }
    inline void NdrServerCallNdr64(Windows::Win32::Rpc::RPC_MESSAGE* pRpcMsg)
    {
        WIN32_IMPL_NdrServerCallNdr64(pRpcMsg);
    }
    inline void NdrPartialIgnoreClientMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, void* pMemory)
    {
        WIN32_IMPL_NdrPartialIgnoreClientMarshall(pStubMsg, pMemory);
    }
    inline void NdrPartialIgnoreServerUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, void** ppMemory)
    {
        WIN32_IMPL_NdrPartialIgnoreServerUnmarshall(pStubMsg, ppMemory);
    }
    inline void NdrPartialIgnoreClientBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, void* pMemory)
    {
        WIN32_IMPL_NdrPartialIgnoreClientBufferSize(pStubMsg, pMemory);
    }
    inline void NdrPartialIgnoreServerInitialize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, void** ppMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrPartialIgnoreServerInitialize(pStubMsg, ppMemory, pFormat);
    }
    inline void RpcUserFree(void* AsyncHandle, void* pBuffer)
    {
        WIN32_IMPL_RpcUserFree(AsyncHandle, pBuffer);
    }
    inline int32_t MesEncodeIncrementalHandleCreate(void* UserState, Windows::Win32::Rpc::MIDL_ES_ALLOC* AllocFn, Windows::Win32::Rpc::MIDL_ES_WRITE* WriteFn, void** pHandle)
    {
        auto win32_impl_result = WIN32_IMPL_MesEncodeIncrementalHandleCreate(UserState, AllocFn, WriteFn, pHandle);
        return win32_impl_result;
    }
    inline int32_t MesDecodeIncrementalHandleCreate(void* UserState, Windows::Win32::Rpc::MIDL_ES_READ* ReadFn, void** pHandle)
    {
        auto win32_impl_result = WIN32_IMPL_MesDecodeIncrementalHandleCreate(UserState, ReadFn, pHandle);
        return win32_impl_result;
    }
    inline int32_t MesIncrementalHandleReset(void* Handle, void* UserState, Windows::Win32::Rpc::MIDL_ES_ALLOC* AllocFn, Windows::Win32::Rpc::MIDL_ES_WRITE* WriteFn, Windows::Win32::Rpc::MIDL_ES_READ* ReadFn, Windows::Win32::Rpc::MIDL_ES_CODE Operation)
    {
        auto win32_impl_result = WIN32_IMPL_MesIncrementalHandleReset(Handle, UserState, AllocFn, WriteFn, ReadFn, Operation);
        return win32_impl_result;
    }
    inline int32_t MesEncodeFixedBufferHandleCreate(int8_t* pBuffer, uint32_t BufferSize, uint32_t* pEncodedSize, void** pHandle)
    {
        auto win32_impl_result = WIN32_IMPL_MesEncodeFixedBufferHandleCreate(pBuffer, BufferSize, pEncodedSize, pHandle);
        return win32_impl_result;
    }
    inline int32_t MesEncodeDynBufferHandleCreate(int8_t** pBuffer, uint32_t* pEncodedSize, void** pHandle)
    {
        auto win32_impl_result = WIN32_IMPL_MesEncodeDynBufferHandleCreate(pBuffer, pEncodedSize, pHandle);
        return win32_impl_result;
    }
    inline int32_t MesDecodeBufferHandleCreate(int8_t* Buffer, uint32_t BufferSize, void** pHandle)
    {
        auto win32_impl_result = WIN32_IMPL_MesDecodeBufferHandleCreate(Buffer, BufferSize, pHandle);
        return win32_impl_result;
    }
    inline int32_t MesBufferHandleReset(void* Handle, uint32_t HandleStyle, Windows::Win32::Rpc::MIDL_ES_CODE Operation, int8_t** pBuffer, uint32_t BufferSize, uint32_t* pEncodedSize)
    {
        auto win32_impl_result = WIN32_IMPL_MesBufferHandleReset(Handle, HandleStyle, Operation, pBuffer, BufferSize, pEncodedSize);
        return win32_impl_result;
    }
    inline int32_t MesHandleFree(void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_MesHandleFree(Handle);
        return win32_impl_result;
    }
    inline int32_t MesInqProcEncodingId(void* Handle, Windows::Win32::Rpc::RPC_SYNTAX_IDENTIFIER* pInterfaceId, uint32_t* pProcNum)
    {
        auto win32_impl_result = WIN32_IMPL_MesInqProcEncodingId(Handle, pInterfaceId, pProcNum);
        return win32_impl_result;
    }
    inline size_t NdrMesSimpleTypeAlignSize(void* param0)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesSimpleTypeAlignSize(param0);
        return win32_impl_result;
    }
    inline void NdrMesSimpleTypeDecode(void* Handle, void* pObject, int16_t Size)
    {
        WIN32_IMPL_NdrMesSimpleTypeDecode(Handle, pObject, Size);
    }
    inline void NdrMesSimpleTypeEncode(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, void* pObject, int16_t Size)
    {
        WIN32_IMPL_NdrMesSimpleTypeEncode(Handle, pStubDesc, pObject, Size);
    }
    inline size_t NdrMesTypeAlignSize(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesTypeAlignSize(Handle, pStubDesc, pFormatString, pObject);
        return win32_impl_result;
    }
    inline void NdrMesTypeEncode(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeEncode(Handle, pStubDesc, pFormatString, pObject);
    }
    inline void NdrMesTypeDecode(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeDecode(Handle, pStubDesc, pFormatString, pObject);
    }
    inline size_t NdrMesTypeAlignSize2(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesTypeAlignSize2(Handle, pPicklingInfo, pStubDesc, pFormatString, pObject);
        return win32_impl_result;
    }
    inline void NdrMesTypeEncode2(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeEncode2(Handle, pPicklingInfo, pStubDesc, pFormatString, pObject);
    }
    inline void NdrMesTypeDecode2(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeDecode2(Handle, pPicklingInfo, pStubDesc, pFormatString, pObject);
    }
    inline void NdrMesTypeFree2(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeFree2(Handle, pPicklingInfo, pStubDesc, pFormatString, pObject);
    }
    inline void NdrMesProcEncodeDecode(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString)
    {
        WIN32_IMPL_NdrMesProcEncodeDecode(Handle, pStubDesc, pFormatString);
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrMesProcEncodeDecode2(void* Handle, Windows::Win32::Rpc::MIDL_STUB_DESC* pStubDesc, uint8_t* pFormatString)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesProcEncodeDecode2(Handle, pStubDesc, pFormatString);
        return win32_impl_result;
    }
    inline size_t NdrMesTypeAlignSize3(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t** ArrTypeOffset, uint32_t nTypeIndex, void* pObject)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesTypeAlignSize3(Handle, pPicklingInfo, pProxyInfo, ArrTypeOffset, nTypeIndex, pObject);
        return win32_impl_result;
    }
    inline void NdrMesTypeEncode3(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t** ArrTypeOffset, uint32_t nTypeIndex, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeEncode3(Handle, pPicklingInfo, pProxyInfo, ArrTypeOffset, nTypeIndex, pObject);
    }
    inline void NdrMesTypeDecode3(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t** ArrTypeOffset, uint32_t nTypeIndex, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeDecode3(Handle, pPicklingInfo, pProxyInfo, ArrTypeOffset, nTypeIndex, pObject);
    }
    inline void NdrMesTypeFree3(void* Handle, Windows::Win32::Rpc::MIDL_TYPE_PICKLING_INFO* pPicklingInfo, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t** ArrTypeOffset, uint32_t nTypeIndex, void* pObject)
    {
        WIN32_IMPL_NdrMesTypeFree3(Handle, pPicklingInfo, pProxyInfo, ArrTypeOffset, nTypeIndex, pObject);
    }
    inline Windows::Win32::Rpc::CLIENT_CALL_RETURN NdrMesProcEncodeDecode3(void* Handle, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, uint32_t nProcNum, void* pReturnValue)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesProcEncodeDecode3(Handle, pProxyInfo, nProcNum, pReturnValue);
        return win32_impl_result;
    }
    inline void NdrMesSimpleTypeDecodeAll(void* Handle, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, void* pObject, int16_t Size)
    {
        WIN32_IMPL_NdrMesSimpleTypeDecodeAll(Handle, pProxyInfo, pObject, Size);
    }
    inline void NdrMesSimpleTypeEncodeAll(void* Handle, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo, void* pObject, int16_t Size)
    {
        WIN32_IMPL_NdrMesSimpleTypeEncodeAll(Handle, pProxyInfo, pObject, Size);
    }
    inline size_t NdrMesSimpleTypeAlignSizeAll(void* Handle, Windows::Win32::Rpc::MIDL_STUBLESS_PROXY_INFO* pProxyInfo)
    {
        auto win32_impl_result = WIN32_IMPL_NdrMesSimpleTypeAlignSizeAll(Handle, pProxyInfo);
        return win32_impl_result;
    }
    inline int32_t RpcCertGeneratePrincipalNameW(Windows::Win32::Security::CERT_CONTEXT* Context, uint32_t Flags, uint16_t** pBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_RpcCertGeneratePrincipalNameW(Context, Flags, pBuffer);
        return win32_impl_result;
    }
    inline int32_t RpcCertGeneratePrincipalNameA(Windows::Win32::Security::CERT_CONTEXT* Context, uint32_t Flags, uint8_t** pBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_RpcCertGeneratePrincipalNameA(Context, Flags, pBuffer);
        return win32_impl_result;
    }

    inline constexpr int32_t MidlInterceptionInfoVersionOne = 1;
    inline constexpr int32_t MidlWinrtTypeSerializationInfoVersionOne = 1;
#pragma endregion methods

}
#endif
