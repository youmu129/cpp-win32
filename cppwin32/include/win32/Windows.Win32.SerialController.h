// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_SerialController_H
#define WIN32_Windows_Win32_SerialController_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.SerialController.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::SerialController
{
#pragma region methods
    inline int32_t ComDBOpen(Windows::Win32::SerialController::HCOMDB__** PHComDB)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBOpen(PHComDB);
        return win32_impl_result;
    }
    inline int32_t ComDBClose(Windows::Win32::SerialController::HCOMDB__* HComDB)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBClose(HComDB);
        return win32_impl_result;
    }
    inline int32_t ComDBGetCurrentPortUsage(Windows::Win32::SerialController::HCOMDB__* HComDB, uint8_t* Buffer, uint32_t BufferSize, uint32_t ReportType, uint32_t* MaxPortsReported)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBGetCurrentPortUsage(HComDB, Buffer, BufferSize, ReportType, MaxPortsReported);
        return win32_impl_result;
    }
    inline int32_t ComDBClaimNextFreePort(Windows::Win32::SerialController::HCOMDB__* HComDB, uint32_t* ComNumber)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBClaimNextFreePort(HComDB, ComNumber);
        return win32_impl_result;
    }
    inline int32_t ComDBClaimPort(Windows::Win32::SerialController::HCOMDB__* HComDB, uint32_t ComNumber, Windows::Win32::SystemServices::BOOL ForceClaim, int32_t* Forced)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBClaimPort(HComDB, ComNumber, ForceClaim, Forced);
        return win32_impl_result;
    }
    inline int32_t ComDBReleasePort(Windows::Win32::SerialController::HCOMDB__* HComDB, uint32_t ComNumber)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBReleasePort(HComDB, ComNumber);
        return win32_impl_result;
    }
    inline int32_t ComDBResizeDatabase(Windows::Win32::SerialController::HCOMDB__* HComDB, uint32_t NewSize)
    {
        auto win32_impl_result = WIN32_IMPL_ComDBResizeDatabase(HComDB, NewSize);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
