// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_SystemServices_H
#define WIN32_Windows_Win32_SystemServices_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.SystemServices.2.h"
WIN32_EXPORT namespace win32::Windows::System
{
    struct DispatcherQueueController;
}
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
#pragma region methods
    inline size_t RtlCompareMemory(void* Source1, void* Source2, size_t Length)
    {
        auto win32_impl_result = WIN32_IMPL_RtlCompareMemory(Source1, Source2, Length);
        return win32_impl_result;
    }
    inline void RtlInitializeSListHead(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        WIN32_IMPL_RtlInitializeSListHead(ListHead);
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* RtlFirstEntrySList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_RtlFirstEntrySList(ListHead);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* RtlInterlockedPopEntrySList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInterlockedPopEntrySList(ListHead);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* RtlInterlockedPushEntrySList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* ListEntry)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInterlockedPushEntrySList(ListHead, ListEntry);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* RtlInterlockedPushListSListEx(Windows::Win32::SystemServices::SLIST_HEADER* ListHead, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* List, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* ListEnd, uint32_t Count)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInterlockedPushListSListEx(ListHead, List, ListEnd, Count);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* RtlInterlockedFlushSList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInterlockedFlushSList(ListHead);
        return win32_impl_result;
    }
    inline uint16_t RtlQueryDepthSList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_RtlQueryDepthSList(ListHead);
        return win32_impl_result;
    }
    inline size_t RtlGetReturnAddressHijackTarget()
    {
        auto win32_impl_result = WIN32_IMPL_RtlGetReturnAddressHijackTarget();
        return win32_impl_result;
    }
    inline uint8_t RtlGetProductInfo(uint32_t OSMajorVersion, uint32_t OSMinorVersion, uint32_t SpMajorVersion, uint32_t SpMinorVersion, uint32_t* ReturnedProductType)
    {
        auto win32_impl_result = WIN32_IMPL_RtlGetProductInfo(OSMajorVersion, OSMinorVersion, SpMajorVersion, SpMinorVersion, ReturnedProductType);
        return win32_impl_result;
    }
    inline uint32_t RtlCrc32(void* Buffer, size_t Size, uint32_t InitialCrc)
    {
        auto win32_impl_result = WIN32_IMPL_RtlCrc32(Buffer, Size, InitialCrc);
        return win32_impl_result;
    }
    inline uint64_t RtlCrc64(void* Buffer, size_t Size, uint64_t InitialCrc)
    {
        auto win32_impl_result = WIN32_IMPL_RtlCrc64(Buffer, Size, InitialCrc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::OS_DEPLOYEMENT_STATE_VALUES RtlOsDeploymentState(uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RtlOsDeploymentState(Flags);
        return win32_impl_result;
    }
    inline uint32_t RtlInitializeCorrelationVector(Windows::Win32::SystemServices::CORRELATION_VECTOR* CorrelationVector, int32_t Version, ::win32::guid* Guid)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInitializeCorrelationVector(CorrelationVector, Version, Guid);
        return win32_impl_result;
    }
    inline uint32_t RtlIncrementCorrelationVector(Windows::Win32::SystemServices::CORRELATION_VECTOR* CorrelationVector)
    {
        auto win32_impl_result = WIN32_IMPL_RtlIncrementCorrelationVector(CorrelationVector);
        return win32_impl_result;
    }
    inline uint32_t RtlExtendCorrelationVector(Windows::Win32::SystemServices::CORRELATION_VECTOR* CorrelationVector)
    {
        auto win32_impl_result = WIN32_IMPL_RtlExtendCorrelationVector(CorrelationVector);
        return win32_impl_result;
    }
    inline uint32_t RtlValidateCorrelationVector(Windows::Win32::SystemServices::CORRELATION_VECTOR* Vector)
    {
        auto win32_impl_result = WIN32_IMPL_RtlValidateCorrelationVector(Vector);
        return win32_impl_result;
    }
    inline uint32_t RtlRaiseCustomSystemEventTrigger(Windows::Win32::SystemServices::CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG* TriggerConfig)
    {
        auto win32_impl_result = WIN32_IMPL_RtlRaiseCustomSystemEventTrigger(TriggerConfig);
        return win32_impl_result;
    }
    inline uint8_t RtlIsZeroMemory(void* Buffer, size_t Length)
    {
        auto win32_impl_result = WIN32_IMPL_RtlIsZeroMemory(Buffer, Length);
        return win32_impl_result;
    }
    inline uint8_t RtlNormalizeSecurityDescriptor(void** SecurityDescriptor, uint32_t SecurityDescriptorLength, void** NewSecurityDescriptor, uint32_t* NewSecurityDescriptorLength, uint8_t CheckOnly)
    {
        auto win32_impl_result = WIN32_IMPL_RtlNormalizeSecurityDescriptor(SecurityDescriptor, SecurityDescriptorLength, NewSecurityDescriptor, NewSecurityDescriptorLength, CheckOnly);
        return win32_impl_result;
    }
    inline void RtlGetDeviceFamilyInfoEnum(uint64_t* pullUAPInfo, uint32_t* pulDeviceFamily, uint32_t* pulDeviceForm)
    {
        WIN32_IMPL_RtlGetDeviceFamilyInfoEnum(pullUAPInfo, pulDeviceFamily, pulDeviceForm);
    }
    inline uint32_t RtlConvertDeviceFamilyInfoToString(uint32_t* pulDeviceFamilyBufferSize, uint32_t* pulDeviceFormBufferSize, uint16_t* DeviceFamily, uint16_t* DeviceForm)
    {
        auto win32_impl_result = WIN32_IMPL_RtlConvertDeviceFamilyInfoToString(pulDeviceFamilyBufferSize, pulDeviceFormBufferSize, DeviceFamily, DeviceForm);
        return win32_impl_result;
    }
    inline uint32_t RtlSwitchedVVI(Windows::Win32::WindowsProgramming::OSVERSIONINFOEXW* VersionInfo, uint32_t TypeMask, uint64_t ConditionMask)
    {
        auto win32_impl_result = WIN32_IMPL_RtlSwitchedVVI(VersionInfo, TypeMask, ConditionMask);
        return win32_impl_result;
    }
    inline uint32_t FlsAlloc(Windows::Win32::SystemServices::PFLS_CALLBACK_FUNCTION* lpCallback)
    {
        auto win32_impl_result = WIN32_IMPL_FlsAlloc(lpCallback);
        return win32_impl_result;
    }
    inline void* FlsGetValue(uint32_t dwFlsIndex)
    {
        auto win32_impl_result = WIN32_IMPL_FlsGetValue(dwFlsIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlsSetValue(uint32_t dwFlsIndex, void* lpFlsData)
    {
        auto win32_impl_result = WIN32_IMPL_FlsSetValue(dwFlsIndex, lpFlsData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlsFree(uint32_t dwFlsIndex)
    {
        auto win32_impl_result = WIN32_IMPL_FlsFree(dwFlsIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsThreadAFiber()
    {
        auto win32_impl_result = WIN32_IMPL_IsThreadAFiber();
        return win32_impl_result;
    }
    inline void InitializeSRWLock(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        WIN32_IMPL_InitializeSRWLock(SRWLock);
    }
    inline void ReleaseSRWLockExclusive(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        WIN32_IMPL_ReleaseSRWLockExclusive(SRWLock);
    }
    inline void ReleaseSRWLockShared(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        WIN32_IMPL_ReleaseSRWLockShared(SRWLock);
    }
    inline void AcquireSRWLockExclusive(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        WIN32_IMPL_AcquireSRWLockExclusive(SRWLock);
    }
    inline void AcquireSRWLockShared(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        WIN32_IMPL_AcquireSRWLockShared(SRWLock);
    }
    inline uint8_t TryAcquireSRWLockExclusive(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        auto win32_impl_result = WIN32_IMPL_TryAcquireSRWLockExclusive(SRWLock);
        return win32_impl_result;
    }
    inline uint8_t TryAcquireSRWLockShared(Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock)
    {
        auto win32_impl_result = WIN32_IMPL_TryAcquireSRWLockShared(SRWLock);
        return win32_impl_result;
    }
    inline void InitializeCriticalSection(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection)
    {
        WIN32_IMPL_InitializeCriticalSection(lpCriticalSection);
    }
    inline void LeaveCriticalSection(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection)
    {
        WIN32_IMPL_LeaveCriticalSection(lpCriticalSection);
    }
    inline Windows::Win32::SystemServices::BOOL InitializeCriticalSectionAndSpinCount(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection, uint32_t dwSpinCount)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeCriticalSectionEx(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection, uint32_t dwSpinCount, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);
        return win32_impl_result;
    }
    inline uint32_t SetCriticalSectionSpinCount(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection, uint32_t dwSpinCount)
    {
        auto win32_impl_result = WIN32_IMPL_SetCriticalSectionSpinCount(lpCriticalSection, dwSpinCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TryEnterCriticalSection(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection)
    {
        auto win32_impl_result = WIN32_IMPL_TryEnterCriticalSection(lpCriticalSection);
        return win32_impl_result;
    }
    inline void DeleteCriticalSection(Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* lpCriticalSection)
    {
        WIN32_IMPL_DeleteCriticalSection(lpCriticalSection);
    }
    inline void InitOnceInitialize(Windows::Win32::SystemServices::RTL_RUN_ONCE* InitOnce)
    {
        WIN32_IMPL_InitOnceInitialize(InitOnce);
    }
    inline Windows::Win32::SystemServices::BOOL InitOnceExecuteOnce(Windows::Win32::SystemServices::RTL_RUN_ONCE* InitOnce, Windows::Win32::SystemServices::PINIT_ONCE_FN* InitFn, void* Parameter, void** Context)
    {
        auto win32_impl_result = WIN32_IMPL_InitOnceExecuteOnce(InitOnce, InitFn, Parameter, Context);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitOnceBeginInitialize(Windows::Win32::SystemServices::RTL_RUN_ONCE* lpInitOnce, uint32_t dwFlags, int32_t* fPending, void** lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_InitOnceBeginInitialize(lpInitOnce, dwFlags, fPending, lpContext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitOnceComplete(Windows::Win32::SystemServices::RTL_RUN_ONCE* lpInitOnce, uint32_t dwFlags, void* lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_InitOnceComplete(lpInitOnce, dwFlags, lpContext);
        return win32_impl_result;
    }
    inline void InitializeConditionVariable(Windows::Win32::SystemServices::RTL_CONDITION_VARIABLE* ConditionVariable)
    {
        WIN32_IMPL_InitializeConditionVariable(ConditionVariable);
    }
    inline void WakeConditionVariable(Windows::Win32::SystemServices::RTL_CONDITION_VARIABLE* ConditionVariable)
    {
        WIN32_IMPL_WakeConditionVariable(ConditionVariable);
    }
    inline void WakeAllConditionVariable(Windows::Win32::SystemServices::RTL_CONDITION_VARIABLE* ConditionVariable)
    {
        WIN32_IMPL_WakeAllConditionVariable(ConditionVariable);
    }
    inline Windows::Win32::SystemServices::BOOL SleepConditionVariableCS(Windows::Win32::SystemServices::RTL_CONDITION_VARIABLE* ConditionVariable, Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* CriticalSection, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_SleepConditionVariableCS(ConditionVariable, CriticalSection, dwMilliseconds);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SleepConditionVariableSRW(Windows::Win32::SystemServices::RTL_CONDITION_VARIABLE* ConditionVariable, Windows::Win32::SystemServices::RTL_SRWLOCK* SRWLock, uint32_t dwMilliseconds, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_SleepConditionVariableSRW(ConditionVariable, SRWLock, dwMilliseconds, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetEvent(Windows::Win32::SystemServices::HANDLE hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_SetEvent(hEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResetEvent(Windows::Win32::SystemServices::HANDLE hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_ResetEvent(hEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReleaseSemaphore(Windows::Win32::SystemServices::HANDLE hSemaphore, int32_t lReleaseCount, int32_t* lpPreviousCount)
    {
        auto win32_impl_result = WIN32_IMPL_ReleaseSemaphore(hSemaphore, lReleaseCount, lpPreviousCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReleaseMutex(Windows::Win32::SystemServices::HANDLE hMutex)
    {
        auto win32_impl_result = WIN32_IMPL_ReleaseMutex(hMutex);
        return win32_impl_result;
    }
    inline uint32_t WaitForSingleObject(Windows::Win32::SystemServices::HANDLE hHandle, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForSingleObject(hHandle, dwMilliseconds);
        return win32_impl_result;
    }
    inline uint32_t SleepEx(uint32_t dwMilliseconds, Windows::Win32::SystemServices::BOOL bAlertable)
    {
        auto win32_impl_result = WIN32_IMPL_SleepEx(dwMilliseconds, bAlertable);
        return win32_impl_result;
    }
    inline uint32_t WaitForSingleObjectEx(Windows::Win32::SystemServices::HANDLE hHandle, uint32_t dwMilliseconds, Windows::Win32::SystemServices::BOOL bAlertable)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForSingleObjectEx(hHandle, dwMilliseconds, bAlertable);
        return win32_impl_result;
    }
    inline uint32_t WaitForMultipleObjectsEx(uint32_t nCount, intptr_t* lpHandles, Windows::Win32::SystemServices::BOOL bWaitAll, uint32_t dwMilliseconds, Windows::Win32::SystemServices::BOOL bAlertable)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForMultipleObjectsEx(nCount, lpHandles, bWaitAll, dwMilliseconds, bAlertable);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMutexA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpMutexAttributes, Windows::Win32::SystemServices::BOOL bInitialOwner, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMutexA(lpMutexAttributes, bInitialOwner, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMutexW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpMutexAttributes, Windows::Win32::SystemServices::BOOL bInitialOwner, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMutexW(lpMutexAttributes, bInitialOwner, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenMutexW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenMutexW(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateEventA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpEventAttributes, Windows::Win32::SystemServices::BOOL bManualReset, Windows::Win32::SystemServices::BOOL bInitialState, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEventA(lpEventAttributes, bManualReset, bInitialState, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateEventW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpEventAttributes, Windows::Win32::SystemServices::BOOL bManualReset, Windows::Win32::SystemServices::BOOL bInitialState, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEventW(lpEventAttributes, bManualReset, bInitialState, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenEventA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenEventA(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenEventW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenEventW(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenSemaphoreW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenSemaphoreW(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenWaitableTimerW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpTimerName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenWaitableTimerW(dwDesiredAccess, bInheritHandle, lpTimerName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWaitableTimerEx(Windows::Win32::SystemServices::HANDLE hTimer, Windows::Win32::SystemServices::LARGE_INTEGER* lpDueTime, int32_t lPeriod, Windows::Win32::SystemServices::PTIMERAPCROUTINE* pfnCompletionRoutine, void* lpArgToCompletionRoutine, Windows::Win32::SystemServices::REASON_CONTEXT* WakeContext, uint32_t TolerableDelay)
    {
        auto win32_impl_result = WIN32_IMPL_SetWaitableTimerEx(hTimer, lpDueTime, lPeriod, pfnCompletionRoutine, lpArgToCompletionRoutine, WakeContext, TolerableDelay);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetWaitableTimer(Windows::Win32::SystemServices::HANDLE hTimer, Windows::Win32::SystemServices::LARGE_INTEGER* lpDueTime, int32_t lPeriod, Windows::Win32::SystemServices::PTIMERAPCROUTINE* pfnCompletionRoutine, void* lpArgToCompletionRoutine, Windows::Win32::SystemServices::BOOL fResume)
    {
        auto win32_impl_result = WIN32_IMPL_SetWaitableTimer(hTimer, lpDueTime, lPeriod, pfnCompletionRoutine, lpArgToCompletionRoutine, fResume);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CancelWaitableTimer(Windows::Win32::SystemServices::HANDLE hTimer)
    {
        auto win32_impl_result = WIN32_IMPL_CancelWaitableTimer(hTimer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMutexExA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpMutexAttributes, int8_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMutexExA(lpMutexAttributes, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMutexExW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpMutexAttributes, uint16_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMutexExW(lpMutexAttributes, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateEventExA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpEventAttributes, int8_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEventExA(lpEventAttributes, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateEventExW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpEventAttributes, uint16_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEventExW(lpEventAttributes, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateSemaphoreExW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSemaphoreAttributes, int32_t lInitialCount, int32_t lMaximumCount, uint16_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSemaphoreExW(lpSemaphoreAttributes, lInitialCount, lMaximumCount, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateWaitableTimerExW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpTimerAttributes, uint16_t* lpTimerName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWaitableTimerExW(lpTimerAttributes, lpTimerName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnterSynchronizationBarrier(Windows::Win32::SystemServices::RTL_BARRIER* lpBarrier, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnterSynchronizationBarrier(lpBarrier, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeSynchronizationBarrier(Windows::Win32::SystemServices::RTL_BARRIER* lpBarrier, int32_t lTotalThreads, int32_t lSpinCount)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeSynchronizationBarrier(lpBarrier, lTotalThreads, lSpinCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteSynchronizationBarrier(Windows::Win32::SystemServices::RTL_BARRIER* lpBarrier)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteSynchronizationBarrier(lpBarrier);
        return win32_impl_result;
    }
    inline void Sleep(uint32_t dwMilliseconds)
    {
        WIN32_IMPL_Sleep(dwMilliseconds);
    }
    inline Windows::Win32::SystemServices::BOOL WaitOnAddress(void* Address, void* CompareAddress, size_t AddressSize, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_WaitOnAddress(Address, CompareAddress, AddressSize, dwMilliseconds);
        return win32_impl_result;
    }
    inline void WakeByAddressSingle(void* Address)
    {
        WIN32_IMPL_WakeByAddressSingle(Address);
    }
    inline void WakeByAddressAll(void* Address)
    {
        WIN32_IMPL_WakeByAddressAll(Address);
    }
    inline uint32_t WaitForMultipleObjects(uint32_t nCount, intptr_t* lpHandles, Windows::Win32::SystemServices::BOOL bWaitAll, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForMultipleObjects(nCount, lpHandles, bWaitAll, dwMilliseconds);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateSemaphoreW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSemaphoreAttributes, int32_t lInitialCount, int32_t lMaximumCount, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSemaphoreW(lpSemaphoreAttributes, lInitialCount, lMaximumCount, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateWaitableTimerW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpTimerAttributes, Windows::Win32::SystemServices::BOOL bManualReset, uint16_t* lpTimerName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWaitableTimerW(lpTimerAttributes, bManualReset, lpTimerName);
        return win32_impl_result;
    }
    inline void InitializeSListHead(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        WIN32_IMPL_InitializeSListHead(ListHead);
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* InterlockedPopEntrySList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_InterlockedPopEntrySList(ListHead);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* InterlockedPushEntrySList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* ListEntry)
    {
        auto win32_impl_result = WIN32_IMPL_InterlockedPushEntrySList(ListHead, ListEntry);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* InterlockedPushListSListEx(Windows::Win32::SystemServices::SLIST_HEADER* ListHead, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* List, Windows::Win32::Kernel::SINGLE_LIST_ENTRY* ListEnd, uint32_t Count)
    {
        auto win32_impl_result = WIN32_IMPL_InterlockedPushListSListEx(ListHead, List, ListEnd, Count);
        return win32_impl_result;
    }
    inline Windows::Win32::Kernel::SINGLE_LIST_ENTRY* InterlockedFlushSList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_InterlockedFlushSList(ListHead);
        return win32_impl_result;
    }
    inline uint16_t QueryDepthSList(Windows::Win32::SystemServices::SLIST_HEADER* ListHead)
    {
        auto win32_impl_result = WIN32_IMPL_QueryDepthSList(ListHead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueueUserWorkItem(Windows::Win32::SystemServices::LPTHREAD_START_ROUTINE* Function, void* Context, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_QueueUserWorkItem(Function, Context, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterWaitEx(Windows::Win32::SystemServices::HANDLE WaitHandle, Windows::Win32::SystemServices::HANDLE CompletionEvent)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterWaitEx(WaitHandle, CompletionEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateTimerQueue()
    {
        auto win32_impl_result = WIN32_IMPL_CreateTimerQueue();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateTimerQueueTimer(intptr_t* phNewTimer, Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::WAITORTIMERCALLBACK* Callback, void* Parameter, uint32_t DueTime, uint32_t Period, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateTimerQueueTimer(phNewTimer, TimerQueue, Callback, Parameter, DueTime, Period, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ChangeTimerQueueTimer(Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::HANDLE Timer, uint32_t DueTime, uint32_t Period)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeTimerQueueTimer(TimerQueue, Timer, DueTime, Period);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteTimerQueueTimer(Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::HANDLE Timer, Windows::Win32::SystemServices::HANDLE CompletionEvent)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteTimerQueueTimer(TimerQueue, Timer, CompletionEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteTimerQueueEx(Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::HANDLE CompletionEvent)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteTimerQueueEx(TimerQueue, CompletionEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::PTP_POOL CreateThreadpool(void* reserved)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpool(reserved);
        return win32_impl_result;
    }
    inline void SetThreadpoolThreadMaximum(Windows::Win32::SystemServices::PTP_POOL ptpp, uint32_t cthrdMost)
    {
        WIN32_IMPL_SetThreadpoolThreadMaximum(ptpp, cthrdMost);
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadpoolThreadMinimum(Windows::Win32::SystemServices::PTP_POOL ptpp, uint32_t cthrdMic)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadpoolThreadMinimum(ptpp, cthrdMic);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadpoolStackInformation(Windows::Win32::SystemServices::PTP_POOL ptpp, Windows::Win32::SystemServices::TP_POOL_STACK_INFORMATION* ptpsi)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadpoolStackInformation(ptpp, ptpsi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryThreadpoolStackInformation(Windows::Win32::SystemServices::PTP_POOL ptpp, Windows::Win32::SystemServices::TP_POOL_STACK_INFORMATION* ptpsi)
    {
        auto win32_impl_result = WIN32_IMPL_QueryThreadpoolStackInformation(ptpp, ptpsi);
        return win32_impl_result;
    }
    inline void CloseThreadpool(Windows::Win32::SystemServices::PTP_POOL ptpp)
    {
        WIN32_IMPL_CloseThreadpool(ptpp);
    }
    inline intptr_t CreateThreadpoolCleanupGroup()
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpoolCleanupGroup();
        return win32_impl_result;
    }
    inline void CloseThreadpoolCleanupGroupMembers(intptr_t ptpcg, Windows::Win32::SystemServices::BOOL fCancelPendingCallbacks, void* pvCleanupContext)
    {
        WIN32_IMPL_CloseThreadpoolCleanupGroupMembers(ptpcg, fCancelPendingCallbacks, pvCleanupContext);
    }
    inline void CloseThreadpoolCleanupGroup(intptr_t ptpcg)
    {
        WIN32_IMPL_CloseThreadpoolCleanupGroup(ptpcg);
    }
    inline void SetEventWhenCallbackReturns(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci, Windows::Win32::SystemServices::HANDLE evt)
    {
        WIN32_IMPL_SetEventWhenCallbackReturns(pci, evt);
    }
    inline void ReleaseSemaphoreWhenCallbackReturns(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci, Windows::Win32::SystemServices::HANDLE sem, uint32_t crel)
    {
        WIN32_IMPL_ReleaseSemaphoreWhenCallbackReturns(pci, sem, crel);
    }
    inline void ReleaseMutexWhenCallbackReturns(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci, Windows::Win32::SystemServices::HANDLE mut)
    {
        WIN32_IMPL_ReleaseMutexWhenCallbackReturns(pci, mut);
    }
    inline void LeaveCriticalSectionWhenCallbackReturns(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci, Windows::Win32::SystemServices::RTL_CRITICAL_SECTION* pcs)
    {
        WIN32_IMPL_LeaveCriticalSectionWhenCallbackReturns(pci, pcs);
    }
    inline void FreeLibraryWhenCallbackReturns(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci, intptr_t mod)
    {
        WIN32_IMPL_FreeLibraryWhenCallbackReturns(pci, mod);
    }
    inline Windows::Win32::SystemServices::BOOL CallbackMayRunLong(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci)
    {
        auto win32_impl_result = WIN32_IMPL_CallbackMayRunLong(pci);
        return win32_impl_result;
    }
    inline void DisassociateCurrentThreadFromCallback(Windows::Win32::SystemServices::TP_CALLBACK_INSTANCE* pci)
    {
        WIN32_IMPL_DisassociateCurrentThreadFromCallback(pci);
    }
    inline Windows::Win32::SystemServices::BOOL TrySubmitThreadpoolCallback(Windows::Win32::SystemServices::PTP_SIMPLE_CALLBACK* pfns, void* pv, Windows::Win32::SystemServices::TP_CALLBACK_ENVIRON_V3* pcbe)
    {
        auto win32_impl_result = WIN32_IMPL_TrySubmitThreadpoolCallback(pfns, pv, pcbe);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::TP_WORK* CreateThreadpoolWork(Windows::Win32::SystemServices::PTP_WORK_CALLBACK* pfnwk, void* pv, Windows::Win32::SystemServices::TP_CALLBACK_ENVIRON_V3* pcbe)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpoolWork(pfnwk, pv, pcbe);
        return win32_impl_result;
    }
    inline void SubmitThreadpoolWork(Windows::Win32::SystemServices::TP_WORK* pwk)
    {
        WIN32_IMPL_SubmitThreadpoolWork(pwk);
    }
    inline void WaitForThreadpoolWorkCallbacks(Windows::Win32::SystemServices::TP_WORK* pwk, Windows::Win32::SystemServices::BOOL fCancelPendingCallbacks)
    {
        WIN32_IMPL_WaitForThreadpoolWorkCallbacks(pwk, fCancelPendingCallbacks);
    }
    inline void CloseThreadpoolWork(Windows::Win32::SystemServices::TP_WORK* pwk)
    {
        WIN32_IMPL_CloseThreadpoolWork(pwk);
    }
    inline Windows::Win32::SystemServices::TP_TIMER* CreateThreadpoolTimer(Windows::Win32::SystemServices::PTP_TIMER_CALLBACK* pfnti, void* pv, Windows::Win32::SystemServices::TP_CALLBACK_ENVIRON_V3* pcbe)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpoolTimer(pfnti, pv, pcbe);
        return win32_impl_result;
    }
    inline void SetThreadpoolTimer(Windows::Win32::SystemServices::TP_TIMER* pti, Windows::Win32::WindowsProgramming::FILETIME* pftDueTime, uint32_t msPeriod, uint32_t msWindowLength)
    {
        WIN32_IMPL_SetThreadpoolTimer(pti, pftDueTime, msPeriod, msWindowLength);
    }
    inline Windows::Win32::SystemServices::BOOL IsThreadpoolTimerSet(Windows::Win32::SystemServices::TP_TIMER* pti)
    {
        auto win32_impl_result = WIN32_IMPL_IsThreadpoolTimerSet(pti);
        return win32_impl_result;
    }
    inline void WaitForThreadpoolTimerCallbacks(Windows::Win32::SystemServices::TP_TIMER* pti, Windows::Win32::SystemServices::BOOL fCancelPendingCallbacks)
    {
        WIN32_IMPL_WaitForThreadpoolTimerCallbacks(pti, fCancelPendingCallbacks);
    }
    inline void CloseThreadpoolTimer(Windows::Win32::SystemServices::TP_TIMER* pti)
    {
        WIN32_IMPL_CloseThreadpoolTimer(pti);
    }
    inline Windows::Win32::SystemServices::TP_WAIT* CreateThreadpoolWait(Windows::Win32::SystemServices::PTP_WAIT_CALLBACK* pfnwa, void* pv, Windows::Win32::SystemServices::TP_CALLBACK_ENVIRON_V3* pcbe)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpoolWait(pfnwa, pv, pcbe);
        return win32_impl_result;
    }
    inline void SetThreadpoolWait(Windows::Win32::SystemServices::TP_WAIT* pwa, Windows::Win32::SystemServices::HANDLE h, Windows::Win32::WindowsProgramming::FILETIME* pftTimeout)
    {
        WIN32_IMPL_SetThreadpoolWait(pwa, h, pftTimeout);
    }
    inline void WaitForThreadpoolWaitCallbacks(Windows::Win32::SystemServices::TP_WAIT* pwa, Windows::Win32::SystemServices::BOOL fCancelPendingCallbacks)
    {
        WIN32_IMPL_WaitForThreadpoolWaitCallbacks(pwa, fCancelPendingCallbacks);
    }
    inline void CloseThreadpoolWait(Windows::Win32::SystemServices::TP_WAIT* pwa)
    {
        WIN32_IMPL_CloseThreadpoolWait(pwa);
    }
    inline Windows::Win32::SystemServices::TP_IO* CreateThreadpoolIo(Windows::Win32::SystemServices::HANDLE fl, Windows::Win32::SystemServices::PTP_WIN32_IO_CALLBACK* pfnio, void* pv, Windows::Win32::SystemServices::TP_CALLBACK_ENVIRON_V3* pcbe)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThreadpoolIo(fl, pfnio, pv, pcbe);
        return win32_impl_result;
    }
    inline void StartThreadpoolIo(Windows::Win32::SystemServices::TP_IO* pio)
    {
        WIN32_IMPL_StartThreadpoolIo(pio);
    }
    inline void CancelThreadpoolIo(Windows::Win32::SystemServices::TP_IO* pio)
    {
        WIN32_IMPL_CancelThreadpoolIo(pio);
    }
    inline void WaitForThreadpoolIoCallbacks(Windows::Win32::SystemServices::TP_IO* pio, Windows::Win32::SystemServices::BOOL fCancelPendingCallbacks)
    {
        WIN32_IMPL_WaitForThreadpoolIoCallbacks(pio, fCancelPendingCallbacks);
    }
    inline void CloseThreadpoolIo(Windows::Win32::SystemServices::TP_IO* pio)
    {
        WIN32_IMPL_CloseThreadpoolIo(pio);
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadpoolTimerEx(Windows::Win32::SystemServices::TP_TIMER* pti, Windows::Win32::WindowsProgramming::FILETIME* pftDueTime, uint32_t msPeriod, uint32_t msWindowLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadpoolTimerEx(pti, pftDueTime, msPeriod, msWindowLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadpoolWaitEx(Windows::Win32::SystemServices::TP_WAIT* pwa, Windows::Win32::SystemServices::HANDLE h, Windows::Win32::WindowsProgramming::FILETIME* pftTimeout, void* Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadpoolWaitEx(pwa, h, pftTimeout, Reserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsProcessInJob(Windows::Win32::SystemServices::HANDLE ProcessHandle, Windows::Win32::SystemServices::HANDLE JobHandle, int32_t* Result)
    {
        auto win32_impl_result = WIN32_IMPL_IsProcessInJob(ProcessHandle, JobHandle, Result);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateJobObjectW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpJobAttributes, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateJobObjectW(lpJobAttributes, lpName);
        return win32_impl_result;
    }
    inline void FreeMemoryJobObject(void* Buffer)
    {
        WIN32_IMPL_FreeMemoryJobObject(Buffer);
    }
    inline Windows::Win32::SystemServices::HANDLE OpenJobObjectW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenJobObjectW(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AssignProcessToJobObject(Windows::Win32::SystemServices::HANDLE hJob, Windows::Win32::SystemServices::HANDLE hProcess)
    {
        auto win32_impl_result = WIN32_IMPL_AssignProcessToJobObject(hJob, hProcess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TerminateJobObject(Windows::Win32::SystemServices::HANDLE hJob, uint32_t uExitCode)
    {
        auto win32_impl_result = WIN32_IMPL_TerminateJobObject(hJob, uExitCode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetInformationJobObject(Windows::Win32::SystemServices::HANDLE hJob, Windows::Win32::SystemServices::JOBOBJECTINFOCLASS JobObjectInformationClass, void* lpJobObjectInformation, uint32_t cbJobObjectInformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetInformationJobObject(hJob, JobObjectInformationClass, lpJobObjectInformation, cbJobObjectInformationLength);
        return win32_impl_result;
    }
    inline uint32_t SetIoRateControlInformationJobObject(Windows::Win32::SystemServices::HANDLE hJob, Windows::Win32::SystemServices::JOBOBJECT_IO_RATE_CONTROL_INFORMATION* IoRateControlInfo)
    {
        auto win32_impl_result = WIN32_IMPL_SetIoRateControlInformationJobObject(hJob, IoRateControlInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryInformationJobObject(Windows::Win32::SystemServices::HANDLE hJob, Windows::Win32::SystemServices::JOBOBJECTINFOCLASS JobObjectInformationClass, void* lpJobObjectInformation, uint32_t cbJobObjectInformationLength, uint32_t* lpReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_QueryInformationJobObject(hJob, JobObjectInformationClass, lpJobObjectInformation, cbJobObjectInformationLength, lpReturnLength);
        return win32_impl_result;
    }
    inline uint32_t QueryIoRateControlInformationJobObject(Windows::Win32::SystemServices::HANDLE hJob, uint16_t* VolumeName, Windows::Win32::SystemServices::JOBOBJECT_IO_RATE_CONTROL_INFORMATION** InfoBlocks, uint32_t* InfoBlockCount)
    {
        auto win32_impl_result = WIN32_IMPL_QueryIoRateControlInformationJobObject(hJob, VolumeName, InfoBlocks, InfoBlockCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NamespaceHandle CreatePrivateNamespaceW(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpPrivateNamespaceAttributes, void* lpBoundaryDescriptor, uint16_t* lpAliasPrefix)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePrivateNamespaceW(lpPrivateNamespaceAttributes, lpBoundaryDescriptor, lpAliasPrefix);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NamespaceHandle OpenPrivateNamespaceW(void* lpBoundaryDescriptor, uint16_t* lpAliasPrefix)
    {
        auto win32_impl_result = WIN32_IMPL_OpenPrivateNamespaceW(lpBoundaryDescriptor, lpAliasPrefix);
        return win32_impl_result;
    }
    inline uint8_t ClosePrivateNamespace(Windows::Win32::SystemServices::NamespaceHandle Handle, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_ClosePrivateNamespace(Handle, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BoundaryDescriptorHandle CreateBoundaryDescriptorW(uint16_t* Name, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBoundaryDescriptorW(Name, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddSIDToBoundaryDescriptor(Windows::Win32::SystemServices::HANDLE* BoundaryDescriptor, void* RequiredSid)
    {
        auto win32_impl_result = WIN32_IMPL_AddSIDToBoundaryDescriptor(BoundaryDescriptor, RequiredSid);
        return win32_impl_result;
    }
    inline void DeleteBoundaryDescriptor(Windows::Win32::SystemServices::BoundaryDescriptorHandle BoundaryDescriptor)
    {
        WIN32_IMPL_DeleteBoundaryDescriptor(BoundaryDescriptor);
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaHighestNodeNumber(uint32_t* HighestNodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaHighestNodeNumber(HighestNodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaNodeProcessorMaskEx(uint16_t Node, Windows::Win32::SystemServices::GROUP_AFFINITY* ProcessorMask)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaNodeProcessorMaskEx(Node, ProcessorMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaProximityNodeEx(uint32_t ProximityId, uint16_t* NodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaProximityNodeEx(ProximityId, NodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessGroupAffinity(Windows::Win32::SystemServices::HANDLE hProcess, uint16_t* GroupCount, uint16_t* GroupArray)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessGroupAffinity(hProcess, GroupCount, GroupArray);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadGroupAffinity(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::SystemServices::GROUP_AFFINITY* GroupAffinity)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadGroupAffinity(hThread, GroupAffinity);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadGroupAffinity(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::SystemServices::GROUP_AFFINITY* GroupAffinity, Windows::Win32::SystemServices::GROUP_AFFINITY* PreviousGroupAffinity)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadGroupAffinity(hThread, GroupAffinity, PreviousGroupAffinity);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreatePipe(intptr_t* hReadPipe, intptr_t* hWritePipe, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpPipeAttributes, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePipe(hReadPipe, hWritePipe, lpPipeAttributes, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ConnectNamedPipe(Windows::Win32::SystemServices::HANDLE hNamedPipe, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped)
    {
        auto win32_impl_result = WIN32_IMPL_ConnectNamedPipe(hNamedPipe, lpOverlapped);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DisconnectNamedPipe(Windows::Win32::SystemServices::HANDLE hNamedPipe)
    {
        auto win32_impl_result = WIN32_IMPL_DisconnectNamedPipe(hNamedPipe);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetNamedPipeHandleState(Windows::Win32::SystemServices::HANDLE hNamedPipe, uint32_t* lpMode, uint32_t* lpMaxCollectionCount, uint32_t* lpCollectDataTimeout)
    {
        auto win32_impl_result = WIN32_IMPL_SetNamedPipeHandleState(hNamedPipe, lpMode, lpMaxCollectionCount, lpCollectDataTimeout);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PeekNamedPipe(Windows::Win32::SystemServices::HANDLE hNamedPipe, void* lpBuffer, uint32_t nBufferSize, uint32_t* lpBytesRead, uint32_t* lpTotalBytesAvail, uint32_t* lpBytesLeftThisMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PeekNamedPipe(hNamedPipe, lpBuffer, nBufferSize, lpBytesRead, lpTotalBytesAvail, lpBytesLeftThisMessage);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TransactNamedPipe(Windows::Win32::SystemServices::HANDLE hNamedPipe, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesRead, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped)
    {
        auto win32_impl_result = WIN32_IMPL_TransactNamedPipe(hNamedPipe, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesRead, lpOverlapped);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateNamedPipeW(uint16_t* lpName, uint32_t dwOpenMode, uint32_t dwPipeMode, uint32_t nMaxInstances, uint32_t nOutBufferSize, uint32_t nInBufferSize, uint32_t nDefaultTimeOut, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_CreateNamedPipeW(lpName, dwOpenMode, dwPipeMode, nMaxInstances, nOutBufferSize, nInBufferSize, nDefaultTimeOut, lpSecurityAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WaitNamedPipeW(uint16_t* lpNamedPipeName, uint32_t nTimeOut)
    {
        auto win32_impl_result = WIN32_IMPL_WaitNamedPipeW(lpNamedPipeName, nTimeOut);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeClientComputerNameW(Windows::Win32::SystemServices::HANDLE Pipe, uint16_t* ClientComputerName, uint32_t ClientComputerNameLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeClientComputerNameW(Pipe, ClientComputerName, ClientComputerNameLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeInfo(Windows::Win32::SystemServices::HANDLE hNamedPipe, uint32_t* lpFlags, uint32_t* lpOutBufferSize, uint32_t* lpInBufferSize, uint32_t* lpMaxInstances)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeInfo(hNamedPipe, lpFlags, lpOutBufferSize, lpInBufferSize, lpMaxInstances);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeHandleStateW(Windows::Win32::SystemServices::HANDLE hNamedPipe, uint32_t* lpState, uint32_t* lpCurInstances, uint32_t* lpMaxCollectionCount, uint32_t* lpCollectDataTimeout, uint16_t* lpUserName, uint32_t nMaxUserNameSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeHandleStateW(hNamedPipe, lpState, lpCurInstances, lpMaxCollectionCount, lpCollectDataTimeout, lpUserName, nMaxUserNameSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CallNamedPipeW(uint16_t* lpNamedPipeName, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesRead, uint32_t nTimeOut)
    {
        auto win32_impl_result = WIN32_IMPL_CallNamedPipeW(lpNamedPipeName, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesRead, nTimeOut);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HeapHandle HeapCreate(uint32_t flOptions, size_t dwInitialSize, size_t dwMaximumSize)
    {
        auto win32_impl_result = WIN32_IMPL_HeapCreate(flOptions, dwInitialSize, dwMaximumSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapDestroy(Windows::Win32::WindowsProgramming::HeapHandle hHeap)
    {
        auto win32_impl_result = WIN32_IMPL_HeapDestroy(hHeap);
        return win32_impl_result;
    }
    inline void* HeapAlloc(Windows::Win32::WindowsProgramming::HeapHandle hHeap, uint32_t dwFlags, size_t dwBytes)
    {
        auto win32_impl_result = WIN32_IMPL_HeapAlloc(hHeap, dwFlags, dwBytes);
        return win32_impl_result;
    }
    inline void* HeapReAlloc(Windows::Win32::WindowsProgramming::HeapHandle hHeap, uint32_t dwFlags, void* lpMem, size_t dwBytes)
    {
        auto win32_impl_result = WIN32_IMPL_HeapReAlloc(hHeap, dwFlags, lpMem, dwBytes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapFree(Windows::Win32::SystemServices::HANDLE hHeap, uint32_t dwFlags, void* lpMem)
    {
        auto win32_impl_result = WIN32_IMPL_HeapFree(hHeap, dwFlags, lpMem);
        return win32_impl_result;
    }
    inline size_t HeapSize(Windows::Win32::WindowsProgramming::HeapHandle hHeap, uint32_t dwFlags, void* lpMem)
    {
        auto win32_impl_result = WIN32_IMPL_HeapSize(hHeap, dwFlags, lpMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetProcessHeap()
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessHeap();
        return win32_impl_result;
    }
    inline size_t HeapCompact(Windows::Win32::WindowsProgramming::HeapHandle hHeap, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_HeapCompact(hHeap, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapSetInformation(Windows::Win32::SystemServices::HANDLE HeapHandle, Windows::Win32::SystemServices::HEAP_INFORMATION_CLASS HeapInformationClass, void* HeapInformation, size_t HeapInformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_HeapSetInformation(HeapHandle, HeapInformationClass, HeapInformation, HeapInformationLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapValidate(Windows::Win32::SystemServices::HANDLE hHeap, uint32_t dwFlags, void* lpMem)
    {
        auto win32_impl_result = WIN32_IMPL_HeapValidate(hHeap, dwFlags, lpMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapSummary(Windows::Win32::SystemServices::HANDLE hHeap, uint32_t dwFlags, Windows::Win32::SystemServices::HEAP_SUMMARY* lpSummary)
    {
        auto win32_impl_result = WIN32_IMPL_HeapSummary(hHeap, dwFlags, lpSummary);
        return win32_impl_result;
    }
    inline uint32_t GetProcessHeaps(uint32_t NumberOfHeaps, intptr_t* ProcessHeaps)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessHeaps(NumberOfHeaps, ProcessHeaps);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapLock(Windows::Win32::WindowsProgramming::HeapHandle hHeap)
    {
        auto win32_impl_result = WIN32_IMPL_HeapLock(hHeap);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapUnlock(Windows::Win32::SystemServices::HANDLE hHeap)
    {
        auto win32_impl_result = WIN32_IMPL_HeapUnlock(hHeap);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapWalk(Windows::Win32::SystemServices::HANDLE hHeap, Windows::Win32::SystemServices::PROCESS_HEAP_ENTRY* lpEntry)
    {
        auto win32_impl_result = WIN32_IMPL_HeapWalk(hHeap, lpEntry);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL HeapQueryInformation(Windows::Win32::SystemServices::HANDLE HeapHandle, Windows::Win32::SystemServices::HEAP_INFORMATION_CLASS HeapInformationClass, void* HeapInformation, size_t HeapInformationLength, size_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_HeapQueryInformation(HeapHandle, HeapInformationClass, HeapInformation, HeapInformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline void* VirtualAlloc(void* lpAddress, size_t dwSize, uint32_t flAllocationType, uint32_t flProtect)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAlloc(lpAddress, dwSize, flAllocationType, flProtect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualProtect(void* lpAddress, size_t dwSize, uint32_t flNewProtect, uint32_t* lpflOldProtect)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualProtect(lpAddress, dwSize, flNewProtect, lpflOldProtect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualFree(void* lpAddress, size_t dwSize, uint32_t dwFreeType)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualFree(lpAddress, dwSize, dwFreeType);
        return win32_impl_result;
    }
    inline size_t VirtualQuery(void* lpAddress, Windows::Win32::SystemServices::MEMORY_BASIC_INFORMATION* lpBuffer, size_t dwLength)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualQuery(lpAddress, lpBuffer, dwLength);
        return win32_impl_result;
    }
    inline void* VirtualAllocEx(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, size_t dwSize, uint32_t flAllocationType, uint32_t flProtect)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAllocEx(hProcess, lpAddress, dwSize, flAllocationType, flProtect);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualProtectEx(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, size_t dwSize, uint32_t flNewProtect, uint32_t* lpflOldProtect)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualProtectEx(hProcess, lpAddress, dwSize, flNewProtect, lpflOldProtect);
        return win32_impl_result;
    }
    inline size_t VirtualQueryEx(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, Windows::Win32::SystemServices::MEMORY_BASIC_INFORMATION* lpBuffer, size_t dwLength)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualQueryEx(hProcess, lpAddress, lpBuffer, dwLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMappingW(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpFileMappingAttributes, uint32_t flProtect, uint32_t dwMaximumSizeHigh, uint32_t dwMaximumSizeLow, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMappingW(hFile, lpFileMappingAttributes, flProtect, dwMaximumSizeHigh, dwMaximumSizeLow, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenFileMappingW(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint16_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenFileMappingW(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline void* MapViewOfFile(Windows::Win32::SystemServices::HANDLE hFileMappingObject, uint32_t dwDesiredAccess, uint32_t dwFileOffsetHigh, uint32_t dwFileOffsetLow, size_t dwNumberOfBytesToMap)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFile(hFileMappingObject, dwDesiredAccess, dwFileOffsetHigh, dwFileOffsetLow, dwNumberOfBytesToMap);
        return win32_impl_result;
    }
    inline void* MapViewOfFileEx(Windows::Win32::SystemServices::HANDLE hFileMappingObject, uint32_t dwDesiredAccess, uint32_t dwFileOffsetHigh, uint32_t dwFileOffsetLow, size_t dwNumberOfBytesToMap, void* lpBaseAddress)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFileEx(hFileMappingObject, dwDesiredAccess, dwFileOffsetHigh, dwFileOffsetLow, dwNumberOfBytesToMap, lpBaseAddress);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualFreeEx(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, size_t dwSize, uint32_t dwFreeType)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualFreeEx(hProcess, lpAddress, dwSize, dwFreeType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlushViewOfFile(void* lpBaseAddress, size_t dwNumberOfBytesToFlush)
    {
        auto win32_impl_result = WIN32_IMPL_FlushViewOfFile(lpBaseAddress, dwNumberOfBytesToFlush);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnmapViewOfFile(void* lpBaseAddress)
    {
        auto win32_impl_result = WIN32_IMPL_UnmapViewOfFile(lpBaseAddress);
        return win32_impl_result;
    }
    inline size_t GetLargePageMinimum()
    {
        auto win32_impl_result = WIN32_IMPL_GetLargePageMinimum();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessWorkingSetSizeEx(Windows::Win32::SystemServices::HANDLE hProcess, size_t* lpMinimumWorkingSetSize, size_t* lpMaximumWorkingSetSize, uint32_t* Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessWorkingSetSizeEx(hProcess, lpMinimumWorkingSetSize, lpMaximumWorkingSetSize, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessWorkingSetSizeEx(Windows::Win32::SystemServices::HANDLE hProcess, size_t dwMinimumWorkingSetSize, size_t dwMaximumWorkingSetSize, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessWorkingSetSizeEx(hProcess, dwMinimumWorkingSetSize, dwMaximumWorkingSetSize, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualLock(void* lpAddress, size_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualLock(lpAddress, dwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualUnlock(void* lpAddress, size_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualUnlock(lpAddress, dwSize);
        return win32_impl_result;
    }
    inline uint32_t GetWriteWatch(uint32_t dwFlags, void* lpBaseAddress, size_t dwRegionSize, void** lpAddresses, size_t* lpdwCount, uint32_t* lpdwGranularity)
    {
        auto win32_impl_result = WIN32_IMPL_GetWriteWatch(dwFlags, lpBaseAddress, dwRegionSize, lpAddresses, lpdwCount, lpdwGranularity);
        return win32_impl_result;
    }
    inline uint32_t ResetWriteWatch(void* lpBaseAddress, size_t dwRegionSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResetWriteWatch(lpBaseAddress, dwRegionSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMemoryResourceNotification(Windows::Win32::SystemServices::MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMemoryResourceNotification(NotificationType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryMemoryResourceNotification(Windows::Win32::SystemServices::HANDLE ResourceNotificationHandle, int32_t* ResourceState)
    {
        auto win32_impl_result = WIN32_IMPL_QueryMemoryResourceNotification(ResourceNotificationHandle, ResourceState);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemFileCacheSize(size_t* lpMinimumFileCacheSize, size_t* lpMaximumFileCacheSize, uint32_t* lpFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemFileCacheSize(lpMinimumFileCacheSize, lpMaximumFileCacheSize, lpFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetSystemFileCacheSize(size_t MinimumFileCacheSize, size_t MaximumFileCacheSize, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemFileCacheSize(MinimumFileCacheSize, MaximumFileCacheSize, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMappingNumaW(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpFileMappingAttributes, uint32_t flProtect, uint32_t dwMaximumSizeHigh, uint32_t dwMaximumSizeLow, uint16_t* lpName, uint32_t nndPreferred)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMappingNumaW(hFile, lpFileMappingAttributes, flProtect, dwMaximumSizeHigh, dwMaximumSizeLow, lpName, nndPreferred);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PrefetchVirtualMemory(Windows::Win32::SystemServices::HANDLE hProcess, size_t NumberOfEntries, Windows::Win32::SystemServices::WIN32_MEMORY_RANGE_ENTRY* VirtualAddresses, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_PrefetchVirtualMemory(hProcess, NumberOfEntries, VirtualAddresses, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMappingFromApp(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* SecurityAttributes, uint32_t PageProtection, uint64_t MaximumSize, uint16_t* Name)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMappingFromApp(hFile, SecurityAttributes, PageProtection, MaximumSize, Name);
        return win32_impl_result;
    }
    inline void* MapViewOfFileFromApp(Windows::Win32::SystemServices::HANDLE hFileMappingObject, uint32_t DesiredAccess, uint64_t FileOffset, size_t NumberOfBytesToMap)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFileFromApp(hFileMappingObject, DesiredAccess, FileOffset, NumberOfBytesToMap);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnmapViewOfFileEx(void* BaseAddress, uint32_t UnmapFlags)
    {
        auto win32_impl_result = WIN32_IMPL_UnmapViewOfFileEx(BaseAddress, UnmapFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AllocateUserPhysicalPages(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* NumberOfPages, uint32_t* PageArray)
    {
        auto win32_impl_result = WIN32_IMPL_AllocateUserPhysicalPages(hProcess, NumberOfPages, PageArray);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeUserPhysicalPages(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* NumberOfPages, uint32_t* PageArray)
    {
        auto win32_impl_result = WIN32_IMPL_FreeUserPhysicalPages(hProcess, NumberOfPages, PageArray);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL MapUserPhysicalPages(void* VirtualAddress, size_t NumberOfPages, uint32_t* PageArray)
    {
        auto win32_impl_result = WIN32_IMPL_MapUserPhysicalPages(VirtualAddress, NumberOfPages, PageArray);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AllocateUserPhysicalPagesNuma(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* NumberOfPages, uint32_t* PageArray, uint32_t nndPreferred)
    {
        auto win32_impl_result = WIN32_IMPL_AllocateUserPhysicalPagesNuma(hProcess, NumberOfPages, PageArray, nndPreferred);
        return win32_impl_result;
    }
    inline void* VirtualAllocExNuma(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, size_t dwSize, uint32_t flAllocationType, uint32_t flProtect, uint32_t nndPreferred)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAllocExNuma(hProcess, lpAddress, dwSize, flAllocationType, flProtect, nndPreferred);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetMemoryErrorHandlingCapabilities(uint32_t* Capabilities)
    {
        auto win32_impl_result = WIN32_IMPL_GetMemoryErrorHandlingCapabilities(Capabilities);
        return win32_impl_result;
    }
    inline void* RegisterBadMemoryNotification(Windows::Win32::SystemServices::PBAD_MEMORY_CALLBACK_ROUTINE* Callback)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterBadMemoryNotification(Callback);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterBadMemoryNotification(void* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterBadMemoryNotification(RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t OfferVirtualMemory(void* VirtualAddress, size_t Size, Windows::Win32::SystemServices::OFFER_PRIORITY Priority)
    {
        auto win32_impl_result = WIN32_IMPL_OfferVirtualMemory(VirtualAddress, Size, Priority);
        return win32_impl_result;
    }
    inline uint32_t ReclaimVirtualMemory(void* VirtualAddress, size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_ReclaimVirtualMemory(VirtualAddress, Size);
        return win32_impl_result;
    }
    inline uint32_t DiscardVirtualMemory(void* VirtualAddress, size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_DiscardVirtualMemory(VirtualAddress, Size);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessValidCallTargets(Windows::Win32::SystemServices::HANDLE hProcess, void* VirtualAddress, size_t RegionSize, uint32_t NumberOfOffsets, Windows::Win32::SystemServices::CFG_CALL_TARGET_INFO* OffsetInformation)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessValidCallTargets(hProcess, VirtualAddress, RegionSize, NumberOfOffsets, OffsetInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessValidCallTargetsForMappedView(Windows::Win32::SystemServices::HANDLE Process, void* VirtualAddress, size_t RegionSize, uint32_t NumberOfOffsets, Windows::Win32::SystemServices::CFG_CALL_TARGET_INFO* OffsetInformation, Windows::Win32::SystemServices::HANDLE Section, uint64_t ExpectedFileOffset)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessValidCallTargetsForMappedView(Process, VirtualAddress, RegionSize, NumberOfOffsets, OffsetInformation, Section, ExpectedFileOffset);
        return win32_impl_result;
    }
    inline void* VirtualAllocFromApp(void* BaseAddress, size_t Size, uint32_t AllocationType, uint32_t Protection)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAllocFromApp(BaseAddress, Size, AllocationType, Protection);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualProtectFromApp(void* Address, size_t Size, uint32_t NewProtection, uint32_t* OldProtection)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualProtectFromApp(Address, Size, NewProtection, OldProtection);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenFileMappingFromApp(uint32_t DesiredAccess, Windows::Win32::SystemServices::BOOL InheritHandle, uint16_t* Name)
    {
        auto win32_impl_result = WIN32_IMPL_OpenFileMappingFromApp(DesiredAccess, InheritHandle, Name);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryVirtualMemoryInformation(Windows::Win32::SystemServices::HANDLE Process, void* VirtualAddress, Windows::Win32::SystemServices::WIN32_MEMORY_INFORMATION_CLASS MemoryInformationClass, void* MemoryInformation, size_t MemoryInformationSize, size_t* ReturnSize)
    {
        auto win32_impl_result = WIN32_IMPL_QueryVirtualMemoryInformation(Process, VirtualAddress, MemoryInformationClass, MemoryInformation, MemoryInformationSize, ReturnSize);
        return win32_impl_result;
    }
    inline void* MapViewOfFileNuma2(Windows::Win32::SystemServices::HANDLE FileMappingHandle, Windows::Win32::SystemServices::HANDLE ProcessHandle, uint64_t Offset, void* BaseAddress, size_t ViewSize, uint32_t AllocationType, uint32_t PageProtection, uint32_t PreferredNode)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFileNuma2(FileMappingHandle, ProcessHandle, Offset, BaseAddress, ViewSize, AllocationType, PageProtection, PreferredNode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnmapViewOfFile2(Windows::Win32::SystemServices::HANDLE Process, void* BaseAddress, uint32_t UnmapFlags)
    {
        auto win32_impl_result = WIN32_IMPL_UnmapViewOfFile2(Process, BaseAddress, UnmapFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VirtualUnlockEx(Windows::Win32::SystemServices::HANDLE Process, void* Address, size_t Size)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualUnlockEx(Process, Address, Size);
        return win32_impl_result;
    }
    inline void* VirtualAlloc2(Windows::Win32::SystemServices::HANDLE Process, void* BaseAddress, size_t Size, uint32_t AllocationType, uint32_t PageProtection, Windows::Win32::SystemServices::MEM_EXTENDED_PARAMETER* ExtendedParameters, uint32_t ParameterCount)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAlloc2(Process, BaseAddress, Size, AllocationType, PageProtection, ExtendedParameters, ParameterCount);
        return win32_impl_result;
    }
    inline void* MapViewOfFile3(Windows::Win32::SystemServices::HANDLE FileMapping, Windows::Win32::SystemServices::HANDLE Process, void* BaseAddress, uint64_t Offset, size_t ViewSize, uint32_t AllocationType, uint32_t PageProtection, Windows::Win32::SystemServices::MEM_EXTENDED_PARAMETER* ExtendedParameters, uint32_t ParameterCount)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFile3(FileMapping, Process, BaseAddress, Offset, ViewSize, AllocationType, PageProtection, ExtendedParameters, ParameterCount);
        return win32_impl_result;
    }
    inline void* VirtualAlloc2FromApp(Windows::Win32::SystemServices::HANDLE Process, void* BaseAddress, size_t Size, uint32_t AllocationType, uint32_t PageProtection, Windows::Win32::SystemServices::MEM_EXTENDED_PARAMETER* ExtendedParameters, uint32_t ParameterCount)
    {
        auto win32_impl_result = WIN32_IMPL_VirtualAlloc2FromApp(Process, BaseAddress, Size, AllocationType, PageProtection, ExtendedParameters, ParameterCount);
        return win32_impl_result;
    }
    inline void* MapViewOfFile3FromApp(Windows::Win32::SystemServices::HANDLE FileMapping, Windows::Win32::SystemServices::HANDLE Process, void* BaseAddress, uint64_t Offset, size_t ViewSize, uint32_t AllocationType, uint32_t PageProtection, Windows::Win32::SystemServices::MEM_EXTENDED_PARAMETER* ExtendedParameters, uint32_t ParameterCount)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFile3FromApp(FileMapping, Process, BaseAddress, Offset, ViewSize, AllocationType, PageProtection, ExtendedParameters, ParameterCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMapping2(Windows::Win32::SystemServices::HANDLE File, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* SecurityAttributes, uint32_t DesiredAccess, uint32_t PageProtection, uint32_t AllocationAttributes, uint64_t MaximumSize, uint16_t* Name, Windows::Win32::SystemServices::MEM_EXTENDED_PARAMETER* ExtendedParameters, uint32_t ParameterCount)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMapping2(File, SecurityAttributes, DesiredAccess, PageProtection, AllocationAttributes, MaximumSize, Name, ExtendedParameters, ParameterCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsEnclaveTypeSupported(uint32_t flEnclaveType)
    {
        auto win32_impl_result = WIN32_IMPL_IsEnclaveTypeSupported(flEnclaveType);
        return win32_impl_result;
    }
    inline void* CreateEnclave(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, size_t dwSize, size_t dwInitialCommitment, uint32_t flEnclaveType, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError)
    {
        auto win32_impl_result = WIN32_IMPL_CreateEnclave(hProcess, lpAddress, dwSize, dwInitialCommitment, flEnclaveType, lpEnclaveInformation, dwInfoLength, lpEnclaveError);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LoadEnclaveData(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, void* lpBuffer, size_t nSize, uint32_t flProtect, void* lpPageInformation, uint32_t dwInfoLength, size_t* lpNumberOfBytesWritten, uint32_t* lpEnclaveError)
    {
        auto win32_impl_result = WIN32_IMPL_LoadEnclaveData(hProcess, lpAddress, lpBuffer, nSize, flProtect, lpPageInformation, dwInfoLength, lpNumberOfBytesWritten, lpEnclaveError);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeEnclave(Windows::Win32::SystemServices::HANDLE hProcess, void* lpAddress, void* lpEnclaveInformation, uint32_t dwInfoLength, uint32_t* lpEnclaveError)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeEnclave(hProcess, lpAddress, lpEnclaveInformation, dwInfoLength, lpEnclaveError);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LoadEnclaveImageA(void* lpEnclaveAddress, int8_t* lpImageName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadEnclaveImageA(lpEnclaveAddress, lpImageName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LoadEnclaveImageW(void* lpEnclaveAddress, uint16_t* lpImageName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadEnclaveImageW(lpEnclaveAddress, lpImageName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CallEnclave(Windows::Win32::SystemServices::LPENCLAVE_ROUTINE* lpRoutine, void* lpParameter, Windows::Win32::SystemServices::BOOL fWaitForThread, void** lpReturnValue)
    {
        auto win32_impl_result = WIN32_IMPL_CallEnclave(lpRoutine, lpParameter, fWaitForThread, lpReturnValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TerminateEnclave(void* lpAddress, Windows::Win32::SystemServices::BOOL fWait)
    {
        auto win32_impl_result = WIN32_IMPL_TerminateEnclave(lpAddress, fWait);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteEnclave(void* lpAddress)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteEnclave(lpAddress);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DisableThreadLibraryCalls(intptr_t hLibModule)
    {
        auto win32_impl_result = WIN32_IMPL_DisableThreadLibraryCalls(hLibModule);
        return win32_impl_result;
    }
    inline intptr_t FindResourceExW(intptr_t hModule, uint16_t* lpType, uint16_t* lpName, uint16_t wLanguage)
    {
        auto win32_impl_result = WIN32_IMPL_FindResourceExW(hModule, lpType, lpName, wLanguage);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeLibrary(intptr_t hLibModule)
    {
        auto win32_impl_result = WIN32_IMPL_FreeLibrary(hLibModule);
        return win32_impl_result;
    }
    inline void FreeLibraryAndExitThread(intptr_t hLibModule, uint32_t dwExitCode)
    {
        WIN32_IMPL_FreeLibraryAndExitThread(hLibModule, dwExitCode);
    }
    inline uint32_t GetModuleFileNameA(intptr_t hModule, int8_t* lpFilename, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleFileNameA(hModule, lpFilename, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetModuleFileNameW(intptr_t hModule, uint16_t* lpFilename, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleFileNameW(hModule, lpFilename, nSize);
        return win32_impl_result;
    }
    inline intptr_t GetModuleHandleA(int8_t* lpModuleName)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleHandleA(lpModuleName);
        return win32_impl_result;
    }
    inline intptr_t GetModuleHandleW(uint16_t* lpModuleName)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleHandleW(lpModuleName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetModuleHandleExA(uint32_t dwFlags, int8_t* lpModuleName, intptr_t* phModule)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleHandleExA(dwFlags, lpModuleName, phModule);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetModuleHandleExW(uint32_t dwFlags, uint16_t* lpModuleName, intptr_t* phModule)
    {
        auto win32_impl_result = WIN32_IMPL_GetModuleHandleExW(dwFlags, lpModuleName, phModule);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::FARPROC* GetProcAddress(intptr_t hModule, int8_t* lpProcName)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcAddress(hModule, lpProcName);
        return win32_impl_result;
    }
    inline intptr_t LoadLibraryExA(int8_t* lpLibFileName, Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_LoadLibraryExA(lpLibFileName, hFile, dwFlags);
        return win32_impl_result;
    }
    inline intptr_t LoadLibraryExW(uint16_t* lpLibFileName, Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_LoadLibraryExW(lpLibFileName, hFile, dwFlags);
        return win32_impl_result;
    }
    inline void* AddDllDirectory(uint16_t* NewDirectory)
    {
        auto win32_impl_result = WIN32_IMPL_AddDllDirectory(NewDirectory);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveDllDirectory(void* Cookie)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveDllDirectory(Cookie);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDefaultDllDirectories(uint32_t DirectoryFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetDefaultDllDirectories(DirectoryFlags);
        return win32_impl_result;
    }
    inline intptr_t FindResourceW(intptr_t hModule, uint16_t* lpName, uint16_t* lpType)
    {
        auto win32_impl_result = WIN32_IMPL_FindResourceW(hModule, lpName, lpType);
        return win32_impl_result;
    }
    inline intptr_t LoadLibraryA(int8_t* lpLibFileName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadLibraryA(lpLibFileName);
        return win32_impl_result;
    }
    inline intptr_t LoadLibraryW(uint16_t* lpLibFileName)
    {
        auto win32_impl_result = WIN32_IMPL_LoadLibraryW(lpLibFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumResourceNamesW(intptr_t hModule, uint16_t* lpType, Windows::Win32::MenusAndResources::ENUMRESNAMEPROCW* lpEnumFunc, intptr_t lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumResourceNamesW(hModule, lpType, lpEnumFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AllocConsole()
    {
        auto win32_impl_result = WIN32_IMPL_AllocConsole();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeConsole()
    {
        auto win32_impl_result = WIN32_IMPL_FreeConsole();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AttachConsole(uint32_t dwProcessId)
    {
        auto win32_impl_result = WIN32_IMPL_AttachConsole(dwProcessId);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleCP()
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCP();
        return win32_impl_result;
    }
    inline uint32_t GetConsoleOutputCP()
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleOutputCP();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleMode(Windows::Win32::SystemServices::HANDLE hConsoleHandle, uint32_t* lpMode)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleMode(hConsoleHandle, lpMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleMode(Windows::Win32::SystemServices::HANDLE hConsoleHandle, uint32_t dwMode)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleMode(hConsoleHandle, dwMode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumberOfConsoleInputEvents(Windows::Win32::SystemServices::HANDLE hConsoleInput, uint32_t* lpNumberOfEvents)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumberOfConsoleInputEvents(hConsoleInput, lpNumberOfEvents);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleInputA(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleInputA(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleInputW(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleInputW(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PeekConsoleInputA(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsRead)
    {
        auto win32_impl_result = WIN32_IMPL_PeekConsoleInputA(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PeekConsoleInputW(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsRead)
    {
        auto win32_impl_result = WIN32_IMPL_PeekConsoleInputW(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleA(Windows::Win32::SystemServices::HANDLE hConsoleInput, void* lpBuffer, uint32_t nNumberOfCharsToRead, uint32_t* lpNumberOfCharsRead, Windows::Win32::SystemServices::CONSOLE_READCONSOLE_CONTROL* pInputControl)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleA(hConsoleInput, lpBuffer, nNumberOfCharsToRead, lpNumberOfCharsRead, pInputControl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleW(Windows::Win32::SystemServices::HANDLE hConsoleInput, void* lpBuffer, uint32_t nNumberOfCharsToRead, uint32_t* lpNumberOfCharsRead, Windows::Win32::SystemServices::CONSOLE_READCONSOLE_CONTROL* pInputControl)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleW(hConsoleInput, lpBuffer, nNumberOfCharsToRead, lpNumberOfCharsRead, pInputControl);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, void* lpBuffer, uint32_t nNumberOfCharsToWrite, uint32_t* lpNumberOfCharsWritten, void* lpReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleA(hConsoleOutput, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, lpReserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, void* lpBuffer, uint32_t nNumberOfCharsToWrite, uint32_t* lpNumberOfCharsWritten, void* lpReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleW(hConsoleOutput, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, lpReserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleCtrlHandler(Windows::Win32::SystemServices::PHANDLER_ROUTINE* HandlerRoutine, Windows::Win32::SystemServices::BOOL Add)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleCtrlHandler(HandlerRoutine, Add);
        return win32_impl_result;
    }
    inline int32_t CreatePseudoConsole(Windows::Win32::SystemServices::COORD size, Windows::Win32::SystemServices::HANDLE hInput, Windows::Win32::SystemServices::HANDLE hOutput, uint32_t dwFlags, void** phPC)
    {
        auto win32_impl_result = WIN32_IMPL_CreatePseudoConsole(size, hInput, hOutput, dwFlags, phPC);
        return win32_impl_result;
    }
    inline int32_t ResizePseudoConsole(void* hPC, Windows::Win32::SystemServices::COORD size)
    {
        auto win32_impl_result = WIN32_IMPL_ResizePseudoConsole(hPC, size);
        return win32_impl_result;
    }
    inline void ClosePseudoConsole(void* hPC)
    {
        WIN32_IMPL_ClosePseudoConsole(hPC);
    }
    inline Windows::Win32::SystemServices::BOOL FillConsoleOutputCharacterA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, int8_t cCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfCharsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_FillConsoleOutputCharacterA(hConsoleOutput, cCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FillConsoleOutputCharacterW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t cCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfCharsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_FillConsoleOutputCharacterW(hConsoleOutput, cCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FillConsoleOutputAttribute(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t wAttribute, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfAttrsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_FillConsoleOutputAttribute(hConsoleOutput, wAttribute, nLength, dwWriteCoord, lpNumberOfAttrsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GenerateConsoleCtrlEvent(uint32_t dwCtrlEvent, uint32_t dwProcessGroupId)
    {
        auto win32_impl_result = WIN32_IMPL_GenerateConsoleCtrlEvent(dwCtrlEvent, dwProcessGroupId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateConsoleScreenBuffer(uint32_t dwDesiredAccess, uint32_t dwShareMode, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, uint32_t dwFlags, void* lpScreenBufferData)
    {
        auto win32_impl_result = WIN32_IMPL_CreateConsoleScreenBuffer(dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwFlags, lpScreenBufferData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleActiveScreenBuffer(Windows::Win32::SystemServices::HANDLE hConsoleOutput)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleActiveScreenBuffer(hConsoleOutput);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlushConsoleInputBuffer(Windows::Win32::SystemServices::HANDLE hConsoleInput)
    {
        auto win32_impl_result = WIN32_IMPL_FlushConsoleInputBuffer(hConsoleInput);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleCP(uint32_t wCodePageID)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleCP(wCodePageID);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleOutputCP(uint32_t wCodePageID)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleOutputCP(wCodePageID);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleCursorInfo(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CONSOLE_CURSOR_INFO* lpConsoleCursorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCursorInfo(hConsoleOutput, lpConsoleCursorInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleCursorInfo(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CONSOLE_CURSOR_INFO* lpConsoleCursorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleCursorInfo(hConsoleOutput, lpConsoleCursorInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleScreenBufferInfo(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CONSOLE_SCREEN_BUFFER_INFO* lpConsoleScreenBufferInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleScreenBufferInfo(hConsoleOutput, lpConsoleScreenBufferInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleScreenBufferInfoEx(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CONSOLE_SCREEN_BUFFER_INFOEX* lpConsoleScreenBufferInfoEx)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleScreenBufferInfoEx(hConsoleOutput, lpConsoleScreenBufferInfoEx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleScreenBufferInfoEx(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CONSOLE_SCREEN_BUFFER_INFOEX* lpConsoleScreenBufferInfoEx)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleScreenBufferInfoEx(hConsoleOutput, lpConsoleScreenBufferInfoEx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleScreenBufferSize(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::COORD dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleScreenBufferSize(hConsoleOutput, dwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleCursorPosition(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::COORD dwCursorPosition)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleCursorPosition(hConsoleOutput, dwCursorPosition);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::COORD GetLargestConsoleWindowSize(Windows::Win32::SystemServices::HANDLE hConsoleOutput)
    {
        auto win32_impl_result = WIN32_IMPL_GetLargestConsoleWindowSize(hConsoleOutput);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleTextAttribute(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t wAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleTextAttribute(hConsoleOutput, wAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleWindowInfo(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::BOOL bAbsolute, Windows::Win32::SystemServices::SMALL_RECT* lpConsoleWindow)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleWindowInfo(hConsoleOutput, bAbsolute, lpConsoleWindow);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleOutputCharacterA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, int8_t* lpCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfCharsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleOutputCharacterA(hConsoleOutput, lpCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleOutputCharacterW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t* lpCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfCharsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleOutputCharacterW(hConsoleOutput, lpCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleOutputAttribute(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t* lpAttribute, uint32_t nLength, Windows::Win32::SystemServices::COORD dwWriteCoord, uint32_t* lpNumberOfAttrsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleOutputAttribute(hConsoleOutput, lpAttribute, nLength, dwWriteCoord, lpNumberOfAttrsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleOutputCharacterA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, int8_t* lpCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwReadCoord, uint32_t* lpNumberOfCharsRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleOutputCharacterA(hConsoleOutput, lpCharacter, nLength, dwReadCoord, lpNumberOfCharsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleOutputCharacterW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t* lpCharacter, uint32_t nLength, Windows::Win32::SystemServices::COORD dwReadCoord, uint32_t* lpNumberOfCharsRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleOutputCharacterW(hConsoleOutput, lpCharacter, nLength, dwReadCoord, lpNumberOfCharsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleOutputAttribute(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint16_t* lpAttribute, uint32_t nLength, Windows::Win32::SystemServices::COORD dwReadCoord, uint32_t* lpNumberOfAttrsRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleOutputAttribute(hConsoleOutput, lpAttribute, nLength, dwReadCoord, lpNumberOfAttrsRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleInputA(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleInputA(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleInputW(Windows::Win32::SystemServices::HANDLE hConsoleInput, Windows::Win32::SystemServices::INPUT_RECORD* lpBuffer, uint32_t nLength, uint32_t* lpNumberOfEventsWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleInputW(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScrollConsoleScreenBufferA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::SMALL_RECT* lpScrollRectangle, Windows::Win32::SystemServices::SMALL_RECT* lpClipRectangle, Windows::Win32::SystemServices::COORD dwDestinationOrigin, Windows::Win32::SystemServices::CHAR_INFO* lpFill)
    {
        auto win32_impl_result = WIN32_IMPL_ScrollConsoleScreenBufferA(hConsoleOutput, lpScrollRectangle, lpClipRectangle, dwDestinationOrigin, lpFill);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScrollConsoleScreenBufferW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::SMALL_RECT* lpScrollRectangle, Windows::Win32::SystemServices::SMALL_RECT* lpClipRectangle, Windows::Win32::SystemServices::COORD dwDestinationOrigin, Windows::Win32::SystemServices::CHAR_INFO* lpFill)
    {
        auto win32_impl_result = WIN32_IMPL_ScrollConsoleScreenBufferW(hConsoleOutput, lpScrollRectangle, lpClipRectangle, dwDestinationOrigin, lpFill);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleOutputA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CHAR_INFO* lpBuffer, Windows::Win32::SystemServices::COORD dwBufferSize, Windows::Win32::SystemServices::COORD dwBufferCoord, Windows::Win32::SystemServices::SMALL_RECT* lpWriteRegion)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleOutputA(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpWriteRegion);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteConsoleOutputW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CHAR_INFO* lpBuffer, Windows::Win32::SystemServices::COORD dwBufferSize, Windows::Win32::SystemServices::COORD dwBufferCoord, Windows::Win32::SystemServices::SMALL_RECT* lpWriteRegion)
    {
        auto win32_impl_result = WIN32_IMPL_WriteConsoleOutputW(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpWriteRegion);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleOutputA(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CHAR_INFO* lpBuffer, Windows::Win32::SystemServices::COORD dwBufferSize, Windows::Win32::SystemServices::COORD dwBufferCoord, Windows::Win32::SystemServices::SMALL_RECT* lpReadRegion)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleOutputA(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpReadRegion);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadConsoleOutputW(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::CHAR_INFO* lpBuffer, Windows::Win32::SystemServices::COORD dwBufferSize, Windows::Win32::SystemServices::COORD dwBufferCoord, Windows::Win32::SystemServices::SMALL_RECT* lpReadRegion)
    {
        auto win32_impl_result = WIN32_IMPL_ReadConsoleOutputW(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpReadRegion);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleTitleA(int8_t* lpConsoleTitle, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleTitleA(lpConsoleTitle, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleTitleW(uint16_t* lpConsoleTitle, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleTitleW(lpConsoleTitle, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleOriginalTitleA(int8_t* lpConsoleTitle, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleOriginalTitleA(lpConsoleTitle, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleOriginalTitleW(uint16_t* lpConsoleTitle, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleOriginalTitleW(lpConsoleTitle, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleTitleA(int8_t* lpConsoleTitle)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleTitleA(lpConsoleTitle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleTitleW(uint16_t* lpConsoleTitle)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleTitleW(lpConsoleTitle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumberOfConsoleMouseButtons(uint32_t* lpNumberOfMouseButtons)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumberOfConsoleMouseButtons(lpNumberOfMouseButtons);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::COORD GetConsoleFontSize(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint32_t nFont)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleFontSize(hConsoleOutput, nFont);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentConsoleFont(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::BOOL bMaximumWindow, Windows::Win32::SystemServices::CONSOLE_FONT_INFO* lpConsoleCurrentFont)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentConsoleFont(hConsoleOutput, bMaximumWindow, lpConsoleCurrentFont);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentConsoleFontEx(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::BOOL bMaximumWindow, Windows::Win32::SystemServices::CONSOLE_FONT_INFOEX* lpConsoleCurrentFontEx)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentConsoleFontEx(hConsoleOutput, bMaximumWindow, lpConsoleCurrentFontEx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCurrentConsoleFontEx(Windows::Win32::SystemServices::HANDLE hConsoleOutput, Windows::Win32::SystemServices::BOOL bMaximumWindow, Windows::Win32::SystemServices::CONSOLE_FONT_INFOEX* lpConsoleCurrentFontEx)
    {
        auto win32_impl_result = WIN32_IMPL_SetCurrentConsoleFontEx(hConsoleOutput, bMaximumWindow, lpConsoleCurrentFontEx);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleSelectionInfo(Windows::Win32::SystemServices::CONSOLE_SELECTION_INFO* lpConsoleSelectionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleSelectionInfo(lpConsoleSelectionInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleHistoryInfo(Windows::Win32::SystemServices::CONSOLE_HISTORY_INFO* lpConsoleHistoryInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleHistoryInfo(lpConsoleHistoryInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleHistoryInfo(Windows::Win32::SystemServices::CONSOLE_HISTORY_INFO* lpConsoleHistoryInfo)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleHistoryInfo(lpConsoleHistoryInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetConsoleDisplayMode(uint32_t* lpModeFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleDisplayMode(lpModeFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleDisplayMode(Windows::Win32::SystemServices::HANDLE hConsoleOutput, uint32_t dwFlags, Windows::Win32::SystemServices::COORD* lpNewScreenBufferDimensions)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleDisplayMode(hConsoleOutput, dwFlags, lpNewScreenBufferDimensions);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsAndMessaging::HWND GetConsoleWindow()
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleWindow();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddConsoleAliasA(int8_t* Source, int8_t* Target, int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_AddConsoleAliasA(Source, Target, ExeName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddConsoleAliasW(uint16_t* Source, uint16_t* Target, uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_AddConsoleAliasW(Source, Target, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasA(int8_t* Source, int8_t* TargetBuffer, uint32_t TargetBufferLength, int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasA(Source, TargetBuffer, TargetBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasW(uint16_t* Source, uint16_t* TargetBuffer, uint32_t TargetBufferLength, uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasW(Source, TargetBuffer, TargetBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasesLengthA(int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasesLengthA(ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasesLengthW(uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasesLengthW(ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasExesLengthA()
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasExesLengthA();
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasExesLengthW()
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasExesLengthW();
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasesA(int8_t* AliasBuffer, uint32_t AliasBufferLength, int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasesA(AliasBuffer, AliasBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasesW(uint16_t* AliasBuffer, uint32_t AliasBufferLength, uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasesW(AliasBuffer, AliasBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasExesA(int8_t* ExeNameBuffer, uint32_t ExeNameBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasExesA(ExeNameBuffer, ExeNameBufferLength);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleAliasExesW(uint16_t* ExeNameBuffer, uint32_t ExeNameBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleAliasExesW(ExeNameBuffer, ExeNameBufferLength);
        return win32_impl_result;
    }
    inline void ExpungeConsoleCommandHistoryA(int8_t* ExeName)
    {
        WIN32_IMPL_ExpungeConsoleCommandHistoryA(ExeName);
    }
    inline void ExpungeConsoleCommandHistoryW(uint16_t* ExeName)
    {
        WIN32_IMPL_ExpungeConsoleCommandHistoryW(ExeName);
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleNumberOfCommandsA(uint32_t Number, int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleNumberOfCommandsA(Number, ExeName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetConsoleNumberOfCommandsW(uint32_t Number, uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_SetConsoleNumberOfCommandsW(Number, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleCommandHistoryLengthA(int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCommandHistoryLengthA(ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleCommandHistoryLengthW(uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCommandHistoryLengthW(ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleCommandHistoryA(int8_t* Commands, uint32_t CommandBufferLength, int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCommandHistoryA(Commands, CommandBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleCommandHistoryW(uint16_t* Commands, uint32_t CommandBufferLength, uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleCommandHistoryW(Commands, CommandBufferLength, ExeName);
        return win32_impl_result;
    }
    inline uint32_t GetConsoleProcessList(uint32_t* lpdwProcessList, uint32_t dwProcessCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetConsoleProcessList(lpdwProcessList, dwProcessCount);
        return win32_impl_result;
    }
    inline uint32_t timeSetEvent(uint32_t uDelay, uint32_t uResolution, Windows::Win32::SystemServices::LPTIMECALLBACK* fptc, size_t dwUser, uint32_t fuEvent)
    {
        auto win32_impl_result = WIN32_IMPL_timeSetEvent(uDelay, uResolution, fptc, dwUser, fuEvent);
        return win32_impl_result;
    }
    inline uint32_t timeKillEvent(uint32_t uTimerID)
    {
        auto win32_impl_result = WIN32_IMPL_timeKillEvent(uTimerID);
        return win32_impl_result;
    }
    inline int32_t I_RpcNsGetBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsGetBuffer(Message);
        return win32_impl_result;
    }
    inline int32_t I_RpcNsSendReceive(Windows::Win32::Rpc::RPC_MESSAGE* Message, void** Handle)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcNsSendReceive(Message, Handle);
        return win32_impl_result;
    }
    inline void I_RpcNsRaiseException(Windows::Win32::Rpc::RPC_MESSAGE* Message, int32_t Status)
    {
        WIN32_IMPL_I_RpcNsRaiseException(Message, Status);
    }
    inline int32_t I_RpcReBindBuffer(Windows::Win32::Rpc::RPC_MESSAGE* Message)
    {
        auto win32_impl_result = WIN32_IMPL_I_RpcReBindBuffer(Message);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintersA(uint32_t Flags, int8_t* Name, uint32_t Level, uint8_t* pPrinterEnum, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintersA(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintersW(uint32_t Flags, uint16_t* Name, uint32_t Level, uint8_t* pPrinterEnum, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintersW(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetSpoolFileHandle(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_GetSpoolFileHandle(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CommitSpoolData(Windows::Win32::SystemServices::HANDLE hPrinter, Windows::Win32::SystemServices::HANDLE hSpoolFile, uint32_t cbCommit)
    {
        auto win32_impl_result = WIN32_IMPL_CommitSpoolData(hPrinter, hSpoolFile, cbCommit);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseSpoolFileHandle(Windows::Win32::SystemServices::HANDLE hPrinter, Windows::Win32::SystemServices::HANDLE hSpoolFile)
    {
        auto win32_impl_result = WIN32_IMPL_CloseSpoolFileHandle(hPrinter, hSpoolFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OpenPrinterA(int8_t* pPrinterName, intptr_t* phPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSA* pDefault)
    {
        auto win32_impl_result = WIN32_IMPL_OpenPrinterA(pPrinterName, phPrinter, pDefault);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OpenPrinterW(uint16_t* pPrinterName, intptr_t* phPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSW* pDefault)
    {
        auto win32_impl_result = WIN32_IMPL_OpenPrinterW(pPrinterName, phPrinter, pDefault);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResetPrinterA(Windows::Win32::SystemServices::HANDLE hPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSA* pDefault)
    {
        auto win32_impl_result = WIN32_IMPL_ResetPrinterA(hPrinter, pDefault);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResetPrinterW(Windows::Win32::SystemServices::HANDLE hPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSW* pDefault)
    {
        auto win32_impl_result = WIN32_IMPL_ResetPrinterW(hPrinter, pDefault);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetJobA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint32_t Level, uint8_t* pJob, uint32_t Command)
    {
        auto win32_impl_result = WIN32_IMPL_SetJobA(hPrinter, JobId, Level, pJob, Command);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetJobW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint32_t Level, uint8_t* pJob, uint32_t Command)
    {
        auto win32_impl_result = WIN32_IMPL_SetJobW(hPrinter, JobId, Level, pJob, Command);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetJobA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint32_t Level, uint8_t* pJob, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetJobA(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetJobW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint32_t Level, uint8_t* pJob, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetJobW(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumJobsA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t FirstJob, uint32_t NoJobs, uint32_t Level, uint8_t* pJob, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumJobsA(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumJobsW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t FirstJob, uint32_t NoJobs, uint32_t Level, uint8_t* pJob, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumJobsW(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE AddPrinterA(int8_t* pName, uint32_t Level, uint8_t* pPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterA(pName, Level, pPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE AddPrinterW(uint16_t* pName, uint32_t Level, uint8_t* pPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterW(pName, Level, pPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPrinterA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pPrinter, uint32_t Command)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterA(hPrinter, Level, pPrinter, Command);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPrinterW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pPrinter, uint32_t Command)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterW(hPrinter, Level, pPrinter, Command);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pPrinter, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterA(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pPrinter, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterW(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterDriverA(int8_t* pName, uint32_t Level, uint8_t* pDriverInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterDriverA(pName, Level, pDriverInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterDriverW(uint16_t* pName, uint32_t Level, uint8_t* pDriverInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterDriverW(pName, Level, pDriverInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterDriverExA(int8_t* pName, uint32_t Level, uint8_t* lpbDriverInfo, uint32_t dwFileCopyFlags)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterDriverExA(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterDriverExW(uint16_t* pName, uint32_t Level, uint8_t* lpbDriverInfo, uint32_t dwFileCopyFlags)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterDriverExW(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrinterDriversA(int8_t* pName, int8_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDriversA(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrinterDriversW(uint16_t* pName, uint16_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDriversW(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriverA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverA(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriverW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverW(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriverDirectoryA(int8_t* pName, int8_t* pEnvironment, uint32_t Level, uint8_t* pDriverDirectory, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverDirectoryA(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriverDirectoryW(uint16_t* pName, uint16_t* pEnvironment, uint32_t Level, uint8_t* pDriverDirectory, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverDirectoryW(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterDriverA(int8_t* pName, int8_t* pEnvironment, int8_t* pDriverName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverA(pName, pEnvironment, pDriverName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterDriverW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pDriverName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverW(pName, pEnvironment, pDriverName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterDriverExA(int8_t* pName, int8_t* pEnvironment, int8_t* pDriverName, uint32_t dwDeleteFlag, uint32_t dwVersionFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverExA(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterDriverExW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pDriverName, uint32_t dwDeleteFlag, uint32_t dwVersionFlag)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverExW(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrintProcessorA(int8_t* pName, int8_t* pEnvironment, int8_t* pPathName, int8_t* pPrintProcessorName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrintProcessorA(pName, pEnvironment, pPathName, pPrintProcessorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrintProcessorW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pPathName, uint16_t* pPrintProcessorName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrintProcessorW(pName, pEnvironment, pPathName, pPrintProcessorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintProcessorsA(int8_t* pName, int8_t* pEnvironment, uint32_t Level, uint8_t* pPrintProcessorInfo, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintProcessorsA(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintProcessorsW(uint16_t* pName, uint16_t* pEnvironment, uint32_t Level, uint8_t* pPrintProcessorInfo, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintProcessorsW(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrintProcessorDirectoryA(int8_t* pName, int8_t* pEnvironment, uint32_t Level, uint8_t* pPrintProcessorInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrintProcessorDirectoryA(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrintProcessorDirectoryW(uint16_t* pName, uint16_t* pEnvironment, uint32_t Level, uint8_t* pPrintProcessorInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrintProcessorDirectoryW(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintProcessorDatatypesA(int8_t* pName, int8_t* pPrintProcessorName, uint32_t Level, uint8_t* pDatatypes, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintProcessorDatatypesA(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPrintProcessorDatatypesW(uint16_t* pName, uint16_t* pPrintProcessorName, uint32_t Level, uint8_t* pDatatypes, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrintProcessorDatatypesW(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrintProcessorA(int8_t* pName, int8_t* pEnvironment, int8_t* pPrintProcessorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrintProcessorA(pName, pEnvironment, pPrintProcessorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrintProcessorW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pPrintProcessorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrintProcessorW(pName, pEnvironment, pPrintProcessorName);
        return win32_impl_result;
    }
    inline uint32_t StartDocPrinterA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pDocInfo)
    {
        auto win32_impl_result = WIN32_IMPL_StartDocPrinterA(hPrinter, Level, pDocInfo);
        return win32_impl_result;
    }
    inline uint32_t StartDocPrinterW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pDocInfo)
    {
        auto win32_impl_result = WIN32_IMPL_StartDocPrinterW(hPrinter, Level, pDocInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL StartPagePrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_StartPagePrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrinter(Windows::Win32::SystemServices::HANDLE hPrinter, void* pBuf, uint32_t cbBuf, uint32_t* pcWritten)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrinter(hPrinter, pBuf, cbBuf, pcWritten);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FlushPrinter(Windows::Win32::SystemServices::HANDLE hPrinter, void* pBuf, uint32_t cbBuf, uint32_t* pcWritten, uint32_t cSleep)
    {
        auto win32_impl_result = WIN32_IMPL_FlushPrinter(hPrinter, pBuf, cbBuf, pcWritten, cSleep);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EndPagePrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_EndPagePrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AbortPrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_AbortPrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadPrinter(Windows::Win32::SystemServices::HANDLE hPrinter, void* pBuf, uint32_t cbBuf, uint32_t* pNoBytesRead)
    {
        auto win32_impl_result = WIN32_IMPL_ReadPrinter(hPrinter, pBuf, cbBuf, pNoBytesRead);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EndDocPrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_EndDocPrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddJobA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pData, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_AddJobA(hPrinter, Level, pData, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddJobW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pData, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_AddJobW(hPrinter, Level, pData, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ScheduleJob(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId)
    {
        auto win32_impl_result = WIN32_IMPL_ScheduleJob(hPrinter, JobId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PrinterProperties(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_PrinterProperties(hWnd, hPrinter);
        return win32_impl_result;
    }
    inline int32_t DocumentPropertiesA(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pDeviceName, Windows::Win32::Xps::DEVMODEA* pDevModeOutput, Windows::Win32::Xps::DEVMODEA* pDevModeInput, uint32_t fMode)
    {
        auto win32_impl_result = WIN32_IMPL_DocumentPropertiesA(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        return win32_impl_result;
    }
    inline int32_t DocumentPropertiesW(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pDeviceName, Windows::Win32::DisplayDevices::DEVMODEW* pDevModeOutput, Windows::Win32::DisplayDevices::DEVMODEW* pDevModeInput, uint32_t fMode)
    {
        auto win32_impl_result = WIN32_IMPL_DocumentPropertiesW(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        return win32_impl_result;
    }
    inline int32_t AdvancedDocumentPropertiesA(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pDeviceName, Windows::Win32::Xps::DEVMODEA* pDevModeOutput, Windows::Win32::Xps::DEVMODEA* pDevModeInput)
    {
        auto win32_impl_result = WIN32_IMPL_AdvancedDocumentPropertiesA(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        return win32_impl_result;
    }
    inline int32_t AdvancedDocumentPropertiesW(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pDeviceName, Windows::Win32::DisplayDevices::DEVMODEW* pDevModeOutput, Windows::Win32::DisplayDevices::DEVMODEW* pDevModeInput)
    {
        auto win32_impl_result = WIN32_IMPL_AdvancedDocumentPropertiesW(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        return win32_impl_result;
    }
    inline uint32_t GetPrinterDataA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pValueName, uint32_t* pType, uint8_t* pData, uint32_t nSize, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDataA(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        return win32_impl_result;
    }
    inline uint32_t GetPrinterDataW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pValueName, uint32_t* pType, uint8_t* pData, uint32_t nSize, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDataW(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        return win32_impl_result;
    }
    inline uint32_t GetPrinterDataExA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName, int8_t* pValueName, uint32_t* pType, uint8_t* pData, uint32_t nSize, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDataExA(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        return win32_impl_result;
    }
    inline uint32_t GetPrinterDataExW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName, uint16_t* pValueName, uint32_t* pType, uint8_t* pData, uint32_t nSize, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDataExW(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterDataA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t dwIndex, int8_t* pValueName, uint32_t cbValueName, uint32_t* pcbValueName, uint32_t* pType, uint8_t* pData, uint32_t cbData, uint32_t* pcbData)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDataA(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterDataW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t dwIndex, uint16_t* pValueName, uint32_t cbValueName, uint32_t* pcbValueName, uint32_t* pType, uint8_t* pData, uint32_t cbData, uint32_t* pcbData)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDataW(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterDataExA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName, uint8_t* pEnumValues, uint32_t cbEnumValues, uint32_t* pcbEnumValues, uint32_t* pnEnumValues)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDataExA(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterDataExW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName, uint8_t* pEnumValues, uint32_t cbEnumValues, uint32_t* pcbEnumValues, uint32_t* pnEnumValues)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterDataExW(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterKeyA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName, int8_t* pSubkey, uint32_t cbSubkey, uint32_t* pcbSubkey)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterKeyA(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        return win32_impl_result;
    }
    inline uint32_t EnumPrinterKeyW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName, uint16_t* pSubkey, uint32_t cbSubkey, uint32_t* pcbSubkey)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPrinterKeyW(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        return win32_impl_result;
    }
    inline uint32_t SetPrinterDataA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pValueName, uint32_t Type, uint8_t* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterDataA(hPrinter, pValueName, Type, pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t SetPrinterDataW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pValueName, uint32_t Type, uint8_t* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterDataW(hPrinter, pValueName, Type, pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t SetPrinterDataExA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName, int8_t* pValueName, uint32_t Type, uint8_t* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterDataExA(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t SetPrinterDataExW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName, uint16_t* pValueName, uint32_t Type, uint8_t* pData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_SetPrinterDataExW(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterDataA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pValueName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDataA(hPrinter, pValueName);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterDataW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pValueName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDataW(hPrinter, pValueName);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterDataExA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName, int8_t* pValueName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDataExA(hPrinter, pKeyName, pValueName);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterDataExW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName, uint16_t* pValueName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDataExW(hPrinter, pKeyName, pValueName);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterKeyA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pKeyName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterKeyA(hPrinter, pKeyName);
        return win32_impl_result;
    }
    inline uint32_t DeletePrinterKeyW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pKeyName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterKeyW(hPrinter, pKeyName);
        return win32_impl_result;
    }
    inline uint32_t WaitForPrinterChange(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForPrinterChange(hPrinter, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE FindFirstPrinterChangeNotification(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t fdwFilter, uint32_t fdwOptions, void* pPrinterNotifyOptions)
    {
        auto win32_impl_result = WIN32_IMPL_FindFirstPrinterChangeNotification(hPrinter, fdwFilter, fdwOptions, pPrinterNotifyOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FindNextPrinterChangeNotification(Windows::Win32::SystemServices::HANDLE hChange, uint32_t* pdwChange, void* pvReserved, void** ppPrinterNotifyInfo)
    {
        auto win32_impl_result = WIN32_IMPL_FindNextPrinterChangeNotification(hChange, pdwChange, pvReserved, ppPrinterNotifyInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreePrinterNotifyInfo(Windows::Win32::SystemServices::PRINTER_NOTIFY_INFO* pPrinterNotifyInfo)
    {
        auto win32_impl_result = WIN32_IMPL_FreePrinterNotifyInfo(pPrinterNotifyInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FindClosePrinterChangeNotification(Windows::Win32::SystemServices::HANDLE hChange)
    {
        auto win32_impl_result = WIN32_IMPL_FindClosePrinterChangeNotification(hChange);
        return win32_impl_result;
    }
    inline uint32_t PrinterMessageBoxA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Error, Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pText, int8_t* pCaption, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_PrinterMessageBoxA(hPrinter, Error, hWnd, pText, pCaption, dwType);
        return win32_impl_result;
    }
    inline uint32_t PrinterMessageBoxW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Error, Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pText, uint16_t* pCaption, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_PrinterMessageBoxW(hPrinter, Error, hWnd, pText, pCaption, dwType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClosePrinter(Windows::Win32::SystemServices::HANDLE hPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_ClosePrinter(hPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddFormA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pForm)
    {
        auto win32_impl_result = WIN32_IMPL_AddFormA(hPrinter, Level, pForm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddFormW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pForm)
    {
        auto win32_impl_result = WIN32_IMPL_AddFormW(hPrinter, Level, pForm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteFormA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pFormName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteFormA(hPrinter, pFormName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteFormW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pFormName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteFormW(hPrinter, pFormName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetFormA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pFormName, uint32_t Level, uint8_t* pForm, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetFormA(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetFormW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pFormName, uint32_t Level, uint8_t* pForm, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetFormW(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFormA(Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pFormName, uint32_t Level, uint8_t* pForm)
    {
        auto win32_impl_result = WIN32_IMPL_SetFormA(hPrinter, pFormName, Level, pForm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFormW(Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pFormName, uint32_t Level, uint8_t* pForm)
    {
        auto win32_impl_result = WIN32_IMPL_SetFormW(hPrinter, pFormName, Level, pForm);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumFormsA(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pForm, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFormsA(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumFormsW(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t Level, uint8_t* pForm, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumFormsW(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumMonitorsA(int8_t* pName, uint32_t Level, uint8_t* pMonitor, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumMonitorsA(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumMonitorsW(uint16_t* pName, uint32_t Level, uint8_t* pMonitor, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumMonitorsW(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddMonitorA(int8_t* pName, uint32_t Level, uint8_t* pMonitors)
    {
        auto win32_impl_result = WIN32_IMPL_AddMonitorA(pName, Level, pMonitors);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddMonitorW(uint16_t* pName, uint32_t Level, uint8_t* pMonitors)
    {
        auto win32_impl_result = WIN32_IMPL_AddMonitorW(pName, Level, pMonitors);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteMonitorA(int8_t* pName, int8_t* pEnvironment, int8_t* pMonitorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteMonitorA(pName, pEnvironment, pMonitorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteMonitorW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pMonitorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteMonitorW(pName, pEnvironment, pMonitorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPortsA(int8_t* pName, uint32_t Level, uint8_t* pPort, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPortsA(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumPortsW(uint16_t* pName, uint32_t Level, uint8_t* pPort, uint32_t cbBuf, uint32_t* pcbNeeded, uint32_t* pcReturned)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPortsW(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPortA(int8_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pMonitorName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPortA(pName, hWnd, pMonitorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPortW(uint16_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pMonitorName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPortW(pName, hWnd, pMonitorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ConfigurePortA(int8_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pPortName)
    {
        auto win32_impl_result = WIN32_IMPL_ConfigurePortA(pName, hWnd, pPortName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ConfigurePortW(uint16_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pPortName)
    {
        auto win32_impl_result = WIN32_IMPL_ConfigurePortW(pName, hWnd, pPortName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePortA(int8_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pPortName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePortA(pName, hWnd, pPortName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePortW(uint16_t* pName, Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pPortName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePortW(pName, hWnd, pPortName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL XcvDataW(Windows::Win32::SystemServices::HANDLE hXcv, uint16_t* pszDataName, uint8_t* pInputData, uint32_t cbInputData, uint8_t* pOutputData, uint32_t cbOutputData, uint32_t* pcbOutputNeeded, uint32_t* pdwStatus)
    {
        auto win32_impl_result = WIN32_IMPL_XcvDataW(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDefaultPrinterA(int8_t* pszBuffer, uint32_t* pcchBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetDefaultPrinterA(pszBuffer, pcchBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDefaultPrinterW(uint16_t* pszBuffer, uint32_t* pcchBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetDefaultPrinterW(pszBuffer, pcchBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDefaultPrinterA(int8_t* pszPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_SetDefaultPrinterA(pszPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDefaultPrinterW(uint16_t* pszPrinter)
    {
        auto win32_impl_result = WIN32_IMPL_SetDefaultPrinterW(pszPrinter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPortA(int8_t* pName, int8_t* pPortName, uint32_t dwLevel, uint8_t* pPortInfo)
    {
        auto win32_impl_result = WIN32_IMPL_SetPortA(pName, pPortName, dwLevel, pPortInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPortW(uint16_t* pName, uint16_t* pPortName, uint32_t dwLevel, uint8_t* pPortInfo)
    {
        auto win32_impl_result = WIN32_IMPL_SetPortW(pName, pPortName, dwLevel, pPortInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterConnectionA(int8_t* pName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterConnectionA(pName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterConnectionW(uint16_t* pName)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterConnectionW(pName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterConnectionA(int8_t* pName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterConnectionA(pName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrinterConnectionW(uint16_t* pName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterConnectionW(pName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE ConnectToPrinterDlg(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_ConnectToPrinterDlg(hwnd, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrintProvidorA(int8_t* pName, uint32_t Level, uint8_t* pProvidorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrintProvidorA(pName, Level, pProvidorInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrintProvidorW(uint16_t* pName, uint32_t Level, uint8_t* pProvidorInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrintProvidorW(pName, Level, pProvidorInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrintProvidorA(int8_t* pName, int8_t* pEnvironment, int8_t* pPrintProvidorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrintProvidorA(pName, pEnvironment, pPrintProvidorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeletePrintProvidorW(uint16_t* pName, uint16_t* pEnvironment, uint16_t* pPrintProvidorName)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrintProvidorW(pName, pEnvironment, pPrintProvidorName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsValidDevmodeA(Windows::Win32::Xps::DEVMODEA* pDevmode, size_t DevmodeSize)
    {
        auto win32_impl_result = WIN32_IMPL_IsValidDevmodeA(pDevmode, DevmodeSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsValidDevmodeW(Windows::Win32::DisplayDevices::DEVMODEW* pDevmode, size_t DevmodeSize)
    {
        auto win32_impl_result = WIN32_IMPL_IsValidDevmodeW(pDevmode, DevmodeSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OpenPrinter2A(int8_t* pPrinterName, intptr_t* phPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSA* pDefault, Windows::Win32::SystemServices::PRINTER_OPTIONSA* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_OpenPrinter2A(pPrinterName, phPrinter, pDefault, pOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL OpenPrinter2W(uint16_t* pPrinterName, intptr_t* phPrinter, Windows::Win32::SystemServices::PRINTER_DEFAULTSW* pDefault, Windows::Win32::SystemServices::PRINTER_OPTIONSW* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_OpenPrinter2W(pPrinterName, phPrinter, pDefault, pOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterConnection2A(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pszName, uint32_t dwLevel, void* pConnectionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterConnection2A(hWnd, pszName, dwLevel, pConnectionInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddPrinterConnection2W(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszName, uint32_t dwLevel, void* pConnectionInfo)
    {
        auto win32_impl_result = WIN32_IMPL_AddPrinterConnection2W(hWnd, pszName, dwLevel, pConnectionInfo);
        return win32_impl_result;
    }
    inline int32_t InstallPrinterDriverFromPackageA(int8_t* pszServer, int8_t* pszInfPath, int8_t* pszDriverName, int8_t* pszEnvironment, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_InstallPrinterDriverFromPackageA(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        return win32_impl_result;
    }
    inline int32_t InstallPrinterDriverFromPackageW(uint16_t* pszServer, uint16_t* pszInfPath, uint16_t* pszDriverName, uint16_t* pszEnvironment, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_InstallPrinterDriverFromPackageW(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        return win32_impl_result;
    }
    inline int32_t UploadPrinterDriverPackageA(int8_t* pszServer, int8_t* pszInfPath, int8_t* pszEnvironment, uint32_t dwFlags, Windows::Win32::WindowsAndMessaging::HWND hwnd, int8_t* pszDestInfPath, uint32_t* pcchDestInfPath)
    {
        auto win32_impl_result = WIN32_IMPL_UploadPrinterDriverPackageA(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        return win32_impl_result;
    }
    inline int32_t UploadPrinterDriverPackageW(uint16_t* pszServer, uint16_t* pszInfPath, uint16_t* pszEnvironment, uint32_t dwFlags, Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* pszDestInfPath, uint32_t* pcchDestInfPath)
    {
        auto win32_impl_result = WIN32_IMPL_UploadPrinterDriverPackageW(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        return win32_impl_result;
    }
    inline int32_t GetCorePrinterDriversA(int8_t* pszServer, int8_t* pszEnvironment, int8_t* pszzCoreDriverDependencies, uint32_t cCorePrinterDrivers, Windows::Win32::SystemServices::CORE_PRINTER_DRIVERA* pCorePrinterDrivers)
    {
        auto win32_impl_result = WIN32_IMPL_GetCorePrinterDriversA(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        return win32_impl_result;
    }
    inline int32_t GetCorePrinterDriversW(uint16_t* pszServer, uint16_t* pszEnvironment, uint16_t* pszzCoreDriverDependencies, uint32_t cCorePrinterDrivers, Windows::Win32::SystemServices::CORE_PRINTER_DRIVERW* pCorePrinterDrivers)
    {
        auto win32_impl_result = WIN32_IMPL_GetCorePrinterDriversW(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        return win32_impl_result;
    }
    inline int32_t CorePrinterDriverInstalledA(int8_t* pszServer, int8_t* pszEnvironment, ::win32::guid CoreDriverGUID, Windows::Win32::WindowsProgramming::FILETIME ftDriverDate, uint64_t dwlDriverVersion, int32_t* pbDriverInstalled)
    {
        auto win32_impl_result = WIN32_IMPL_CorePrinterDriverInstalledA(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        return win32_impl_result;
    }
    inline int32_t CorePrinterDriverInstalledW(uint16_t* pszServer, uint16_t* pszEnvironment, ::win32::guid CoreDriverGUID, Windows::Win32::WindowsProgramming::FILETIME ftDriverDate, uint64_t dwlDriverVersion, int32_t* pbDriverInstalled)
    {
        auto win32_impl_result = WIN32_IMPL_CorePrinterDriverInstalledW(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        return win32_impl_result;
    }
    inline int32_t GetPrinterDriverPackagePathA(int8_t* pszServer, int8_t* pszEnvironment, int8_t* pszLanguage, int8_t* pszPackageID, int8_t* pszDriverPackageCab, uint32_t cchDriverPackageCab, uint32_t* pcchRequiredSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverPackagePathA(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        return win32_impl_result;
    }
    inline int32_t GetPrinterDriverPackagePathW(uint16_t* pszServer, uint16_t* pszEnvironment, uint16_t* pszLanguage, uint16_t* pszPackageID, uint16_t* pszDriverPackageCab, uint32_t cchDriverPackageCab, uint32_t* pcchRequiredSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriverPackagePathW(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        return win32_impl_result;
    }
    inline int32_t DeletePrinterDriverPackageA(int8_t* pszServer, int8_t* pszInfPath, int8_t* pszEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverPackageA(pszServer, pszInfPath, pszEnvironment);
        return win32_impl_result;
    }
    inline int32_t DeletePrinterDriverPackageW(uint16_t* pszServer, uint16_t* pszInfPath, uint16_t* pszEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePrinterDriverPackageW(pszServer, pszInfPath, pszEnvironment);
        return win32_impl_result;
    }
    inline int32_t ReportJobProcessingProgress(Windows::Win32::SystemServices::HANDLE printerHandle, uint32_t jobId, Windows::Win32::SystemServices::EPrintXPSJobOperation jobOperation, Windows::Win32::SystemServices::EPrintXPSJobProgress jobProgress)
    {
        auto win32_impl_result = WIN32_IMPL_ReportJobProcessingProgress(printerHandle, jobId, jobOperation, jobProgress);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriver2A(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, int8_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriver2A(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrinterDriver2W(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::HANDLE hPrinter, uint16_t* pEnvironment, uint32_t Level, uint8_t* pDriverInfo, uint32_t cbBuf, uint32_t* pcbNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrinterDriver2W(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrintExecutionData(Windows::Win32::SystemServices::PRINT_EXECUTION_DATA* pData)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrintExecutionData(pData);
        return win32_impl_result;
    }
    inline uint32_t GetJobNamedPropertyValue(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint16_t* pszName, Windows::Win32::SystemServices::PrintPropertyValue* pValue)
    {
        auto win32_impl_result = WIN32_IMPL_GetJobNamedPropertyValue(hPrinter, JobId, pszName, pValue);
        return win32_impl_result;
    }
    inline void FreePrintPropertyValue(Windows::Win32::SystemServices::PrintPropertyValue* pValue)
    {
        WIN32_IMPL_FreePrintPropertyValue(pValue);
    }
    inline void FreePrintNamedPropertyArray(uint32_t cProperties, Windows::Win32::SystemServices::PrintNamedProperty** ppProperties)
    {
        WIN32_IMPL_FreePrintNamedPropertyArray(cProperties, ppProperties);
    }
    inline uint32_t SetJobNamedProperty(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, Windows::Win32::SystemServices::PrintNamedProperty* pProperty)
    {
        auto win32_impl_result = WIN32_IMPL_SetJobNamedProperty(hPrinter, JobId, pProperty);
        return win32_impl_result;
    }
    inline uint32_t DeleteJobNamedProperty(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint16_t* pszName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteJobNamedProperty(hPrinter, JobId, pszName);
        return win32_impl_result;
    }
    inline uint32_t EnumJobNamedProperties(Windows::Win32::SystemServices::HANDLE hPrinter, uint32_t JobId, uint32_t* pcProperties, Windows::Win32::SystemServices::PrintNamedProperty** ppProperties)
    {
        auto win32_impl_result = WIN32_IMPL_EnumJobNamedProperties(hPrinter, JobId, pcProperties, ppProperties);
        return win32_impl_result;
    }
    inline int32_t GetPrintOutputInfo(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszPrinter, Windows::Win32::SystemServices::HANDLE* phFile, uint16_t** ppszOutputFile)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrintOutputInfo(hWnd, pszPrinter, phFile, ppszOutputFile);
        return win32_impl_result;
    }
    inline int32_t CreateDispatcherQueueController(Windows::Win32::SystemServices::DispatcherQueueOptions options, Windows::System::DispatcherQueueController** dispatcherQueueController)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDispatcherQueueController(options, dispatcherQueueController);
        return win32_impl_result;
    }
    inline int32_t CreateVssExpressWriterInternal(Windows::Win32::SystemServices::IVssExpressWriter** ppWriter)
    {
        auto win32_impl_result = WIN32_IMPL_CreateVssExpressWriterInternal(ppWriter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EngQueryEMFInfo(Windows::Win32::SystemServices::HDEV__* hdev, Windows::Win32::SystemServices::EMFINFO* pEMFInfo)
    {
        auto win32_impl_result = WIN32_IMPL_EngQueryEMFInfo(hdev, pEMFInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryOptionalDelayLoadedAPI(intptr_t hParentModule, int8_t* lpDllName, int8_t* lpProcName, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_QueryOptionalDelayLoadedAPI(hParentModule, lpDllName, lpProcName, Reserved);
        return win32_impl_result;
    }
    inline int32_t EnclaveGetAttestationReport(uint8_t* EnclaveData, void* Report, uint32_t BufferSize, uint32_t* OutputSize)
    {
        auto win32_impl_result = WIN32_IMPL_EnclaveGetAttestationReport(EnclaveData, Report, BufferSize, OutputSize);
        return win32_impl_result;
    }
    inline int32_t EnclaveVerifyAttestationReport(uint32_t EnclaveType, void* Report, uint32_t ReportSize)
    {
        auto win32_impl_result = WIN32_IMPL_EnclaveVerifyAttestationReport(EnclaveType, Report, ReportSize);
        return win32_impl_result;
    }
    inline int32_t EnclaveSealData(void* DataToEncrypt, uint32_t DataToEncryptSize, Windows::Win32::SystemServices::ENCLAVE_SEALING_IDENTITY_POLICY IdentityPolicy, uint32_t RuntimePolicy, void* ProtectedBlob, uint32_t BufferSize, uint32_t* ProtectedBlobSize)
    {
        auto win32_impl_result = WIN32_IMPL_EnclaveSealData(DataToEncrypt, DataToEncryptSize, IdentityPolicy, RuntimePolicy, ProtectedBlob, BufferSize, ProtectedBlobSize);
        return win32_impl_result;
    }
    inline int32_t EnclaveUnsealData(void* ProtectedBlob, uint32_t ProtectedBlobSize, void* DecryptedData, uint32_t BufferSize, uint32_t* DecryptedDataSize, Windows::Win32::SystemServices::ENCLAVE_IDENTITY* SealingIdentity, uint32_t* UnsealingFlags)
    {
        auto win32_impl_result = WIN32_IMPL_EnclaveUnsealData(ProtectedBlob, ProtectedBlobSize, DecryptedData, BufferSize, DecryptedDataSize, SealingIdentity, UnsealingFlags);
        return win32_impl_result;
    }
    inline int32_t EnclaveGetEnclaveInformation(uint32_t InformationSize, Windows::Win32::SystemServices::ENCLAVE_INFORMATION* EnclaveInformation)
    {
        auto win32_impl_result = WIN32_IMPL_EnclaveGetEnclaveInformation(InformationSize, EnclaveInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS CallNtPowerInformation(Windows::Win32::SystemServices::POWER_INFORMATION_LEVEL InformationLevel, void* InputBuffer, uint32_t InputBufferLength, void* OutputBuffer, uint32_t OutputBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_CallNtPowerInformation(InformationLevel, InputBuffer, InputBufferLength, OutputBuffer, OutputBufferLength);
        return win32_impl_result;
    }
    inline uint8_t GetPwrCapabilities(Windows::Win32::SystemServices::SYSTEM_POWER_CAPABILITIES* lpspc)
    {
        auto win32_impl_result = WIN32_IMPL_GetPwrCapabilities(lpspc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::POWER_PLATFORM_ROLE PowerDeterminePlatformRoleEx(uint32_t Version)
    {
        auto win32_impl_result = WIN32_IMPL_PowerDeterminePlatformRoleEx(Version);
        return win32_impl_result;
    }
    inline uint32_t PowerRegisterSuspendResumeNotification(uint32_t Flags, Windows::Win32::SystemServices::HANDLE Recipient, void** RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerRegisterSuspendResumeNotification(Flags, Recipient, RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t PowerUnregisterSuspendResumeNotification(void* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerUnregisterSuspendResumeNotification(RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t PowerReadACValue(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* Type, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadACValue(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Type, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadDCValue(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* Type, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadDCValue(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Type, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerGetActiveScheme(Windows::Win32::WindowsProgramming::HKEY UserRootPowerKey, ::win32::guid** ActivePolicyGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerGetActiveScheme(UserRootPowerKey, ActivePolicyGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerSetActiveScheme(Windows::Win32::WindowsProgramming::HKEY UserRootPowerKey, ::win32::guid* SchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSetActiveScheme(UserRootPowerKey, SchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerSettingRegisterNotification(::win32::guid* SettingGuid, uint32_t Flags, Windows::Win32::SystemServices::HANDLE Recipient, void** RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSettingRegisterNotification(SettingGuid, Flags, Recipient, RegistrationHandle);
        return win32_impl_result;
    }
    inline uint32_t PowerSettingUnregisterNotification(void* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSettingUnregisterNotification(RegistrationHandle);
        return win32_impl_result;
    }
    inline int32_t PowerRegisterForEffectivePowerModeNotifications(uint32_t Version, Windows::Win32::SystemServices::EFFECTIVE_POWER_MODE_CALLBACK** Callback, void* Context, void** RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerRegisterForEffectivePowerModeNotifications(Version, Callback, Context, RegistrationHandle);
        return win32_impl_result;
    }
    inline int32_t PowerUnregisterFromEffectivePowerModeNotifications(void* RegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PowerUnregisterFromEffectivePowerModeNotifications(RegistrationHandle);
        return win32_impl_result;
    }
    inline uint8_t GetPwrDiskSpindownRange(uint32_t* puiMax, uint32_t* puiMin)
    {
        auto win32_impl_result = WIN32_IMPL_GetPwrDiskSpindownRange(puiMax, puiMin);
        return win32_impl_result;
    }
    inline uint8_t EnumPwrSchemes(Windows::Win32::SystemServices::PWRSCHEMESENUMPROC* lpfn, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumPwrSchemes(lpfn, lParam);
        return win32_impl_result;
    }
    inline uint8_t ReadGlobalPwrPolicy(Windows::Win32::SystemServices::GLOBAL_POWER_POLICY* pGlobalPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_ReadGlobalPwrPolicy(pGlobalPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t ReadPwrScheme(uint32_t uiID, Windows::Win32::SystemServices::POWER_POLICY* pPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_ReadPwrScheme(uiID, pPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t WritePwrScheme(uint32_t* puiID, uint16_t* lpszSchemeName, uint16_t* lpszDescription, Windows::Win32::SystemServices::POWER_POLICY* lpScheme)
    {
        auto win32_impl_result = WIN32_IMPL_WritePwrScheme(puiID, lpszSchemeName, lpszDescription, lpScheme);
        return win32_impl_result;
    }
    inline uint8_t WriteGlobalPwrPolicy(Windows::Win32::SystemServices::GLOBAL_POWER_POLICY* pGlobalPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_WriteGlobalPwrPolicy(pGlobalPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t DeletePwrScheme(uint32_t uiID)
    {
        auto win32_impl_result = WIN32_IMPL_DeletePwrScheme(uiID);
        return win32_impl_result;
    }
    inline uint8_t GetActivePwrScheme(uint32_t* puiID)
    {
        auto win32_impl_result = WIN32_IMPL_GetActivePwrScheme(puiID);
        return win32_impl_result;
    }
    inline uint8_t SetActivePwrScheme(uint32_t uiID, Windows::Win32::SystemServices::GLOBAL_POWER_POLICY* pGlobalPowerPolicy, Windows::Win32::SystemServices::POWER_POLICY* pPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_SetActivePwrScheme(uiID, pGlobalPowerPolicy, pPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t IsPwrSuspendAllowed()
    {
        auto win32_impl_result = WIN32_IMPL_IsPwrSuspendAllowed();
        return win32_impl_result;
    }
    inline uint8_t IsPwrHibernateAllowed()
    {
        auto win32_impl_result = WIN32_IMPL_IsPwrHibernateAllowed();
        return win32_impl_result;
    }
    inline uint8_t IsPwrShutdownAllowed()
    {
        auto win32_impl_result = WIN32_IMPL_IsPwrShutdownAllowed();
        return win32_impl_result;
    }
    inline uint8_t IsAdminOverrideActive(Windows::Win32::SystemServices::ADMINISTRATOR_POWER_POLICY* papp)
    {
        auto win32_impl_result = WIN32_IMPL_IsAdminOverrideActive(papp);
        return win32_impl_result;
    }
    inline uint8_t SetSuspendState(uint8_t bHibernate, uint8_t bForce, uint8_t bWakeupEventsDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_SetSuspendState(bHibernate, bForce, bWakeupEventsDisabled);
        return win32_impl_result;
    }
    inline uint8_t GetCurrentPowerPolicies(Windows::Win32::SystemServices::GLOBAL_POWER_POLICY* pGlobalPowerPolicy, Windows::Win32::SystemServices::POWER_POLICY* pPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentPowerPolicies(pGlobalPowerPolicy, pPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t CanUserWritePwrScheme()
    {
        auto win32_impl_result = WIN32_IMPL_CanUserWritePwrScheme();
        return win32_impl_result;
    }
    inline uint8_t ReadProcessorPwrScheme(uint32_t uiID, Windows::Win32::SystemServices::MACHINE_PROCESSOR_POWER_POLICY* pMachineProcessorPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_ReadProcessorPwrScheme(uiID, pMachineProcessorPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t WriteProcessorPwrScheme(uint32_t uiID, Windows::Win32::SystemServices::MACHINE_PROCESSOR_POWER_POLICY* pMachineProcessorPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_WriteProcessorPwrScheme(uiID, pMachineProcessorPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t ValidatePowerPolicies(Windows::Win32::SystemServices::GLOBAL_POWER_POLICY* pGlobalPowerPolicy, Windows::Win32::SystemServices::POWER_POLICY* pPowerPolicy)
    {
        auto win32_impl_result = WIN32_IMPL_ValidatePowerPolicies(pGlobalPowerPolicy, pPowerPolicy);
        return win32_impl_result;
    }
    inline uint8_t PowerIsSettingRangeDefined(::win32::guid* SubKeyGuid, ::win32::guid* SettingGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerIsSettingRangeDefined(SubKeyGuid, SettingGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerSettingAccessCheckEx(Windows::Win32::SystemServices::POWER_DATA_ACCESSOR AccessFlags, ::win32::guid* PowerGuid, uint32_t AccessType)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSettingAccessCheckEx(AccessFlags, PowerGuid, AccessType);
        return win32_impl_result;
    }
    inline uint32_t PowerSettingAccessCheck(Windows::Win32::SystemServices::POWER_DATA_ACCESSOR AccessFlags, ::win32::guid* PowerGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSettingAccessCheck(AccessFlags, PowerGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerReadFriendlyName(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadFriendlyName(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadDescription(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadDescription(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadPossibleValue(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* Type, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadPossibleValue(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Type, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadPossibleFriendlyName(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadPossibleFriendlyName(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadPossibleDescription(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadPossibleDescription(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadValueMin(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* ValueMinimum)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadValueMin(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueMinimum);
        return win32_impl_result;
    }
    inline uint32_t PowerReadValueMax(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* ValueMaximum)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadValueMax(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueMaximum);
        return win32_impl_result;
    }
    inline uint32_t PowerReadValueIncrement(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t* ValueIncrement)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadValueIncrement(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueIncrement);
        return win32_impl_result;
    }
    inline uint32_t PowerReadValueUnitsSpecifier(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadValueUnitsSpecifier(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadIconResourceSpecifier(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadIconResourceSpecifier(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerReadSettingAttributes(::win32::guid* SubGroupGuid, ::win32::guid* PowerSettingGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReadSettingAttributes(SubGroupGuid, PowerSettingGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteFriendlyName(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteFriendlyName(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteDescription(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteDescription(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWritePossibleValue(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t Type, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWritePossibleValue(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Type, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWritePossibleFriendlyName(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWritePossibleFriendlyName(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWritePossibleDescription(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t PossibleSettingIndex, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWritePossibleDescription(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, PossibleSettingIndex, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteValueMin(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t ValueMinimum)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteValueMin(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueMinimum);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteValueMax(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t ValueMaximum)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteValueMax(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueMaximum);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteValueIncrement(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t ValueIncrement)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteValueIncrement(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, ValueIncrement);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteValueUnitsSpecifier(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteValueUnitsSpecifier(RootPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteIconResourceSpecifier(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint8_t* Buffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteIconResourceSpecifier(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, PowerSettingGuid, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerWriteSettingAttributes(::win32::guid* SubGroupGuid, ::win32::guid* PowerSettingGuid, uint32_t Attributes)
    {
        auto win32_impl_result = WIN32_IMPL_PowerWriteSettingAttributes(SubGroupGuid, PowerSettingGuid, Attributes);
        return win32_impl_result;
    }
    inline uint32_t PowerDuplicateScheme(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SourceSchemeGuid, ::win32::guid** DestinationSchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerDuplicateScheme(RootPowerKey, SourceSchemeGuid, DestinationSchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerImportPowerScheme(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, uint16_t* ImportFileNamePath, ::win32::guid** DestinationSchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerImportPowerScheme(RootPowerKey, ImportFileNamePath, DestinationSchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerDeleteScheme(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerDeleteScheme(RootPowerKey, SchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerRemovePowerSetting(::win32::guid* PowerSettingSubKeyGuid, ::win32::guid* PowerSettingGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerRemovePowerSetting(PowerSettingSubKeyGuid, PowerSettingGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerCreateSetting(Windows::Win32::WindowsProgramming::HKEY RootSystemPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerCreateSetting(RootSystemPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerCreatePossibleSetting(Windows::Win32::WindowsProgramming::HKEY RootSystemPowerKey, ::win32::guid* SubGroupOfPowerSettingsGuid, ::win32::guid* PowerSettingGuid, uint32_t PossibleSettingIndex)
    {
        auto win32_impl_result = WIN32_IMPL_PowerCreatePossibleSetting(RootSystemPowerKey, SubGroupOfPowerSettingsGuid, PowerSettingGuid, PossibleSettingIndex);
        return win32_impl_result;
    }
    inline uint32_t PowerEnumerate(Windows::Win32::WindowsProgramming::HKEY RootPowerKey, ::win32::guid* SchemeGuid, ::win32::guid* SubGroupOfPowerSettingsGuid, Windows::Win32::SystemServices::POWER_DATA_ACCESSOR AccessFlags, uint32_t Index, uint8_t* Buffer, uint32_t* BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_PowerEnumerate(RootPowerKey, SchemeGuid, SubGroupOfPowerSettingsGuid, AccessFlags, Index, Buffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t PowerOpenUserPowerKey(Windows::Win32::WindowsProgramming::HKEY* phUserPowerKey, uint32_t Access, Windows::Win32::SystemServices::BOOL OpenExisting)
    {
        auto win32_impl_result = WIN32_IMPL_PowerOpenUserPowerKey(phUserPowerKey, Access, OpenExisting);
        return win32_impl_result;
    }
    inline uint32_t PowerOpenSystemPowerKey(Windows::Win32::WindowsProgramming::HKEY* phSystemPowerKey, uint32_t Access, Windows::Win32::SystemServices::BOOL OpenExisting)
    {
        auto win32_impl_result = WIN32_IMPL_PowerOpenSystemPowerKey(phSystemPowerKey, Access, OpenExisting);
        return win32_impl_result;
    }
    inline uint32_t PowerCanRestoreIndividualDefaultPowerScheme(::win32::guid* SchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerCanRestoreIndividualDefaultPowerScheme(SchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerRestoreIndividualDefaultPowerScheme(::win32::guid* SchemeGuid)
    {
        auto win32_impl_result = WIN32_IMPL_PowerRestoreIndividualDefaultPowerScheme(SchemeGuid);
        return win32_impl_result;
    }
    inline uint32_t PowerRestoreDefaultPowerSchemes()
    {
        auto win32_impl_result = WIN32_IMPL_PowerRestoreDefaultPowerSchemes();
        return win32_impl_result;
    }
    inline uint32_t PowerReplaceDefaultPowerSchemes()
    {
        auto win32_impl_result = WIN32_IMPL_PowerReplaceDefaultPowerSchemes();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::POWER_PLATFORM_ROLE PowerDeterminePlatformRole()
    {
        auto win32_impl_result = WIN32_IMPL_PowerDeterminePlatformRole();
        return win32_impl_result;
    }
    inline uint8_t DevicePowerEnumDevices(uint32_t QueryIndex, uint32_t QueryInterpretationFlags, uint32_t QueryFlags, uint8_t* pReturnBuffer, uint32_t* pBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_DevicePowerEnumDevices(QueryIndex, QueryInterpretationFlags, QueryFlags, pReturnBuffer, pBufferSize);
        return win32_impl_result;
    }
    inline uint32_t DevicePowerSetDeviceState(uint16_t* DeviceDescription, uint32_t SetFlags, void* SetData)
    {
        auto win32_impl_result = WIN32_IMPL_DevicePowerSetDeviceState(DeviceDescription, SetFlags, SetData);
        return win32_impl_result;
    }
    inline uint8_t DevicePowerOpen(uint32_t DebugMask)
    {
        auto win32_impl_result = WIN32_IMPL_DevicePowerOpen(DebugMask);
        return win32_impl_result;
    }
    inline uint8_t DevicePowerClose()
    {
        auto win32_impl_result = WIN32_IMPL_DevicePowerClose();
        return win32_impl_result;
    }
    inline uint32_t PowerReportThermalEvent(Windows::Win32::SystemServices::THERMAL_EVENT* Event)
    {
        auto win32_impl_result = WIN32_IMPL_PowerReportThermalEvent(Event);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ExitWindowsEx(uint32_t uFlags, uint32_t dwReason)
    {
        auto win32_impl_result = WIN32_IMPL_ExitWindowsEx(uFlags, dwReason);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsWow64Message()
    {
        auto win32_impl_result = WIN32_IMPL_IsWow64Message();
        return win32_impl_result;
    }
    inline void* RegisterDeviceNotificationA(Windows::Win32::SystemServices::HANDLE hRecipient, void* NotificationFilter, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDeviceNotificationA(hRecipient, NotificationFilter, Flags);
        return win32_impl_result;
    }
    inline void* RegisterDeviceNotificationW(Windows::Win32::SystemServices::HANDLE hRecipient, void* NotificationFilter, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterDeviceNotificationW(hRecipient, NotificationFilter, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterDeviceNotification(void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterDeviceNotification(Handle);
        return win32_impl_result;
    }
    inline void* RegisterPowerSettingNotification(Windows::Win32::SystemServices::HANDLE hRecipient, ::win32::guid* PowerSettingGuid, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterPowerSettingNotification(hRecipient, PowerSettingGuid, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterPowerSettingNotification(void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterPowerSettingNotification(Handle);
        return win32_impl_result;
    }
    inline void* RegisterSuspendResumeNotification(Windows::Win32::SystemServices::HANDLE hRecipient, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterSuspendResumeNotification(hRecipient, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterSuspendResumeNotification(void* Handle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterSuspendResumeNotification(Handle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AttachThreadInput(uint32_t idAttach, uint32_t idAttachTo, Windows::Win32::SystemServices::BOOL fAttach)
    {
        auto win32_impl_result = WIN32_IMPL_AttachThreadInput(idAttach, idAttachTo, fAttach);
        return win32_impl_result;
    }
    inline uint32_t WaitForInputIdle(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_WaitForInputIdle(hProcess, dwMilliseconds);
        return win32_impl_result;
    }
    inline uint32_t MsgWaitForMultipleObjects(uint32_t nCount, intptr_t* pHandles, Windows::Win32::SystemServices::BOOL fWaitAll, uint32_t dwMilliseconds, uint32_t dwWakeMask)
    {
        auto win32_impl_result = WIN32_IMPL_MsgWaitForMultipleObjects(nCount, pHandles, fWaitAll, dwMilliseconds, dwWakeMask);
        return win32_impl_result;
    }
    inline uint32_t MsgWaitForMultipleObjectsEx(uint32_t nCount, intptr_t* pHandles, uint32_t dwMilliseconds, uint32_t dwWakeMask, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_MsgWaitForMultipleObjectsEx(nCount, pHandles, dwMilliseconds, dwWakeMask, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t GetGuiResources(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t uiFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetGuiResources(hProcess, uiFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LockWorkStation()
    {
        auto win32_impl_result = WIN32_IMPL_LockWorkStation();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UserHandleGrantAccess(Windows::Win32::SystemServices::HANDLE hUserHandle, Windows::Win32::SystemServices::HANDLE hJob, Windows::Win32::SystemServices::BOOL bGrant)
    {
        auto win32_impl_result = WIN32_IMPL_UserHandleGrantAccess(hUserHandle, hJob, bGrant);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ShutdownBlockReasonCreate(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pwszReason)
    {
        auto win32_impl_result = WIN32_IMPL_ShutdownBlockReasonCreate(hWnd, pwszReason);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ShutdownBlockReasonQuery(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pwszBuff, uint32_t* pcchBuff)
    {
        auto win32_impl_result = WIN32_IMPL_ShutdownBlockReasonQuery(hWnd, pwszBuff, pcchBuff);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ShutdownBlockReasonDestroy(Windows::Win32::WindowsAndMessaging::HWND hWnd)
    {
        auto win32_impl_result = WIN32_IMPL_ShutdownBlockReasonDestroy(hWnd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetAutoRotationState(Windows::Win32::SystemServices::AR_STATE* pState)
    {
        auto win32_impl_result = WIN32_IMPL_GetAutoRotationState(pState);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDisplayAutoRotationPreferences(Windows::Win32::SystemServices::ORIENTATION_PREFERENCE* pOrientation)
    {
        auto win32_impl_result = WIN32_IMPL_GetDisplayAutoRotationPreferences(pOrientation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDisplayAutoRotationPreferences(Windows::Win32::SystemServices::ORIENTATION_PREFERENCE orientation)
    {
        auto win32_impl_result = WIN32_IMPL_SetDisplayAutoRotationPreferences(orientation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsImmersiveProcess(Windows::Win32::SystemServices::HANDLE hProcess)
    {
        auto win32_impl_result = WIN32_IMPL_IsImmersiveProcess(hProcess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessRestrictionExemption(Windows::Win32::SystemServices::BOOL fEnableExemption)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessRestrictionExemption(fEnableExemption);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeviceIoControl(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwIoControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped)
    {
        auto win32_impl_result = WIN32_IMPL_DeviceIoControl(hDevice, dwIoControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned, lpOverlapped);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOverlappedResult(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped, uint32_t* lpNumberOfBytesTransferred, Windows::Win32::SystemServices::BOOL bWait)
    {
        auto win32_impl_result = WIN32_IMPL_GetOverlappedResult(hFile, lpOverlapped, lpNumberOfBytesTransferred, bWait);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOverlappedResultEx(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped, uint32_t* lpNumberOfBytesTransferred, uint32_t dwMilliseconds, Windows::Win32::SystemServices::BOOL bAlertable)
    {
        auto win32_impl_result = WIN32_IMPL_GetOverlappedResultEx(hFile, lpOverlapped, lpNumberOfBytesTransferred, dwMilliseconds, bAlertable);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsWow64Process(Windows::Win32::SystemServices::HANDLE hProcess, int32_t* Wow64Process)
    {
        auto win32_impl_result = WIN32_IMPL_IsWow64Process(hProcess, Wow64Process);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsWow64Process2(Windows::Win32::SystemServices::HANDLE hProcess, uint16_t* pProcessMachine, uint16_t* pNativeMachine)
    {
        auto win32_impl_result = WIN32_IMPL_IsWow64Process2(hProcess, pProcessMachine, pNativeMachine);
        return win32_impl_result;
    }
    inline int8_t* GetCommandLineA()
    {
        auto win32_impl_result = WIN32_IMPL_GetCommandLineA();
        return win32_impl_result;
    }
    inline uint16_t* GetCommandLineW()
    {
        auto win32_impl_result = WIN32_IMPL_GetCommandLineW();
        return win32_impl_result;
    }
    inline int8_t* GetEnvironmentStrings()
    {
        auto win32_impl_result = WIN32_IMPL_GetEnvironmentStrings();
        return win32_impl_result;
    }
    inline uint16_t* GetEnvironmentStringsW()
    {
        auto win32_impl_result = WIN32_IMPL_GetEnvironmentStringsW();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeEnvironmentStringsA(int8_t* penv)
    {
        auto win32_impl_result = WIN32_IMPL_FreeEnvironmentStringsA(penv);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FreeEnvironmentStringsW(uint16_t* penv)
    {
        auto win32_impl_result = WIN32_IMPL_FreeEnvironmentStringsW(penv);
        return win32_impl_result;
    }
    inline uint32_t GetEnvironmentVariableA(int8_t* lpName, int8_t* lpBuffer, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnvironmentVariableA(lpName, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetEnvironmentVariableW(uint16_t* lpName, uint16_t* lpBuffer, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetEnvironmentVariableW(lpName, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetEnvironmentVariableA(int8_t* lpName, int8_t* lpValue)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnvironmentVariableA(lpName, lpValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetEnvironmentVariableW(uint16_t* lpName, uint16_t* lpValue)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnvironmentVariableW(lpName, lpValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL NeedCurrentDirectoryForExePathA(int8_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_NeedCurrentDirectoryForExePathA(ExeName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL NeedCurrentDirectoryForExePathW(uint16_t* ExeName)
    {
        auto win32_impl_result = WIN32_IMPL_NeedCurrentDirectoryForExePathW(ExeName);
        return win32_impl_result;
    }
    inline uint32_t QueueUserAPC(Windows::Win32::SystemServices::PAPCFUNC* pfnAPC, Windows::Win32::SystemServices::HANDLE hThread, size_t dwData)
    {
        auto win32_impl_result = WIN32_IMPL_QueueUserAPC(pfnAPC, hThread, dwData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessTimes(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::WindowsProgramming::FILETIME* lpCreationTime, Windows::Win32::WindowsProgramming::FILETIME* lpExitTime, Windows::Win32::WindowsProgramming::FILETIME* lpKernelTime, Windows::Win32::WindowsProgramming::FILETIME* lpUserTime)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessTimes(hProcess, lpCreationTime, lpExitTime, lpKernelTime, lpUserTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetCurrentProcess()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentProcess();
        return win32_impl_result;
    }
    inline uint32_t GetCurrentProcessId()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentProcessId();
        return win32_impl_result;
    }
    inline void ExitProcess(uint32_t uExitCode)
    {
        WIN32_IMPL_ExitProcess(uExitCode);
    }
    inline Windows::Win32::SystemServices::BOOL TerminateProcess(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t uExitCode)
    {
        auto win32_impl_result = WIN32_IMPL_TerminateProcess(hProcess, uExitCode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetExitCodeProcess(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* lpExitCode)
    {
        auto win32_impl_result = WIN32_IMPL_GetExitCodeProcess(hProcess, lpExitCode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SwitchToThread()
    {
        auto win32_impl_result = WIN32_IMPL_SwitchToThread();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateThread(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, size_t dwStackSize, Windows::Win32::SystemServices::LPTHREAD_START_ROUTINE* lpStartAddress, void* lpParameter, uint32_t dwCreationFlags, uint32_t* lpThreadId)
    {
        auto win32_impl_result = WIN32_IMPL_CreateThread(lpThreadAttributes, dwStackSize, lpStartAddress, lpParameter, dwCreationFlags, lpThreadId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateRemoteThread(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, size_t dwStackSize, Windows::Win32::SystemServices::LPTHREAD_START_ROUTINE* lpStartAddress, void* lpParameter, uint32_t dwCreationFlags, uint32_t* lpThreadId)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRemoteThread(hProcess, lpThreadAttributes, dwStackSize, lpStartAddress, lpParameter, dwCreationFlags, lpThreadId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetCurrentThread()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentThread();
        return win32_impl_result;
    }
    inline uint32_t GetCurrentThreadId()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentThreadId();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenThread(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint32_t dwThreadId)
    {
        auto win32_impl_result = WIN32_IMPL_OpenThread(dwDesiredAccess, bInheritHandle, dwThreadId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadPriority(Windows::Win32::SystemServices::HANDLE hThread, int32_t nPriority)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadPriority(hThread, nPriority);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadPriorityBoost(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::SystemServices::BOOL bDisablePriorityBoost)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadPriorityBoost(hThread, bDisablePriorityBoost);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadPriorityBoost(Windows::Win32::SystemServices::HANDLE hThread, int32_t* pDisablePriorityBoost)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadPriorityBoost(hThread, pDisablePriorityBoost);
        return win32_impl_result;
    }
    inline int32_t GetThreadPriority(Windows::Win32::SystemServices::HANDLE hThread)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadPriority(hThread);
        return win32_impl_result;
    }
    inline void ExitThread(uint32_t dwExitCode)
    {
        WIN32_IMPL_ExitThread(dwExitCode);
    }
    inline Windows::Win32::SystemServices::BOOL TerminateThread(Windows::Win32::SystemServices::HANDLE hThread, uint32_t dwExitCode)
    {
        auto win32_impl_result = WIN32_IMPL_TerminateThread(hThread, dwExitCode);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetExitCodeThread(Windows::Win32::SystemServices::HANDLE hThread, uint32_t* lpExitCode)
    {
        auto win32_impl_result = WIN32_IMPL_GetExitCodeThread(hThread, lpExitCode);
        return win32_impl_result;
    }
    inline uint32_t SuspendThread(Windows::Win32::SystemServices::HANDLE hThread)
    {
        auto win32_impl_result = WIN32_IMPL_SuspendThread(hThread);
        return win32_impl_result;
    }
    inline uint32_t ResumeThread(Windows::Win32::SystemServices::HANDLE hThread)
    {
        auto win32_impl_result = WIN32_IMPL_ResumeThread(hThread);
        return win32_impl_result;
    }
    inline uint32_t TlsAlloc()
    {
        auto win32_impl_result = WIN32_IMPL_TlsAlloc();
        return win32_impl_result;
    }
    inline void* TlsGetValue(uint32_t dwTlsIndex)
    {
        auto win32_impl_result = WIN32_IMPL_TlsGetValue(dwTlsIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TlsSetValue(uint32_t dwTlsIndex, void* lpTlsValue)
    {
        auto win32_impl_result = WIN32_IMPL_TlsSetValue(dwTlsIndex, lpTlsValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TlsFree(uint32_t dwTlsIndex)
    {
        auto win32_impl_result = WIN32_IMPL_TlsFree(dwTlsIndex);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessA(int8_t* lpApplicationName, int8_t* lpCommandLine, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpProcessAttributes, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, Windows::Win32::SystemServices::BOOL bInheritHandles, Windows::Win32::WindowsProgramming::PROCESS_CREATION_FLAGS dwCreationFlags, void* lpEnvironment, int8_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOA* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessA(lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessW(uint16_t* lpApplicationName, uint16_t* lpCommandLine, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpProcessAttributes, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, Windows::Win32::SystemServices::BOOL bInheritHandles, Windows::Win32::WindowsProgramming::PROCESS_CREATION_FLAGS dwCreationFlags, void* lpEnvironment, uint16_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOW* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessW(lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessShutdownParameters(uint32_t dwLevel, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessShutdownParameters(dwLevel, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t GetProcessVersion(uint32_t ProcessId)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessVersion(ProcessId);
        return win32_impl_result;
    }
    inline void GetStartupInfoW(Windows::Win32::SystemServices::STARTUPINFOW* lpStartupInfo)
    {
        WIN32_IMPL_GetStartupInfoW(lpStartupInfo);
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessAsUserW(Windows::Win32::SystemServices::HANDLE hToken, uint16_t* lpApplicationName, uint16_t* lpCommandLine, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpProcessAttributes, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, Windows::Win32::SystemServices::BOOL bInheritHandles, uint32_t dwCreationFlags, void* lpEnvironment, uint16_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOW* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessAsUserW(hToken, lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetPriorityClass(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t dwPriorityClass)
    {
        auto win32_impl_result = WIN32_IMPL_SetPriorityClass(hProcess, dwPriorityClass);
        return win32_impl_result;
    }
    inline uint32_t GetPriorityClass(Windows::Win32::SystemServices::HANDLE hProcess)
    {
        auto win32_impl_result = WIN32_IMPL_GetPriorityClass(hProcess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadStackGuarantee(uint32_t* StackSizeInBytes)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadStackGuarantee(StackSizeInBytes);
        return win32_impl_result;
    }
    inline uint32_t GetProcessId(Windows::Win32::SystemServices::HANDLE Process)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessId(Process);
        return win32_impl_result;
    }
    inline uint32_t GetThreadId(Windows::Win32::SystemServices::HANDLE Thread)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadId(Thread);
        return win32_impl_result;
    }
    inline void FlushProcessWriteBuffers()
    {
        WIN32_IMPL_FlushProcessWriteBuffers();
    }
    inline uint32_t GetProcessIdOfThread(Windows::Win32::SystemServices::HANDLE Thread)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessIdOfThread(Thread);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeProcThreadAttributeList(intptr_t lpAttributeList, uint32_t dwAttributeCount, uint32_t dwFlags, size_t* lpSize)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeProcThreadAttributeList(lpAttributeList, dwAttributeCount, dwFlags, lpSize);
        return win32_impl_result;
    }
    inline void DeleteProcThreadAttributeList(intptr_t lpAttributeList)
    {
        WIN32_IMPL_DeleteProcThreadAttributeList(lpAttributeList);
    }
    inline Windows::Win32::SystemServices::BOOL UpdateProcThreadAttribute(intptr_t lpAttributeList, uint32_t dwFlags, size_t Attribute, void* lpValue, size_t cbSize, void* lpPreviousValue, size_t* lpReturnSize)
    {
        auto win32_impl_result = WIN32_IMPL_UpdateProcThreadAttribute(lpAttributeList, dwFlags, Attribute, lpValue, cbSize, lpPreviousValue, lpReturnSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessAffinityUpdateMode(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessAffinityUpdateMode(hProcess, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryProcessAffinityUpdateMode(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* lpdwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_QueryProcessAffinityUpdateMode(hProcess, lpdwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateRemoteThreadEx(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, size_t dwStackSize, Windows::Win32::SystemServices::LPTHREAD_START_ROUTINE* lpStartAddress, void* lpParameter, uint32_t dwCreationFlags, intptr_t lpAttributeList, uint32_t* lpThreadId)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRemoteThreadEx(hProcess, lpThreadAttributes, dwStackSize, lpStartAddress, lpParameter, dwCreationFlags, lpAttributeList, lpThreadId);
        return win32_impl_result;
    }
    inline void GetCurrentThreadStackLimits(uint32_t* LowLimit, uint32_t* HighLimit)
    {
        WIN32_IMPL_GetCurrentThreadStackLimits(LowLimit, HighLimit);
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessMitigationPolicy(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::SystemServices::PROCESS_MITIGATION_POLICY MitigationPolicy, void* lpBuffer, size_t dwLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessMitigationPolicy(hProcess, MitigationPolicy, lpBuffer, dwLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessMitigationPolicy(Windows::Win32::SystemServices::PROCESS_MITIGATION_POLICY MitigationPolicy, void* lpBuffer, size_t dwLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessMitigationPolicy(MitigationPolicy, lpBuffer, dwLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadTimes(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::WindowsProgramming::FILETIME* lpCreationTime, Windows::Win32::WindowsProgramming::FILETIME* lpExitTime, Windows::Win32::WindowsProgramming::FILETIME* lpKernelTime, Windows::Win32::WindowsProgramming::FILETIME* lpUserTime)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadTimes(hThread, lpCreationTime, lpExitTime, lpKernelTime, lpUserTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenProcess(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, uint32_t dwProcessId)
    {
        auto win32_impl_result = WIN32_IMPL_OpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessHandleCount(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* pdwHandleCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessHandleCount(hProcess, pdwHandleCount);
        return win32_impl_result;
    }
    inline uint32_t GetCurrentProcessorNumber()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentProcessorNumber();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadIdealProcessorEx(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::SystemServices::PROCESSOR_NUMBER* lpIdealProcessor, Windows::Win32::SystemServices::PROCESSOR_NUMBER* lpPreviousIdealProcessor)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadIdealProcessorEx(hThread, lpIdealProcessor, lpPreviousIdealProcessor);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadIdealProcessorEx(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::SystemServices::PROCESSOR_NUMBER* lpIdealProcessor)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadIdealProcessorEx(hThread, lpIdealProcessor);
        return win32_impl_result;
    }
    inline void GetCurrentProcessorNumberEx(Windows::Win32::SystemServices::PROCESSOR_NUMBER* ProcNumber)
    {
        WIN32_IMPL_GetCurrentProcessorNumberEx(ProcNumber);
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessPriorityBoost(Windows::Win32::SystemServices::HANDLE hProcess, int32_t* pDisablePriorityBoost)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessPriorityBoost(hProcess, pDisablePriorityBoost);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessPriorityBoost(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::SystemServices::BOOL bDisablePriorityBoost)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessPriorityBoost(hProcess, bDisablePriorityBoost);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadIOPendingFlag(Windows::Win32::SystemServices::HANDLE hThread, int32_t* lpIOIsPending)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadIOPendingFlag(hThread, lpIOIsPending);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadInformation(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::WindowsProgramming::THREAD_INFORMATION_CLASS ThreadInformationClass, void* ThreadInformation, uint32_t ThreadInformationSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadInformation(hThread, ThreadInformationClass, ThreadInformation, ThreadInformationSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadInformation(Windows::Win32::SystemServices::HANDLE hThread, Windows::Win32::WindowsProgramming::THREAD_INFORMATION_CLASS ThreadInformationClass, void* ThreadInformation, uint32_t ThreadInformationSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadInformation(hThread, ThreadInformationClass, ThreadInformation, ThreadInformationSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsProcessCritical(Windows::Win32::SystemServices::HANDLE hProcess, int32_t* Critical)
    {
        auto win32_impl_result = WIN32_IMPL_IsProcessCritical(hProcess, Critical);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProtectedPolicy(::win32::guid* PolicyGuid, size_t PolicyValue, uint32_t* OldPolicyValue)
    {
        auto win32_impl_result = WIN32_IMPL_SetProtectedPolicy(PolicyGuid, PolicyValue, OldPolicyValue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryProtectedPolicy(::win32::guid* PolicyGuid, uint32_t* PolicyValue)
    {
        auto win32_impl_result = WIN32_IMPL_QueryProtectedPolicy(PolicyGuid, PolicyValue);
        return win32_impl_result;
    }
    inline uint32_t SetThreadIdealProcessor(Windows::Win32::SystemServices::HANDLE hThread, uint32_t dwIdealProcessor)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadIdealProcessor(hThread, dwIdealProcessor);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessInformation(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::Security::PROCESS_INFORMATION_CLASS ProcessInformationClass, void* ProcessInformation, uint32_t ProcessInformationSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessInformation(hProcess, ProcessInformationClass, ProcessInformation, ProcessInformationSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessInformation(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::Security::PROCESS_INFORMATION_CLASS ProcessInformationClass, void* ProcessInformation, uint32_t ProcessInformationSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessInformation(hProcess, ProcessInformationClass, ProcessInformation, ProcessInformationSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessAsUserA(Windows::Win32::SystemServices::HANDLE hToken, int8_t* lpApplicationName, int8_t* lpCommandLine, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpProcessAttributes, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpThreadAttributes, Windows::Win32::SystemServices::BOOL bInheritHandles, uint32_t dwCreationFlags, void* lpEnvironment, int8_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOA* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessAsUserA(hToken, lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessShutdownParameters(uint32_t* lpdwLevel, uint32_t* lpdwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessShutdownParameters(lpdwLevel, lpdwFlags);
        return win32_impl_result;
    }
    inline int32_t SetThreadDescription(Windows::Win32::SystemServices::HANDLE hThread, uint16_t* lpThreadDescription)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadDescription(hThread, lpThreadDescription);
        return win32_impl_result;
    }
    inline int32_t GetThreadDescription(Windows::Win32::SystemServices::HANDLE hThread, uint16_t** ppszThreadDescription)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadDescription(hThread, ppszThreadDescription);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GlobalMemoryStatusEx(Windows::Win32::SystemServices::MEMORYSTATUSEX* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalMemoryStatusEx(lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetLogicalProcessorInformation(Windows::Win32::SystemServices::SYSTEM_LOGICAL_PROCESSOR_INFORMATION* Buffer, uint32_t* ReturnedLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetLogicalProcessorInformation(Buffer, ReturnedLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetLogicalProcessorInformationEx(Windows::Win32::SystemServices::LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType, Windows::Win32::SystemServices::SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX* Buffer, uint32_t* ReturnedLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetLogicalProcessorInformationEx(RelationshipType, Buffer, ReturnedLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPhysicallyInstalledSystemMemory(uint64_t* TotalMemoryInKilobytes)
    {
        auto win32_impl_result = WIN32_IMPL_GetPhysicallyInstalledSystemMemory(TotalMemoryInKilobytes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessorSystemCycleTime(uint16_t Group, Windows::Win32::SystemServices::SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION* Buffer, uint32_t* ReturnedLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessorSystemCycleTime(Group, Buffer, ReturnedLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryThreadCycleTime(Windows::Win32::SystemServices::HANDLE ThreadHandle, uint64_t* CycleTime)
    {
        auto win32_impl_result = WIN32_IMPL_QueryThreadCycleTime(ThreadHandle, CycleTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryProcessCycleTime(Windows::Win32::SystemServices::HANDLE ProcessHandle, uint64_t* CycleTime)
    {
        auto win32_impl_result = WIN32_IMPL_QueryProcessCycleTime(ProcessHandle, CycleTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryIdleProcessorCycleTime(uint32_t* BufferLength, uint64_t* ProcessorIdleCycleTime)
    {
        auto win32_impl_result = WIN32_IMPL_QueryIdleProcessorCycleTime(BufferLength, ProcessorIdleCycleTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryIdleProcessorCycleTimeEx(uint16_t Group, uint32_t* BufferLength, uint64_t* ProcessorIdleCycleTime)
    {
        auto win32_impl_result = WIN32_IMPL_QueryIdleProcessorCycleTimeEx(Group, BufferLength, ProcessorIdleCycleTime);
        return win32_impl_result;
    }
    inline intptr_t GlobalAlloc(uint32_t uFlags, size_t dwBytes)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalAlloc(uFlags, dwBytes);
        return win32_impl_result;
    }
    inline intptr_t GlobalReAlloc(intptr_t hMem, size_t dwBytes, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalReAlloc(hMem, dwBytes, uFlags);
        return win32_impl_result;
    }
    inline size_t GlobalSize(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalSize(hMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GlobalUnlock(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalUnlock(hMem);
        return win32_impl_result;
    }
    inline void* GlobalLock(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalLock(hMem);
        return win32_impl_result;
    }
    inline uint32_t GlobalFlags(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalFlags(hMem);
        return win32_impl_result;
    }
    inline intptr_t GlobalHandle(void* pMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalHandle(pMem);
        return win32_impl_result;
    }
    inline intptr_t GlobalFree(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalFree(hMem);
        return win32_impl_result;
    }
    inline void GlobalMemoryStatus(Windows::Win32::SystemServices::MEMORYSTATUS* lpBuffer)
    {
        WIN32_IMPL_GlobalMemoryStatus(lpBuffer);
    }
    inline intptr_t LocalAlloc(uint32_t uFlags, size_t uBytes)
    {
        auto win32_impl_result = WIN32_IMPL_LocalAlloc(uFlags, uBytes);
        return win32_impl_result;
    }
    inline intptr_t LocalReAlloc(intptr_t hMem, size_t uBytes, uint32_t uFlags)
    {
        auto win32_impl_result = WIN32_IMPL_LocalReAlloc(hMem, uBytes, uFlags);
        return win32_impl_result;
    }
    inline void* LocalLock(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalLock(hMem);
        return win32_impl_result;
    }
    inline intptr_t LocalHandle(void* pMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalHandle(pMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LocalUnlock(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalUnlock(hMem);
        return win32_impl_result;
    }
    inline size_t LocalSize(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalSize(hMem);
        return win32_impl_result;
    }
    inline uint32_t LocalFlags(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalFlags(hMem);
        return win32_impl_result;
    }
    inline intptr_t LocalFree(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_LocalFree(hMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessAffinityMask(Windows::Win32::SystemServices::HANDLE hProcess, size_t* lpProcessAffinityMask, size_t* lpSystemAffinityMask)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessAffinityMask(hProcess, lpProcessAffinityMask, lpSystemAffinityMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessAffinityMask(Windows::Win32::SystemServices::HANDLE hProcess, size_t dwProcessAffinityMask)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessAffinityMask(hProcess, dwProcessAffinityMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessIoCounters(Windows::Win32::SystemServices::HANDLE hProcess, Windows::Win32::SystemServices::IO_COUNTERS* lpIoCounters)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessIoCounters(hProcess, lpIoCounters);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessWorkingSetSize(Windows::Win32::SystemServices::HANDLE hProcess, size_t* lpMinimumWorkingSetSize, size_t* lpMaximumWorkingSetSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessWorkingSetSize(hProcess, lpMinimumWorkingSetSize, lpMaximumWorkingSetSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessWorkingSetSize(Windows::Win32::SystemServices::HANDLE hProcess, size_t dwMinimumWorkingSetSize, size_t dwMaximumWorkingSetSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessWorkingSetSize(hProcess, dwMinimumWorkingSetSize, dwMaximumWorkingSetSize);
        return win32_impl_result;
    }
    inline void SwitchToFiber(void* lpFiber)
    {
        WIN32_IMPL_SwitchToFiber(lpFiber);
    }
    inline void DeleteFiber(void* lpFiber)
    {
        WIN32_IMPL_DeleteFiber(lpFiber);
    }
    inline Windows::Win32::SystemServices::BOOL ConvertFiberToThread()
    {
        auto win32_impl_result = WIN32_IMPL_ConvertFiberToThread();
        return win32_impl_result;
    }
    inline void* CreateFiberEx(size_t dwStackCommitSize, size_t dwStackReserveSize, uint32_t dwFlags, Windows::Win32::WindowsProgramming::LPFIBER_START_ROUTINE* lpStartAddress, void* lpParameter)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFiberEx(dwStackCommitSize, dwStackReserveSize, dwFlags, lpStartAddress, lpParameter);
        return win32_impl_result;
    }
    inline void* ConvertThreadToFiberEx(void* lpParameter, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ConvertThreadToFiberEx(lpParameter, dwFlags);
        return win32_impl_result;
    }
    inline void* CreateFiber(size_t dwStackSize, Windows::Win32::WindowsProgramming::LPFIBER_START_ROUTINE* lpStartAddress, void* lpParameter)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFiber(dwStackSize, lpStartAddress, lpParameter);
        return win32_impl_result;
    }
    inline void* ConvertThreadToFiber(void* lpParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ConvertThreadToFiber(lpParameter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateUmsCompletionList(void** UmsCompletionList)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUmsCompletionList(UmsCompletionList);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DequeueUmsCompletionListItems(void* UmsCompletionList, uint32_t WaitTimeOut, void** UmsThreadList)
    {
        auto win32_impl_result = WIN32_IMPL_DequeueUmsCompletionListItems(UmsCompletionList, WaitTimeOut, UmsThreadList);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUmsCompletionListEvent(void* UmsCompletionList, intptr_t* UmsCompletionEvent)
    {
        auto win32_impl_result = WIN32_IMPL_GetUmsCompletionListEvent(UmsCompletionList, UmsCompletionEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ExecuteUmsThread(void* UmsThread)
    {
        auto win32_impl_result = WIN32_IMPL_ExecuteUmsThread(UmsThread);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UmsThreadYield(void* SchedulerParam)
    {
        auto win32_impl_result = WIN32_IMPL_UmsThreadYield(SchedulerParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteUmsCompletionList(void* UmsCompletionList)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteUmsCompletionList(UmsCompletionList);
        return win32_impl_result;
    }
    inline void* GetCurrentUmsThread()
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentUmsThread();
        return win32_impl_result;
    }
    inline void* GetNextUmsListItem(void* UmsContext)
    {
        auto win32_impl_result = WIN32_IMPL_GetNextUmsListItem(UmsContext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryUmsThreadInformation(void* UmsThread, Windows::Win32::SystemServices::RTL_UMS_THREAD_INFO_CLASS UmsThreadInfoClass, void* UmsThreadInformation, uint32_t UmsThreadInformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_QueryUmsThreadInformation(UmsThread, UmsThreadInfoClass, UmsThreadInformation, UmsThreadInformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetUmsThreadInformation(void* UmsThread, Windows::Win32::SystemServices::RTL_UMS_THREAD_INFO_CLASS UmsThreadInfoClass, void* UmsThreadInformation, uint32_t UmsThreadInformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetUmsThreadInformation(UmsThread, UmsThreadInfoClass, UmsThreadInformation, UmsThreadInformationLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteUmsThreadContext(void* UmsThread)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteUmsThreadContext(UmsThread);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateUmsThreadContext(void** lpUmsThread)
    {
        auto win32_impl_result = WIN32_IMPL_CreateUmsThreadContext(lpUmsThread);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnterUmsSchedulingMode(Windows::Win32::SystemServices::UMS_SCHEDULER_STARTUP_INFO* SchedulerStartupInfo)
    {
        auto win32_impl_result = WIN32_IMPL_EnterUmsSchedulingMode(SchedulerStartupInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUmsSystemThreadInformation(Windows::Win32::SystemServices::HANDLE ThreadHandle, Windows::Win32::SystemServices::UMS_SYSTEM_THREAD_INFORMATION* SystemThreadInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetUmsSystemThreadInformation(ThreadHandle, SystemThreadInfo);
        return win32_impl_result;
    }
    inline size_t SetThreadAffinityMask(Windows::Win32::SystemServices::HANDLE hThread, size_t dwThreadAffinityMask)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadAffinityMask(hThread, dwThreadAffinityMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessDEPPolicy(uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessDEPPolicy(dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessDEPPolicy(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* lpFlags, int32_t* lpPermanent)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessDEPPolicy(hProcess, lpFlags, lpPermanent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RequestWakeupLatency(Windows::Win32::SystemServices::LATENCY_TIME latency)
    {
        auto win32_impl_result = WIN32_IMPL_RequestWakeupLatency(latency);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsSystemResumeAutomatic()
    {
        auto win32_impl_result = WIN32_IMPL_IsSystemResumeAutomatic();
        return win32_impl_result;
    }
    inline uint32_t SetThreadExecutionState(uint32_t esFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadExecutionState(esFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE PowerCreateRequest(Windows::Win32::SystemServices::REASON_CONTEXT* Context)
    {
        auto win32_impl_result = WIN32_IMPL_PowerCreateRequest(Context);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PowerSetRequest(Windows::Win32::SystemServices::HANDLE PowerRequest, Windows::Win32::SystemServices::POWER_REQUEST_TYPE RequestType)
    {
        auto win32_impl_result = WIN32_IMPL_PowerSetRequest(PowerRequest, RequestType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PowerClearRequest(Windows::Win32::SystemServices::HANDLE PowerRequest, Windows::Win32::SystemServices::POWER_REQUEST_TYPE RequestType)
    {
        auto win32_impl_result = WIN32_IMPL_PowerClearRequest(PowerRequest, RequestType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PulseEvent(Windows::Win32::SystemServices::HANDLE hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_PulseEvent(hEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDevicePowerState(Windows::Win32::SystemServices::HANDLE hDevice, int32_t* pfOn)
    {
        auto win32_impl_result = WIN32_IMPL_GetDevicePowerState(hDevice, pfOn);
        return win32_impl_result;
    }
    inline uint32_t LoadModule(int8_t* lpModuleName, void* lpParameterBlock)
    {
        auto win32_impl_result = WIN32_IMPL_LoadModule(lpModuleName, lpParameterBlock);
        return win32_impl_result;
    }
    inline uint32_t WinExec(int8_t* lpCmdLine, uint32_t uCmdShow)
    {
        auto win32_impl_result = WIN32_IMPL_WinExec(lpCmdLine, uCmdShow);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClearCommBreak(Windows::Win32::SystemServices::HANDLE hFile)
    {
        auto win32_impl_result = WIN32_IMPL_ClearCommBreak(hFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClearCommError(Windows::Win32::SystemServices::HANDLE hFile, uint32_t* lpErrors, Windows::Win32::SystemServices::COMSTAT* lpStat)
    {
        auto win32_impl_result = WIN32_IMPL_ClearCommError(hFile, lpErrors, lpStat);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetupComm(Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwInQueue, uint32_t dwOutQueue)
    {
        auto win32_impl_result = WIN32_IMPL_SetupComm(hFile, dwInQueue, dwOutQueue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EscapeCommFunction(Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwFunc)
    {
        auto win32_impl_result = WIN32_IMPL_EscapeCommFunction(hFile, dwFunc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommConfig(Windows::Win32::SystemServices::HANDLE hCommDev, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t* lpdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommConfig(hCommDev, lpCC, lpdwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommMask(Windows::Win32::SystemServices::HANDLE hFile, uint32_t* lpEvtMask)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommMask(hFile, lpEvtMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommProperties(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::COMMPROP* lpCommProp)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommProperties(hFile, lpCommProp);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommModemStatus(Windows::Win32::SystemServices::HANDLE hFile, uint32_t* lpModemStat)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommModemStatus(hFile, lpModemStat);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommState(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::DCB* lpDCB)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommState(hFile, lpDCB);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCommTimeouts(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::COMMTIMEOUTS* lpCommTimeouts)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommTimeouts(hFile, lpCommTimeouts);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PurgeComm(Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_PurgeComm(hFile, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCommBreak(Windows::Win32::SystemServices::HANDLE hFile)
    {
        auto win32_impl_result = WIN32_IMPL_SetCommBreak(hFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCommConfig(Windows::Win32::SystemServices::HANDLE hCommDev, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetCommConfig(hCommDev, lpCC, dwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCommMask(Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwEvtMask)
    {
        auto win32_impl_result = WIN32_IMPL_SetCommMask(hFile, dwEvtMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCommState(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::DCB* lpDCB)
    {
        auto win32_impl_result = WIN32_IMPL_SetCommState(hFile, lpDCB);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCommTimeouts(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::COMMTIMEOUTS* lpCommTimeouts)
    {
        auto win32_impl_result = WIN32_IMPL_SetCommTimeouts(hFile, lpCommTimeouts);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TransmitCommChar(Windows::Win32::SystemServices::HANDLE hFile, int8_t cChar)
    {
        auto win32_impl_result = WIN32_IMPL_TransmitCommChar(hFile, cChar);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WaitCommEvent(Windows::Win32::SystemServices::HANDLE hFile, uint32_t* lpEvtMask, Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped)
    {
        auto win32_impl_result = WIN32_IMPL_WaitCommEvent(hFile, lpEvtMask, lpOverlapped);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenCommPort(uint32_t uPortNumber, uint32_t dwDesiredAccess, uint32_t dwFlagsAndAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_OpenCommPort(uPortNumber, dwDesiredAccess, dwFlagsAndAttributes);
        return win32_impl_result;
    }
    inline uint32_t GetCommPorts(uint32_t* lpPortNumbers, uint32_t uPortNumbersCount, uint32_t* puPortNumbersFound)
    {
        auto win32_impl_result = WIN32_IMPL_GetCommPorts(lpPortNumbers, uPortNumbersCount, puPortNumbersFound);
        return win32_impl_result;
    }
    inline uint32_t SetTapePosition(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwPositionMethod, uint32_t dwPartition, uint32_t dwOffsetLow, uint32_t dwOffsetHigh, Windows::Win32::SystemServices::BOOL bImmediate)
    {
        auto win32_impl_result = WIN32_IMPL_SetTapePosition(hDevice, dwPositionMethod, dwPartition, dwOffsetLow, dwOffsetHigh, bImmediate);
        return win32_impl_result;
    }
    inline uint32_t GetTapePosition(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwPositionType, uint32_t* lpdwPartition, uint32_t* lpdwOffsetLow, uint32_t* lpdwOffsetHigh)
    {
        auto win32_impl_result = WIN32_IMPL_GetTapePosition(hDevice, dwPositionType, lpdwPartition, lpdwOffsetLow, lpdwOffsetHigh);
        return win32_impl_result;
    }
    inline uint32_t PrepareTape(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwOperation, Windows::Win32::SystemServices::BOOL bImmediate)
    {
        auto win32_impl_result = WIN32_IMPL_PrepareTape(hDevice, dwOperation, bImmediate);
        return win32_impl_result;
    }
    inline uint32_t EraseTape(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwEraseType, Windows::Win32::SystemServices::BOOL bImmediate)
    {
        auto win32_impl_result = WIN32_IMPL_EraseTape(hDevice, dwEraseType, bImmediate);
        return win32_impl_result;
    }
    inline uint32_t CreateTapePartition(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwPartitionMethod, uint32_t dwCount, uint32_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_CreateTapePartition(hDevice, dwPartitionMethod, dwCount, dwSize);
        return win32_impl_result;
    }
    inline uint32_t WriteTapemark(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwTapemarkType, uint32_t dwTapemarkCount, Windows::Win32::SystemServices::BOOL bImmediate)
    {
        auto win32_impl_result = WIN32_IMPL_WriteTapemark(hDevice, dwTapemarkType, dwTapemarkCount, bImmediate);
        return win32_impl_result;
    }
    inline uint32_t GetTapeStatus(Windows::Win32::SystemServices::HANDLE hDevice)
    {
        auto win32_impl_result = WIN32_IMPL_GetTapeStatus(hDevice);
        return win32_impl_result;
    }
    inline uint32_t GetTapeParameters(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwOperation, uint32_t* lpdwSize, void* lpTapeInformation)
    {
        auto win32_impl_result = WIN32_IMPL_GetTapeParameters(hDevice, dwOperation, lpdwSize, lpTapeInformation);
        return win32_impl_result;
    }
    inline uint32_t SetTapeParameters(Windows::Win32::SystemServices::HANDLE hDevice, uint32_t dwOperation, void* lpTapeInformation)
    {
        auto win32_impl_result = WIN32_IMPL_SetTapeParameters(hDevice, dwOperation, lpTapeInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::DEP_SYSTEM_POLICY_TYPE GetSystemDEPPolicy()
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemDEPPolicy();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMailslotA(int8_t* lpName, uint32_t nMaxMessageSize, uint32_t lReadTimeout, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMailslotA(lpName, nMaxMessageSize, lReadTimeout, lpSecurityAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateMailslotW(uint16_t* lpName, uint32_t nMaxMessageSize, uint32_t lReadTimeout, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_CreateMailslotW(lpName, nMaxMessageSize, lReadTimeout, lpSecurityAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetMailslotInfo(Windows::Win32::SystemServices::HANDLE hMailslot, uint32_t* lpMaxMessageSize, uint32_t* lpNextSize, uint32_t* lpMessageCount, uint32_t* lpReadTimeout)
    {
        auto win32_impl_result = WIN32_IMPL_GetMailslotInfo(hMailslot, lpMaxMessageSize, lpNextSize, lpMessageCount, lpReadTimeout);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetMailslotInfo(Windows::Win32::SystemServices::HANDLE hMailslot, uint32_t lReadTimeout)
    {
        auto win32_impl_result = WIN32_IMPL_SetMailslotInfo(hMailslot, lReadTimeout);
        return win32_impl_result;
    }
    inline uint32_t SignalObjectAndWait(Windows::Win32::SystemServices::HANDLE hObjectToSignal, Windows::Win32::SystemServices::HANDLE hObjectToWaitOn, uint32_t dwMilliseconds, Windows::Win32::SystemServices::BOOL bAlertable)
    {
        auto win32_impl_result = WIN32_IMPL_SignalObjectAndWait(hObjectToSignal, hObjectToWaitOn, dwMilliseconds, bAlertable);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BackupRead(Windows::Win32::SystemServices::HANDLE hFile, uint8_t* lpBuffer, uint32_t nNumberOfBytesToRead, uint32_t* lpNumberOfBytesRead, Windows::Win32::SystemServices::BOOL bAbort, Windows::Win32::SystemServices::BOOL bProcessSecurity, void** lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_BackupRead(hFile, lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, bAbort, bProcessSecurity, lpContext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BackupSeek(Windows::Win32::SystemServices::HANDLE hFile, uint32_t dwLowBytesToSeek, uint32_t dwHighBytesToSeek, uint32_t* lpdwLowByteSeeked, uint32_t* lpdwHighByteSeeked, void** lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_BackupSeek(hFile, dwLowBytesToSeek, dwHighBytesToSeek, lpdwLowByteSeeked, lpdwHighByteSeeked, lpContext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BackupWrite(Windows::Win32::SystemServices::HANDLE hFile, uint8_t* lpBuffer, uint32_t nNumberOfBytesToWrite, uint32_t* lpNumberOfBytesWritten, Windows::Win32::SystemServices::BOOL bAbort, Windows::Win32::SystemServices::BOOL bProcessSecurity, void** lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_BackupWrite(hFile, lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, bAbort, bProcessSecurity, lpContext);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateSemaphoreA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSemaphoreAttributes, int32_t lInitialCount, int32_t lMaximumCount, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSemaphoreA(lpSemaphoreAttributes, lInitialCount, lMaximumCount, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateSemaphoreExA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSemaphoreAttributes, int32_t lInitialCount, int32_t lMaximumCount, int8_t* lpName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateSemaphoreExA(lpSemaphoreAttributes, lInitialCount, lMaximumCount, lpName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMappingA(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpFileMappingAttributes, uint32_t flProtect, uint32_t dwMaximumSizeHigh, uint32_t dwMaximumSizeLow, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMappingA(hFile, lpFileMappingAttributes, flProtect, dwMaximumSizeHigh, dwMaximumSizeLow, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateFileMappingNumaA(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpFileMappingAttributes, uint32_t flProtect, uint32_t dwMaximumSizeHigh, uint32_t dwMaximumSizeLow, int8_t* lpName, uint32_t nndPreferred)
    {
        auto win32_impl_result = WIN32_IMPL_CreateFileMappingNumaA(hFile, lpFileMappingAttributes, flProtect, dwMaximumSizeHigh, dwMaximumSizeLow, lpName, nndPreferred);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenFileMappingA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenFileMappingA(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline intptr_t LoadPackagedLibrary(uint16_t* lpwLibFileName, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_LoadPackagedLibrary(lpwLibFileName, Reserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryFullProcessImageNameA(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t dwFlags, int8_t* lpExeName, uint32_t* lpdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_QueryFullProcessImageNameA(hProcess, dwFlags, lpExeName, lpdwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryFullProcessImageNameW(Windows::Win32::SystemServices::HANDLE hProcess, uint32_t dwFlags, uint16_t* lpExeName, uint32_t* lpdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_QueryFullProcessImageNameW(hProcess, dwFlags, lpExeName, lpdwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDllDirectoryA(int8_t* lpPathName)
    {
        auto win32_impl_result = WIN32_IMPL_SetDllDirectoryA(lpPathName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDllDirectoryW(uint16_t* lpPathName)
    {
        auto win32_impl_result = WIN32_IMPL_SetDllDirectoryW(lpPathName);
        return win32_impl_result;
    }
    inline uint32_t GetDllDirectoryA(uint32_t nBufferLength, int8_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetDllDirectoryA(nBufferLength, lpBuffer);
        return win32_impl_result;
    }
    inline uint32_t GetDllDirectoryW(uint32_t nBufferLength, uint16_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetDllDirectoryW(nBufferLength, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeHandleStateA(Windows::Win32::SystemServices::HANDLE hNamedPipe, uint32_t* lpState, uint32_t* lpCurInstances, uint32_t* lpMaxCollectionCount, uint32_t* lpCollectDataTimeout, int8_t* lpUserName, uint32_t nMaxUserNameSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeHandleStateA(hNamedPipe, lpState, lpCurInstances, lpMaxCollectionCount, lpCollectDataTimeout, lpUserName, nMaxUserNameSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CallNamedPipeA(int8_t* lpNamedPipeName, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesRead, uint32_t nTimeOut)
    {
        auto win32_impl_result = WIN32_IMPL_CallNamedPipeA(lpNamedPipeName, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesRead, nTimeOut);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeClientComputerNameA(Windows::Win32::SystemServices::HANDLE Pipe, int8_t* ClientComputerName, uint32_t ClientComputerNameLength)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeClientComputerNameA(Pipe, ClientComputerName, ClientComputerNameLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeClientProcessId(Windows::Win32::SystemServices::HANDLE Pipe, uint32_t* ClientProcessId)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeClientProcessId(Pipe, ClientProcessId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeClientSessionId(Windows::Win32::SystemServices::HANDLE Pipe, uint32_t* ClientSessionId)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeClientSessionId(Pipe, ClientSessionId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeServerProcessId(Windows::Win32::SystemServices::HANDLE Pipe, uint32_t* ServerProcessId)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeServerProcessId(Pipe, ServerProcessId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNamedPipeServerSessionId(Windows::Win32::SystemServices::HANDLE Pipe, uint32_t* ServerSessionId)
    {
        auto win32_impl_result = WIN32_IMPL_GetNamedPipeServerSessionId(Pipe, ServerSessionId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClearEventLogA(Windows::Win32::SystemServices::HANDLE hEventLog, int8_t* lpBackupFileName)
    {
        auto win32_impl_result = WIN32_IMPL_ClearEventLogA(hEventLog, lpBackupFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClearEventLogW(Windows::Win32::SystemServices::HANDLE hEventLog, uint16_t* lpBackupFileName)
    {
        auto win32_impl_result = WIN32_IMPL_ClearEventLogW(hEventLog, lpBackupFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BackupEventLogA(Windows::Win32::SystemServices::HANDLE hEventLog, int8_t* lpBackupFileName)
    {
        auto win32_impl_result = WIN32_IMPL_BackupEventLogA(hEventLog, lpBackupFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BackupEventLogW(Windows::Win32::SystemServices::HANDLE hEventLog, uint16_t* lpBackupFileName)
    {
        auto win32_impl_result = WIN32_IMPL_BackupEventLogW(hEventLog, lpBackupFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseEventLog(Windows::Win32::SystemServices::HANDLE hEventLog)
    {
        auto win32_impl_result = WIN32_IMPL_CloseEventLog(hEventLog);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeregisterEventSource(Windows::Win32::SystemServices::HANDLE hEventLog)
    {
        auto win32_impl_result = WIN32_IMPL_DeregisterEventSource(hEventLog);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL NotifyChangeEventLog(Windows::Win32::SystemServices::HANDLE hEventLog, Windows::Win32::SystemServices::HANDLE hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_NotifyChangeEventLog(hEventLog, hEvent);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumberOfEventLogRecords(Windows::Win32::SystemServices::HANDLE hEventLog, uint32_t* NumberOfRecords)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumberOfEventLogRecords(hEventLog, NumberOfRecords);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOldestEventLogRecord(Windows::Win32::SystemServices::HANDLE hEventLog, uint32_t* OldestRecord)
    {
        auto win32_impl_result = WIN32_IMPL_GetOldestEventLogRecord(hEventLog, OldestRecord);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::EventLogHandle OpenEventLogA(int8_t* lpUNCServerName, int8_t* lpSourceName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenEventLogA(lpUNCServerName, lpSourceName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::EventLogHandle OpenEventLogW(uint16_t* lpUNCServerName, uint16_t* lpSourceName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenEventLogW(lpUNCServerName, lpSourceName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::EventSourceHandle RegisterEventSourceA(int8_t* lpUNCServerName, int8_t* lpSourceName)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterEventSourceA(lpUNCServerName, lpSourceName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE RegisterEventSourceW(uint16_t* lpUNCServerName, uint16_t* lpSourceName)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterEventSourceW(lpUNCServerName, lpSourceName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::EventLogHandle OpenBackupEventLogA(int8_t* lpUNCServerName, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenBackupEventLogA(lpUNCServerName, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::EventLogHandle OpenBackupEventLogW(uint16_t* lpUNCServerName, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenBackupEventLogW(lpUNCServerName, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadEventLogA(Windows::Win32::SystemServices::HANDLE hEventLog, uint32_t dwReadFlags, uint32_t dwRecordOffset, void* lpBuffer, uint32_t nNumberOfBytesToRead, uint32_t* pnBytesRead, uint32_t* pnMinNumberOfBytesNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_ReadEventLogA(hEventLog, dwReadFlags, dwRecordOffset, lpBuffer, nNumberOfBytesToRead, pnBytesRead, pnMinNumberOfBytesNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReadEventLogW(Windows::Win32::SystemServices::HANDLE hEventLog, uint32_t dwReadFlags, uint32_t dwRecordOffset, void* lpBuffer, uint32_t nNumberOfBytesToRead, uint32_t* pnBytesRead, uint32_t* pnMinNumberOfBytesNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_ReadEventLogW(hEventLog, dwReadFlags, dwRecordOffset, lpBuffer, nNumberOfBytesToRead, pnBytesRead, pnMinNumberOfBytesNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReportEventA(Windows::Win32::SystemServices::HANDLE hEventLog, uint16_t wType, uint16_t wCategory, uint32_t dwEventID, void* lpUserSid, uint16_t wNumStrings, uint32_t dwDataSize, int8_t** lpStrings, void* lpRawData)
    {
        auto win32_impl_result = WIN32_IMPL_ReportEventA(hEventLog, wType, wCategory, dwEventID, lpUserSid, wNumStrings, dwDataSize, lpStrings, lpRawData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReportEventW(Windows::Win32::SystemServices::HANDLE hEventLog, uint16_t wType, uint16_t wCategory, uint32_t dwEventID, void* lpUserSid, uint16_t wNumStrings, uint32_t dwDataSize, uint16_t** lpStrings, void* lpRawData)
    {
        auto win32_impl_result = WIN32_IMPL_ReportEventW(hEventLog, wType, wCategory, dwEventID, lpUserSid, wNumStrings, dwDataSize, lpStrings, lpRawData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetEventLogInformation(Windows::Win32::SystemServices::HANDLE hEventLog, uint32_t dwInfoLevel, void* lpBuffer, uint32_t cbBufSize, uint32_t* pcbBytesNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetEventLogInformation(hEventLog, dwInfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        return win32_impl_result;
    }
    inline void* MapViewOfFileExNuma(Windows::Win32::SystemServices::HANDLE hFileMappingObject, uint32_t dwDesiredAccess, uint32_t dwFileOffsetHigh, uint32_t dwFileOffsetLow, size_t dwNumberOfBytesToMap, void* lpBaseAddress, uint32_t nndPreferred)
    {
        auto win32_impl_result = WIN32_IMPL_MapViewOfFileExNuma(hFileMappingObject, dwDesiredAccess, dwFileOffsetHigh, dwFileOffsetLow, dwNumberOfBytesToMap, lpBaseAddress, nndPreferred);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadReadPtr(void* lp, size_t ucb)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadReadPtr(lp, ucb);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadWritePtr(void* lp, size_t ucb)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadWritePtr(lp, ucb);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadCodePtr(Windows::Win32::SystemServices::FARPROC* lpfn)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadCodePtr(lpfn);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadStringPtrA(int8_t* lpsz, size_t ucchMax)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadStringPtrA(lpsz, ucchMax);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadStringPtrW(uint16_t* lpsz, size_t ucchMax)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadStringPtrW(lpsz, ucchMax);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BuildCommDCBA(int8_t* lpDef, Windows::Win32::SystemServices::DCB* lpDCB)
    {
        auto win32_impl_result = WIN32_IMPL_BuildCommDCBA(lpDef, lpDCB);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BuildCommDCBW(uint16_t* lpDef, Windows::Win32::SystemServices::DCB* lpDCB)
    {
        auto win32_impl_result = WIN32_IMPL_BuildCommDCBW(lpDef, lpDCB);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BuildCommDCBAndTimeoutsA(int8_t* lpDef, Windows::Win32::SystemServices::DCB* lpDCB, Windows::Win32::SystemServices::COMMTIMEOUTS* lpCommTimeouts)
    {
        auto win32_impl_result = WIN32_IMPL_BuildCommDCBAndTimeoutsA(lpDef, lpDCB, lpCommTimeouts);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BuildCommDCBAndTimeoutsW(uint16_t* lpDef, Windows::Win32::SystemServices::DCB* lpDCB, Windows::Win32::SystemServices::COMMTIMEOUTS* lpCommTimeouts)
    {
        auto win32_impl_result = WIN32_IMPL_BuildCommDCBAndTimeoutsW(lpDef, lpDCB, lpCommTimeouts);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CommConfigDialogA(int8_t* lpszName, Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::COMMCONFIG* lpCC)
    {
        auto win32_impl_result = WIN32_IMPL_CommConfigDialogA(lpszName, hWnd, lpCC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CommConfigDialogW(uint16_t* lpszName, Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::SystemServices::COMMCONFIG* lpCC)
    {
        auto win32_impl_result = WIN32_IMPL_CommConfigDialogW(lpszName, hWnd, lpCC);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDefaultCommConfigA(int8_t* lpszName, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t* lpdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetDefaultCommConfigA(lpszName, lpCC, lpdwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetDefaultCommConfigW(uint16_t* lpszName, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t* lpdwSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetDefaultCommConfigW(lpszName, lpCC, lpdwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDefaultCommConfigA(int8_t* lpszName, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetDefaultCommConfigA(lpszName, lpCC, dwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDefaultCommConfigW(uint16_t* lpszName, Windows::Win32::SystemServices::COMMCONFIG* lpCC, uint32_t dwSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetDefaultCommConfigW(lpszName, lpCC, dwSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessWithLogonW(uint16_t* lpUsername, uint16_t* lpDomain, uint16_t* lpPassword, uint32_t dwLogonFlags, uint16_t* lpApplicationName, uint16_t* lpCommandLine, uint32_t dwCreationFlags, void* lpEnvironment, uint16_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOW* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessWithLogonW(lpUsername, lpDomain, lpPassword, dwLogonFlags, lpApplicationName, lpCommandLine, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateProcessWithTokenW(Windows::Win32::SystemServices::HANDLE hToken, uint32_t dwLogonFlags, uint16_t* lpApplicationName, uint16_t* lpCommandLine, uint32_t dwCreationFlags, void* lpEnvironment, uint16_t* lpCurrentDirectory, Windows::Win32::SystemServices::STARTUPINFOW* lpStartupInfo, Windows::Win32::SystemServices::PROCESS_INFORMATION* lpProcessInformation)
    {
        auto win32_impl_result = WIN32_IMPL_CreateProcessWithTokenW(hToken, dwLogonFlags, lpApplicationName, lpCommandLine, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RegisterWaitForSingleObject(intptr_t* phNewWaitObject, Windows::Win32::SystemServices::HANDLE hObject, Windows::Win32::SystemServices::WAITORTIMERCALLBACK* Callback, void* Context, uint32_t dwMilliseconds, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterWaitForSingleObject(phNewWaitObject, hObject, Callback, Context, dwMilliseconds, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL UnregisterWait(Windows::Win32::SystemServices::HANDLE WaitHandle)
    {
        auto win32_impl_result = WIN32_IMPL_UnregisterWait(WaitHandle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL BindIoCompletionCallback(Windows::Win32::SystemServices::HANDLE FileHandle, Windows::Win32::FileSystem::LPOVERLAPPED_COMPLETION_ROUTINE* Function, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_BindIoCompletionCallback(FileHandle, Function, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DeleteTimerQueue(Windows::Win32::SystemServices::HANDLE TimerQueue)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteTimerQueue(TimerQueue);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BoundaryDescriptorHandle CreateBoundaryDescriptorA(int8_t* Name, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateBoundaryDescriptorA(Name, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddIntegrityLabelToBoundaryDescriptor(Windows::Win32::SystemServices::HANDLE* BoundaryDescriptor, void* IntegrityLabel)
    {
        auto win32_impl_result = WIN32_IMPL_AddIntegrityLabelToBoundaryDescriptor(BoundaryDescriptor, IntegrityLabel);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetSystemPowerState(Windows::Win32::SystemServices::BOOL fSuspend, Windows::Win32::SystemServices::BOOL fForce)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemPowerState(fSuspend, fForce);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemPowerStatus(Windows::Win32::SystemServices::SYSTEM_POWER_STATUS* lpSystemPowerStatus)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemPowerStatus(lpSystemPowerStatus);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL MapUserPhysicalPagesScatter(void** VirtualAddresses, size_t NumberOfPages, uint32_t* PageArray)
    {
        auto win32_impl_result = WIN32_IMPL_MapUserPhysicalPagesScatter(VirtualAddresses, NumberOfPages, PageArray);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateJobObjectA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpJobAttributes, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateJobObjectA(lpJobAttributes, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenJobObjectA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenJobObjectA(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline uint16_t GetActiveProcessorGroupCount()
    {
        auto win32_impl_result = WIN32_IMPL_GetActiveProcessorGroupCount();
        return win32_impl_result;
    }
    inline uint16_t GetMaximumProcessorGroupCount()
    {
        auto win32_impl_result = WIN32_IMPL_GetMaximumProcessorGroupCount();
        return win32_impl_result;
    }
    inline uint32_t GetActiveProcessorCount(uint16_t GroupNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetActiveProcessorCount(GroupNumber);
        return win32_impl_result;
    }
    inline uint32_t GetMaximumProcessorCount(uint16_t GroupNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetMaximumProcessorCount(GroupNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaProcessorNode(uint8_t Processor, uint8_t* NodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaProcessorNode(Processor, NodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaNodeNumberFromHandle(Windows::Win32::SystemServices::HANDLE hFile, uint16_t* NodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaNodeNumberFromHandle(hFile, NodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaProcessorNodeEx(Windows::Win32::SystemServices::PROCESSOR_NUMBER* Processor, uint16_t* NodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaProcessorNodeEx(Processor, NodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaNodeProcessorMask(uint8_t Node, uint64_t* ProcessorMask)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaNodeProcessorMask(Node, ProcessorMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaAvailableMemoryNode(uint8_t Node, uint64_t* AvailableBytes)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaAvailableMemoryNode(Node, AvailableBytes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaAvailableMemoryNodeEx(uint16_t Node, uint64_t* AvailableBytes)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaAvailableMemoryNodeEx(Node, AvailableBytes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetNumaProximityNode(uint32_t ProximityId, uint8_t* NodeNumber)
    {
        auto win32_impl_result = WIN32_IMPL_GetNumaProximityNode(ProximityId, NodeNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AddSecureMemoryCacheCallback(Windows::Win32::SystemServices::PSECURE_MEMORY_CACHE_CALLBACK* pfnCallBack)
    {
        auto win32_impl_result = WIN32_IMPL_AddSecureMemoryCacheCallback(pfnCallBack);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RemoveSecureMemoryCacheCallback(Windows::Win32::SystemServices::PSECURE_MEMORY_CACHE_CALLBACK* pfnCallBack)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveSecureMemoryCacheCallback(pfnCallBack);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitiateSystemShutdownA(int8_t* lpMachineName, int8_t* lpMessage, uint32_t dwTimeout, Windows::Win32::SystemServices::BOOL bForceAppsClosed, Windows::Win32::SystemServices::BOOL bRebootAfterShutdown)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateSystemShutdownA(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitiateSystemShutdownW(uint16_t* lpMachineName, uint16_t* lpMessage, uint32_t dwTimeout, Windows::Win32::SystemServices::BOOL bForceAppsClosed, Windows::Win32::SystemServices::BOOL bRebootAfterShutdown)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateSystemShutdownW(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AbortSystemShutdownA(int8_t* lpMachineName)
    {
        auto win32_impl_result = WIN32_IMPL_AbortSystemShutdownA(lpMachineName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL AbortSystemShutdownW(uint16_t* lpMachineName)
    {
        auto win32_impl_result = WIN32_IMPL_AbortSystemShutdownW(lpMachineName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitiateSystemShutdownExA(int8_t* lpMachineName, int8_t* lpMessage, uint32_t dwTimeout, Windows::Win32::SystemServices::BOOL bForceAppsClosed, Windows::Win32::SystemServices::BOOL bRebootAfterShutdown, uint32_t dwReason)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateSystemShutdownExA(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitiateSystemShutdownExW(uint16_t* lpMachineName, uint16_t* lpMessage, uint32_t dwTimeout, Windows::Win32::SystemServices::BOOL bForceAppsClosed, Windows::Win32::SystemServices::BOOL bRebootAfterShutdown, uint32_t dwReason)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateSystemShutdownExW(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        return win32_impl_result;
    }
    inline uint32_t InitiateShutdownA(int8_t* lpMachineName, int8_t* lpMessage, uint32_t dwGracePeriod, uint32_t dwShutdownFlags, uint32_t dwReason)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateShutdownA(lpMachineName, lpMessage, dwGracePeriod, dwShutdownFlags, dwReason);
        return win32_impl_result;
    }
    inline uint32_t InitiateShutdownW(uint16_t* lpMachineName, uint16_t* lpMessage, uint32_t dwGracePeriod, uint32_t dwShutdownFlags, uint32_t dwReason)
    {
        auto win32_impl_result = WIN32_IMPL_InitiateShutdownW(lpMachineName, lpMessage, dwGracePeriod, dwShutdownFlags, dwReason);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQueryInformationProcess(Windows::Win32::SystemServices::HANDLE ProcessHandle, Windows::Win32::WindowsProgramming::PROCESSINFOCLASS ProcessInformationClass, void* ProcessInformation, uint32_t ProcessInformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtQueryInformationProcess(ProcessHandle, ProcessInformationClass, ProcessInformation, ProcessInformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQueryInformationThread(Windows::Win32::SystemServices::HANDLE ThreadHandle, Windows::Win32::WindowsProgramming::THREADINFOCLASS ThreadInformationClass, void* ThreadInformation, uint32_t ThreadInformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtQueryInformationThread(ThreadHandle, ThreadInformationClass, ThreadInformation, ThreadInformationLength, ReturnLength);
        return win32_impl_result;
    }

    inline constexpr int32_t TRUE = 1;
    inline constexpr int32_t FALSE = 0;
    inline constexpr uint16_t RT_CURSOR = 0x1;
    inline constexpr uint16_t RT_BITMAP = 0x2;
    inline constexpr uint16_t RT_ICON = 0x3;
    inline constexpr uint16_t RT_MENU = 0x4;
    inline constexpr uint16_t RT_DIALOG = 0x5;
    inline constexpr uint16_t RT_STRING = 0x6;
    inline constexpr uint16_t RT_FONTDIR = 0x7;
    inline constexpr uint16_t RT_FONT = 0x8;
    inline constexpr uint16_t RT_ACCELERATOR = 0x9;
    inline constexpr uint16_t RT_RCDATA = 0xa;
    inline constexpr uint16_t RT_MESSAGETABLE = 0xb;
    inline constexpr int32_t DIFFERENCE = 11;
    inline constexpr uint16_t RT_GROUP_CURSOR = 0xc;
    inline constexpr uint16_t RT_GROUP_ICON = 0xe;
    inline constexpr uint16_t RT_VERSION = 0x10;
    inline constexpr uint16_t RT_DLGINCLUDE = 0x11;
    inline constexpr uint16_t RT_PLUGPLAY = 0x13;
    inline constexpr uint16_t RT_VXD = 0x14;
    inline constexpr uint16_t RT_ANICURSOR = 0x15;
    inline constexpr uint16_t RT_ANIICON = 0x16;
    inline constexpr uint16_t RT_HTML = 0x17;
    inline constexpr uint16_t RT_MANIFEST = 0x18;
    inline constexpr uint16_t CREATEPROCESS_MANIFEST_RESOURCE_ID = 0x1;
    inline constexpr uint16_t ISOLATIONAWARE_MANIFEST_RESOURCE_ID = 0x2;
    inline constexpr uint16_t ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID = 0x3;
    inline constexpr uint16_t ISOLATIONPOLICY_MANIFEST_RESOURCE_ID = 0x4;
    inline constexpr uint16_t ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID = 0x5;
    inline constexpr uint16_t MINIMUM_RESERVED_MANIFEST_RESOURCE_ID = 0x1;
    inline constexpr uint16_t MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID = 0x10;
    inline constexpr int32_t SETWALLPAPER_DEFAULT = -1;
    inline constexpr int32_t SB_HORZ = 0;
    inline constexpr int32_t SB_VERT = 1;
    inline constexpr int32_t SB_CTL = 2;
    inline constexpr int32_t SB_BOTH = 3;
    inline constexpr int32_t SB_LINEUP = 0;
    inline constexpr int32_t SB_LINELEFT = 0;
    inline constexpr int32_t SB_LINEDOWN = 1;
    inline constexpr int32_t SB_LINERIGHT = 1;
    inline constexpr int32_t SB_PAGEUP = 2;
    inline constexpr int32_t SB_PAGELEFT = 2;
    inline constexpr int32_t SB_PAGEDOWN = 3;
    inline constexpr int32_t SB_PAGERIGHT = 3;
    inline constexpr int32_t SB_THUMBPOSITION = 4;
    inline constexpr int32_t SB_THUMBTRACK = 5;
    inline constexpr int32_t SB_TOP = 6;
    inline constexpr int32_t SB_LEFT = 6;
    inline constexpr int32_t SB_BOTTOM = 7;
    inline constexpr int32_t SB_RIGHT = 7;
    inline constexpr int32_t SB_ENDSCROLL = 8;
    inline constexpr int32_t SW_HIDE = 0;
    inline constexpr int32_t SW_SHOWNORMAL = 1;
    inline constexpr int32_t SW_NORMAL = 1;
    inline constexpr int32_t SW_SHOWMINIMIZED = 2;
    inline constexpr int32_t SW_SHOWMAXIMIZED = 3;
    inline constexpr int32_t SW_MAXIMIZE = 3;
    inline constexpr int32_t SW_SHOWNOACTIVATE = 4;
    inline constexpr int32_t SW_SHOW = 5;
    inline constexpr int32_t SW_MINIMIZE = 6;
    inline constexpr int32_t SW_SHOWMINNOACTIVE = 7;
    inline constexpr int32_t SW_SHOWNA = 8;
    inline constexpr int32_t SW_RESTORE = 9;
    inline constexpr int32_t SW_SHOWDEFAULT = 10;
    inline constexpr int32_t SW_FORCEMINIMIZE = 11;
    inline constexpr int32_t SW_MAX = 11;
    inline constexpr int32_t HIDE_WINDOW = 0;
    inline constexpr int32_t SHOW_OPENWINDOW = 1;
    inline constexpr int32_t SHOW_ICONWINDOW = 2;
    inline constexpr int32_t SHOW_FULLSCREEN = 3;
    inline constexpr int32_t SHOW_OPENNOACTIVATE = 4;
    inline constexpr int32_t SW_PARENTCLOSING = 1;
    inline constexpr int32_t SW_OTHERZOOM = 2;
    inline constexpr int32_t SW_PARENTOPENING = 3;
    inline constexpr int32_t SW_OTHERUNZOOM = 4;
    inline constexpr int32_t AW_HOR_POSITIVE = 1;
    inline constexpr int32_t AW_HOR_NEGATIVE = 2;
    inline constexpr int32_t AW_VER_POSITIVE = 4;
    inline constexpr int32_t AW_VER_NEGATIVE = 8;
    inline constexpr int32_t AW_CENTER = 16;
    inline constexpr int32_t AW_HIDE = 65536;
    inline constexpr int32_t AW_ACTIVATE = 131072;
    inline constexpr int32_t AW_SLIDE = 262144;
    inline constexpr int32_t AW_BLEND = 524288;
    inline constexpr int32_t KF_EXTENDED = 256;
    inline constexpr int32_t KF_DLGMODE = 2048;
    inline constexpr int32_t KF_MENUMODE = 4096;
    inline constexpr int32_t KF_ALTDOWN = 8192;
    inline constexpr int32_t KF_REPEAT = 16384;
    inline constexpr int32_t KF_UP = 32768;
    inline constexpr int32_t VK_LBUTTON = 1;
    inline constexpr int32_t VK_RBUTTON = 2;
    inline constexpr int32_t VK_CANCEL = 3;
    inline constexpr int32_t VK_MBUTTON = 4;
    inline constexpr int32_t VK_XBUTTON1 = 5;
    inline constexpr int32_t VK_XBUTTON2 = 6;
    inline constexpr int32_t VK_BACK = 8;
    inline constexpr int32_t VK_TAB = 9;
    inline constexpr int32_t VK_CLEAR = 12;
    inline constexpr int32_t VK_RETURN = 13;
    inline constexpr int32_t VK_SHIFT = 16;
    inline constexpr int32_t VK_CONTROL = 17;
    inline constexpr int32_t VK_MENU = 18;
    inline constexpr int32_t VK_PAUSE = 19;
    inline constexpr int32_t VK_CAPITAL = 20;
    inline constexpr int32_t VK_KANA = 21;
    inline constexpr int32_t VK_HANGEUL = 21;
    inline constexpr int32_t VK_HANGUL = 21;
    inline constexpr int32_t VK_JUNJA = 23;
    inline constexpr int32_t VK_FINAL = 24;
    inline constexpr int32_t VK_HANJA = 25;
    inline constexpr int32_t VK_KANJI = 25;
    inline constexpr int32_t VK_ESCAPE = 27;
    inline constexpr int32_t VK_CONVERT = 28;
    inline constexpr int32_t VK_NONCONVERT = 29;
    inline constexpr int32_t VK_ACCEPT = 30;
    inline constexpr int32_t VK_MODECHANGE = 31;
    inline constexpr int32_t VK_SPACE = 32;
    inline constexpr int32_t VK_PRIOR = 33;
    inline constexpr int32_t VK_NEXT = 34;
    inline constexpr int32_t VK_END = 35;
    inline constexpr int32_t VK_HOME = 36;
    inline constexpr int32_t VK_LEFT = 37;
    inline constexpr int32_t VK_UP = 38;
    inline constexpr int32_t VK_RIGHT = 39;
    inline constexpr int32_t VK_DOWN = 40;
    inline constexpr int32_t VK_SELECT = 41;
    inline constexpr int32_t VK_PRINT = 42;
    inline constexpr int32_t VK_EXECUTE = 43;
    inline constexpr int32_t VK_SNAPSHOT = 44;
    inline constexpr int32_t VK_INSERT = 45;
    inline constexpr int32_t VK_DELETE = 46;
    inline constexpr int32_t VK_HELP = 47;
    inline constexpr int32_t VK_LWIN = 91;
    inline constexpr int32_t VK_RWIN = 92;
    inline constexpr int32_t VK_APPS = 93;
    inline constexpr int32_t VK_SLEEP = 95;
    inline constexpr int32_t VK_NUMPAD0 = 96;
    inline constexpr int32_t VK_NUMPAD1 = 97;
    inline constexpr int32_t VK_NUMPAD2 = 98;
    inline constexpr int32_t VK_NUMPAD3 = 99;
    inline constexpr int32_t VK_NUMPAD4 = 100;
    inline constexpr int32_t VK_NUMPAD5 = 101;
    inline constexpr int32_t VK_NUMPAD6 = 102;
    inline constexpr int32_t VK_NUMPAD7 = 103;
    inline constexpr int32_t VK_NUMPAD8 = 104;
    inline constexpr int32_t VK_NUMPAD9 = 105;
    inline constexpr int32_t VK_MULTIPLY = 106;
    inline constexpr int32_t VK_ADD = 107;
    inline constexpr int32_t VK_SEPARATOR = 108;
    inline constexpr int32_t VK_SUBTRACT = 109;
    inline constexpr int32_t VK_DECIMAL = 110;
    inline constexpr int32_t VK_DIVIDE = 111;
    inline constexpr int32_t VK_F1 = 112;
    inline constexpr int32_t VK_F2 = 113;
    inline constexpr int32_t VK_F3 = 114;
    inline constexpr int32_t VK_F4 = 115;
    inline constexpr int32_t VK_F5 = 116;
    inline constexpr int32_t VK_F6 = 117;
    inline constexpr int32_t VK_F7 = 118;
    inline constexpr int32_t VK_F8 = 119;
    inline constexpr int32_t VK_F9 = 120;
    inline constexpr int32_t VK_F10 = 121;
    inline constexpr int32_t VK_F11 = 122;
    inline constexpr int32_t VK_F12 = 123;
    inline constexpr int32_t VK_F13 = 124;
    inline constexpr int32_t VK_F14 = 125;
    inline constexpr int32_t VK_F15 = 126;
    inline constexpr int32_t VK_F16 = 127;
    inline constexpr int32_t VK_F17 = 128;
    inline constexpr int32_t VK_F18 = 129;
    inline constexpr int32_t VK_F19 = 130;
    inline constexpr int32_t VK_F20 = 131;
    inline constexpr int32_t VK_F21 = 132;
    inline constexpr int32_t VK_F22 = 133;
    inline constexpr int32_t VK_F23 = 134;
    inline constexpr int32_t VK_F24 = 135;
    inline constexpr int32_t VK_NAVIGATION_VIEW = 136;
    inline constexpr int32_t VK_NAVIGATION_MENU = 137;
    inline constexpr int32_t VK_NAVIGATION_UP = 138;
    inline constexpr int32_t VK_NAVIGATION_DOWN = 139;
    inline constexpr int32_t VK_NAVIGATION_LEFT = 140;
    inline constexpr int32_t VK_NAVIGATION_RIGHT = 141;
    inline constexpr int32_t VK_NAVIGATION_ACCEPT = 142;
    inline constexpr int32_t VK_NAVIGATION_CANCEL = 143;
    inline constexpr int32_t VK_NUMLOCK = 144;
    inline constexpr int32_t VK_SCROLL = 145;
    inline constexpr int32_t VK_OEM_NEC_EQUAL = 146;
    inline constexpr int32_t VK_OEM_FJ_JISHO = 146;
    inline constexpr int32_t VK_OEM_FJ_MASSHOU = 147;
    inline constexpr int32_t VK_OEM_FJ_TOUROKU = 148;
    inline constexpr int32_t VK_OEM_FJ_LOYA = 149;
    inline constexpr int32_t VK_OEM_FJ_ROYA = 150;
    inline constexpr int32_t VK_LSHIFT = 160;
    inline constexpr int32_t VK_RSHIFT = 161;
    inline constexpr int32_t VK_LCONTROL = 162;
    inline constexpr int32_t VK_RCONTROL = 163;
    inline constexpr int32_t VK_LMENU = 164;
    inline constexpr int32_t VK_RMENU = 165;
    inline constexpr int32_t VK_BROWSER_BACK = 166;
    inline constexpr int32_t VK_BROWSER_FORWARD = 167;
    inline constexpr int32_t VK_BROWSER_REFRESH = 168;
    inline constexpr int32_t VK_BROWSER_STOP = 169;
    inline constexpr int32_t VK_BROWSER_SEARCH = 170;
    inline constexpr int32_t VK_BROWSER_FAVORITES = 171;
    inline constexpr int32_t VK_BROWSER_HOME = 172;
    inline constexpr int32_t VK_VOLUME_MUTE = 173;
    inline constexpr int32_t VK_VOLUME_DOWN = 174;
    inline constexpr int32_t VK_VOLUME_UP = 175;
    inline constexpr int32_t VK_MEDIA_NEXT_TRACK = 176;
    inline constexpr int32_t VK_MEDIA_PREV_TRACK = 177;
    inline constexpr int32_t VK_MEDIA_STOP = 178;
    inline constexpr int32_t VK_MEDIA_PLAY_PAUSE = 179;
    inline constexpr int32_t VK_LAUNCH_MAIL = 180;
    inline constexpr int32_t VK_LAUNCH_MEDIA_SELECT = 181;
    inline constexpr int32_t VK_LAUNCH_APP1 = 182;
    inline constexpr int32_t VK_LAUNCH_APP2 = 183;
    inline constexpr int32_t VK_OEM_1 = 186;
    inline constexpr int32_t VK_OEM_PLUS = 187;
    inline constexpr int32_t VK_OEM_COMMA = 188;
    inline constexpr int32_t VK_OEM_MINUS = 189;
    inline constexpr int32_t VK_OEM_PERIOD = 190;
    inline constexpr int32_t VK_OEM_2 = 191;
    inline constexpr int32_t VK_OEM_3 = 192;
    inline constexpr int32_t VK_GAMEPAD_A = 195;
    inline constexpr int32_t VK_GAMEPAD_B = 196;
    inline constexpr int32_t VK_GAMEPAD_X = 197;
    inline constexpr int32_t VK_GAMEPAD_Y = 198;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_SHOULDER = 199;
    inline constexpr int32_t VK_GAMEPAD_LEFT_SHOULDER = 200;
    inline constexpr int32_t VK_GAMEPAD_LEFT_TRIGGER = 201;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_TRIGGER = 202;
    inline constexpr int32_t VK_GAMEPAD_DPAD_UP = 203;
    inline constexpr int32_t VK_GAMEPAD_DPAD_DOWN = 204;
    inline constexpr int32_t VK_GAMEPAD_DPAD_LEFT = 205;
    inline constexpr int32_t VK_GAMEPAD_DPAD_RIGHT = 206;
    inline constexpr int32_t VK_GAMEPAD_MENU = 207;
    inline constexpr int32_t VK_GAMEPAD_VIEW = 208;
    inline constexpr int32_t VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON = 209;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON = 210;
    inline constexpr int32_t VK_GAMEPAD_LEFT_THUMBSTICK_UP = 211;
    inline constexpr int32_t VK_GAMEPAD_LEFT_THUMBSTICK_DOWN = 212;
    inline constexpr int32_t VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT = 213;
    inline constexpr int32_t VK_GAMEPAD_LEFT_THUMBSTICK_LEFT = 214;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_THUMBSTICK_UP = 215;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN = 216;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT = 217;
    inline constexpr int32_t VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT = 218;
    inline constexpr int32_t VK_OEM_4 = 219;
    inline constexpr int32_t VK_OEM_5 = 220;
    inline constexpr int32_t VK_OEM_6 = 221;
    inline constexpr int32_t VK_OEM_7 = 222;
    inline constexpr int32_t VK_OEM_8 = 223;
    inline constexpr int32_t VK_OEM_AX = 225;
    inline constexpr int32_t VK_OEM_102 = 226;
    inline constexpr int32_t VK_ICO_HELP = 227;
    inline constexpr int32_t VK_ICO_00 = 228;
    inline constexpr int32_t VK_PROCESSKEY = 229;
    inline constexpr int32_t VK_ICO_CLEAR = 230;
    inline constexpr int32_t VK_PACKET = 231;
    inline constexpr int32_t VK_OEM_RESET = 233;
    inline constexpr int32_t VK_OEM_JUMP = 234;
    inline constexpr int32_t VK_OEM_PA1 = 235;
    inline constexpr int32_t VK_OEM_PA2 = 236;
    inline constexpr int32_t VK_OEM_PA3 = 237;
    inline constexpr int32_t VK_OEM_WSCTRL = 238;
    inline constexpr int32_t VK_OEM_CUSEL = 239;
    inline constexpr int32_t VK_OEM_ATTN = 240;
    inline constexpr int32_t VK_OEM_FINISH = 241;
    inline constexpr int32_t VK_OEM_COPY = 242;
    inline constexpr int32_t VK_OEM_AUTO = 243;
    inline constexpr int32_t VK_OEM_ENLW = 244;
    inline constexpr int32_t VK_OEM_BACKTAB = 245;
    inline constexpr int32_t VK_ATTN = 246;
    inline constexpr int32_t VK_CRSEL = 247;
    inline constexpr int32_t VK_EXSEL = 248;
    inline constexpr int32_t VK_EREOF = 249;
    inline constexpr int32_t VK_PLAY = 250;
    inline constexpr int32_t VK_ZOOM = 251;
    inline constexpr int32_t VK_NONAME = 252;
    inline constexpr int32_t VK_PA1 = 253;
    inline constexpr int32_t VK_OEM_CLEAR = 254;
    inline constexpr int32_t WH_MIN = -1;
    inline constexpr int32_t WH_MSGFILTER = -1;
    inline constexpr int32_t WH_JOURNALRECORD = 0;
    inline constexpr int32_t WH_JOURNALPLAYBACK = 1;
    inline constexpr int32_t WH_KEYBOARD = 2;
    inline constexpr int32_t WH_GETMESSAGE = 3;
    inline constexpr int32_t WH_CALLWNDPROC = 4;
    inline constexpr int32_t WH_CBT = 5;
    inline constexpr int32_t WH_SYSMSGFILTER = 6;
    inline constexpr int32_t WH_MOUSE = 7;
    inline constexpr int32_t WH_HARDWARE = 8;
    inline constexpr int32_t WH_DEBUG = 9;
    inline constexpr int32_t WH_SHELL = 10;
    inline constexpr int32_t WH_FOREGROUNDIDLE = 11;
    inline constexpr int32_t WH_CALLWNDPROCRET = 12;
    inline constexpr int32_t WH_KEYBOARD_LL = 13;
    inline constexpr int32_t WH_MOUSE_LL = 14;
    inline constexpr int32_t WH_MAX = 14;
    inline constexpr int32_t WH_MINHOOK = -1;
    inline constexpr int32_t WH_MAXHOOK = 14;
    inline constexpr int32_t HC_ACTION = 0;
    inline constexpr int32_t HC_GETNEXT = 1;
    inline constexpr int32_t HC_SKIP = 2;
    inline constexpr int32_t HC_NOREMOVE = 3;
    inline constexpr int32_t HC_NOREM = 3;
    inline constexpr int32_t HC_SYSMODALON = 4;
    inline constexpr int32_t HC_SYSMODALOFF = 5;
    inline constexpr int32_t HCBT_MOVESIZE = 0;
    inline constexpr int32_t HCBT_MINMAX = 1;
    inline constexpr int32_t HCBT_QS = 2;
    inline constexpr int32_t HCBT_CREATEWND = 3;
    inline constexpr int32_t HCBT_DESTROYWND = 4;
    inline constexpr int32_t HCBT_ACTIVATE = 5;
    inline constexpr int32_t HCBT_CLICKSKIPPED = 6;
    inline constexpr int32_t HCBT_KEYSKIPPED = 7;
    inline constexpr int32_t HCBT_SYSCOMMAND = 8;
    inline constexpr int32_t HCBT_SETFOCUS = 9;
    inline constexpr int32_t WTS_CONSOLE_CONNECT = 1;
    inline constexpr int32_t WTS_CONSOLE_DISCONNECT = 2;
    inline constexpr int32_t WTS_REMOTE_CONNECT = 3;
    inline constexpr int32_t WTS_REMOTE_DISCONNECT = 4;
    inline constexpr int32_t WTS_SESSION_LOGON = 5;
    inline constexpr int32_t WTS_SESSION_LOGOFF = 6;
    inline constexpr int32_t WTS_SESSION_LOCK = 7;
    inline constexpr int32_t WTS_SESSION_UNLOCK = 8;
    inline constexpr int32_t WTS_SESSION_REMOTE_CONTROL = 9;
    inline constexpr int32_t WTS_SESSION_CREATE = 10;
    inline constexpr int32_t WTS_SESSION_TERMINATE = 11;
    inline constexpr int32_t MSGF_DIALOGBOX = 0;
    inline constexpr int32_t MSGF_MESSAGEBOX = 1;
    inline constexpr int32_t MSGF_MENU = 2;
    inline constexpr int32_t MSGF_SCROLLBAR = 5;
    inline constexpr int32_t MSGF_NEXTWINDOW = 6;
    inline constexpr int32_t MSGF_MAX = 8;
    inline constexpr int32_t MSGF_USER = 4096;
    inline constexpr int32_t HSHELL_WINDOWCREATED = 1;
    inline constexpr int32_t HSHELL_WINDOWDESTROYED = 2;
    inline constexpr int32_t HSHELL_ACTIVATESHELLWINDOW = 3;
    inline constexpr int32_t HSHELL_WINDOWACTIVATED = 4;
    inline constexpr int32_t HSHELL_GETMINRECT = 5;
    inline constexpr int32_t HSHELL_REDRAW = 6;
    inline constexpr int32_t HSHELL_TASKMAN = 7;
    inline constexpr int32_t HSHELL_LANGUAGE = 8;
    inline constexpr int32_t HSHELL_SYSMENU = 9;
    inline constexpr int32_t HSHELL_ENDTASK = 10;
    inline constexpr int32_t HSHELL_ACCESSIBILITYSTATE = 11;
    inline constexpr int32_t HSHELL_APPCOMMAND = 12;
    inline constexpr int32_t HSHELL_WINDOWREPLACED = 13;
    inline constexpr int32_t HSHELL_WINDOWREPLACING = 14;
    inline constexpr int32_t HSHELL_MONITORCHANGED = 16;
    inline constexpr int32_t HSHELL_HIGHBIT = 32768;
    inline constexpr int32_t HSHELL_FLASH = 32774;
    inline constexpr int32_t HSHELL_RUDEAPPACTIVATED = 32772;
    inline constexpr int32_t APPCOMMAND_BROWSER_BACKWARD = 1;
    inline constexpr int32_t APPCOMMAND_BROWSER_FORWARD = 2;
    inline constexpr int32_t APPCOMMAND_BROWSER_REFRESH = 3;
    inline constexpr int32_t APPCOMMAND_BROWSER_STOP = 4;
    inline constexpr int32_t APPCOMMAND_BROWSER_SEARCH = 5;
    inline constexpr int32_t APPCOMMAND_BROWSER_FAVORITES = 6;
    inline constexpr int32_t APPCOMMAND_BROWSER_HOME = 7;
    inline constexpr int32_t APPCOMMAND_VOLUME_MUTE = 8;
    inline constexpr int32_t APPCOMMAND_VOLUME_DOWN = 9;
    inline constexpr int32_t APPCOMMAND_VOLUME_UP = 10;
    inline constexpr int32_t APPCOMMAND_MEDIA_NEXTTRACK = 11;
    inline constexpr int32_t APPCOMMAND_MEDIA_PREVIOUSTRACK = 12;
    inline constexpr int32_t APPCOMMAND_MEDIA_STOP = 13;
    inline constexpr int32_t APPCOMMAND_MEDIA_PLAY_PAUSE = 14;
    inline constexpr int32_t APPCOMMAND_LAUNCH_MAIL = 15;
    inline constexpr int32_t APPCOMMAND_LAUNCH_MEDIA_SELECT = 16;
    inline constexpr int32_t APPCOMMAND_LAUNCH_APP1 = 17;
    inline constexpr int32_t APPCOMMAND_LAUNCH_APP2 = 18;
    inline constexpr int32_t APPCOMMAND_BASS_DOWN = 19;
    inline constexpr int32_t APPCOMMAND_BASS_BOOST = 20;
    inline constexpr int32_t APPCOMMAND_BASS_UP = 21;
    inline constexpr int32_t APPCOMMAND_TREBLE_DOWN = 22;
    inline constexpr int32_t APPCOMMAND_TREBLE_UP = 23;
    inline constexpr int32_t APPCOMMAND_MICROPHONE_VOLUME_MUTE = 24;
    inline constexpr int32_t APPCOMMAND_MICROPHONE_VOLUME_DOWN = 25;
    inline constexpr int32_t APPCOMMAND_MICROPHONE_VOLUME_UP = 26;
    inline constexpr int32_t APPCOMMAND_HELP = 27;
    inline constexpr int32_t APPCOMMAND_FIND = 28;
    inline constexpr int32_t APPCOMMAND_NEW = 29;
    inline constexpr int32_t APPCOMMAND_OPEN = 30;
    inline constexpr int32_t APPCOMMAND_CLOSE = 31;
    inline constexpr int32_t APPCOMMAND_SAVE = 32;
    inline constexpr int32_t APPCOMMAND_PRINT = 33;
    inline constexpr int32_t APPCOMMAND_UNDO = 34;
    inline constexpr int32_t APPCOMMAND_REDO = 35;
    inline constexpr int32_t APPCOMMAND_COPY = 36;
    inline constexpr int32_t APPCOMMAND_CUT = 37;
    inline constexpr int32_t APPCOMMAND_PASTE = 38;
    inline constexpr int32_t APPCOMMAND_REPLY_TO_MAIL = 39;
    inline constexpr int32_t APPCOMMAND_FORWARD_MAIL = 40;
    inline constexpr int32_t APPCOMMAND_SEND_MAIL = 41;
    inline constexpr int32_t APPCOMMAND_SPELL_CHECK = 42;
    inline constexpr int32_t APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE = 43;
    inline constexpr int32_t APPCOMMAND_MIC_ON_OFF_TOGGLE = 44;
    inline constexpr int32_t APPCOMMAND_CORRECTION_LIST = 45;
    inline constexpr int32_t APPCOMMAND_MEDIA_PLAY = 46;
    inline constexpr int32_t APPCOMMAND_MEDIA_PAUSE = 47;
    inline constexpr int32_t APPCOMMAND_MEDIA_RECORD = 48;
    inline constexpr int32_t APPCOMMAND_MEDIA_FAST_FORWARD = 49;
    inline constexpr int32_t APPCOMMAND_MEDIA_REWIND = 50;
    inline constexpr int32_t APPCOMMAND_MEDIA_CHANNEL_UP = 51;
    inline constexpr int32_t APPCOMMAND_MEDIA_CHANNEL_DOWN = 52;
    inline constexpr int32_t APPCOMMAND_DELETE = 53;
    inline constexpr int32_t APPCOMMAND_DWM_FLIP3D = 54;
    inline constexpr int32_t FAPPCOMMAND_MOUSE = 32768;
    inline constexpr int32_t FAPPCOMMAND_KEY = 0;
    inline constexpr int32_t FAPPCOMMAND_OEM = 4096;
    inline constexpr int32_t FAPPCOMMAND_MASK = 61440;
    inline constexpr int32_t LLKHF_EXTENDED = 1;
    inline constexpr int32_t LLKHF_INJECTED = 16;
    inline constexpr int32_t LLKHF_ALTDOWN = 32;
    inline constexpr int32_t LLKHF_UP = 128;
    inline constexpr int32_t LLKHF_LOWER_IL_INJECTED = 2;
    inline constexpr int32_t LLMHF_INJECTED = 1;
    inline constexpr int32_t LLMHF_LOWER_IL_INJECTED = 2;
    inline constexpr int32_t HKL_PREV = 0;
    inline constexpr int32_t HKL_NEXT = 1;
    inline constexpr int32_t KLF_ACTIVATE = 1;
    inline constexpr int32_t KLF_SUBSTITUTE_OK = 2;
    inline constexpr int32_t KLF_REORDER = 8;
    inline constexpr int32_t KLF_REPLACELANG = 16;
    inline constexpr int32_t KLF_NOTELLSHELL = 128;
    inline constexpr int32_t KLF_SETFORPROCESS = 256;
    inline constexpr int32_t KLF_SHIFTLOCK = 65536;
    inline constexpr int32_t KLF_RESET = 1073741824;
    inline constexpr int32_t INPUTLANGCHANGE_SYSCHARSET = 1;
    inline constexpr int32_t INPUTLANGCHANGE_FORWARD = 2;
    inline constexpr int32_t INPUTLANGCHANGE_BACKWARD = 4;
    inline constexpr int32_t KL_NAMELENGTH = 9;
    inline constexpr int32_t GMMP_USE_DISPLAY_POINTS = 1;
    inline constexpr int32_t GMMP_USE_HIGH_RESOLUTION_POINTS = 2;
    inline constexpr int32_t DESKTOP_READOBJECTS = 1;
    inline constexpr int32_t DESKTOP_CREATEWINDOW = 2;
    inline constexpr int32_t DESKTOP_CREATEMENU = 4;
    inline constexpr int32_t DESKTOP_HOOKCONTROL = 8;
    inline constexpr int32_t DESKTOP_JOURNALRECORD = 16;
    inline constexpr int32_t DESKTOP_JOURNALPLAYBACK = 32;
    inline constexpr int32_t DESKTOP_ENUMERATE = 64;
    inline constexpr int32_t DESKTOP_WRITEOBJECTS = 128;
    inline constexpr int32_t DESKTOP_SWITCHDESKTOP = 256;
    inline constexpr int32_t DF_ALLOWOTHERACCOUNTHOOK = 1;
    inline constexpr int32_t WINSTA_ENUMDESKTOPS = 1;
    inline constexpr int32_t WINSTA_READATTRIBUTES = 2;
    inline constexpr int32_t WINSTA_ACCESSCLIPBOARD = 4;
    inline constexpr int32_t WINSTA_CREATEDESKTOP = 8;
    inline constexpr int32_t WINSTA_WRITEATTRIBUTES = 16;
    inline constexpr int32_t WINSTA_ACCESSGLOBALATOMS = 32;
    inline constexpr int32_t WINSTA_EXITWINDOWS = 64;
    inline constexpr int32_t WINSTA_ENUMERATE = 256;
    inline constexpr int32_t WINSTA_READSCREEN = 512;
    inline constexpr int32_t WINSTA_ALL_ACCESS = 895;
    inline constexpr int32_t CWF_CREATE_ONLY = 1;
    inline constexpr int32_t WSF_VISIBLE = 1;
    inline constexpr int32_t UOI_FLAGS = 1;
    inline constexpr int32_t UOI_NAME = 2;
    inline constexpr int32_t UOI_TYPE = 3;
    inline constexpr int32_t UOI_USER_SID = 4;
    inline constexpr int32_t UOI_HEAPSIZE = 5;
    inline constexpr int32_t UOI_IO = 6;
    inline constexpr int32_t UOI_TIMERPROC_EXCEPTION_SUPPRESSION = 7;
    inline constexpr int32_t GWL_WNDPROC = -4;
    inline constexpr int32_t GWL_HINSTANCE = -6;
    inline constexpr int32_t GWL_HWNDPARENT = -8;
    inline constexpr int32_t GWL_STYLE = -16;
    inline constexpr int32_t GWL_EXSTYLE = -20;
    inline constexpr int32_t GWL_USERDATA = -21;
    inline constexpr int32_t GWL_ID = -12;
    inline constexpr int32_t GWLP_WNDPROC = -4;
    inline constexpr int32_t GWLP_HINSTANCE = -6;
    inline constexpr int32_t GWLP_HWNDPARENT = -8;
    inline constexpr int32_t GWLP_USERDATA = -21;
    inline constexpr int32_t GWLP_ID = -12;
    inline constexpr int32_t GCL_MENUNAME = -8;
    inline constexpr int32_t GCL_HBRBACKGROUND = -10;
    inline constexpr int32_t GCL_HCURSOR = -12;
    inline constexpr int32_t GCL_HICON = -14;
    inline constexpr int32_t GCL_HMODULE = -16;
    inline constexpr int32_t GCL_CBWNDEXTRA = -18;
    inline constexpr int32_t GCL_CBCLSEXTRA = -20;
    inline constexpr int32_t GCL_WNDPROC = -24;
    inline constexpr int32_t GCL_STYLE = -26;
    inline constexpr int32_t GCW_ATOM = -32;
    inline constexpr int32_t GCL_HICONSM = -34;
    inline constexpr int32_t GCLP_MENUNAME = -8;
    inline constexpr int32_t GCLP_HBRBACKGROUND = -10;
    inline constexpr int32_t GCLP_HCURSOR = -12;
    inline constexpr int32_t GCLP_HICON = -14;
    inline constexpr int32_t GCLP_HMODULE = -16;
    inline constexpr int32_t GCLP_WNDPROC = -24;
    inline constexpr int32_t GCLP_HICONSM = -34;
    inline constexpr int32_t WM_NULL = 0;
    inline constexpr int32_t WM_CREATE = 1;
    inline constexpr int32_t WM_DESTROY = 2;
    inline constexpr int32_t WM_MOVE = 3;
    inline constexpr int32_t WM_SIZE = 5;
    inline constexpr int32_t WM_ACTIVATE = 6;
    inline constexpr int32_t WA_INACTIVE = 0;
    inline constexpr int32_t WA_ACTIVE = 1;
    inline constexpr int32_t WA_CLICKACTIVE = 2;
    inline constexpr int32_t WM_SETFOCUS = 7;
    inline constexpr int32_t WM_KILLFOCUS = 8;
    inline constexpr int32_t WM_ENABLE = 10;
    inline constexpr int32_t WM_SETREDRAW = 11;
    inline constexpr int32_t WM_SETTEXT = 12;
    inline constexpr int32_t WM_GETTEXT = 13;
    inline constexpr int32_t WM_GETTEXTLENGTH = 14;
    inline constexpr int32_t WM_PAINT = 15;
    inline constexpr int32_t WM_CLOSE = 16;
    inline constexpr int32_t WM_QUERYENDSESSION = 17;
    inline constexpr int32_t WM_QUERYOPEN = 19;
    inline constexpr int32_t WM_ENDSESSION = 22;
    inline constexpr int32_t WM_QUIT = 18;
    inline constexpr int32_t WM_ERASEBKGND = 20;
    inline constexpr int32_t WM_SYSCOLORCHANGE = 21;
    inline constexpr int32_t WM_SHOWWINDOW = 24;
    inline constexpr int32_t WM_WININICHANGE = 26;
    inline constexpr int32_t WM_SETTINGCHANGE = 26;
    inline constexpr int32_t WM_DEVMODECHANGE = 27;
    inline constexpr int32_t WM_ACTIVATEAPP = 28;
    inline constexpr int32_t WM_FONTCHANGE = 29;
    inline constexpr int32_t WM_TIMECHANGE = 30;
    inline constexpr int32_t WM_CANCELMODE = 31;
    inline constexpr int32_t WM_SETCURSOR = 32;
    inline constexpr int32_t WM_MOUSEACTIVATE = 33;
    inline constexpr int32_t WM_CHILDACTIVATE = 34;
    inline constexpr int32_t WM_QUEUESYNC = 35;
    inline constexpr int32_t WM_GETMINMAXINFO = 36;
    inline constexpr int32_t WM_PAINTICON = 38;
    inline constexpr int32_t WM_ICONERASEBKGND = 39;
    inline constexpr int32_t WM_NEXTDLGCTL = 40;
    inline constexpr int32_t WM_SPOOLERSTATUS = 42;
    inline constexpr int32_t WM_DRAWITEM = 43;
    inline constexpr int32_t WM_MEASUREITEM = 44;
    inline constexpr int32_t WM_DELETEITEM = 45;
    inline constexpr int32_t WM_VKEYTOITEM = 46;
    inline constexpr int32_t WM_CHARTOITEM = 47;
    inline constexpr int32_t WM_SETFONT = 48;
    inline constexpr int32_t WM_GETFONT = 49;
    inline constexpr int32_t WM_SETHOTKEY = 50;
    inline constexpr int32_t WM_GETHOTKEY = 51;
    inline constexpr int32_t WM_QUERYDRAGICON = 55;
    inline constexpr int32_t WM_COMPAREITEM = 57;
    inline constexpr int32_t WM_GETOBJECT = 61;
    inline constexpr int32_t WM_COMPACTING = 65;
    inline constexpr int32_t WM_COMMNOTIFY = 68;
    inline constexpr int32_t WM_WINDOWPOSCHANGING = 70;
    inline constexpr int32_t WM_WINDOWPOSCHANGED = 71;
    inline constexpr int32_t WM_POWER = 72;
    inline constexpr int32_t PWR_OK = 1;
    inline constexpr int32_t PWR_FAIL = -1;
    inline constexpr int32_t PWR_SUSPENDREQUEST = 1;
    inline constexpr int32_t PWR_SUSPENDRESUME = 2;
    inline constexpr int32_t PWR_CRITICALRESUME = 3;
    inline constexpr int32_t WM_COPYDATA = 74;
    inline constexpr int32_t WM_CANCELJOURNAL = 75;
    inline constexpr int32_t WM_NOTIFY = 78;
    inline constexpr int32_t WM_INPUTLANGCHANGEREQUEST = 80;
    inline constexpr int32_t WM_INPUTLANGCHANGE = 81;
    inline constexpr int32_t WM_TCARD = 82;
    inline constexpr int32_t WM_HELP = 83;
    inline constexpr int32_t WM_USERCHANGED = 84;
    inline constexpr int32_t WM_NOTIFYFORMAT = 85;
    inline constexpr int32_t NFR_ANSI = 1;
    inline constexpr int32_t NFR_UNICODE = 2;
    inline constexpr int32_t NF_QUERY = 3;
    inline constexpr int32_t NF_REQUERY = 4;
    inline constexpr int32_t WM_CONTEXTMENU = 123;
    inline constexpr int32_t WM_STYLECHANGING = 124;
    inline constexpr int32_t WM_STYLECHANGED = 125;
    inline constexpr int32_t WM_DISPLAYCHANGE = 126;
    inline constexpr int32_t WM_GETICON = 127;
    inline constexpr int32_t WM_SETICON = 128;
    inline constexpr int32_t WM_NCCREATE = 129;
    inline constexpr int32_t WM_NCDESTROY = 130;
    inline constexpr int32_t WM_NCCALCSIZE = 131;
    inline constexpr int32_t WM_NCHITTEST = 132;
    inline constexpr int32_t WM_NCPAINT = 133;
    inline constexpr int32_t WM_NCACTIVATE = 134;
    inline constexpr int32_t WM_GETDLGCODE = 135;
    inline constexpr int32_t WM_SYNCPAINT = 136;
    inline constexpr int32_t WM_NCMOUSEMOVE = 160;
    inline constexpr int32_t WM_NCLBUTTONDOWN = 161;
    inline constexpr int32_t WM_NCLBUTTONUP = 162;
    inline constexpr int32_t WM_NCLBUTTONDBLCLK = 163;
    inline constexpr int32_t WM_NCRBUTTONDOWN = 164;
    inline constexpr int32_t WM_NCRBUTTONUP = 165;
    inline constexpr int32_t WM_NCRBUTTONDBLCLK = 166;
    inline constexpr int32_t WM_NCMBUTTONDOWN = 167;
    inline constexpr int32_t WM_NCMBUTTONUP = 168;
    inline constexpr int32_t WM_NCMBUTTONDBLCLK = 169;
    inline constexpr int32_t WM_NCXBUTTONDOWN = 171;
    inline constexpr int32_t WM_NCXBUTTONUP = 172;
    inline constexpr int32_t WM_NCXBUTTONDBLCLK = 173;
    inline constexpr int32_t WM_INPUT_DEVICE_CHANGE = 254;
    inline constexpr int32_t WM_INPUT = 255;
    inline constexpr int32_t WM_KEYFIRST = 256;
    inline constexpr int32_t WM_KEYDOWN = 256;
    inline constexpr int32_t WM_KEYUP = 257;
    inline constexpr int32_t WM_CHAR = 258;
    inline constexpr int32_t WM_DEADCHAR = 259;
    inline constexpr int32_t WM_SYSKEYDOWN = 260;
    inline constexpr int32_t WM_SYSKEYUP = 261;
    inline constexpr int32_t WM_SYSCHAR = 262;
    inline constexpr int32_t WM_SYSDEADCHAR = 263;
    inline constexpr int32_t WM_UNICHAR = 265;
    inline constexpr int32_t WM_KEYLAST = 265;
    inline constexpr int32_t UNICODE_NOCHAR = 65535;
    inline constexpr int32_t WM_IME_STARTCOMPOSITION = 269;
    inline constexpr int32_t WM_IME_ENDCOMPOSITION = 270;
    inline constexpr int32_t WM_IME_COMPOSITION = 271;
    inline constexpr int32_t WM_IME_KEYLAST = 271;
    inline constexpr int32_t WM_INITDIALOG = 272;
    inline constexpr int32_t WM_COMMAND = 273;
    inline constexpr int32_t WM_SYSCOMMAND = 274;
    inline constexpr int32_t WM_TIMER = 275;
    inline constexpr int32_t WM_HSCROLL = 276;
    inline constexpr int32_t WM_VSCROLL = 277;
    inline constexpr int32_t WM_INITMENU = 278;
    inline constexpr int32_t WM_INITMENUPOPUP = 279;
    inline constexpr int32_t WM_GESTURE = 281;
    inline constexpr int32_t WM_GESTURENOTIFY = 282;
    inline constexpr int32_t WM_MENUSELECT = 287;
    inline constexpr int32_t WM_MENUCHAR = 288;
    inline constexpr int32_t WM_ENTERIDLE = 289;
    inline constexpr int32_t WM_MENURBUTTONUP = 290;
    inline constexpr int32_t WM_MENUDRAG = 291;
    inline constexpr int32_t WM_MENUGETOBJECT = 292;
    inline constexpr int32_t WM_UNINITMENUPOPUP = 293;
    inline constexpr int32_t WM_MENUCOMMAND = 294;
    inline constexpr int32_t WM_CHANGEUISTATE = 295;
    inline constexpr int32_t WM_UPDATEUISTATE = 296;
    inline constexpr int32_t WM_QUERYUISTATE = 297;
    inline constexpr int32_t UIS_SET = 1;
    inline constexpr int32_t UIS_CLEAR = 2;
    inline constexpr int32_t UIS_INITIALIZE = 3;
    inline constexpr int32_t UISF_HIDEFOCUS = 1;
    inline constexpr int32_t UISF_HIDEACCEL = 2;
    inline constexpr int32_t UISF_ACTIVE = 4;
    inline constexpr int32_t WM_CTLCOLORMSGBOX = 306;
    inline constexpr int32_t WM_CTLCOLOREDIT = 307;
    inline constexpr int32_t WM_CTLCOLORLISTBOX = 308;
    inline constexpr int32_t WM_CTLCOLORBTN = 309;
    inline constexpr int32_t WM_CTLCOLORDLG = 310;
    inline constexpr int32_t WM_CTLCOLORSCROLLBAR = 311;
    inline constexpr int32_t WM_CTLCOLORSTATIC = 312;
    inline constexpr int32_t MN_GETHMENU = 481;
    inline constexpr int32_t WM_MOUSEFIRST = 512;
    inline constexpr int32_t WM_MOUSEMOVE = 512;
    inline constexpr int32_t WM_LBUTTONDOWN = 513;
    inline constexpr int32_t WM_LBUTTONUP = 514;
    inline constexpr int32_t WM_LBUTTONDBLCLK = 515;
    inline constexpr int32_t WM_RBUTTONDOWN = 516;
    inline constexpr int32_t WM_RBUTTONUP = 517;
    inline constexpr int32_t WM_RBUTTONDBLCLK = 518;
    inline constexpr int32_t WM_MBUTTONDOWN = 519;
    inline constexpr int32_t WM_MBUTTONUP = 520;
    inline constexpr int32_t WM_MBUTTONDBLCLK = 521;
    inline constexpr int32_t WM_MOUSEWHEEL = 522;
    inline constexpr int32_t WM_XBUTTONDOWN = 523;
    inline constexpr int32_t WM_XBUTTONUP = 524;
    inline constexpr int32_t WM_XBUTTONDBLCLK = 525;
    inline constexpr int32_t WM_MOUSEHWHEEL = 526;
    inline constexpr int32_t WM_MOUSELAST = 526;
    inline constexpr int32_t WHEEL_DELTA = 120;
    inline constexpr uint32_t WHEEL_PAGESCROLL = 0xffffffff;
    inline constexpr int32_t XBUTTON1 = 1;
    inline constexpr int32_t XBUTTON2 = 2;
    inline constexpr int32_t WM_PARENTNOTIFY = 528;
    inline constexpr int32_t WM_ENTERMENULOOP = 529;
    inline constexpr int32_t WM_EXITMENULOOP = 530;
    inline constexpr int32_t WM_NEXTMENU = 531;
    inline constexpr int32_t WM_SIZING = 532;
    inline constexpr int32_t WM_CAPTURECHANGED = 533;
    inline constexpr int32_t WM_MOVING = 534;
    inline constexpr int32_t WM_POWERBROADCAST = 536;
    inline constexpr int32_t PBT_APMQUERYSUSPEND = 0;
    inline constexpr int32_t PBT_APMQUERYSTANDBY = 1;
    inline constexpr int32_t PBT_APMQUERYSUSPENDFAILED = 2;
    inline constexpr int32_t PBT_APMQUERYSTANDBYFAILED = 3;
    inline constexpr int32_t PBT_APMSUSPEND = 4;
    inline constexpr int32_t PBT_APMSTANDBY = 5;
    inline constexpr int32_t PBT_APMRESUMECRITICAL = 6;
    inline constexpr int32_t PBT_APMRESUMESUSPEND = 7;
    inline constexpr int32_t PBT_APMRESUMESTANDBY = 8;
    inline constexpr int32_t PBTF_APMRESUMEFROMFAILURE = 1;
    inline constexpr int32_t PBT_APMBATTERYLOW = 9;
    inline constexpr int32_t PBT_APMPOWERSTATUSCHANGE = 10;
    inline constexpr int32_t PBT_APMOEMEVENT = 11;
    inline constexpr int32_t PBT_APMRESUMEAUTOMATIC = 18;
    inline constexpr int32_t PBT_POWERSETTINGCHANGE = 32787;
    inline constexpr int32_t WM_DEVICECHANGE = 537;
    inline constexpr int32_t WM_MDICREATE = 544;
    inline constexpr int32_t WM_MDIDESTROY = 545;
    inline constexpr int32_t WM_MDIACTIVATE = 546;
    inline constexpr int32_t WM_MDIRESTORE = 547;
    inline constexpr int32_t WM_MDINEXT = 548;
    inline constexpr int32_t WM_MDIMAXIMIZE = 549;
    inline constexpr int32_t WM_MDITILE = 550;
    inline constexpr int32_t WM_MDICASCADE = 551;
    inline constexpr int32_t WM_MDIICONARRANGE = 552;
    inline constexpr int32_t WM_MDIGETACTIVE = 553;
    inline constexpr int32_t WM_MDISETMENU = 560;
    inline constexpr int32_t WM_ENTERSIZEMOVE = 561;
    inline constexpr int32_t WM_EXITSIZEMOVE = 562;
    inline constexpr int32_t WM_DROPFILES = 563;
    inline constexpr int32_t WM_MDIREFRESHMENU = 564;
    inline constexpr int32_t WM_POINTERDEVICECHANGE = 568;
    inline constexpr int32_t WM_POINTERDEVICEINRANGE = 569;
    inline constexpr int32_t WM_POINTERDEVICEOUTOFRANGE = 570;
    inline constexpr int32_t WM_TOUCH = 576;
    inline constexpr int32_t WM_NCPOINTERUPDATE = 577;
    inline constexpr int32_t WM_NCPOINTERDOWN = 578;
    inline constexpr int32_t WM_NCPOINTERUP = 579;
    inline constexpr int32_t WM_POINTERUPDATE = 581;
    inline constexpr int32_t WM_POINTERDOWN = 582;
    inline constexpr int32_t WM_POINTERUP = 583;
    inline constexpr int32_t WM_POINTERENTER = 585;
    inline constexpr int32_t WM_POINTERLEAVE = 586;
    inline constexpr int32_t WM_POINTERACTIVATE = 587;
    inline constexpr int32_t WM_POINTERCAPTURECHANGED = 588;
    inline constexpr int32_t WM_TOUCHHITTESTING = 589;
    inline constexpr int32_t WM_POINTERWHEEL = 590;
    inline constexpr int32_t WM_POINTERHWHEEL = 591;
    inline constexpr int32_t DM_POINTERHITTEST = 592;
    inline constexpr int32_t WM_POINTERROUTEDTO = 593;
    inline constexpr int32_t WM_POINTERROUTEDAWAY = 594;
    inline constexpr int32_t WM_POINTERROUTEDRELEASED = 595;
    inline constexpr int32_t WM_IME_SETCONTEXT = 641;
    inline constexpr int32_t WM_IME_NOTIFY = 642;
    inline constexpr int32_t WM_IME_CONTROL = 643;
    inline constexpr int32_t WM_IME_COMPOSITIONFULL = 644;
    inline constexpr int32_t WM_IME_SELECT = 645;
    inline constexpr int32_t WM_IME_CHAR = 646;
    inline constexpr int32_t WM_IME_REQUEST = 648;
    inline constexpr int32_t WM_IME_KEYDOWN = 656;
    inline constexpr int32_t WM_IME_KEYUP = 657;
    inline constexpr int32_t WM_MOUSEHOVER = 673;
    inline constexpr int32_t WM_MOUSELEAVE = 675;
    inline constexpr int32_t WM_NCMOUSEHOVER = 672;
    inline constexpr int32_t WM_NCMOUSELEAVE = 674;
    inline constexpr int32_t WM_WTSSESSION_CHANGE = 689;
    inline constexpr int32_t WM_TABLET_FIRST = 704;
    inline constexpr int32_t WM_TABLET_LAST = 735;
    inline constexpr int32_t WM_DPICHANGED = 736;
    inline constexpr int32_t WM_DPICHANGED_BEFOREPARENT = 738;
    inline constexpr int32_t WM_DPICHANGED_AFTERPARENT = 739;
    inline constexpr int32_t WM_GETDPISCALEDSIZE = 740;
    inline constexpr int32_t WM_CUT = 768;
    inline constexpr int32_t WM_COPY = 769;
    inline constexpr int32_t WM_PASTE = 770;
    inline constexpr int32_t WM_CLEAR = 771;
    inline constexpr int32_t WM_UNDO = 772;
    inline constexpr int32_t WM_RENDERFORMAT = 773;
    inline constexpr int32_t WM_RENDERALLFORMATS = 774;
    inline constexpr int32_t WM_DESTROYCLIPBOARD = 775;
    inline constexpr int32_t WM_DRAWCLIPBOARD = 776;
    inline constexpr int32_t WM_PAINTCLIPBOARD = 777;
    inline constexpr int32_t WM_VSCROLLCLIPBOARD = 778;
    inline constexpr int32_t WM_SIZECLIPBOARD = 779;
    inline constexpr int32_t WM_ASKCBFORMATNAME = 780;
    inline constexpr int32_t WM_CHANGECBCHAIN = 781;
    inline constexpr int32_t WM_HSCROLLCLIPBOARD = 782;
    inline constexpr int32_t WM_QUERYNEWPALETTE = 783;
    inline constexpr int32_t WM_PALETTEISCHANGING = 784;
    inline constexpr int32_t WM_PALETTECHANGED = 785;
    inline constexpr int32_t WM_HOTKEY = 786;
    inline constexpr int32_t WM_PRINT = 791;
    inline constexpr int32_t WM_PRINTCLIENT = 792;
    inline constexpr int32_t WM_APPCOMMAND = 793;
    inline constexpr int32_t WM_THEMECHANGED = 794;
    inline constexpr int32_t WM_CLIPBOARDUPDATE = 797;
    inline constexpr int32_t WM_DWMCOMPOSITIONCHANGED = 798;
    inline constexpr int32_t WM_DWMNCRENDERINGCHANGED = 799;
    inline constexpr int32_t WM_DWMCOLORIZATIONCOLORCHANGED = 800;
    inline constexpr int32_t WM_DWMWINDOWMAXIMIZEDCHANGE = 801;
    inline constexpr int32_t WM_DWMSENDICONICTHUMBNAIL = 803;
    inline constexpr int32_t WM_DWMSENDICONICLIVEPREVIEWBITMAP = 806;
    inline constexpr int32_t WM_GETTITLEBARINFOEX = 831;
    inline constexpr int32_t WM_HANDHELDFIRST = 856;
    inline constexpr int32_t WM_HANDHELDLAST = 863;
    inline constexpr int32_t WM_AFXFIRST = 864;
    inline constexpr int32_t WM_AFXLAST = 895;
    inline constexpr int32_t WM_PENWINFIRST = 896;
    inline constexpr int32_t WM_PENWINLAST = 911;
    inline constexpr int32_t WM_APP = 32768;
    inline constexpr int32_t WM_USER = 1024;
    inline constexpr int32_t WMSZ_LEFT = 1;
    inline constexpr int32_t WMSZ_RIGHT = 2;
    inline constexpr int32_t WMSZ_TOP = 3;
    inline constexpr int32_t WMSZ_TOPLEFT = 4;
    inline constexpr int32_t WMSZ_TOPRIGHT = 5;
    inline constexpr int32_t WMSZ_BOTTOM = 6;
    inline constexpr int32_t WMSZ_BOTTOMLEFT = 7;
    inline constexpr int32_t WMSZ_BOTTOMRIGHT = 8;
    inline constexpr int32_t HTERROR = -2;
    inline constexpr int32_t HTTRANSPARENT = -1;
    inline constexpr int32_t HTNOWHERE = 0;
    inline constexpr int32_t HTCLIENT = 1;
    inline constexpr int32_t HTCAPTION = 2;
    inline constexpr int32_t HTSYSMENU = 3;
    inline constexpr int32_t HTGROWBOX = 4;
    inline constexpr int32_t HTSIZE = 4;
    inline constexpr int32_t HTMENU = 5;
    inline constexpr int32_t HTHSCROLL = 6;
    inline constexpr int32_t HTVSCROLL = 7;
    inline constexpr int32_t HTMINBUTTON = 8;
    inline constexpr int32_t HTMAXBUTTON = 9;
    inline constexpr int32_t HTLEFT = 10;
    inline constexpr int32_t HTRIGHT = 11;
    inline constexpr int32_t HTTOP = 12;
    inline constexpr int32_t HTTOPLEFT = 13;
    inline constexpr int32_t HTTOPRIGHT = 14;
    inline constexpr int32_t HTBOTTOM = 15;
    inline constexpr int32_t HTBOTTOMLEFT = 16;
    inline constexpr int32_t HTBOTTOMRIGHT = 17;
    inline constexpr int32_t HTBORDER = 18;
    inline constexpr int32_t HTREDUCE = 8;
    inline constexpr int32_t HTZOOM = 9;
    inline constexpr int32_t HTSIZEFIRST = 10;
    inline constexpr int32_t HTSIZELAST = 17;
    inline constexpr int32_t HTOBJECT = 19;
    inline constexpr int32_t HTCLOSE = 20;
    inline constexpr int32_t HTHELP = 21;
    inline constexpr int32_t SMTO_NORMAL = 0;
    inline constexpr int32_t SMTO_BLOCK = 1;
    inline constexpr int32_t SMTO_ABORTIFHUNG = 2;
    inline constexpr int32_t SMTO_NOTIMEOUTIFNOTHUNG = 8;
    inline constexpr int32_t SMTO_ERRORONEXIT = 32;
    inline constexpr int32_t MA_ACTIVATE = 1;
    inline constexpr int32_t MA_ACTIVATEANDEAT = 2;
    inline constexpr int32_t MA_NOACTIVATE = 3;
    inline constexpr int32_t MA_NOACTIVATEANDEAT = 4;
    inline constexpr int32_t ICON_SMALL = 0;
    inline constexpr int32_t ICON_BIG = 1;
    inline constexpr int32_t ICON_SMALL2 = 2;
    inline constexpr int32_t SIZE_RESTORED = 0;
    inline constexpr int32_t SIZE_MINIMIZED = 1;
    inline constexpr int32_t SIZE_MAXIMIZED = 2;
    inline constexpr int32_t SIZE_MAXSHOW = 3;
    inline constexpr int32_t SIZE_MAXHIDE = 4;
    inline constexpr int32_t SIZENORMAL = 0;
    inline constexpr int32_t SIZEICONIC = 1;
    inline constexpr int32_t SIZEFULLSCREEN = 2;
    inline constexpr int32_t SIZEZOOMSHOW = 3;
    inline constexpr int32_t SIZEZOOMHIDE = 4;
    inline constexpr int32_t WVR_ALIGNTOP = 16;
    inline constexpr int32_t WVR_ALIGNLEFT = 32;
    inline constexpr int32_t WVR_ALIGNBOTTOM = 64;
    inline constexpr int32_t WVR_ALIGNRIGHT = 128;
    inline constexpr int32_t WVR_HREDRAW = 256;
    inline constexpr int32_t WVR_VREDRAW = 512;
    inline constexpr int32_t WVR_REDRAW = 768;
    inline constexpr int32_t WVR_VALIDRECTS = 1024;
    inline constexpr int32_t MK_LBUTTON = 1;
    inline constexpr int32_t MK_RBUTTON = 2;
    inline constexpr int32_t MK_SHIFT = 4;
    inline constexpr int32_t MK_CONTROL = 8;
    inline constexpr int32_t MK_MBUTTON = 16;
    inline constexpr int32_t MK_XBUTTON1 = 32;
    inline constexpr int32_t MK_XBUTTON2 = 64;
    inline constexpr uint32_t TME_HOVER = 0x1;
    inline constexpr uint32_t TME_LEAVE = 0x2;
    inline constexpr uint32_t TME_NONCLIENT = 0x10;
    inline constexpr uint32_t TME_QUERY = 0x40000000;
    inline constexpr uint32_t TME_CANCEL = 0x80000000;
    inline constexpr uint32_t HOVER_DEFAULT = 0xffffffff;
    inline constexpr uint32_t WS_OVERLAPPED = 0x0;
    inline constexpr uint32_t WS_POPUP = 0x80000000;
    inline constexpr uint32_t WS_CHILD = 0x40000000;
    inline constexpr uint32_t WS_MINIMIZE = 0x20000000;
    inline constexpr uint32_t WS_VISIBLE = 0x10000000;
    inline constexpr uint32_t WS_DISABLED = 0x8000000;
    inline constexpr uint32_t WS_CLIPSIBLINGS = 0x4000000;
    inline constexpr uint32_t WS_CLIPCHILDREN = 0x2000000;
    inline constexpr uint32_t WS_MAXIMIZE = 0x1000000;
    inline constexpr uint32_t WS_CAPTION = 0xc00000;
    inline constexpr uint32_t WS_BORDER = 0x800000;
    inline constexpr uint32_t WS_DLGFRAME = 0x400000;
    inline constexpr uint32_t WS_VSCROLL = 0x200000;
    inline constexpr uint32_t WS_HSCROLL = 0x100000;
    inline constexpr uint32_t WS_SYSMENU = 0x80000;
    inline constexpr uint32_t WS_THICKFRAME = 0x40000;
    inline constexpr uint32_t WS_GROUP = 0x20000;
    inline constexpr uint32_t WS_TABSTOP = 0x10000;
    inline constexpr uint32_t WS_MINIMIZEBOX = 0x20000;
    inline constexpr uint32_t WS_MAXIMIZEBOX = 0x10000;
    inline constexpr uint32_t WS_TILED = 0x0;
    inline constexpr uint32_t WS_ICONIC = 0x20000000;
    inline constexpr uint32_t WS_SIZEBOX = 0x40000;
    inline constexpr uint32_t WS_TILEDWINDOW = 0xcf0000;
    inline constexpr uint32_t WS_OVERLAPPEDWINDOW = 0xcf0000;
    inline constexpr uint32_t WS_POPUPWINDOW = 0x80880000;
    inline constexpr uint32_t WS_CHILDWINDOW = 0x40000000;
    inline constexpr int32_t WS_EX_DLGMODALFRAME = 1;
    inline constexpr int32_t WS_EX_NOPARENTNOTIFY = 4;
    inline constexpr int32_t WS_EX_TOPMOST = 8;
    inline constexpr int32_t WS_EX_ACCEPTFILES = 16;
    inline constexpr int32_t WS_EX_TRANSPARENT = 32;
    inline constexpr int32_t WS_EX_MDICHILD = 64;
    inline constexpr int32_t WS_EX_TOOLWINDOW = 128;
    inline constexpr int32_t WS_EX_WINDOWEDGE = 256;
    inline constexpr int32_t WS_EX_CLIENTEDGE = 512;
    inline constexpr int32_t WS_EX_CONTEXTHELP = 1024;
    inline constexpr int32_t WS_EX_RIGHT = 4096;
    inline constexpr int32_t WS_EX_LEFT = 0;
    inline constexpr int32_t WS_EX_RTLREADING = 8192;
    inline constexpr int32_t WS_EX_LTRREADING = 0;
    inline constexpr int32_t WS_EX_LEFTSCROLLBAR = 16384;
    inline constexpr int32_t WS_EX_RIGHTSCROLLBAR = 0;
    inline constexpr int32_t WS_EX_CONTROLPARENT = 65536;
    inline constexpr int32_t WS_EX_STATICEDGE = 131072;
    inline constexpr int32_t WS_EX_APPWINDOW = 262144;
    inline constexpr int32_t WS_EX_OVERLAPPEDWINDOW = 768;
    inline constexpr int32_t WS_EX_PALETTEWINDOW = 392;
    inline constexpr int32_t WS_EX_NOINHERITLAYOUT = 1048576;
    inline constexpr int32_t WS_EX_NOREDIRECTIONBITMAP = 2097152;
    inline constexpr int32_t WS_EX_LAYOUTRTL = 4194304;
    inline constexpr int32_t WS_EX_COMPOSITED = 33554432;
    inline constexpr int32_t WS_EX_NOACTIVATE = 134217728;
    inline constexpr int32_t CS_VREDRAW = 1;
    inline constexpr int32_t CS_HREDRAW = 2;
    inline constexpr int32_t CS_DBLCLKS = 8;
    inline constexpr int32_t CS_OWNDC = 32;
    inline constexpr int32_t CS_CLASSDC = 64;
    inline constexpr int32_t CS_PARENTDC = 128;
    inline constexpr int32_t CS_NOCLOSE = 512;
    inline constexpr int32_t CS_SAVEBITS = 2048;
    inline constexpr int32_t CS_BYTEALIGNCLIENT = 4096;
    inline constexpr int32_t CS_BYTEALIGNWINDOW = 8192;
    inline constexpr int32_t CS_GLOBALCLASS = 16384;
    inline constexpr int32_t CS_IME = 65536;
    inline constexpr int32_t CS_DROPSHADOW = 131072;
    inline constexpr int32_t PRF_CHECKVISIBLE = 1;
    inline constexpr int32_t PRF_NONCLIENT = 2;
    inline constexpr int32_t PRF_CLIENT = 4;
    inline constexpr int32_t PRF_ERASEBKGND = 8;
    inline constexpr int32_t PRF_CHILDREN = 16;
    inline constexpr int32_t PRF_OWNED = 32;
    inline constexpr int32_t BDR_RAISEDOUTER = 1;
    inline constexpr int32_t BDR_SUNKENOUTER = 2;
    inline constexpr int32_t BDR_RAISEDINNER = 4;
    inline constexpr int32_t BDR_SUNKENINNER = 8;
    inline constexpr int32_t BDR_OUTER = 3;
    inline constexpr int32_t BDR_INNER = 12;
    inline constexpr int32_t BDR_RAISED = 5;
    inline constexpr int32_t BDR_SUNKEN = 10;
    inline constexpr int32_t EDGE_RAISED = 5;
    inline constexpr int32_t EDGE_SUNKEN = 10;
    inline constexpr int32_t EDGE_ETCHED = 6;
    inline constexpr int32_t EDGE_BUMP = 9;
    inline constexpr int32_t BF_LEFT = 1;
    inline constexpr int32_t BF_TOP = 2;
    inline constexpr int32_t BF_RIGHT = 4;
    inline constexpr int32_t BF_BOTTOM = 8;
    inline constexpr int32_t BF_TOPLEFT = 3;
    inline constexpr int32_t BF_TOPRIGHT = 6;
    inline constexpr int32_t BF_BOTTOMLEFT = 9;
    inline constexpr int32_t BF_BOTTOMRIGHT = 12;
    inline constexpr int32_t BF_RECT = 15;
    inline constexpr int32_t BF_DIAGONAL = 16;
    inline constexpr int32_t BF_DIAGONAL_ENDTOPRIGHT = 22;
    inline constexpr int32_t BF_DIAGONAL_ENDTOPLEFT = 19;
    inline constexpr int32_t BF_DIAGONAL_ENDBOTTOMLEFT = 25;
    inline constexpr int32_t BF_DIAGONAL_ENDBOTTOMRIGHT = 28;
    inline constexpr int32_t BF_MIDDLE = 2048;
    inline constexpr int32_t BF_SOFT = 4096;
    inline constexpr int32_t BF_ADJUST = 8192;
    inline constexpr int32_t BF_FLAT = 16384;
    inline constexpr int32_t BF_MONO = 32768;
    inline constexpr int32_t DFC_CAPTION = 1;
    inline constexpr int32_t DFC_MENU = 2;
    inline constexpr int32_t DFC_SCROLL = 3;
    inline constexpr int32_t DFC_BUTTON = 4;
    inline constexpr int32_t DFC_POPUPMENU = 5;
    inline constexpr int32_t DFCS_CAPTIONCLOSE = 0;
    inline constexpr int32_t DFCS_CAPTIONMIN = 1;
    inline constexpr int32_t DFCS_CAPTIONMAX = 2;
    inline constexpr int32_t DFCS_CAPTIONRESTORE = 3;
    inline constexpr int32_t DFCS_CAPTIONHELP = 4;
    inline constexpr int32_t DFCS_MENUARROW = 0;
    inline constexpr int32_t DFCS_MENUCHECK = 1;
    inline constexpr int32_t DFCS_MENUBULLET = 2;
    inline constexpr int32_t DFCS_MENUARROWRIGHT = 4;
    inline constexpr int32_t DFCS_SCROLLUP = 0;
    inline constexpr int32_t DFCS_SCROLLDOWN = 1;
    inline constexpr int32_t DFCS_SCROLLLEFT = 2;
    inline constexpr int32_t DFCS_SCROLLRIGHT = 3;
    inline constexpr int32_t DFCS_SCROLLCOMBOBOX = 5;
    inline constexpr int32_t DFCS_SCROLLSIZEGRIP = 8;
    inline constexpr int32_t DFCS_SCROLLSIZEGRIPRIGHT = 16;
    inline constexpr int32_t DFCS_BUTTONCHECK = 0;
    inline constexpr int32_t DFCS_BUTTONRADIOIMAGE = 1;
    inline constexpr int32_t DFCS_BUTTONRADIOMASK = 2;
    inline constexpr int32_t DFCS_BUTTONRADIO = 4;
    inline constexpr int32_t DFCS_BUTTON3STATE = 8;
    inline constexpr int32_t DFCS_BUTTONPUSH = 16;
    inline constexpr int32_t DFCS_INACTIVE = 256;
    inline constexpr int32_t DFCS_PUSHED = 512;
    inline constexpr int32_t DFCS_CHECKED = 1024;
    inline constexpr int32_t DFCS_TRANSPARENT = 2048;
    inline constexpr int32_t DFCS_HOT = 4096;
    inline constexpr int32_t DFCS_ADJUSTRECT = 8192;
    inline constexpr int32_t DFCS_FLAT = 16384;
    inline constexpr int32_t DFCS_MONO = 32768;
    inline constexpr int32_t DC_ACTIVE = 1;
    inline constexpr int32_t DC_SMALLCAP = 2;
    inline constexpr int32_t DC_ICON = 4;
    inline constexpr int32_t DC_TEXT = 8;
    inline constexpr int32_t DC_INBUTTON = 16;
    inline constexpr int32_t DC_GRADIENT = 32;
    inline constexpr int32_t DC_BUTTONS = 4096;
    inline constexpr int32_t IDANI_OPEN = 1;
    inline constexpr int32_t IDANI_CAPTION = 3;
    inline constexpr int32_t CF_TEXT = 1;
    inline constexpr int32_t CF_BITMAP = 2;
    inline constexpr int32_t CF_METAFILEPICT = 3;
    inline constexpr int32_t CF_SYLK = 4;
    inline constexpr int32_t CF_DIF = 5;
    inline constexpr int32_t CF_TIFF = 6;
    inline constexpr int32_t CF_OEMTEXT = 7;
    inline constexpr int32_t CF_DIB = 8;
    inline constexpr int32_t CF_PALETTE = 9;
    inline constexpr int32_t CF_PENDATA = 10;
    inline constexpr int32_t CF_RIFF = 11;
    inline constexpr int32_t CF_WAVE = 12;
    inline constexpr int32_t CF_UNICODETEXT = 13;
    inline constexpr int32_t CF_ENHMETAFILE = 14;
    inline constexpr int32_t CF_HDROP = 15;
    inline constexpr int32_t CF_LOCALE = 16;
    inline constexpr int32_t CF_DIBV5 = 17;
    inline constexpr int32_t CF_MAX = 18;
    inline constexpr int32_t CF_OWNERDISPLAY = 128;
    inline constexpr int32_t CF_DSPTEXT = 129;
    inline constexpr int32_t CF_DSPBITMAP = 130;
    inline constexpr int32_t CF_DSPMETAFILEPICT = 131;
    inline constexpr int32_t CF_DSPENHMETAFILE = 142;
    inline constexpr int32_t CF_PRIVATEFIRST = 512;
    inline constexpr int32_t CF_PRIVATELAST = 767;
    inline constexpr int32_t CF_GDIOBJFIRST = 768;
    inline constexpr int32_t CF_GDIOBJLAST = 1023;
    inline constexpr int32_t FVIRTKEY = 1;
    inline constexpr int32_t FNOINVERT = 2;
    inline constexpr int32_t FSHIFT = 4;
    inline constexpr int32_t FCONTROL = 8;
    inline constexpr int32_t FALT = 16;
    inline constexpr int32_t WPF_SETMINPOSITION = 1;
    inline constexpr int32_t WPF_RESTORETOMAXIMIZED = 2;
    inline constexpr int32_t WPF_ASYNCWINDOWPLACEMENT = 4;
    inline constexpr int32_t ODT_MENU = 1;
    inline constexpr int32_t ODT_LISTBOX = 2;
    inline constexpr int32_t ODT_COMBOBOX = 3;
    inline constexpr int32_t ODT_BUTTON = 4;
    inline constexpr int32_t ODT_STATIC = 5;
    inline constexpr int32_t ODA_DRAWENTIRE = 1;
    inline constexpr int32_t ODA_SELECT = 2;
    inline constexpr int32_t ODA_FOCUS = 4;
    inline constexpr int32_t ODS_SELECTED = 1;
    inline constexpr int32_t ODS_GRAYED = 2;
    inline constexpr int32_t ODS_DISABLED = 4;
    inline constexpr int32_t ODS_CHECKED = 8;
    inline constexpr int32_t ODS_FOCUS = 16;
    inline constexpr int32_t ODS_DEFAULT = 32;
    inline constexpr int32_t ODS_COMBOBOXEDIT = 4096;
    inline constexpr int32_t ODS_HOTLIGHT = 64;
    inline constexpr int32_t ODS_INACTIVE = 128;
    inline constexpr int32_t ODS_NOACCEL = 256;
    inline constexpr int32_t ODS_NOFOCUSRECT = 512;
    inline constexpr int32_t PM_NOREMOVE = 0;
    inline constexpr int32_t PM_REMOVE = 1;
    inline constexpr int32_t PM_NOYIELD = 2;
    inline constexpr int32_t PM_QS_INPUT = 470220800;
    inline constexpr int32_t PM_QS_POSTMESSAGE = 9961472;
    inline constexpr int32_t PM_QS_PAINT = 2097152;
    inline constexpr int32_t PM_QS_SENDMESSAGE = 4194304;
    inline constexpr int32_t MOD_ALT = 1;
    inline constexpr int32_t MOD_CONTROL = 2;
    inline constexpr int32_t MOD_SHIFT = 4;
    inline constexpr int32_t MOD_WIN = 8;
    inline constexpr int32_t MOD_NOREPEAT = 16384;
    inline constexpr int32_t IDHOT_SNAPWINDOW = -1;
    inline constexpr int32_t IDHOT_SNAPDESKTOP = -2;
    inline constexpr uint32_t ENDSESSION_CLOSEAPP = 0x1;
    inline constexpr uint32_t ENDSESSION_CRITICAL = 0x40000000;
    inline constexpr uint32_t ENDSESSION_LOGOFF = 0x80000000;
    inline constexpr int32_t EWX_LOGOFF = 0;
    inline constexpr int32_t EWX_SHUTDOWN = 1;
    inline constexpr int32_t EWX_REBOOT = 2;
    inline constexpr int32_t EWX_FORCE = 4;
    inline constexpr int32_t EWX_POWEROFF = 8;
    inline constexpr int32_t EWX_FORCEIFHUNG = 16;
    inline constexpr int32_t EWX_QUICKRESOLVE = 32;
    inline constexpr int32_t EWX_RESTARTAPPS = 64;
    inline constexpr int32_t EWX_HYBRID_SHUTDOWN = 4194304;
    inline constexpr int32_t EWX_BOOTOPTIONS = 16777216;
    inline constexpr int32_t EWX_ARSO = 67108864;
    inline constexpr int32_t BSM_ALLCOMPONENTS = 0;
    inline constexpr int32_t BSM_VXDS = 1;
    inline constexpr int32_t BSM_NETDRIVER = 2;
    inline constexpr int32_t BSM_INSTALLABLEDRIVERS = 4;
    inline constexpr int32_t BSM_APPLICATIONS = 8;
    inline constexpr int32_t BSM_ALLDESKTOPS = 16;
    inline constexpr int32_t BSF_QUERY = 1;
    inline constexpr int32_t BSF_IGNORECURRENTTASK = 2;
    inline constexpr int32_t BSF_FLUSHDISK = 4;
    inline constexpr int32_t BSF_NOHANG = 8;
    inline constexpr int32_t BSF_POSTMESSAGE = 16;
    inline constexpr int32_t BSF_FORCEIFHUNG = 32;
    inline constexpr int32_t BSF_NOTIMEOUTIFNOTHUNG = 64;
    inline constexpr int32_t BSF_ALLOWSFW = 128;
    inline constexpr int32_t BSF_SENDNOTIFYMESSAGE = 256;
    inline constexpr int32_t BSF_RETURNHDESK = 512;
    inline constexpr int32_t BSF_LUID = 1024;
    inline constexpr int32_t BROADCAST_QUERY_DENY = 1112363332;
    inline constexpr int32_t DEVICE_NOTIFY_WINDOW_HANDLE = 0;
    inline constexpr int32_t DEVICE_NOTIFY_SERVICE_HANDLE = 1;
    inline constexpr int32_t DEVICE_NOTIFY_ALL_INTERFACE_CLASSES = 4;
    inline constexpr int32_t HWND_BROADCAST = 65535;
    inline constexpr int32_t HWND_MESSAGE = -3;
    inline constexpr int32_t ISMEX_NOSEND = 0;
    inline constexpr int32_t ISMEX_SEND = 1;
    inline constexpr int32_t ISMEX_NOTIFY = 2;
    inline constexpr int32_t ISMEX_CALLBACK = 4;
    inline constexpr int32_t ISMEX_REPLIED = 8;
    inline constexpr int32_t CW_USEDEFAULT = -2147483648;
    inline constexpr int32_t HWND_DESKTOP = 0;
    inline constexpr int32_t PW_CLIENTONLY = 1;
    inline constexpr int32_t PW_RENDERFULLCONTENT = 2;
    inline constexpr int32_t LWA_COLORKEY = 1;
    inline constexpr int32_t LWA_ALPHA = 2;
    inline constexpr int32_t ULW_COLORKEY = 1;
    inline constexpr int32_t ULW_ALPHA = 2;
    inline constexpr int32_t ULW_OPAQUE = 4;
    inline constexpr int32_t ULW_EX_NORESIZE = 8;
    inline constexpr int32_t FLASHW_STOP = 0;
    inline constexpr int32_t FLASHW_CAPTION = 1;
    inline constexpr int32_t FLASHW_TRAY = 2;
    inline constexpr int32_t FLASHW_ALL = 3;
    inline constexpr int32_t FLASHW_TIMER = 4;
    inline constexpr int32_t FLASHW_TIMERNOFG = 12;
    inline constexpr int32_t WDA_NONE = 0;
    inline constexpr int32_t WDA_MONITOR = 1;
    inline constexpr int32_t WDA_EXCLUDEFROMCAPTURE = 17;
    inline constexpr int32_t SWP_NOSIZE = 1;
    inline constexpr int32_t SWP_NOMOVE = 2;
    inline constexpr int32_t SWP_NOZORDER = 4;
    inline constexpr int32_t SWP_NOREDRAW = 8;
    inline constexpr int32_t SWP_NOACTIVATE = 16;
    inline constexpr int32_t SWP_FRAMECHANGED = 32;
    inline constexpr int32_t SWP_SHOWWINDOW = 64;
    inline constexpr int32_t SWP_HIDEWINDOW = 128;
    inline constexpr int32_t SWP_NOCOPYBITS = 256;
    inline constexpr int32_t SWP_NOOWNERZORDER = 512;
    inline constexpr int32_t SWP_NOSENDCHANGING = 1024;
    inline constexpr int32_t SWP_DRAWFRAME = 32;
    inline constexpr int32_t SWP_NOREPOSITION = 512;
    inline constexpr int32_t SWP_DEFERERASE = 8192;
    inline constexpr int32_t SWP_ASYNCWINDOWPOS = 16384;
    inline constexpr int32_t HWND_TOP = 0;
    inline constexpr int32_t HWND_BOTTOM = 1;
    inline constexpr int32_t HWND_TOPMOST = -1;
    inline constexpr int32_t HWND_NOTOPMOST = -2;
    inline constexpr int32_t DLGWINDOWEXTRA = 30;
    inline constexpr int32_t KEYEVENTF_EXTENDEDKEY = 1;
    inline constexpr int32_t KEYEVENTF_KEYUP = 2;
    inline constexpr int32_t KEYEVENTF_UNICODE = 4;
    inline constexpr int32_t KEYEVENTF_SCANCODE = 8;
    inline constexpr int32_t MOUSEEVENTF_MOVE = 1;
    inline constexpr int32_t MOUSEEVENTF_LEFTDOWN = 2;
    inline constexpr int32_t MOUSEEVENTF_LEFTUP = 4;
    inline constexpr int32_t MOUSEEVENTF_RIGHTDOWN = 8;
    inline constexpr int32_t MOUSEEVENTF_RIGHTUP = 16;
    inline constexpr int32_t MOUSEEVENTF_MIDDLEDOWN = 32;
    inline constexpr int32_t MOUSEEVENTF_MIDDLEUP = 64;
    inline constexpr int32_t MOUSEEVENTF_XDOWN = 128;
    inline constexpr int32_t MOUSEEVENTF_XUP = 256;
    inline constexpr int32_t MOUSEEVENTF_WHEEL = 2048;
    inline constexpr int32_t MOUSEEVENTF_HWHEEL = 4096;
    inline constexpr int32_t MOUSEEVENTF_MOVE_NOCOALESCE = 8192;
    inline constexpr int32_t MOUSEEVENTF_VIRTUALDESK = 16384;
    inline constexpr int32_t MOUSEEVENTF_ABSOLUTE = 32768;
    inline constexpr int32_t INPUT_MOUSE = 0;
    inline constexpr int32_t INPUT_KEYBOARD = 1;
    inline constexpr int32_t INPUT_HARDWARE = 2;
    inline constexpr int32_t TOUCHEVENTF_MOVE = 1;
    inline constexpr int32_t TOUCHEVENTF_DOWN = 2;
    inline constexpr int32_t TOUCHEVENTF_UP = 4;
    inline constexpr int32_t TOUCHEVENTF_INRANGE = 8;
    inline constexpr int32_t TOUCHEVENTF_PRIMARY = 16;
    inline constexpr int32_t TOUCHEVENTF_NOCOALESCE = 32;
    inline constexpr int32_t TOUCHEVENTF_PEN = 64;
    inline constexpr int32_t TOUCHEVENTF_PALM = 128;
    inline constexpr int32_t TOUCHINPUTMASKF_TIMEFROMSYSTEM = 1;
    inline constexpr int32_t TOUCHINPUTMASKF_EXTRAINFO = 2;
    inline constexpr int32_t TOUCHINPUTMASKF_CONTACTAREA = 4;
    inline constexpr int32_t TWF_FINETOUCH = 1;
    inline constexpr int32_t TWF_WANTPALM = 2;
    inline constexpr int32_t POINTER_FLAG_NONE = 0;
    inline constexpr int32_t POINTER_FLAG_NEW = 1;
    inline constexpr int32_t POINTER_FLAG_INRANGE = 2;
    inline constexpr int32_t POINTER_FLAG_INCONTACT = 4;
    inline constexpr int32_t POINTER_FLAG_FIRSTBUTTON = 16;
    inline constexpr int32_t POINTER_FLAG_SECONDBUTTON = 32;
    inline constexpr int32_t POINTER_FLAG_THIRDBUTTON = 64;
    inline constexpr int32_t POINTER_FLAG_FOURTHBUTTON = 128;
    inline constexpr int32_t POINTER_FLAG_FIFTHBUTTON = 256;
    inline constexpr int32_t POINTER_FLAG_PRIMARY = 8192;
    inline constexpr int32_t POINTER_FLAG_CONFIDENCE = 16384;
    inline constexpr int32_t POINTER_FLAG_CANCELED = 32768;
    inline constexpr int32_t POINTER_FLAG_DOWN = 65536;
    inline constexpr int32_t POINTER_FLAG_UPDATE = 131072;
    inline constexpr int32_t POINTER_FLAG_UP = 262144;
    inline constexpr int32_t POINTER_FLAG_WHEEL = 524288;
    inline constexpr int32_t POINTER_FLAG_HWHEEL = 1048576;
    inline constexpr int32_t POINTER_FLAG_CAPTURECHANGED = 2097152;
    inline constexpr int32_t POINTER_FLAG_HASTRANSFORM = 4194304;
    inline constexpr int32_t POINTER_MOD_SHIFT = 4;
    inline constexpr int32_t POINTER_MOD_CTRL = 8;
    inline constexpr int32_t TOUCH_FLAG_NONE = 0;
    inline constexpr int32_t TOUCH_MASK_NONE = 0;
    inline constexpr int32_t TOUCH_MASK_CONTACTAREA = 1;
    inline constexpr int32_t TOUCH_MASK_ORIENTATION = 2;
    inline constexpr int32_t TOUCH_MASK_PRESSURE = 4;
    inline constexpr int32_t PEN_FLAG_NONE = 0;
    inline constexpr int32_t PEN_FLAG_BARREL = 1;
    inline constexpr int32_t PEN_FLAG_INVERTED = 2;
    inline constexpr int32_t PEN_FLAG_ERASER = 4;
    inline constexpr int32_t PEN_MASK_NONE = 0;
    inline constexpr int32_t PEN_MASK_PRESSURE = 1;
    inline constexpr int32_t PEN_MASK_ROTATION = 2;
    inline constexpr int32_t PEN_MASK_TILT_X = 4;
    inline constexpr int32_t PEN_MASK_TILT_Y = 8;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_NEW = 1;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_INRANGE = 2;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_INCONTACT = 4;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_FIRSTBUTTON = 16;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_SECONDBUTTON = 32;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_THIRDBUTTON = 64;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_FOURTHBUTTON = 128;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_FIFTHBUTTON = 256;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_PRIMARY = 8192;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_CONFIDENCE = 16384;
    inline constexpr int32_t POINTER_MESSAGE_FLAG_CANCELED = 32768;
    inline constexpr int32_t PA_ACTIVATE = 1;
    inline constexpr int32_t PA_NOACTIVATE = 3;
    inline constexpr int32_t MAX_TOUCH_COUNT = 256;
    inline constexpr int32_t TOUCH_FEEDBACK_DEFAULT = 1;
    inline constexpr int32_t TOUCH_FEEDBACK_INDIRECT = 2;
    inline constexpr int32_t TOUCH_FEEDBACK_NONE = 3;
    inline constexpr int32_t TOUCH_HIT_TESTING_DEFAULT = 0;
    inline constexpr int32_t TOUCH_HIT_TESTING_CLIENT = 1;
    inline constexpr int32_t TOUCH_HIT_TESTING_NONE = 2;
    inline constexpr int32_t TOUCH_HIT_TESTING_PROXIMITY_CLOSEST = 0;
    inline constexpr int32_t TOUCH_HIT_TESTING_PROXIMITY_FARTHEST = 4095;
    inline constexpr int32_t GWFS_INCLUDE_ANCESTORS = 1;
    inline constexpr int32_t MAPVK_VK_TO_VSC = 0;
    inline constexpr int32_t MAPVK_VSC_TO_VK = 1;
    inline constexpr int32_t MAPVK_VK_TO_CHAR = 2;
    inline constexpr int32_t MAPVK_VSC_TO_VK_EX = 3;
    inline constexpr int32_t MAPVK_VK_TO_VSC_EX = 4;
    inline constexpr int32_t MWMO_WAITALL = 1;
    inline constexpr int32_t MWMO_ALERTABLE = 2;
    inline constexpr int32_t MWMO_INPUTAVAILABLE = 4;
    inline constexpr int32_t QS_KEY = 1;
    inline constexpr int32_t QS_MOUSEMOVE = 2;
    inline constexpr int32_t QS_MOUSEBUTTON = 4;
    inline constexpr int32_t QS_POSTMESSAGE = 8;
    inline constexpr int32_t QS_TIMER = 16;
    inline constexpr int32_t QS_PAINT = 32;
    inline constexpr int32_t QS_SENDMESSAGE = 64;
    inline constexpr int32_t QS_HOTKEY = 128;
    inline constexpr int32_t QS_ALLPOSTMESSAGE = 256;
    inline constexpr int32_t QS_RAWINPUT = 1024;
    inline constexpr int32_t QS_TOUCH = 2048;
    inline constexpr int32_t QS_POINTER = 4096;
    inline constexpr int32_t QS_MOUSE = 6;
    inline constexpr int32_t QS_INPUT = 7175;
    inline constexpr int32_t QS_ALLEVENTS = 7359;
    inline constexpr int32_t QS_ALLINPUT = 7423;
    inline constexpr int32_t USER_TIMER_MAXIMUM = 2147483647;
    inline constexpr int32_t USER_TIMER_MINIMUM = 10;
    inline constexpr uint32_t TIMERV_DEFAULT_COALESCING = 0x0;
    inline constexpr uint32_t TIMERV_NO_COALESCING = 0xffffffff;
    inline constexpr uint32_t TIMERV_COALESCING_MIN = 0x1;
    inline constexpr uint32_t TIMERV_COALESCING_MAX = 0x7ffffff5;
    inline constexpr int32_t SM_CXSCREEN = 0;
    inline constexpr int32_t SM_CYSCREEN = 1;
    inline constexpr int32_t SM_CXVSCROLL = 2;
    inline constexpr int32_t SM_CYHSCROLL = 3;
    inline constexpr int32_t SM_CYCAPTION = 4;
    inline constexpr int32_t SM_CXBORDER = 5;
    inline constexpr int32_t SM_CYBORDER = 6;
    inline constexpr int32_t SM_CXDLGFRAME = 7;
    inline constexpr int32_t SM_CYDLGFRAME = 8;
    inline constexpr int32_t SM_CYVTHUMB = 9;
    inline constexpr int32_t SM_CXHTHUMB = 10;
    inline constexpr int32_t SM_CXICON = 11;
    inline constexpr int32_t SM_CYICON = 12;
    inline constexpr int32_t SM_CXCURSOR = 13;
    inline constexpr int32_t SM_CYCURSOR = 14;
    inline constexpr int32_t SM_CYMENU = 15;
    inline constexpr int32_t SM_CXFULLSCREEN = 16;
    inline constexpr int32_t SM_CYFULLSCREEN = 17;
    inline constexpr int32_t SM_CYKANJIWINDOW = 18;
    inline constexpr int32_t SM_MOUSEPRESENT = 19;
    inline constexpr int32_t SM_CYVSCROLL = 20;
    inline constexpr int32_t SM_CXHSCROLL = 21;
    inline constexpr int32_t SM_DEBUG = 22;
    inline constexpr int32_t SM_SWAPBUTTON = 23;
    inline constexpr int32_t SM_RESERVED1 = 24;
    inline constexpr int32_t SM_RESERVED2 = 25;
    inline constexpr int32_t SM_RESERVED3 = 26;
    inline constexpr int32_t SM_RESERVED4 = 27;
    inline constexpr int32_t SM_CXMIN = 28;
    inline constexpr int32_t SM_CYMIN = 29;
    inline constexpr int32_t SM_CXSIZE = 30;
    inline constexpr int32_t SM_CYSIZE = 31;
    inline constexpr int32_t SM_CXFRAME = 32;
    inline constexpr int32_t SM_CYFRAME = 33;
    inline constexpr int32_t SM_CXMINTRACK = 34;
    inline constexpr int32_t SM_CYMINTRACK = 35;
    inline constexpr int32_t SM_CXDOUBLECLK = 36;
    inline constexpr int32_t SM_CYDOUBLECLK = 37;
    inline constexpr int32_t SM_CXICONSPACING = 38;
    inline constexpr int32_t SM_CYICONSPACING = 39;
    inline constexpr int32_t SM_MENUDROPALIGNMENT = 40;
    inline constexpr int32_t SM_PENWINDOWS = 41;
    inline constexpr int32_t SM_DBCSENABLED = 42;
    inline constexpr int32_t SM_CMOUSEBUTTONS = 43;
    inline constexpr int32_t SM_CXFIXEDFRAME = 7;
    inline constexpr int32_t SM_CYFIXEDFRAME = 8;
    inline constexpr int32_t SM_CXSIZEFRAME = 32;
    inline constexpr int32_t SM_CYSIZEFRAME = 33;
    inline constexpr int32_t SM_SECURE = 44;
    inline constexpr int32_t SM_CXEDGE = 45;
    inline constexpr int32_t SM_CYEDGE = 46;
    inline constexpr int32_t SM_CXMINSPACING = 47;
    inline constexpr int32_t SM_CYMINSPACING = 48;
    inline constexpr int32_t SM_CXSMICON = 49;
    inline constexpr int32_t SM_CYSMICON = 50;
    inline constexpr int32_t SM_CYSMCAPTION = 51;
    inline constexpr int32_t SM_CXSMSIZE = 52;
    inline constexpr int32_t SM_CYSMSIZE = 53;
    inline constexpr int32_t SM_CXMENUSIZE = 54;
    inline constexpr int32_t SM_CYMENUSIZE = 55;
    inline constexpr int32_t SM_ARRANGE = 56;
    inline constexpr int32_t SM_CXMINIMIZED = 57;
    inline constexpr int32_t SM_CYMINIMIZED = 58;
    inline constexpr int32_t SM_CXMAXTRACK = 59;
    inline constexpr int32_t SM_CYMAXTRACK = 60;
    inline constexpr int32_t SM_CXMAXIMIZED = 61;
    inline constexpr int32_t SM_CYMAXIMIZED = 62;
    inline constexpr int32_t SM_NETWORK = 63;
    inline constexpr int32_t SM_CLEANBOOT = 67;
    inline constexpr int32_t SM_CXDRAG = 68;
    inline constexpr int32_t SM_CYDRAG = 69;
    inline constexpr int32_t SM_SHOWSOUNDS = 70;
    inline constexpr int32_t SM_CXMENUCHECK = 71;
    inline constexpr int32_t SM_CYMENUCHECK = 72;
    inline constexpr int32_t SM_SLOWMACHINE = 73;
    inline constexpr int32_t SM_MIDEASTENABLED = 74;
    inline constexpr int32_t SM_MOUSEWHEELPRESENT = 75;
    inline constexpr int32_t SM_XVIRTUALSCREEN = 76;
    inline constexpr int32_t SM_YVIRTUALSCREEN = 77;
    inline constexpr int32_t SM_CXVIRTUALSCREEN = 78;
    inline constexpr int32_t SM_CYVIRTUALSCREEN = 79;
    inline constexpr int32_t SM_CMONITORS = 80;
    inline constexpr int32_t SM_SAMEDISPLAYFORMAT = 81;
    inline constexpr int32_t SM_IMMENABLED = 82;
    inline constexpr int32_t SM_CXFOCUSBORDER = 83;
    inline constexpr int32_t SM_CYFOCUSBORDER = 84;
    inline constexpr int32_t SM_TABLETPC = 86;
    inline constexpr int32_t SM_MEDIACENTER = 87;
    inline constexpr int32_t SM_STARTER = 88;
    inline constexpr int32_t SM_SERVERR2 = 89;
    inline constexpr int32_t SM_MOUSEHORIZONTALWHEELPRESENT = 91;
    inline constexpr int32_t SM_CXPADDEDBORDER = 92;
    inline constexpr int32_t SM_DIGITIZER = 94;
    inline constexpr int32_t SM_MAXIMUMTOUCHES = 95;
    inline constexpr int32_t SM_CMETRICS = 97;
    inline constexpr int32_t SM_REMOTESESSION = 4096;
    inline constexpr int32_t SM_SHUTTINGDOWN = 8192;
    inline constexpr int32_t SM_REMOTECONTROL = 8193;
    inline constexpr int32_t SM_CARETBLINKINGENABLED = 8194;
    inline constexpr int32_t SM_CONVERTIBLESLATEMODE = 8195;
    inline constexpr int32_t SM_SYSTEMDOCKED = 8196;
    inline constexpr int32_t PMB_ACTIVE = 1;
    inline constexpr int32_t MNC_IGNORE = 0;
    inline constexpr int32_t MNC_CLOSE = 1;
    inline constexpr int32_t MNC_EXECUTE = 2;
    inline constexpr int32_t MNC_SELECT = 3;
    inline constexpr uint32_t MNS_NOCHECK = 0x80000000;
    inline constexpr uint32_t MNS_MODELESS = 0x40000000;
    inline constexpr uint32_t MNS_DRAGDROP = 0x20000000;
    inline constexpr uint32_t MNS_AUTODISMISS = 0x10000000;
    inline constexpr uint32_t MNS_NOTIFYBYPOS = 0x8000000;
    inline constexpr uint32_t MNS_CHECKORBMP = 0x4000000;
    inline constexpr uint32_t MIM_MAXHEIGHT = 0x1;
    inline constexpr uint32_t MIM_BACKGROUND = 0x2;
    inline constexpr uint32_t MIM_HELPID = 0x4;
    inline constexpr uint32_t MIM_MENUDATA = 0x8;
    inline constexpr uint32_t MIM_STYLE = 0x10;
    inline constexpr uint32_t MIM_APPLYTOSUBMENUS = 0x80000000;
    inline constexpr int32_t MND_CONTINUE = 0;
    inline constexpr int32_t MND_ENDMENU = 1;
    inline constexpr int32_t MNGOF_TOPGAP = 1;
    inline constexpr int32_t MNGOF_BOTTOMGAP = 2;
    inline constexpr int32_t MNGO_NOINTERFACE = 0;
    inline constexpr int32_t MNGO_NOERROR = 1;
    inline constexpr int32_t MIIM_STATE = 1;
    inline constexpr int32_t MIIM_ID = 2;
    inline constexpr int32_t MIIM_SUBMENU = 4;
    inline constexpr int32_t MIIM_CHECKMARKS = 8;
    inline constexpr int32_t MIIM_TYPE = 16;
    inline constexpr int32_t MIIM_DATA = 32;
    inline constexpr int32_t MIIM_STRING = 64;
    inline constexpr int32_t MIIM_BITMAP = 128;
    inline constexpr int32_t MIIM_FTYPE = 256;
    inline constexpr int32_t HBMMENU_CALLBACK = -1;
    inline constexpr int32_t HBMMENU_SYSTEM = 1;
    inline constexpr int32_t HBMMENU_MBAR_RESTORE = 2;
    inline constexpr int32_t HBMMENU_MBAR_MINIMIZE = 3;
    inline constexpr int32_t HBMMENU_MBAR_CLOSE = 5;
    inline constexpr int32_t HBMMENU_MBAR_CLOSE_D = 6;
    inline constexpr int32_t HBMMENU_MBAR_MINIMIZE_D = 7;
    inline constexpr int32_t HBMMENU_POPUP_CLOSE = 8;
    inline constexpr int32_t HBMMENU_POPUP_RESTORE = 9;
    inline constexpr int32_t HBMMENU_POPUP_MAXIMIZE = 10;
    inline constexpr int32_t HBMMENU_POPUP_MINIMIZE = 11;
    inline constexpr int32_t TPM_LEFTBUTTON = 0;
    inline constexpr int32_t TPM_RIGHTBUTTON = 2;
    inline constexpr int32_t TPM_LEFTALIGN = 0;
    inline constexpr int32_t TPM_CENTERALIGN = 4;
    inline constexpr int32_t TPM_RIGHTALIGN = 8;
    inline constexpr int32_t TPM_TOPALIGN = 0;
    inline constexpr int32_t TPM_VCENTERALIGN = 16;
    inline constexpr int32_t TPM_BOTTOMALIGN = 32;
    inline constexpr int32_t TPM_HORIZONTAL = 0;
    inline constexpr int32_t TPM_VERTICAL = 64;
    inline constexpr int32_t TPM_NONOTIFY = 128;
    inline constexpr int32_t TPM_RETURNCMD = 256;
    inline constexpr int32_t TPM_RECURSE = 1;
    inline constexpr int32_t TPM_HORPOSANIMATION = 1024;
    inline constexpr int32_t TPM_HORNEGANIMATION = 2048;
    inline constexpr int32_t TPM_VERPOSANIMATION = 4096;
    inline constexpr int32_t TPM_VERNEGANIMATION = 8192;
    inline constexpr int32_t TPM_NOANIMATION = 16384;
    inline constexpr int32_t TPM_LAYOUTRTL = 32768;
    inline constexpr int32_t TPM_WORKAREA = 65536;
    inline constexpr int32_t DOF_EXECUTABLE = 32769;
    inline constexpr int32_t DOF_DOCUMENT = 32770;
    inline constexpr int32_t DOF_DIRECTORY = 32771;
    inline constexpr int32_t DOF_MULTIPLE = 32772;
    inline constexpr int32_t DOF_PROGMAN = 1;
    inline constexpr int32_t DOF_SHELLDATA = 2;
    inline constexpr int32_t DO_DROPFILE = 1162627398;
    inline constexpr int32_t DO_PRINTFILE = 1414419024;
    inline constexpr int32_t DT_TOP = 0;
    inline constexpr int32_t DT_LEFT = 0;
    inline constexpr int32_t DT_CENTER = 1;
    inline constexpr int32_t DT_RIGHT = 2;
    inline constexpr int32_t DT_VCENTER = 4;
    inline constexpr int32_t DT_BOTTOM = 8;
    inline constexpr int32_t DT_WORDBREAK = 16;
    inline constexpr int32_t DT_SINGLELINE = 32;
    inline constexpr int32_t DT_EXPANDTABS = 64;
    inline constexpr int32_t DT_TABSTOP = 128;
    inline constexpr int32_t DT_NOCLIP = 256;
    inline constexpr int32_t DT_EXTERNALLEADING = 512;
    inline constexpr int32_t DT_CALCRECT = 1024;
    inline constexpr int32_t DT_NOPREFIX = 2048;
    inline constexpr int32_t DT_INTERNAL = 4096;
    inline constexpr int32_t DT_EDITCONTROL = 8192;
    inline constexpr int32_t DT_PATH_ELLIPSIS = 16384;
    inline constexpr int32_t DT_END_ELLIPSIS = 32768;
    inline constexpr int32_t DT_MODIFYSTRING = 65536;
    inline constexpr int32_t DT_RTLREADING = 131072;
    inline constexpr int32_t DT_WORD_ELLIPSIS = 262144;
    inline constexpr int32_t DT_NOFULLWIDTHCHARBREAK = 524288;
    inline constexpr int32_t DT_HIDEPREFIX = 1048576;
    inline constexpr int32_t DT_PREFIXONLY = 2097152;
    inline constexpr int32_t DST_COMPLEX = 0;
    inline constexpr int32_t DST_TEXT = 1;
    inline constexpr int32_t DST_PREFIXTEXT = 2;
    inline constexpr int32_t DST_ICON = 3;
    inline constexpr int32_t DST_BITMAP = 4;
    inline constexpr int32_t DSS_NORMAL = 0;
    inline constexpr int32_t DSS_UNION = 16;
    inline constexpr int32_t DSS_DISABLED = 32;
    inline constexpr int32_t DSS_MONO = 128;
    inline constexpr int32_t DSS_HIDEPREFIX = 512;
    inline constexpr int32_t DSS_PREFIXONLY = 1024;
    inline constexpr int32_t DSS_RIGHT = 32768;
    inline constexpr uint32_t ASFW_ANY = 0xffffffff;
    inline constexpr int32_t LSFW_LOCK = 1;
    inline constexpr int32_t LSFW_UNLOCK = 2;
    inline constexpr int32_t DCX_WINDOW = 1;
    inline constexpr int32_t DCX_CACHE = 2;
    inline constexpr int32_t DCX_NORESETATTRS = 4;
    inline constexpr int32_t DCX_CLIPCHILDREN = 8;
    inline constexpr int32_t DCX_CLIPSIBLINGS = 16;
    inline constexpr int32_t DCX_PARENTCLIP = 32;
    inline constexpr int32_t DCX_EXCLUDERGN = 64;
    inline constexpr int32_t DCX_INTERSECTRGN = 128;
    inline constexpr int32_t DCX_EXCLUDEUPDATE = 256;
    inline constexpr int32_t DCX_INTERSECTUPDATE = 512;
    inline constexpr int32_t DCX_LOCKWINDOWUPDATE = 1024;
    inline constexpr int32_t DCX_VALIDATE = 2097152;
    inline constexpr int32_t RDW_INVALIDATE = 1;
    inline constexpr int32_t RDW_INTERNALPAINT = 2;
    inline constexpr int32_t RDW_ERASE = 4;
    inline constexpr int32_t RDW_VALIDATE = 8;
    inline constexpr int32_t RDW_NOINTERNALPAINT = 16;
    inline constexpr int32_t RDW_NOERASE = 32;
    inline constexpr int32_t RDW_NOCHILDREN = 64;
    inline constexpr int32_t RDW_ALLCHILDREN = 128;
    inline constexpr int32_t RDW_UPDATENOW = 256;
    inline constexpr int32_t RDW_ERASENOW = 512;
    inline constexpr int32_t RDW_FRAME = 1024;
    inline constexpr int32_t RDW_NOFRAME = 2048;
    inline constexpr int32_t SW_SCROLLCHILDREN = 1;
    inline constexpr int32_t SW_INVALIDATE = 2;
    inline constexpr int32_t SW_ERASE = 4;
    inline constexpr int32_t SW_SMOOTHSCROLL = 16;
    inline constexpr int32_t ESB_ENABLE_BOTH = 0;
    inline constexpr int32_t ESB_DISABLE_BOTH = 3;
    inline constexpr int32_t ESB_DISABLE_LEFT = 1;
    inline constexpr int32_t ESB_DISABLE_RIGHT = 2;
    inline constexpr int32_t ESB_DISABLE_UP = 1;
    inline constexpr int32_t ESB_DISABLE_DOWN = 2;
    inline constexpr int32_t ESB_DISABLE_LTUP = 1;
    inline constexpr int32_t ESB_DISABLE_RTDN = 2;
    inline constexpr int32_t HELPINFO_WINDOW = 1;
    inline constexpr int32_t HELPINFO_MENUITEM = 2;
    inline constexpr int32_t MB_OK = 0;
    inline constexpr int32_t MB_OKCANCEL = 1;
    inline constexpr int32_t MB_ABORTRETRYIGNORE = 2;
    inline constexpr int32_t MB_YESNOCANCEL = 3;
    inline constexpr int32_t MB_YESNO = 4;
    inline constexpr int32_t MB_RETRYCANCEL = 5;
    inline constexpr int32_t MB_CANCELTRYCONTINUE = 6;
    inline constexpr int32_t MB_ICONHAND = 16;
    inline constexpr int32_t MB_ICONQUESTION = 32;
    inline constexpr int32_t MB_ICONEXCLAMATION = 48;
    inline constexpr int32_t MB_ICONASTERISK = 64;
    inline constexpr int32_t MB_USERICON = 128;
    inline constexpr int32_t MB_ICONWARNING = 48;
    inline constexpr int32_t MB_ICONERROR = 16;
    inline constexpr int32_t MB_ICONINFORMATION = 64;
    inline constexpr int32_t MB_ICONSTOP = 16;
    inline constexpr int32_t MB_DEFBUTTON1 = 0;
    inline constexpr int32_t MB_DEFBUTTON2 = 256;
    inline constexpr int32_t MB_DEFBUTTON3 = 512;
    inline constexpr int32_t MB_DEFBUTTON4 = 768;
    inline constexpr int32_t MB_APPLMODAL = 0;
    inline constexpr int32_t MB_SYSTEMMODAL = 4096;
    inline constexpr int32_t MB_TASKMODAL = 8192;
    inline constexpr int32_t MB_HELP = 16384;
    inline constexpr int32_t MB_NOFOCUS = 32768;
    inline constexpr int32_t MB_SETFOREGROUND = 65536;
    inline constexpr int32_t MB_DEFAULT_DESKTOP_ONLY = 131072;
    inline constexpr int32_t MB_TOPMOST = 262144;
    inline constexpr int32_t MB_RIGHT = 524288;
    inline constexpr int32_t MB_RTLREADING = 1048576;
    inline constexpr int32_t MB_SERVICE_NOTIFICATION = 2097152;
    inline constexpr int32_t MB_SERVICE_NOTIFICATION_NT3X = 262144;
    inline constexpr int32_t MB_TYPEMASK = 15;
    inline constexpr int32_t MB_ICONMASK = 240;
    inline constexpr int32_t MB_DEFMASK = 3840;
    inline constexpr int32_t MB_MODEMASK = 12288;
    inline constexpr int32_t MB_MISCMASK = 49152;
    inline constexpr int32_t CWP_ALL = 0;
    inline constexpr int32_t CWP_SKIPINVISIBLE = 1;
    inline constexpr int32_t CWP_SKIPDISABLED = 2;
    inline constexpr int32_t CWP_SKIPTRANSPARENT = 4;
    inline constexpr int32_t CTLCOLOR_MSGBOX = 0;
    inline constexpr int32_t CTLCOLOR_EDIT = 1;
    inline constexpr int32_t CTLCOLOR_LISTBOX = 2;
    inline constexpr int32_t CTLCOLOR_BTN = 3;
    inline constexpr int32_t CTLCOLOR_DLG = 4;
    inline constexpr int32_t CTLCOLOR_SCROLLBAR = 5;
    inline constexpr int32_t CTLCOLOR_STATIC = 6;
    inline constexpr int32_t CTLCOLOR_MAX = 7;
    inline constexpr int32_t COLOR_SCROLLBAR = 0;
    inline constexpr int32_t COLOR_BACKGROUND = 1;
    inline constexpr int32_t COLOR_ACTIVECAPTION = 2;
    inline constexpr int32_t COLOR_INACTIVECAPTION = 3;
    inline constexpr int32_t COLOR_MENU = 4;
    inline constexpr int32_t COLOR_WINDOW = 5;
    inline constexpr int32_t COLOR_WINDOWFRAME = 6;
    inline constexpr int32_t COLOR_MENUTEXT = 7;
    inline constexpr int32_t COLOR_WINDOWTEXT = 8;
    inline constexpr int32_t COLOR_CAPTIONTEXT = 9;
    inline constexpr int32_t COLOR_ACTIVEBORDER = 10;
    inline constexpr int32_t COLOR_INACTIVEBORDER = 11;
    inline constexpr int32_t COLOR_APPWORKSPACE = 12;
    inline constexpr int32_t COLOR_HIGHLIGHT = 13;
    inline constexpr int32_t COLOR_HIGHLIGHTTEXT = 14;
    inline constexpr int32_t COLOR_BTNFACE = 15;
    inline constexpr int32_t COLOR_BTNSHADOW = 16;
    inline constexpr int32_t COLOR_GRAYTEXT = 17;
    inline constexpr int32_t COLOR_BTNTEXT = 18;
    inline constexpr int32_t COLOR_INACTIVECAPTIONTEXT = 19;
    inline constexpr int32_t COLOR_BTNHIGHLIGHT = 20;
    inline constexpr int32_t COLOR_3DDKSHADOW = 21;
    inline constexpr int32_t COLOR_3DLIGHT = 22;
    inline constexpr int32_t COLOR_INFOTEXT = 23;
    inline constexpr int32_t COLOR_INFOBK = 24;
    inline constexpr int32_t COLOR_HOTLIGHT = 26;
    inline constexpr int32_t COLOR_GRADIENTACTIVECAPTION = 27;
    inline constexpr int32_t COLOR_GRADIENTINACTIVECAPTION = 28;
    inline constexpr int32_t COLOR_MENUHILIGHT = 29;
    inline constexpr int32_t COLOR_MENUBAR = 30;
    inline constexpr int32_t COLOR_DESKTOP = 1;
    inline constexpr int32_t COLOR_3DFACE = 15;
    inline constexpr int32_t COLOR_3DSHADOW = 16;
    inline constexpr int32_t COLOR_3DHIGHLIGHT = 20;
    inline constexpr int32_t COLOR_3DHILIGHT = 20;
    inline constexpr int32_t COLOR_BTNHILIGHT = 20;
    inline constexpr int32_t GW_HWNDFIRST = 0;
    inline constexpr int32_t GW_HWNDLAST = 1;
    inline constexpr int32_t GW_HWNDNEXT = 2;
    inline constexpr int32_t GW_HWNDPREV = 3;
    inline constexpr int32_t GW_OWNER = 4;
    inline constexpr int32_t GW_CHILD = 5;
    inline constexpr int32_t GW_ENABLEDPOPUP = 6;
    inline constexpr int32_t GW_MAX = 6;
    inline constexpr int32_t MF_INSERT = 0;
    inline constexpr int32_t MF_CHANGE = 128;
    inline constexpr int32_t MF_APPEND = 256;
    inline constexpr int32_t MF_DELETE = 512;
    inline constexpr int32_t MF_REMOVE = 4096;
    inline constexpr int32_t MF_BYCOMMAND = 0;
    inline constexpr int32_t MF_BYPOSITION = 1024;
    inline constexpr int32_t MF_SEPARATOR = 2048;
    inline constexpr int32_t MF_ENABLED = 0;
    inline constexpr int32_t MF_GRAYED = 1;
    inline constexpr int32_t MF_DISABLED = 2;
    inline constexpr int32_t MF_UNCHECKED = 0;
    inline constexpr int32_t MF_CHECKED = 8;
    inline constexpr int32_t MF_USECHECKBITMAPS = 512;
    inline constexpr int32_t MF_STRING = 0;
    inline constexpr int32_t MF_BITMAP = 4;
    inline constexpr int32_t MF_OWNERDRAW = 256;
    inline constexpr int32_t MF_POPUP = 16;
    inline constexpr int32_t MF_MENUBARBREAK = 32;
    inline constexpr int32_t MF_MENUBREAK = 64;
    inline constexpr int32_t MF_UNHILITE = 0;
    inline constexpr int32_t MF_HILITE = 128;
    inline constexpr int32_t MF_DEFAULT = 4096;
    inline constexpr int32_t MF_SYSMENU = 8192;
    inline constexpr int32_t MF_HELP = 16384;
    inline constexpr int32_t MF_RIGHTJUSTIFY = 16384;
    inline constexpr int32_t MF_MOUSESELECT = 32768;
    inline constexpr int32_t MF_END = 128;
    inline constexpr int32_t MFT_STRING = 0;
    inline constexpr int32_t MFT_BITMAP = 4;
    inline constexpr int32_t MFT_MENUBARBREAK = 32;
    inline constexpr int32_t MFT_MENUBREAK = 64;
    inline constexpr int32_t MFT_OWNERDRAW = 256;
    inline constexpr int32_t MFT_RADIOCHECK = 512;
    inline constexpr int32_t MFT_SEPARATOR = 2048;
    inline constexpr int32_t MFT_RIGHTORDER = 8192;
    inline constexpr int32_t MFT_RIGHTJUSTIFY = 16384;
    inline constexpr int32_t MFS_GRAYED = 3;
    inline constexpr int32_t MFS_DISABLED = 3;
    inline constexpr int32_t MFS_CHECKED = 8;
    inline constexpr int32_t MFS_HILITE = 128;
    inline constexpr int32_t MFS_ENABLED = 0;
    inline constexpr int32_t MFS_UNCHECKED = 0;
    inline constexpr int32_t MFS_UNHILITE = 0;
    inline constexpr int32_t MFS_DEFAULT = 4096;
    inline constexpr int32_t SC_SIZE = 61440;
    inline constexpr int32_t SC_MOVE = 61456;
    inline constexpr int32_t SC_MINIMIZE = 61472;
    inline constexpr int32_t SC_MAXIMIZE = 61488;
    inline constexpr int32_t SC_NEXTWINDOW = 61504;
    inline constexpr int32_t SC_PREVWINDOW = 61520;
    inline constexpr int32_t SC_CLOSE = 61536;
    inline constexpr int32_t SC_VSCROLL = 61552;
    inline constexpr int32_t SC_HSCROLL = 61568;
    inline constexpr int32_t SC_MOUSEMENU = 61584;
    inline constexpr int32_t SC_KEYMENU = 61696;
    inline constexpr int32_t SC_ARRANGE = 61712;
    inline constexpr int32_t SC_RESTORE = 61728;
    inline constexpr int32_t SC_TASKLIST = 61744;
    inline constexpr int32_t SC_SCREENSAVE = 61760;
    inline constexpr int32_t SC_HOTKEY = 61776;
    inline constexpr int32_t SC_DEFAULT = 61792;
    inline constexpr int32_t SC_MONITORPOWER = 61808;
    inline constexpr int32_t SC_CONTEXTHELP = 61824;
    inline constexpr int32_t SC_SEPARATOR = 61455;
    inline constexpr int32_t SCF_ISSECURE = 1;
    inline constexpr int32_t SC_ICON = 61472;
    inline constexpr int32_t SC_ZOOM = 61488;
    inline constexpr uint16_t IDC_ARROW = 0x7f00;
    inline constexpr uint16_t IDC_IBEAM = 0x7f01;
    inline constexpr uint16_t IDC_WAIT = 0x7f02;
    inline constexpr uint16_t IDC_CROSS = 0x7f03;
    inline constexpr uint16_t IDC_UPARROW = 0x7f04;
    inline constexpr uint16_t IDC_SIZE = 0x7f80;
    inline constexpr uint16_t IDC_ICON = 0x7f81;
    inline constexpr uint16_t IDC_SIZENWSE = 0x7f82;
    inline constexpr uint16_t IDC_SIZENESW = 0x7f83;
    inline constexpr uint16_t IDC_SIZEWE = 0x7f84;
    inline constexpr uint16_t IDC_SIZENS = 0x7f85;
    inline constexpr uint16_t IDC_SIZEALL = 0x7f86;
    inline constexpr uint16_t IDC_NO = 0x7f88;
    inline constexpr uint16_t IDC_HAND = 0x7f89;
    inline constexpr int32_t IDC_APPSTARTING = 32650;
    inline constexpr int32_t IDC_HELP = 32651;
    inline constexpr int32_t IDC_PIN = 32671;
    inline constexpr int32_t IDC_PERSON = 32672;
    inline constexpr int32_t IMAGE_BITMAP = 0;
    inline constexpr int32_t IMAGE_ICON = 1;
    inline constexpr int32_t IMAGE_CURSOR = 2;
    inline constexpr int32_t IMAGE_ENHMETAFILE = 3;
    inline constexpr int32_t LR_DEFAULTCOLOR = 0;
    inline constexpr int32_t LR_MONOCHROME = 1;
    inline constexpr int32_t LR_COLOR = 2;
    inline constexpr int32_t LR_COPYRETURNORG = 4;
    inline constexpr int32_t LR_COPYDELETEORG = 8;
    inline constexpr int32_t LR_LOADFROMFILE = 16;
    inline constexpr int32_t LR_LOADTRANSPARENT = 32;
    inline constexpr int32_t LR_DEFAULTSIZE = 64;
    inline constexpr int32_t LR_VGACOLOR = 128;
    inline constexpr int32_t LR_LOADMAP3DCOLORS = 4096;
    inline constexpr int32_t LR_CREATEDIBSECTION = 8192;
    inline constexpr int32_t LR_COPYFROMRESOURCE = 16384;
    inline constexpr int32_t LR_SHARED = 32768;
    inline constexpr int32_t DI_MASK = 1;
    inline constexpr int32_t DI_IMAGE = 2;
    inline constexpr int32_t DI_NORMAL = 3;
    inline constexpr int32_t DI_COMPAT = 4;
    inline constexpr int32_t DI_DEFAULTSIZE = 8;
    inline constexpr int32_t DI_NOMIRROR = 16;
    inline constexpr int32_t RES_ICON = 1;
    inline constexpr int32_t RES_CURSOR = 2;
    inline constexpr int32_t OBM_CLOSE = 32754;
    inline constexpr int32_t OBM_UPARROW = 32753;
    inline constexpr int32_t OBM_DNARROW = 32752;
    inline constexpr int32_t OBM_RGARROW = 32751;
    inline constexpr int32_t OBM_LFARROW = 32750;
    inline constexpr int32_t OBM_REDUCE = 32749;
    inline constexpr int32_t OBM_ZOOM = 32748;
    inline constexpr int32_t OBM_RESTORE = 32747;
    inline constexpr int32_t OBM_REDUCED = 32746;
    inline constexpr int32_t OBM_ZOOMD = 32745;
    inline constexpr int32_t OBM_RESTORED = 32744;
    inline constexpr int32_t OBM_UPARROWD = 32743;
    inline constexpr int32_t OBM_DNARROWD = 32742;
    inline constexpr int32_t OBM_RGARROWD = 32741;
    inline constexpr int32_t OBM_LFARROWD = 32740;
    inline constexpr int32_t OBM_MNARROW = 32739;
    inline constexpr int32_t OBM_COMBO = 32738;
    inline constexpr int32_t OBM_UPARROWI = 32737;
    inline constexpr int32_t OBM_DNARROWI = 32736;
    inline constexpr int32_t OBM_RGARROWI = 32735;
    inline constexpr int32_t OBM_LFARROWI = 32734;
    inline constexpr int32_t OBM_OLD_CLOSE = 32767;
    inline constexpr int32_t OBM_SIZE = 32766;
    inline constexpr int32_t OBM_OLD_UPARROW = 32765;
    inline constexpr int32_t OBM_OLD_DNARROW = 32764;
    inline constexpr int32_t OBM_OLD_RGARROW = 32763;
    inline constexpr int32_t OBM_OLD_LFARROW = 32762;
    inline constexpr int32_t OBM_BTSIZE = 32761;
    inline constexpr int32_t OBM_CHECK = 32760;
    inline constexpr int32_t OBM_CHECKBOXES = 32759;
    inline constexpr int32_t OBM_BTNCORNERS = 32758;
    inline constexpr int32_t OBM_OLD_REDUCE = 32757;
    inline constexpr int32_t OBM_OLD_ZOOM = 32756;
    inline constexpr int32_t OBM_OLD_RESTORE = 32755;
    inline constexpr int32_t OCR_NORMAL = 32512;
    inline constexpr int32_t OCR_IBEAM = 32513;
    inline constexpr int32_t OCR_WAIT = 32514;
    inline constexpr int32_t OCR_CROSS = 32515;
    inline constexpr int32_t OCR_UP = 32516;
    inline constexpr int32_t OCR_SIZE = 32640;
    inline constexpr int32_t OCR_ICON = 32641;
    inline constexpr int32_t OCR_SIZENWSE = 32642;
    inline constexpr int32_t OCR_SIZENESW = 32643;
    inline constexpr int32_t OCR_SIZEWE = 32644;
    inline constexpr int32_t OCR_SIZENS = 32645;
    inline constexpr int32_t OCR_SIZEALL = 32646;
    inline constexpr int32_t OCR_ICOCUR = 32647;
    inline constexpr int32_t OCR_NO = 32648;
    inline constexpr int32_t OCR_HAND = 32649;
    inline constexpr int32_t OCR_APPSTARTING = 32650;
    inline constexpr int32_t OIC_SAMPLE = 32512;
    inline constexpr int32_t OIC_HAND = 32513;
    inline constexpr int32_t OIC_QUES = 32514;
    inline constexpr int32_t OIC_BANG = 32515;
    inline constexpr int32_t OIC_NOTE = 32516;
    inline constexpr int32_t OIC_WINLOGO = 32517;
    inline constexpr int32_t OIC_WARNING = 32515;
    inline constexpr int32_t OIC_ERROR = 32513;
    inline constexpr int32_t OIC_INFORMATION = 32516;
    inline constexpr int32_t OIC_SHIELD = 32518;
    inline constexpr int32_t ORD_LANGDRIVER = 1;
    inline constexpr uint16_t IDI_APPLICATION = 0x7f00;
    inline constexpr uint16_t IDI_HAND = 0x7f01;
    inline constexpr uint16_t IDI_QUESTION = 0x7f02;
    inline constexpr uint16_t IDI_EXCLAMATION = 0x7f03;
    inline constexpr uint16_t IDI_ASTERISK = 0x7f04;
    inline constexpr uint16_t IDI_WINLOGO = 0x7f05;
    inline constexpr uint16_t IDI_SHIELD = 0x7f06;
    inline constexpr uint16_t IDI_WARNING = 0x7f03;
    inline constexpr uint16_t IDI_ERROR = 0x7f01;
    inline constexpr uint16_t IDI_INFORMATION = 0x7f04;
    inline constexpr int32_t IDOK = 1;
    inline constexpr int32_t IDCANCEL = 2;
    inline constexpr int32_t IDABORT = 3;
    inline constexpr int32_t IDRETRY = 4;
    inline constexpr int32_t IDIGNORE = 5;
    inline constexpr int32_t IDYES = 6;
    inline constexpr int32_t IDNO = 7;
    inline constexpr int32_t IDCLOSE = 8;
    inline constexpr int32_t IDHELP = 9;
    inline constexpr int32_t IDTRYAGAIN = 10;
    inline constexpr int32_t IDCONTINUE = 11;
    inline constexpr int32_t IDTIMEOUT = 32000;
    inline constexpr int32_t ES_LEFT = 0;
    inline constexpr int32_t ES_CENTER = 1;
    inline constexpr int32_t ES_RIGHT = 2;
    inline constexpr int32_t ES_MULTILINE = 4;
    inline constexpr int32_t ES_UPPERCASE = 8;
    inline constexpr int32_t ES_LOWERCASE = 16;
    inline constexpr int32_t ES_PASSWORD = 32;
    inline constexpr int32_t ES_AUTOVSCROLL = 64;
    inline constexpr int32_t ES_AUTOHSCROLL = 128;
    inline constexpr int32_t ES_NOHIDESEL = 256;
    inline constexpr int32_t ES_OEMCONVERT = 1024;
    inline constexpr int32_t ES_READONLY = 2048;
    inline constexpr int32_t ES_WANTRETURN = 4096;
    inline constexpr int32_t ES_NUMBER = 8192;
    inline constexpr int32_t EN_SETFOCUS = 256;
    inline constexpr int32_t EN_KILLFOCUS = 512;
    inline constexpr int32_t EN_CHANGE = 768;
    inline constexpr int32_t EN_UPDATE = 1024;
    inline constexpr int32_t EN_ERRSPACE = 1280;
    inline constexpr int32_t EN_MAXTEXT = 1281;
    inline constexpr int32_t EN_HSCROLL = 1537;
    inline constexpr int32_t EN_VSCROLL = 1538;
    inline constexpr int32_t EN_ALIGN_LTR_EC = 1792;
    inline constexpr int32_t EN_ALIGN_RTL_EC = 1793;
    inline constexpr int32_t EN_BEFORE_PASTE = 2048;
    inline constexpr int32_t EN_AFTER_PASTE = 2049;
    inline constexpr int32_t EC_LEFTMARGIN = 1;
    inline constexpr int32_t EC_RIGHTMARGIN = 2;
    inline constexpr int32_t EC_USEFONTINFO = 65535;
    inline constexpr int32_t EMSIS_COMPOSITIONSTRING = 1;
    inline constexpr int32_t EIMES_GETCOMPSTRATONCE = 1;
    inline constexpr int32_t EIMES_CANCELCOMPSTRINFOCUS = 2;
    inline constexpr int32_t EIMES_COMPLETECOMPSTRKILLFOCUS = 4;
    inline constexpr int32_t EM_GETSEL = 176;
    inline constexpr int32_t EM_SETSEL = 177;
    inline constexpr int32_t EM_GETRECT = 178;
    inline constexpr int32_t EM_SETRECT = 179;
    inline constexpr int32_t EM_SETRECTNP = 180;
    inline constexpr int32_t EM_SCROLL = 181;
    inline constexpr int32_t EM_LINESCROLL = 182;
    inline constexpr int32_t EM_SCROLLCARET = 183;
    inline constexpr int32_t EM_GETMODIFY = 184;
    inline constexpr int32_t EM_SETMODIFY = 185;
    inline constexpr int32_t EM_GETLINECOUNT = 186;
    inline constexpr int32_t EM_LINEINDEX = 187;
    inline constexpr int32_t EM_SETHANDLE = 188;
    inline constexpr int32_t EM_GETHANDLE = 189;
    inline constexpr int32_t EM_GETTHUMB = 190;
    inline constexpr int32_t EM_LINELENGTH = 193;
    inline constexpr int32_t EM_REPLACESEL = 194;
    inline constexpr int32_t EM_GETLINE = 196;
    inline constexpr int32_t EM_LIMITTEXT = 197;
    inline constexpr int32_t EM_CANUNDO = 198;
    inline constexpr int32_t EM_UNDO = 199;
    inline constexpr int32_t EM_FMTLINES = 200;
    inline constexpr int32_t EM_LINEFROMCHAR = 201;
    inline constexpr int32_t EM_SETTABSTOPS = 203;
    inline constexpr int32_t EM_SETPASSWORDCHAR = 204;
    inline constexpr int32_t EM_EMPTYUNDOBUFFER = 205;
    inline constexpr int32_t EM_GETFIRSTVISIBLELINE = 206;
    inline constexpr int32_t EM_SETREADONLY = 207;
    inline constexpr int32_t EM_SETWORDBREAKPROC = 208;
    inline constexpr int32_t EM_GETWORDBREAKPROC = 209;
    inline constexpr int32_t EM_GETPASSWORDCHAR = 210;
    inline constexpr int32_t EM_SETMARGINS = 211;
    inline constexpr int32_t EM_GETMARGINS = 212;
    inline constexpr int32_t EM_SETLIMITTEXT = 197;
    inline constexpr int32_t EM_GETLIMITTEXT = 213;
    inline constexpr int32_t EM_POSFROMCHAR = 214;
    inline constexpr int32_t EM_CHARFROMPOS = 215;
    inline constexpr int32_t EM_SETIMESTATUS = 216;
    inline constexpr int32_t EM_GETIMESTATUS = 217;
    inline constexpr int32_t EM_ENABLEFEATURE = 218;
    inline constexpr int32_t WB_LEFT = 0;
    inline constexpr int32_t WB_RIGHT = 1;
    inline constexpr int32_t WB_ISDELIMITER = 2;
    inline constexpr int32_t BS_PUSHBUTTON = 0;
    inline constexpr int32_t BS_DEFPUSHBUTTON = 1;
    inline constexpr int32_t BS_CHECKBOX = 2;
    inline constexpr int32_t BS_AUTOCHECKBOX = 3;
    inline constexpr int32_t BS_RADIOBUTTON = 4;
    inline constexpr int32_t BS_3STATE = 5;
    inline constexpr int32_t BS_AUTO3STATE = 6;
    inline constexpr int32_t BS_GROUPBOX = 7;
    inline constexpr int32_t BS_USERBUTTON = 8;
    inline constexpr int32_t BS_AUTORADIOBUTTON = 9;
    inline constexpr int32_t BS_PUSHBOX = 10;
    inline constexpr int32_t BS_OWNERDRAW = 11;
    inline constexpr int32_t BS_TYPEMASK = 15;
    inline constexpr int32_t BS_LEFTTEXT = 32;
    inline constexpr int32_t BS_TEXT = 0;
    inline constexpr int32_t BS_ICON = 64;
    inline constexpr int32_t BS_BITMAP = 128;
    inline constexpr int32_t BS_LEFT = 256;
    inline constexpr int32_t BS_RIGHT = 512;
    inline constexpr int32_t BS_CENTER = 768;
    inline constexpr int32_t BS_TOP = 1024;
    inline constexpr int32_t BS_BOTTOM = 2048;
    inline constexpr int32_t BS_VCENTER = 3072;
    inline constexpr int32_t BS_PUSHLIKE = 4096;
    inline constexpr int32_t BS_MULTILINE = 8192;
    inline constexpr int32_t BS_NOTIFY = 16384;
    inline constexpr int32_t BS_FLAT = 32768;
    inline constexpr int32_t BS_RIGHTBUTTON = 32;
    inline constexpr int32_t BN_CLICKED = 0;
    inline constexpr int32_t BN_PAINT = 1;
    inline constexpr int32_t BN_HILITE = 2;
    inline constexpr int32_t BN_UNHILITE = 3;
    inline constexpr int32_t BN_DISABLE = 4;
    inline constexpr int32_t BN_DOUBLECLICKED = 5;
    inline constexpr int32_t BN_PUSHED = 2;
    inline constexpr int32_t BN_UNPUSHED = 3;
    inline constexpr int32_t BN_DBLCLK = 5;
    inline constexpr int32_t BN_SETFOCUS = 6;
    inline constexpr int32_t BN_KILLFOCUS = 7;
    inline constexpr int32_t BM_GETCHECK = 240;
    inline constexpr int32_t BM_SETCHECK = 241;
    inline constexpr int32_t BM_GETSTATE = 242;
    inline constexpr int32_t BM_SETSTATE = 243;
    inline constexpr int32_t BM_SETSTYLE = 244;
    inline constexpr int32_t BM_CLICK = 245;
    inline constexpr int32_t BM_GETIMAGE = 246;
    inline constexpr int32_t BM_SETIMAGE = 247;
    inline constexpr int32_t BM_SETDONTCLICK = 248;
    inline constexpr int32_t BST_UNCHECKED = 0;
    inline constexpr int32_t BST_CHECKED = 1;
    inline constexpr int32_t BST_INDETERMINATE = 2;
    inline constexpr int32_t BST_PUSHED = 4;
    inline constexpr int32_t BST_FOCUS = 8;
    inline constexpr int32_t SS_LEFT = 0;
    inline constexpr int32_t SS_CENTER = 1;
    inline constexpr int32_t SS_RIGHT = 2;
    inline constexpr int32_t SS_ICON = 3;
    inline constexpr int32_t SS_BLACKRECT = 4;
    inline constexpr int32_t SS_GRAYRECT = 5;
    inline constexpr int32_t SS_WHITERECT = 6;
    inline constexpr int32_t SS_BLACKFRAME = 7;
    inline constexpr int32_t SS_GRAYFRAME = 8;
    inline constexpr int32_t SS_WHITEFRAME = 9;
    inline constexpr int32_t SS_USERITEM = 10;
    inline constexpr int32_t SS_SIMPLE = 11;
    inline constexpr int32_t SS_LEFTNOWORDWRAP = 12;
    inline constexpr int32_t SS_OWNERDRAW = 13;
    inline constexpr int32_t SS_BITMAP = 14;
    inline constexpr int32_t SS_ENHMETAFILE = 15;
    inline constexpr int32_t SS_ETCHEDHORZ = 16;
    inline constexpr int32_t SS_ETCHEDVERT = 17;
    inline constexpr int32_t SS_ETCHEDFRAME = 18;
    inline constexpr int32_t SS_TYPEMASK = 31;
    inline constexpr int32_t SS_REALSIZECONTROL = 64;
    inline constexpr int32_t SS_NOPREFIX = 128;
    inline constexpr int32_t SS_NOTIFY = 256;
    inline constexpr int32_t SS_CENTERIMAGE = 512;
    inline constexpr int32_t SS_RIGHTJUST = 1024;
    inline constexpr int32_t SS_REALSIZEIMAGE = 2048;
    inline constexpr int32_t SS_SUNKEN = 4096;
    inline constexpr int32_t SS_EDITCONTROL = 8192;
    inline constexpr int32_t SS_ENDELLIPSIS = 16384;
    inline constexpr int32_t SS_PATHELLIPSIS = 32768;
    inline constexpr int32_t SS_WORDELLIPSIS = 49152;
    inline constexpr int32_t SS_ELLIPSISMASK = 49152;
    inline constexpr int32_t STM_SETICON = 368;
    inline constexpr int32_t STM_GETICON = 369;
    inline constexpr int32_t STM_SETIMAGE = 370;
    inline constexpr int32_t STM_GETIMAGE = 371;
    inline constexpr int32_t STN_CLICKED = 0;
    inline constexpr int32_t STN_DBLCLK = 1;
    inline constexpr int32_t STN_ENABLE = 2;
    inline constexpr int32_t STN_DISABLE = 3;
    inline constexpr int32_t STM_MSGMAX = 372;
    inline constexpr uint16_t WC_DIALOG = 0x8002;
    inline constexpr int32_t DWL_MSGRESULT = 0;
    inline constexpr int32_t DWL_DLGPROC = 4;
    inline constexpr int32_t DWL_USER = 8;
    inline constexpr int32_t DWLP_MSGRESULT = 0;
    inline constexpr int32_t DDL_READWRITE = 0;
    inline constexpr int32_t DDL_READONLY = 1;
    inline constexpr int32_t DDL_HIDDEN = 2;
    inline constexpr int32_t DDL_SYSTEM = 4;
    inline constexpr int32_t DDL_DIRECTORY = 16;
    inline constexpr int32_t DDL_ARCHIVE = 32;
    inline constexpr int32_t DDL_POSTMSGS = 8192;
    inline constexpr int32_t DDL_DRIVES = 16384;
    inline constexpr int32_t DDL_EXCLUSIVE = 32768;
    inline constexpr int32_t DS_ABSALIGN = 1;
    inline constexpr int32_t DS_SYSMODAL = 2;
    inline constexpr int32_t DS_LOCALEDIT = 32;
    inline constexpr int32_t DS_SETFONT = 64;
    inline constexpr int32_t DS_MODALFRAME = 128;
    inline constexpr int32_t DS_NOIDLEMSG = 256;
    inline constexpr int32_t DS_SETFOREGROUND = 512;
    inline constexpr int32_t DS_3DLOOK = 4;
    inline constexpr int32_t DS_FIXEDSYS = 8;
    inline constexpr int32_t DS_NOFAILCREATE = 16;
    inline constexpr int32_t DS_CONTROL = 1024;
    inline constexpr int32_t DS_CENTER = 2048;
    inline constexpr int32_t DS_CENTERMOUSE = 4096;
    inline constexpr int32_t DS_CONTEXTHELP = 8192;
    inline constexpr int32_t DS_SHELLFONT = 72;
    inline constexpr int32_t DS_USEPIXELS = 32768;
    inline constexpr int32_t DM_GETDEFID = 1024;
    inline constexpr int32_t DM_SETDEFID = 1025;
    inline constexpr int32_t DM_REPOSITION = 1026;
    inline constexpr int32_t DC_HASDEFID = 21323;
    inline constexpr int32_t DLGC_WANTARROWS = 1;
    inline constexpr int32_t DLGC_WANTTAB = 2;
    inline constexpr int32_t DLGC_WANTALLKEYS = 4;
    inline constexpr int32_t DLGC_WANTMESSAGE = 4;
    inline constexpr int32_t DLGC_HASSETSEL = 8;
    inline constexpr int32_t DLGC_DEFPUSHBUTTON = 16;
    inline constexpr int32_t DLGC_UNDEFPUSHBUTTON = 32;
    inline constexpr int32_t DLGC_RADIOBUTTON = 64;
    inline constexpr int32_t DLGC_WANTCHARS = 128;
    inline constexpr int32_t DLGC_STATIC = 256;
    inline constexpr int32_t DLGC_BUTTON = 8192;
    inline constexpr int32_t LB_CTLCODE = 0;
    inline constexpr int32_t LB_OKAY = 0;
    inline constexpr int32_t LB_ERR = -1;
    inline constexpr int32_t LB_ERRSPACE = -2;
    inline constexpr int32_t LBN_ERRSPACE = -2;
    inline constexpr int32_t LBN_SELCHANGE = 1;
    inline constexpr int32_t LBN_DBLCLK = 2;
    inline constexpr int32_t LBN_SELCANCEL = 3;
    inline constexpr int32_t LBN_SETFOCUS = 4;
    inline constexpr int32_t LBN_KILLFOCUS = 5;
    inline constexpr int32_t LB_ADDSTRING = 384;
    inline constexpr int32_t LB_INSERTSTRING = 385;
    inline constexpr int32_t LB_DELETESTRING = 386;
    inline constexpr int32_t LB_SELITEMRANGEEX = 387;
    inline constexpr int32_t LB_RESETCONTENT = 388;
    inline constexpr int32_t LB_SETSEL = 389;
    inline constexpr int32_t LB_SETCURSEL = 390;
    inline constexpr int32_t LB_GETSEL = 391;
    inline constexpr int32_t LB_GETCURSEL = 392;
    inline constexpr int32_t LB_GETTEXT = 393;
    inline constexpr int32_t LB_GETTEXTLEN = 394;
    inline constexpr int32_t LB_GETCOUNT = 395;
    inline constexpr int32_t LB_SELECTSTRING = 396;
    inline constexpr int32_t LB_DIR = 397;
    inline constexpr int32_t LB_GETTOPINDEX = 398;
    inline constexpr int32_t LB_FINDSTRING = 399;
    inline constexpr int32_t LB_GETSELCOUNT = 400;
    inline constexpr int32_t LB_GETSELITEMS = 401;
    inline constexpr int32_t LB_SETTABSTOPS = 402;
    inline constexpr int32_t LB_GETHORIZONTALEXTENT = 403;
    inline constexpr int32_t LB_SETHORIZONTALEXTENT = 404;
    inline constexpr int32_t LB_SETCOLUMNWIDTH = 405;
    inline constexpr int32_t LB_ADDFILE = 406;
    inline constexpr int32_t LB_SETTOPINDEX = 407;
    inline constexpr int32_t LB_GETITEMRECT = 408;
    inline constexpr int32_t LB_GETITEMDATA = 409;
    inline constexpr int32_t LB_SETITEMDATA = 410;
    inline constexpr int32_t LB_SELITEMRANGE = 411;
    inline constexpr int32_t LB_SETANCHORINDEX = 412;
    inline constexpr int32_t LB_GETANCHORINDEX = 413;
    inline constexpr int32_t LB_SETCARETINDEX = 414;
    inline constexpr int32_t LB_GETCARETINDEX = 415;
    inline constexpr int32_t LB_SETITEMHEIGHT = 416;
    inline constexpr int32_t LB_GETITEMHEIGHT = 417;
    inline constexpr int32_t LB_FINDSTRINGEXACT = 418;
    inline constexpr int32_t LB_SETLOCALE = 421;
    inline constexpr int32_t LB_GETLOCALE = 422;
    inline constexpr int32_t LB_SETCOUNT = 423;
    inline constexpr int32_t LB_INITSTORAGE = 424;
    inline constexpr int32_t LB_ITEMFROMPOINT = 425;
    inline constexpr int32_t LB_MULTIPLEADDSTRING = 433;
    inline constexpr int32_t LB_GETLISTBOXINFO = 434;
    inline constexpr int32_t LB_MSGMAX = 435;
    inline constexpr uint32_t LBS_NOTIFY = 0x1;
    inline constexpr uint32_t LBS_SORT = 0x2;
    inline constexpr uint32_t LBS_NOREDRAW = 0x4;
    inline constexpr uint32_t LBS_MULTIPLESEL = 0x8;
    inline constexpr uint32_t LBS_OWNERDRAWFIXED = 0x10;
    inline constexpr uint32_t LBS_OWNERDRAWVARIABLE = 0x20;
    inline constexpr uint32_t LBS_HASSTRINGS = 0x40;
    inline constexpr uint32_t LBS_USETABSTOPS = 0x80;
    inline constexpr uint32_t LBS_NOINTEGRALHEIGHT = 0x100;
    inline constexpr uint32_t LBS_MULTICOLUMN = 0x200;
    inline constexpr uint32_t LBS_WANTKEYBOARDINPUT = 0x400;
    inline constexpr uint32_t LBS_EXTENDEDSEL = 0x800;
    inline constexpr uint32_t LBS_DISABLENOSCROLL = 0x1000;
    inline constexpr uint32_t LBS_NODATA = 0x2000;
    inline constexpr uint32_t LBS_NOSEL = 0x4000;
    inline constexpr uint32_t LBS_COMBOBOX = 0x8000;
    inline constexpr uint32_t LBS_STANDARD = 0xa00003;
    inline constexpr int32_t CB_OKAY = 0;
    inline constexpr int32_t CB_ERR = -1;
    inline constexpr int32_t CB_ERRSPACE = -2;
    inline constexpr int32_t CBN_ERRSPACE = -1;
    inline constexpr int32_t CBN_SELCHANGE = 1;
    inline constexpr int32_t CBN_DBLCLK = 2;
    inline constexpr int32_t CBN_SETFOCUS = 3;
    inline constexpr int32_t CBN_KILLFOCUS = 4;
    inline constexpr int32_t CBN_EDITCHANGE = 5;
    inline constexpr int32_t CBN_EDITUPDATE = 6;
    inline constexpr int32_t CBN_DROPDOWN = 7;
    inline constexpr int32_t CBN_CLOSEUP = 8;
    inline constexpr int32_t CBN_SELENDOK = 9;
    inline constexpr int32_t CBN_SELENDCANCEL = 10;
    inline constexpr int32_t CBS_SIMPLE = 1;
    inline constexpr int32_t CBS_DROPDOWN = 2;
    inline constexpr int32_t CBS_DROPDOWNLIST = 3;
    inline constexpr int32_t CBS_OWNERDRAWFIXED = 16;
    inline constexpr int32_t CBS_OWNERDRAWVARIABLE = 32;
    inline constexpr int32_t CBS_AUTOHSCROLL = 64;
    inline constexpr int32_t CBS_OEMCONVERT = 128;
    inline constexpr int32_t CBS_SORT = 256;
    inline constexpr int32_t CBS_HASSTRINGS = 512;
    inline constexpr int32_t CBS_NOINTEGRALHEIGHT = 1024;
    inline constexpr int32_t CBS_DISABLENOSCROLL = 2048;
    inline constexpr int32_t CBS_UPPERCASE = 8192;
    inline constexpr int32_t CBS_LOWERCASE = 16384;
    inline constexpr int32_t CB_GETEDITSEL = 320;
    inline constexpr int32_t CB_LIMITTEXT = 321;
    inline constexpr int32_t CB_SETEDITSEL = 322;
    inline constexpr int32_t CB_ADDSTRING = 323;
    inline constexpr int32_t CB_DELETESTRING = 324;
    inline constexpr int32_t CB_DIR = 325;
    inline constexpr int32_t CB_GETCOUNT = 326;
    inline constexpr int32_t CB_GETCURSEL = 327;
    inline constexpr int32_t CB_GETLBTEXT = 328;
    inline constexpr int32_t CB_GETLBTEXTLEN = 329;
    inline constexpr int32_t CB_INSERTSTRING = 330;
    inline constexpr int32_t CB_RESETCONTENT = 331;
    inline constexpr int32_t CB_FINDSTRING = 332;
    inline constexpr int32_t CB_SELECTSTRING = 333;
    inline constexpr int32_t CB_SETCURSEL = 334;
    inline constexpr int32_t CB_SHOWDROPDOWN = 335;
    inline constexpr int32_t CB_GETITEMDATA = 336;
    inline constexpr int32_t CB_SETITEMDATA = 337;
    inline constexpr int32_t CB_GETDROPPEDCONTROLRECT = 338;
    inline constexpr int32_t CB_SETITEMHEIGHT = 339;
    inline constexpr int32_t CB_GETITEMHEIGHT = 340;
    inline constexpr int32_t CB_SETEXTENDEDUI = 341;
    inline constexpr int32_t CB_GETEXTENDEDUI = 342;
    inline constexpr int32_t CB_GETDROPPEDSTATE = 343;
    inline constexpr int32_t CB_FINDSTRINGEXACT = 344;
    inline constexpr int32_t CB_SETLOCALE = 345;
    inline constexpr int32_t CB_GETLOCALE = 346;
    inline constexpr int32_t CB_GETTOPINDEX = 347;
    inline constexpr int32_t CB_SETTOPINDEX = 348;
    inline constexpr int32_t CB_GETHORIZONTALEXTENT = 349;
    inline constexpr int32_t CB_SETHORIZONTALEXTENT = 350;
    inline constexpr int32_t CB_GETDROPPEDWIDTH = 351;
    inline constexpr int32_t CB_SETDROPPEDWIDTH = 352;
    inline constexpr int32_t CB_INITSTORAGE = 353;
    inline constexpr int32_t CB_MULTIPLEADDSTRING = 355;
    inline constexpr int32_t CB_GETCOMBOBOXINFO = 356;
    inline constexpr int32_t CB_MSGMAX = 357;
    inline constexpr int32_t SBS_HORZ = 0;
    inline constexpr int32_t SBS_VERT = 1;
    inline constexpr int32_t SBS_TOPALIGN = 2;
    inline constexpr int32_t SBS_LEFTALIGN = 2;
    inline constexpr int32_t SBS_BOTTOMALIGN = 4;
    inline constexpr int32_t SBS_RIGHTALIGN = 4;
    inline constexpr int32_t SBS_SIZEBOXTOPLEFTALIGN = 2;
    inline constexpr int32_t SBS_SIZEBOXBOTTOMRIGHTALIGN = 4;
    inline constexpr int32_t SBS_SIZEBOX = 8;
    inline constexpr int32_t SBS_SIZEGRIP = 16;
    inline constexpr int32_t SBM_SETPOS = 224;
    inline constexpr int32_t SBM_GETPOS = 225;
    inline constexpr int32_t SBM_SETRANGE = 226;
    inline constexpr int32_t SBM_SETRANGEREDRAW = 230;
    inline constexpr int32_t SBM_GETRANGE = 227;
    inline constexpr int32_t SBM_ENABLE_ARROWS = 228;
    inline constexpr int32_t SBM_SETSCROLLINFO = 233;
    inline constexpr int32_t SBM_GETSCROLLINFO = 234;
    inline constexpr int32_t SBM_GETSCROLLBARINFO = 235;
    inline constexpr int32_t SIF_RANGE = 1;
    inline constexpr int32_t SIF_PAGE = 2;
    inline constexpr int32_t SIF_POS = 4;
    inline constexpr int32_t SIF_DISABLENOSCROLL = 8;
    inline constexpr int32_t SIF_TRACKPOS = 16;
    inline constexpr int32_t SIF_ALL = 23;
    inline constexpr int32_t MDIS_ALLCHILDSTYLES = 1;
    inline constexpr int32_t MDITILE_VERTICAL = 0;
    inline constexpr int32_t MDITILE_HORIZONTAL = 1;
    inline constexpr int32_t MDITILE_SKIPDISABLED = 2;
    inline constexpr int32_t MDITILE_ZORDER = 4;
    inline constexpr int32_t HELP_CONTEXT = 1;
    inline constexpr int32_t HELP_QUIT = 2;
    inline constexpr int32_t HELP_INDEX = 3;
    inline constexpr int32_t HELP_CONTENTS = 3;
    inline constexpr int32_t HELP_HELPONHELP = 4;
    inline constexpr int32_t HELP_SETINDEX = 5;
    inline constexpr int32_t HELP_SETCONTENTS = 5;
    inline constexpr int32_t HELP_CONTEXTPOPUP = 8;
    inline constexpr int32_t HELP_FORCEFILE = 9;
    inline constexpr int32_t HELP_KEY = 257;
    inline constexpr int32_t HELP_COMMAND = 258;
    inline constexpr int32_t HELP_PARTIALKEY = 261;
    inline constexpr int32_t HELP_MULTIKEY = 513;
    inline constexpr int32_t HELP_SETWINPOS = 515;
    inline constexpr int32_t HELP_CONTEXTMENU = 10;
    inline constexpr int32_t HELP_FINDER = 11;
    inline constexpr int32_t HELP_WM_HELP = 12;
    inline constexpr int32_t HELP_SETPOPUP_POS = 13;
    inline constexpr int32_t HELP_TCARD = 32768;
    inline constexpr int32_t HELP_TCARD_DATA = 16;
    inline constexpr int32_t HELP_TCARD_OTHER_CALLER = 17;
    inline constexpr int32_t IDH_NO_HELP = 28440;
    inline constexpr int32_t IDH_MISSING_CONTEXT = 28441;
    inline constexpr int32_t IDH_GENERIC_HELP_BUTTON = 28442;
    inline constexpr int32_t IDH_OK = 28443;
    inline constexpr int32_t IDH_CANCEL = 28444;
    inline constexpr int32_t IDH_HELP = 28445;
    inline constexpr int32_t GR_GDIOBJECTS = 0;
    inline constexpr int32_t GR_USEROBJECTS = 1;
    inline constexpr int32_t GR_GDIOBJECTS_PEAK = 2;
    inline constexpr int32_t GR_USEROBJECTS_PEAK = 4;
    inline constexpr int32_t GR_GLOBAL = -2;
    inline constexpr int32_t SPI_GETBEEP = 1;
    inline constexpr int32_t SPI_SETBEEP = 2;
    inline constexpr int32_t SPI_GETMOUSE = 3;
    inline constexpr int32_t SPI_SETMOUSE = 4;
    inline constexpr int32_t SPI_GETBORDER = 5;
    inline constexpr int32_t SPI_SETBORDER = 6;
    inline constexpr int32_t SPI_GETKEYBOARDSPEED = 10;
    inline constexpr int32_t SPI_SETKEYBOARDSPEED = 11;
    inline constexpr int32_t SPI_LANGDRIVER = 12;
    inline constexpr int32_t SPI_ICONHORIZONTALSPACING = 13;
    inline constexpr int32_t SPI_GETSCREENSAVETIMEOUT = 14;
    inline constexpr int32_t SPI_SETSCREENSAVETIMEOUT = 15;
    inline constexpr int32_t SPI_GETSCREENSAVEACTIVE = 16;
    inline constexpr int32_t SPI_SETSCREENSAVEACTIVE = 17;
    inline constexpr int32_t SPI_GETGRIDGRANULARITY = 18;
    inline constexpr int32_t SPI_SETGRIDGRANULARITY = 19;
    inline constexpr int32_t SPI_SETDESKWALLPAPER = 20;
    inline constexpr int32_t SPI_SETDESKPATTERN = 21;
    inline constexpr int32_t SPI_GETKEYBOARDDELAY = 22;
    inline constexpr int32_t SPI_SETKEYBOARDDELAY = 23;
    inline constexpr int32_t SPI_ICONVERTICALSPACING = 24;
    inline constexpr int32_t SPI_GETICONTITLEWRAP = 25;
    inline constexpr int32_t SPI_SETICONTITLEWRAP = 26;
    inline constexpr int32_t SPI_GETMENUDROPALIGNMENT = 27;
    inline constexpr int32_t SPI_SETMENUDROPALIGNMENT = 28;
    inline constexpr int32_t SPI_SETDOUBLECLKWIDTH = 29;
    inline constexpr int32_t SPI_SETDOUBLECLKHEIGHT = 30;
    inline constexpr int32_t SPI_GETICONTITLELOGFONT = 31;
    inline constexpr int32_t SPI_SETDOUBLECLICKTIME = 32;
    inline constexpr int32_t SPI_SETMOUSEBUTTONSWAP = 33;
    inline constexpr int32_t SPI_SETICONTITLELOGFONT = 34;
    inline constexpr int32_t SPI_GETFASTTASKSWITCH = 35;
    inline constexpr int32_t SPI_SETFASTTASKSWITCH = 36;
    inline constexpr int32_t SPI_SETDRAGFULLWINDOWS = 37;
    inline constexpr int32_t SPI_GETDRAGFULLWINDOWS = 38;
    inline constexpr int32_t SPI_GETNONCLIENTMETRICS = 41;
    inline constexpr int32_t SPI_SETNONCLIENTMETRICS = 42;
    inline constexpr int32_t SPI_GETMINIMIZEDMETRICS = 43;
    inline constexpr int32_t SPI_SETMINIMIZEDMETRICS = 44;
    inline constexpr int32_t SPI_GETICONMETRICS = 45;
    inline constexpr int32_t SPI_SETICONMETRICS = 46;
    inline constexpr int32_t SPI_SETWORKAREA = 47;
    inline constexpr int32_t SPI_GETWORKAREA = 48;
    inline constexpr int32_t SPI_SETPENWINDOWS = 49;
    inline constexpr int32_t SPI_GETHIGHCONTRAST = 66;
    inline constexpr int32_t SPI_SETHIGHCONTRAST = 67;
    inline constexpr int32_t SPI_GETKEYBOARDPREF = 68;
    inline constexpr int32_t SPI_SETKEYBOARDPREF = 69;
    inline constexpr int32_t SPI_GETSCREENREADER = 70;
    inline constexpr int32_t SPI_SETSCREENREADER = 71;
    inline constexpr int32_t SPI_GETANIMATION = 72;
    inline constexpr int32_t SPI_SETANIMATION = 73;
    inline constexpr int32_t SPI_GETFONTSMOOTHING = 74;
    inline constexpr int32_t SPI_SETFONTSMOOTHING = 75;
    inline constexpr int32_t SPI_SETDRAGWIDTH = 76;
    inline constexpr int32_t SPI_SETDRAGHEIGHT = 77;
    inline constexpr int32_t SPI_SETHANDHELD = 78;
    inline constexpr int32_t SPI_GETLOWPOWERTIMEOUT = 79;
    inline constexpr int32_t SPI_GETPOWEROFFTIMEOUT = 80;
    inline constexpr int32_t SPI_SETLOWPOWERTIMEOUT = 81;
    inline constexpr int32_t SPI_SETPOWEROFFTIMEOUT = 82;
    inline constexpr int32_t SPI_GETLOWPOWERACTIVE = 83;
    inline constexpr int32_t SPI_GETPOWEROFFACTIVE = 84;
    inline constexpr int32_t SPI_SETLOWPOWERACTIVE = 85;
    inline constexpr int32_t SPI_SETPOWEROFFACTIVE = 86;
    inline constexpr int32_t SPI_SETCURSORS = 87;
    inline constexpr int32_t SPI_SETICONS = 88;
    inline constexpr int32_t SPI_GETDEFAULTINPUTLANG = 89;
    inline constexpr int32_t SPI_SETDEFAULTINPUTLANG = 90;
    inline constexpr int32_t SPI_SETLANGTOGGLE = 91;
    inline constexpr int32_t SPI_GETWINDOWSEXTENSION = 92;
    inline constexpr int32_t SPI_SETMOUSETRAILS = 93;
    inline constexpr int32_t SPI_GETMOUSETRAILS = 94;
    inline constexpr int32_t SPI_SETSCREENSAVERRUNNING = 97;
    inline constexpr int32_t SPI_SCREENSAVERRUNNING = 97;
    inline constexpr int32_t SPI_GETFILTERKEYS = 50;
    inline constexpr int32_t SPI_SETFILTERKEYS = 51;
    inline constexpr int32_t SPI_GETTOGGLEKEYS = 52;
    inline constexpr int32_t SPI_SETTOGGLEKEYS = 53;
    inline constexpr int32_t SPI_GETMOUSEKEYS = 54;
    inline constexpr int32_t SPI_SETMOUSEKEYS = 55;
    inline constexpr int32_t SPI_GETSHOWSOUNDS = 56;
    inline constexpr int32_t SPI_SETSHOWSOUNDS = 57;
    inline constexpr int32_t SPI_GETSTICKYKEYS = 58;
    inline constexpr int32_t SPI_SETSTICKYKEYS = 59;
    inline constexpr int32_t SPI_GETACCESSTIMEOUT = 60;
    inline constexpr int32_t SPI_SETACCESSTIMEOUT = 61;
    inline constexpr int32_t SPI_GETSERIALKEYS = 62;
    inline constexpr int32_t SPI_SETSERIALKEYS = 63;
    inline constexpr int32_t SPI_GETSOUNDSENTRY = 64;
    inline constexpr int32_t SPI_SETSOUNDSENTRY = 65;
    inline constexpr int32_t SPI_GETSNAPTODEFBUTTON = 95;
    inline constexpr int32_t SPI_SETSNAPTODEFBUTTON = 96;
    inline constexpr int32_t SPI_GETMOUSEHOVERWIDTH = 98;
    inline constexpr int32_t SPI_SETMOUSEHOVERWIDTH = 99;
    inline constexpr int32_t SPI_GETMOUSEHOVERHEIGHT = 100;
    inline constexpr int32_t SPI_SETMOUSEHOVERHEIGHT = 101;
    inline constexpr int32_t SPI_GETMOUSEHOVERTIME = 102;
    inline constexpr int32_t SPI_SETMOUSEHOVERTIME = 103;
    inline constexpr int32_t SPI_GETWHEELSCROLLLINES = 104;
    inline constexpr int32_t SPI_SETWHEELSCROLLLINES = 105;
    inline constexpr int32_t SPI_GETMENUSHOWDELAY = 106;
    inline constexpr int32_t SPI_SETMENUSHOWDELAY = 107;
    inline constexpr int32_t SPI_GETWHEELSCROLLCHARS = 108;
    inline constexpr int32_t SPI_SETWHEELSCROLLCHARS = 109;
    inline constexpr int32_t SPI_GETSHOWIMEUI = 110;
    inline constexpr int32_t SPI_SETSHOWIMEUI = 111;
    inline constexpr int32_t SPI_GETMOUSESPEED = 112;
    inline constexpr int32_t SPI_SETMOUSESPEED = 113;
    inline constexpr int32_t SPI_GETSCREENSAVERRUNNING = 114;
    inline constexpr int32_t SPI_GETDESKWALLPAPER = 115;
    inline constexpr int32_t SPI_GETAUDIODESCRIPTION = 116;
    inline constexpr int32_t SPI_SETAUDIODESCRIPTION = 117;
    inline constexpr int32_t SPI_GETSCREENSAVESECURE = 118;
    inline constexpr int32_t SPI_SETSCREENSAVESECURE = 119;
    inline constexpr int32_t SPI_GETHUNGAPPTIMEOUT = 120;
    inline constexpr int32_t SPI_SETHUNGAPPTIMEOUT = 121;
    inline constexpr int32_t SPI_GETWAITTOKILLTIMEOUT = 122;
    inline constexpr int32_t SPI_SETWAITTOKILLTIMEOUT = 123;
    inline constexpr int32_t SPI_GETWAITTOKILLSERVICETIMEOUT = 124;
    inline constexpr int32_t SPI_SETWAITTOKILLSERVICETIMEOUT = 125;
    inline constexpr int32_t SPI_GETMOUSEDOCKTHRESHOLD = 126;
    inline constexpr int32_t SPI_SETMOUSEDOCKTHRESHOLD = 127;
    inline constexpr int32_t SPI_GETPENDOCKTHRESHOLD = 128;
    inline constexpr int32_t SPI_SETPENDOCKTHRESHOLD = 129;
    inline constexpr int32_t SPI_GETWINARRANGING = 130;
    inline constexpr int32_t SPI_SETWINARRANGING = 131;
    inline constexpr int32_t SPI_GETMOUSEDRAGOUTTHRESHOLD = 132;
    inline constexpr int32_t SPI_SETMOUSEDRAGOUTTHRESHOLD = 133;
    inline constexpr int32_t SPI_GETPENDRAGOUTTHRESHOLD = 134;
    inline constexpr int32_t SPI_SETPENDRAGOUTTHRESHOLD = 135;
    inline constexpr int32_t SPI_GETMOUSESIDEMOVETHRESHOLD = 136;
    inline constexpr int32_t SPI_SETMOUSESIDEMOVETHRESHOLD = 137;
    inline constexpr int32_t SPI_GETPENSIDEMOVETHRESHOLD = 138;
    inline constexpr int32_t SPI_SETPENSIDEMOVETHRESHOLD = 139;
    inline constexpr int32_t SPI_GETDRAGFROMMAXIMIZE = 140;
    inline constexpr int32_t SPI_SETDRAGFROMMAXIMIZE = 141;
    inline constexpr int32_t SPI_GETSNAPSIZING = 142;
    inline constexpr int32_t SPI_SETSNAPSIZING = 143;
    inline constexpr int32_t SPI_GETDOCKMOVING = 144;
    inline constexpr int32_t SPI_SETDOCKMOVING = 145;
    inline constexpr int32_t MAX_TOUCH_PREDICTION_FILTER_TAPS = 3;
    inline constexpr int32_t TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY = 8;
    inline constexpr int32_t TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME = 8;
    inline constexpr int32_t TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP = 1;
    inline constexpr float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA = 0x1.0624dep-10;
    inline constexpr float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN = 0x1.ccccccp-1;
    inline constexpr float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX = 0x1.ff7ceep-1;
    inline constexpr float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE = 0x1.0624dep-10;
    inline constexpr float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA = 0x1.fae148p-1;
    inline constexpr int32_t SPI_GETTOUCHPREDICTIONPARAMETERS = 156;
    inline constexpr int32_t SPI_SETTOUCHPREDICTIONPARAMETERS = 157;
    inline constexpr int32_t MAX_LOGICALDPIOVERRIDE = 2;
    inline constexpr int32_t MIN_LOGICALDPIOVERRIDE = -2;
    inline constexpr int32_t SPI_GETLOGICALDPIOVERRIDE = 158;
    inline constexpr int32_t SPI_SETLOGICALDPIOVERRIDE = 159;
    inline constexpr int32_t SPI_GETMENURECT = 162;
    inline constexpr int32_t SPI_SETMENURECT = 163;
    inline constexpr int32_t SPI_GETACTIVEWINDOWTRACKING = 4096;
    inline constexpr int32_t SPI_SETACTIVEWINDOWTRACKING = 4097;
    inline constexpr int32_t SPI_GETMENUANIMATION = 4098;
    inline constexpr int32_t SPI_SETMENUANIMATION = 4099;
    inline constexpr int32_t SPI_GETCOMBOBOXANIMATION = 4100;
    inline constexpr int32_t SPI_SETCOMBOBOXANIMATION = 4101;
    inline constexpr int32_t SPI_GETLISTBOXSMOOTHSCROLLING = 4102;
    inline constexpr int32_t SPI_SETLISTBOXSMOOTHSCROLLING = 4103;
    inline constexpr int32_t SPI_GETGRADIENTCAPTIONS = 4104;
    inline constexpr int32_t SPI_SETGRADIENTCAPTIONS = 4105;
    inline constexpr int32_t SPI_GETKEYBOARDCUES = 4106;
    inline constexpr int32_t SPI_SETKEYBOARDCUES = 4107;
    inline constexpr int32_t SPI_GETMENUUNDERLINES = 4106;
    inline constexpr int32_t SPI_SETMENUUNDERLINES = 4107;
    inline constexpr int32_t SPI_GETACTIVEWNDTRKZORDER = 4108;
    inline constexpr int32_t SPI_SETACTIVEWNDTRKZORDER = 4109;
    inline constexpr int32_t SPI_GETHOTTRACKING = 4110;
    inline constexpr int32_t SPI_SETHOTTRACKING = 4111;
    inline constexpr int32_t SPI_GETMENUFADE = 4114;
    inline constexpr int32_t SPI_SETMENUFADE = 4115;
    inline constexpr int32_t SPI_GETSELECTIONFADE = 4116;
    inline constexpr int32_t SPI_SETSELECTIONFADE = 4117;
    inline constexpr int32_t SPI_GETTOOLTIPANIMATION = 4118;
    inline constexpr int32_t SPI_SETTOOLTIPANIMATION = 4119;
    inline constexpr int32_t SPI_GETTOOLTIPFADE = 4120;
    inline constexpr int32_t SPI_SETTOOLTIPFADE = 4121;
    inline constexpr int32_t SPI_GETCURSORSHADOW = 4122;
    inline constexpr int32_t SPI_SETCURSORSHADOW = 4123;
    inline constexpr int32_t SPI_GETMOUSESONAR = 4124;
    inline constexpr int32_t SPI_SETMOUSESONAR = 4125;
    inline constexpr int32_t SPI_GETMOUSECLICKLOCK = 4126;
    inline constexpr int32_t SPI_SETMOUSECLICKLOCK = 4127;
    inline constexpr int32_t SPI_GETMOUSEVANISH = 4128;
    inline constexpr int32_t SPI_SETMOUSEVANISH = 4129;
    inline constexpr int32_t SPI_GETFLATMENU = 4130;
    inline constexpr int32_t SPI_SETFLATMENU = 4131;
    inline constexpr int32_t SPI_GETDROPSHADOW = 4132;
    inline constexpr int32_t SPI_SETDROPSHADOW = 4133;
    inline constexpr int32_t SPI_GETBLOCKSENDINPUTRESETS = 4134;
    inline constexpr int32_t SPI_SETBLOCKSENDINPUTRESETS = 4135;
    inline constexpr int32_t SPI_GETUIEFFECTS = 4158;
    inline constexpr int32_t SPI_SETUIEFFECTS = 4159;
    inline constexpr int32_t SPI_GETDISABLEOVERLAPPEDCONTENT = 4160;
    inline constexpr int32_t SPI_SETDISABLEOVERLAPPEDCONTENT = 4161;
    inline constexpr int32_t SPI_GETCLIENTAREAANIMATION = 4162;
    inline constexpr int32_t SPI_SETCLIENTAREAANIMATION = 4163;
    inline constexpr int32_t SPI_GETCLEARTYPE = 4168;
    inline constexpr int32_t SPI_SETCLEARTYPE = 4169;
    inline constexpr int32_t SPI_GETSPEECHRECOGNITION = 4170;
    inline constexpr int32_t SPI_SETSPEECHRECOGNITION = 4171;
    inline constexpr int32_t SPI_GETCARETBROWSING = 4172;
    inline constexpr int32_t SPI_SETCARETBROWSING = 4173;
    inline constexpr int32_t SPI_GETTHREADLOCALINPUTSETTINGS = 4174;
    inline constexpr int32_t SPI_SETTHREADLOCALINPUTSETTINGS = 4175;
    inline constexpr int32_t SPI_GETSYSTEMLANGUAGEBAR = 4176;
    inline constexpr int32_t SPI_SETSYSTEMLANGUAGEBAR = 4177;
    inline constexpr int32_t SPI_GETFOREGROUNDLOCKTIMEOUT = 8192;
    inline constexpr int32_t SPI_SETFOREGROUNDLOCKTIMEOUT = 8193;
    inline constexpr int32_t SPI_GETACTIVEWNDTRKTIMEOUT = 8194;
    inline constexpr int32_t SPI_SETACTIVEWNDTRKTIMEOUT = 8195;
    inline constexpr int32_t SPI_GETFOREGROUNDFLASHCOUNT = 8196;
    inline constexpr int32_t SPI_SETFOREGROUNDFLASHCOUNT = 8197;
    inline constexpr int32_t SPI_GETCARETWIDTH = 8198;
    inline constexpr int32_t SPI_SETCARETWIDTH = 8199;
    inline constexpr int32_t SPI_GETMOUSECLICKLOCKTIME = 8200;
    inline constexpr int32_t SPI_SETMOUSECLICKLOCKTIME = 8201;
    inline constexpr int32_t SPI_GETFONTSMOOTHINGTYPE = 8202;
    inline constexpr int32_t SPI_SETFONTSMOOTHINGTYPE = 8203;
    inline constexpr int32_t FE_FONTSMOOTHINGSTANDARD = 1;
    inline constexpr int32_t FE_FONTSMOOTHINGCLEARTYPE = 2;
    inline constexpr int32_t SPI_GETFONTSMOOTHINGCONTRAST = 8204;
    inline constexpr int32_t SPI_SETFONTSMOOTHINGCONTRAST = 8205;
    inline constexpr int32_t SPI_GETFOCUSBORDERWIDTH = 8206;
    inline constexpr int32_t SPI_SETFOCUSBORDERWIDTH = 8207;
    inline constexpr int32_t SPI_GETFOCUSBORDERHEIGHT = 8208;
    inline constexpr int32_t SPI_SETFOCUSBORDERHEIGHT = 8209;
    inline constexpr int32_t SPI_GETFONTSMOOTHINGORIENTATION = 8210;
    inline constexpr int32_t SPI_SETFONTSMOOTHINGORIENTATION = 8211;
    inline constexpr int32_t FE_FONTSMOOTHINGORIENTATIONBGR = 0;
    inline constexpr int32_t FE_FONTSMOOTHINGORIENTATIONRGB = 1;
    inline constexpr int32_t SPI_GETMINIMUMHITRADIUS = 8212;
    inline constexpr int32_t SPI_SETMINIMUMHITRADIUS = 8213;
    inline constexpr int32_t SPI_GETMESSAGEDURATION = 8214;
    inline constexpr int32_t SPI_SETMESSAGEDURATION = 8215;
    inline constexpr int32_t SPI_GETCONTACTVISUALIZATION = 8216;
    inline constexpr int32_t SPI_SETCONTACTVISUALIZATION = 8217;
    inline constexpr int32_t CONTACTVISUALIZATION_OFF = 0;
    inline constexpr int32_t CONTACTVISUALIZATION_ON = 1;
    inline constexpr int32_t CONTACTVISUALIZATION_PRESENTATIONMODE = 2;
    inline constexpr int32_t SPI_GETGESTUREVISUALIZATION = 8218;
    inline constexpr int32_t SPI_SETGESTUREVISUALIZATION = 8219;
    inline constexpr int32_t GESTUREVISUALIZATION_OFF = 0;
    inline constexpr int32_t GESTUREVISUALIZATION_ON = 31;
    inline constexpr int32_t GESTUREVISUALIZATION_TAP = 1;
    inline constexpr int32_t GESTUREVISUALIZATION_DOUBLETAP = 2;
    inline constexpr int32_t GESTUREVISUALIZATION_PRESSANDTAP = 4;
    inline constexpr int32_t GESTUREVISUALIZATION_PRESSANDHOLD = 8;
    inline constexpr int32_t GESTUREVISUALIZATION_RIGHTTAP = 16;
    inline constexpr int32_t SPI_GETMOUSEWHEELROUTING = 8220;
    inline constexpr int32_t SPI_SETMOUSEWHEELROUTING = 8221;
    inline constexpr int32_t MOUSEWHEEL_ROUTING_FOCUS = 0;
    inline constexpr int32_t MOUSEWHEEL_ROUTING_HYBRID = 1;
    inline constexpr int32_t MOUSEWHEEL_ROUTING_MOUSE_POS = 2;
    inline constexpr int32_t SPI_GETPENVISUALIZATION = 8222;
    inline constexpr int32_t SPI_SETPENVISUALIZATION = 8223;
    inline constexpr int32_t PENVISUALIZATION_ON = 35;
    inline constexpr int32_t PENVISUALIZATION_OFF = 0;
    inline constexpr int32_t PENVISUALIZATION_TAP = 1;
    inline constexpr int32_t PENVISUALIZATION_DOUBLETAP = 2;
    inline constexpr int32_t PENVISUALIZATION_CURSOR = 32;
    inline constexpr int32_t SPI_GETPENARBITRATIONTYPE = 8224;
    inline constexpr int32_t SPI_SETPENARBITRATIONTYPE = 8225;
    inline constexpr int32_t PENARBITRATIONTYPE_NONE = 0;
    inline constexpr int32_t PENARBITRATIONTYPE_WIN8 = 1;
    inline constexpr int32_t PENARBITRATIONTYPE_FIS = 2;
    inline constexpr int32_t PENARBITRATIONTYPE_SPT = 3;
    inline constexpr int32_t PENARBITRATIONTYPE_MAX = 4;
    inline constexpr int32_t SPI_GETCARETTIMEOUT = 8226;
    inline constexpr int32_t SPI_SETCARETTIMEOUT = 8227;
    inline constexpr int32_t SPI_GETHANDEDNESS = 8228;
    inline constexpr int32_t SPI_SETHANDEDNESS = 8229;
    inline constexpr int32_t SPIF_UPDATEINIFILE = 1;
    inline constexpr int32_t SPIF_SENDWININICHANGE = 2;
    inline constexpr int32_t SPIF_SENDCHANGE = 2;
    inline constexpr int32_t METRICS_USEDEFAULT = -1;
    inline constexpr int32_t ARW_BOTTOMLEFT = 0;
    inline constexpr int32_t ARW_BOTTOMRIGHT = 1;
    inline constexpr int32_t ARW_TOPLEFT = 2;
    inline constexpr int32_t ARW_TOPRIGHT = 3;
    inline constexpr int32_t ARW_STARTMASK = 3;
    inline constexpr int32_t ARW_STARTRIGHT = 1;
    inline constexpr int32_t ARW_STARTTOP = 2;
    inline constexpr int32_t ARW_LEFT = 0;
    inline constexpr int32_t ARW_RIGHT = 0;
    inline constexpr int32_t ARW_UP = 4;
    inline constexpr int32_t ARW_DOWN = 4;
    inline constexpr int32_t ARW_HIDE = 8;
    inline constexpr int32_t SERKF_SERIALKEYSON = 1;
    inline constexpr int32_t SERKF_AVAILABLE = 2;
    inline constexpr int32_t SERKF_INDICATOR = 4;
    inline constexpr int32_t HCF_HIGHCONTRASTON = 1;
    inline constexpr int32_t HCF_AVAILABLE = 2;
    inline constexpr int32_t HCF_HOTKEYACTIVE = 4;
    inline constexpr int32_t HCF_CONFIRMHOTKEY = 8;
    inline constexpr int32_t HCF_HOTKEYSOUND = 16;
    inline constexpr int32_t HCF_INDICATOR = 32;
    inline constexpr int32_t HCF_HOTKEYAVAILABLE = 64;
    inline constexpr int32_t HCF_LOGONDESKTOP = 256;
    inline constexpr int32_t HCF_DEFAULTDESKTOP = 512;
    inline constexpr int32_t HCF_OPTION_NOTHEMECHANGE = 4096;
    inline constexpr int32_t CDS_UPDATEREGISTRY = 1;
    inline constexpr int32_t CDS_TEST = 2;
    inline constexpr int32_t CDS_FULLSCREEN = 4;
    inline constexpr int32_t CDS_GLOBAL = 8;
    inline constexpr int32_t CDS_SET_PRIMARY = 16;
    inline constexpr int32_t CDS_VIDEOPARAMETERS = 32;
    inline constexpr int32_t CDS_ENABLE_UNSAFE_MODES = 256;
    inline constexpr int32_t CDS_DISABLE_UNSAFE_MODES = 512;
    inline constexpr int32_t CDS_RESET = 1073741824;
    inline constexpr int32_t CDS_RESET_EX = 536870912;
    inline constexpr int32_t CDS_NORESET = 268435456;
    inline constexpr int32_t DISP_CHANGE_SUCCESSFUL = 0;
    inline constexpr int32_t DISP_CHANGE_RESTART = 1;
    inline constexpr int32_t DISP_CHANGE_FAILED = -1;
    inline constexpr int32_t DISP_CHANGE_BADMODE = -2;
    inline constexpr int32_t DISP_CHANGE_NOTUPDATED = -3;
    inline constexpr int32_t DISP_CHANGE_BADFLAGS = -4;
    inline constexpr int32_t DISP_CHANGE_BADPARAM = -5;
    inline constexpr int32_t DISP_CHANGE_BADDUALVIEW = -6;
    inline constexpr uint32_t ENUM_CURRENT_SETTINGS = 0xffffffff;
    inline constexpr uint32_t ENUM_REGISTRY_SETTINGS = 0xfffffffe;
    inline constexpr int32_t EDS_RAWMODE = 2;
    inline constexpr int32_t EDS_ROTATEDMODE = 4;
    inline constexpr int32_t EDD_GET_DEVICE_INTERFACE_NAME = 1;
    inline constexpr int32_t FKF_FILTERKEYSON = 1;
    inline constexpr int32_t FKF_AVAILABLE = 2;
    inline constexpr int32_t FKF_HOTKEYACTIVE = 4;
    inline constexpr int32_t FKF_CONFIRMHOTKEY = 8;
    inline constexpr int32_t FKF_HOTKEYSOUND = 16;
    inline constexpr int32_t FKF_INDICATOR = 32;
    inline constexpr int32_t FKF_CLICKON = 64;
    inline constexpr uint32_t SKF_STICKYKEYSON = 0x1;
    inline constexpr uint32_t SKF_AVAILABLE = 0x2;
    inline constexpr uint32_t SKF_HOTKEYACTIVE = 0x4;
    inline constexpr uint32_t SKF_CONFIRMHOTKEY = 0x8;
    inline constexpr uint32_t SKF_HOTKEYSOUND = 0x10;
    inline constexpr uint32_t SKF_INDICATOR = 0x20;
    inline constexpr uint32_t SKF_AUDIBLEFEEDBACK = 0x40;
    inline constexpr uint32_t SKF_TRISTATE = 0x80;
    inline constexpr uint32_t SKF_TWOKEYSOFF = 0x100;
    inline constexpr uint32_t SKF_LALTLATCHED = 0x10000000;
    inline constexpr uint32_t SKF_LCTLLATCHED = 0x4000000;
    inline constexpr uint32_t SKF_LSHIFTLATCHED = 0x1000000;
    inline constexpr uint32_t SKF_RALTLATCHED = 0x20000000;
    inline constexpr uint32_t SKF_RCTLLATCHED = 0x8000000;
    inline constexpr uint32_t SKF_RSHIFTLATCHED = 0x2000000;
    inline constexpr uint32_t SKF_LWINLATCHED = 0x40000000;
    inline constexpr uint32_t SKF_RWINLATCHED = 0x80000000;
    inline constexpr uint32_t SKF_LALTLOCKED = 0x100000;
    inline constexpr uint32_t SKF_LCTLLOCKED = 0x40000;
    inline constexpr uint32_t SKF_LSHIFTLOCKED = 0x10000;
    inline constexpr uint32_t SKF_RALTLOCKED = 0x200000;
    inline constexpr uint32_t SKF_RCTLLOCKED = 0x80000;
    inline constexpr uint32_t SKF_RSHIFTLOCKED = 0x20000;
    inline constexpr uint32_t SKF_LWINLOCKED = 0x400000;
    inline constexpr uint32_t SKF_RWINLOCKED = 0x800000;
    inline constexpr uint32_t MKF_MOUSEKEYSON = 0x1;
    inline constexpr uint32_t MKF_AVAILABLE = 0x2;
    inline constexpr uint32_t MKF_HOTKEYACTIVE = 0x4;
    inline constexpr uint32_t MKF_CONFIRMHOTKEY = 0x8;
    inline constexpr uint32_t MKF_HOTKEYSOUND = 0x10;
    inline constexpr uint32_t MKF_INDICATOR = 0x20;
    inline constexpr uint32_t MKF_MODIFIERS = 0x40;
    inline constexpr uint32_t MKF_REPLACENUMBERS = 0x80;
    inline constexpr uint32_t MKF_LEFTBUTTONSEL = 0x10000000;
    inline constexpr uint32_t MKF_RIGHTBUTTONSEL = 0x20000000;
    inline constexpr uint32_t MKF_LEFTBUTTONDOWN = 0x1000000;
    inline constexpr uint32_t MKF_RIGHTBUTTONDOWN = 0x2000000;
    inline constexpr uint32_t MKF_MOUSEMODE = 0x80000000;
    inline constexpr int32_t ATF_TIMEOUTON = 1;
    inline constexpr int32_t ATF_ONOFFFEEDBACK = 2;
    inline constexpr int32_t SSGF_NONE = 0;
    inline constexpr int32_t SSGF_DISPLAY = 3;
    inline constexpr int32_t SSTF_NONE = 0;
    inline constexpr int32_t SSTF_CHARS = 1;
    inline constexpr int32_t SSTF_BORDER = 2;
    inline constexpr int32_t SSTF_DISPLAY = 3;
    inline constexpr int32_t SSWF_NONE = 0;
    inline constexpr int32_t SSWF_TITLE = 1;
    inline constexpr int32_t SSWF_WINDOW = 2;
    inline constexpr int32_t SSWF_DISPLAY = 3;
    inline constexpr int32_t SSWF_CUSTOM = 4;
    inline constexpr int32_t SSF_SOUNDSENTRYON = 1;
    inline constexpr int32_t SSF_AVAILABLE = 2;
    inline constexpr int32_t SSF_INDICATOR = 4;
    inline constexpr int32_t TKF_TOGGLEKEYSON = 1;
    inline constexpr int32_t TKF_AVAILABLE = 2;
    inline constexpr int32_t TKF_HOTKEYACTIVE = 4;
    inline constexpr int32_t TKF_CONFIRMHOTKEY = 8;
    inline constexpr int32_t TKF_HOTKEYSOUND = 16;
    inline constexpr int32_t TKF_INDICATOR = 32;
    inline constexpr int32_t SLE_ERROR = 1;
    inline constexpr int32_t SLE_MINORERROR = 2;
    inline constexpr int32_t SLE_WARNING = 3;
    inline constexpr int32_t MONITOR_DEFAULTTONULL = 0;
    inline constexpr int32_t MONITOR_DEFAULTTOPRIMARY = 1;
    inline constexpr int32_t MONITOR_DEFAULTTONEAREST = 2;
    inline constexpr int32_t MONITORINFOF_PRIMARY = 1;
    inline constexpr int32_t CCHDEVICENAME = 32;
    inline constexpr int32_t WINEVENT_OUTOFCONTEXT = 0;
    inline constexpr int32_t WINEVENT_SKIPOWNTHREAD = 1;
    inline constexpr int32_t WINEVENT_SKIPOWNPROCESS = 2;
    inline constexpr int32_t WINEVENT_INCONTEXT = 4;
    inline constexpr int32_t CHILDID_SELF = 0;
    inline constexpr int32_t INDEXID_OBJECT = 0;
    inline constexpr int32_t INDEXID_CONTAINER = 0;
    inline constexpr int32_t OBJID_WINDOW = 0;
    inline constexpr int32_t OBJID_SYSMENU = -1;
    inline constexpr int32_t OBJID_TITLEBAR = -2;
    inline constexpr int32_t OBJID_MENU = -3;
    inline constexpr int32_t OBJID_CLIENT = -4;
    inline constexpr int32_t OBJID_VSCROLL = -5;
    inline constexpr int32_t OBJID_HSCROLL = -6;
    inline constexpr int32_t OBJID_SIZEGRIP = -7;
    inline constexpr int32_t OBJID_CARET = -8;
    inline constexpr int32_t OBJID_CURSOR = -9;
    inline constexpr int32_t OBJID_ALERT = -10;
    inline constexpr int32_t OBJID_SOUND = -11;
    inline constexpr int32_t OBJID_QUERYCLASSNAMEIDX = -12;
    inline constexpr int32_t OBJID_NATIVEOM = -16;
    inline constexpr int32_t EVENT_MIN = 1;
    inline constexpr int32_t EVENT_MAX = 2147483647;
    inline constexpr int32_t EVENT_SYSTEM_SOUND = 1;
    inline constexpr int32_t EVENT_SYSTEM_ALERT = 2;
    inline constexpr int32_t EVENT_SYSTEM_FOREGROUND = 3;
    inline constexpr int32_t EVENT_SYSTEM_MENUSTART = 4;
    inline constexpr int32_t EVENT_SYSTEM_MENUEND = 5;
    inline constexpr int32_t EVENT_SYSTEM_MENUPOPUPSTART = 6;
    inline constexpr int32_t EVENT_SYSTEM_MENUPOPUPEND = 7;
    inline constexpr int32_t EVENT_SYSTEM_CAPTURESTART = 8;
    inline constexpr int32_t EVENT_SYSTEM_CAPTUREEND = 9;
    inline constexpr int32_t EVENT_SYSTEM_MOVESIZESTART = 10;
    inline constexpr int32_t EVENT_SYSTEM_MOVESIZEEND = 11;
    inline constexpr int32_t EVENT_SYSTEM_CONTEXTHELPSTART = 12;
    inline constexpr int32_t EVENT_SYSTEM_CONTEXTHELPEND = 13;
    inline constexpr int32_t EVENT_SYSTEM_DRAGDROPSTART = 14;
    inline constexpr int32_t EVENT_SYSTEM_DRAGDROPEND = 15;
    inline constexpr int32_t EVENT_SYSTEM_DIALOGSTART = 16;
    inline constexpr int32_t EVENT_SYSTEM_DIALOGEND = 17;
    inline constexpr int32_t EVENT_SYSTEM_SCROLLINGSTART = 18;
    inline constexpr int32_t EVENT_SYSTEM_SCROLLINGEND = 19;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHSTART = 20;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHEND = 21;
    inline constexpr int32_t EVENT_SYSTEM_MINIMIZESTART = 22;
    inline constexpr int32_t EVENT_SYSTEM_MINIMIZEEND = 23;
    inline constexpr int32_t EVENT_SYSTEM_DESKTOPSWITCH = 32;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHER_APPGRABBED = 36;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHER_APPOVERTARGET = 37;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHER_APPDROPPED = 38;
    inline constexpr int32_t EVENT_SYSTEM_SWITCHER_CANCELLED = 39;
    inline constexpr int32_t EVENT_SYSTEM_IME_KEY_NOTIFICATION = 41;
    inline constexpr int32_t EVENT_SYSTEM_END = 255;
    inline constexpr int32_t EVENT_OEM_DEFINED_START = 257;
    inline constexpr int32_t EVENT_OEM_DEFINED_END = 511;
    inline constexpr int32_t EVENT_UIA_EVENTID_START = 19968;
    inline constexpr int32_t EVENT_UIA_EVENTID_END = 20223;
    inline constexpr int32_t EVENT_UIA_PROPID_START = 29952;
    inline constexpr int32_t EVENT_UIA_PROPID_END = 30207;
    inline constexpr int32_t EVENT_CONSOLE_CARET = 16385;
    inline constexpr int32_t EVENT_CONSOLE_UPDATE_REGION = 16386;
    inline constexpr int32_t EVENT_CONSOLE_UPDATE_SIMPLE = 16387;
    inline constexpr int32_t EVENT_CONSOLE_UPDATE_SCROLL = 16388;
    inline constexpr int32_t EVENT_CONSOLE_LAYOUT = 16389;
    inline constexpr int32_t EVENT_CONSOLE_START_APPLICATION = 16390;
    inline constexpr int32_t EVENT_CONSOLE_END_APPLICATION = 16391;
    inline constexpr int32_t CONSOLE_APPLICATION_16BIT = 1;
    inline constexpr int32_t CONSOLE_CARET_SELECTION = 1;
    inline constexpr int32_t CONSOLE_CARET_VISIBLE = 2;
    inline constexpr int32_t EVENT_CONSOLE_END = 16639;
    inline constexpr int32_t EVENT_OBJECT_CREATE = 32768;
    inline constexpr int32_t EVENT_OBJECT_DESTROY = 32769;
    inline constexpr int32_t EVENT_OBJECT_SHOW = 32770;
    inline constexpr int32_t EVENT_OBJECT_HIDE = 32771;
    inline constexpr int32_t EVENT_OBJECT_REORDER = 32772;
    inline constexpr int32_t EVENT_OBJECT_FOCUS = 32773;
    inline constexpr int32_t EVENT_OBJECT_SELECTION = 32774;
    inline constexpr int32_t EVENT_OBJECT_SELECTIONADD = 32775;
    inline constexpr int32_t EVENT_OBJECT_SELECTIONREMOVE = 32776;
    inline constexpr int32_t EVENT_OBJECT_SELECTIONWITHIN = 32777;
    inline constexpr int32_t EVENT_OBJECT_STATECHANGE = 32778;
    inline constexpr int32_t EVENT_OBJECT_LOCATIONCHANGE = 32779;
    inline constexpr int32_t EVENT_OBJECT_NAMECHANGE = 32780;
    inline constexpr int32_t EVENT_OBJECT_DESCRIPTIONCHANGE = 32781;
    inline constexpr int32_t EVENT_OBJECT_VALUECHANGE = 32782;
    inline constexpr int32_t EVENT_OBJECT_PARENTCHANGE = 32783;
    inline constexpr int32_t EVENT_OBJECT_HELPCHANGE = 32784;
    inline constexpr int32_t EVENT_OBJECT_DEFACTIONCHANGE = 32785;
    inline constexpr int32_t EVENT_OBJECT_ACCELERATORCHANGE = 32786;
    inline constexpr int32_t EVENT_OBJECT_INVOKED = 32787;
    inline constexpr int32_t EVENT_OBJECT_TEXTSELECTIONCHANGED = 32788;
    inline constexpr int32_t EVENT_OBJECT_CONTENTSCROLLED = 32789;
    inline constexpr int32_t EVENT_SYSTEM_ARRANGMENTPREVIEW = 32790;
    inline constexpr int32_t EVENT_OBJECT_CLOAKED = 32791;
    inline constexpr int32_t EVENT_OBJECT_UNCLOAKED = 32792;
    inline constexpr int32_t EVENT_OBJECT_LIVEREGIONCHANGED = 32793;
    inline constexpr int32_t EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED = 32800;
    inline constexpr int32_t EVENT_OBJECT_DRAGSTART = 32801;
    inline constexpr int32_t EVENT_OBJECT_DRAGCANCEL = 32802;
    inline constexpr int32_t EVENT_OBJECT_DRAGCOMPLETE = 32803;
    inline constexpr int32_t EVENT_OBJECT_DRAGENTER = 32804;
    inline constexpr int32_t EVENT_OBJECT_DRAGLEAVE = 32805;
    inline constexpr int32_t EVENT_OBJECT_DRAGDROPPED = 32806;
    inline constexpr int32_t EVENT_OBJECT_IME_SHOW = 32807;
    inline constexpr int32_t EVENT_OBJECT_IME_HIDE = 32808;
    inline constexpr int32_t EVENT_OBJECT_IME_CHANGE = 32809;
    inline constexpr int32_t EVENT_OBJECT_TEXTEDIT_CONVERSIONTARGETCHANGED = 32816;
    inline constexpr int32_t EVENT_OBJECT_END = 33023;
    inline constexpr int32_t EVENT_AIA_START = 40960;
    inline constexpr int32_t EVENT_AIA_END = 45055;
    inline constexpr int32_t SOUND_SYSTEM_STARTUP = 1;
    inline constexpr int32_t SOUND_SYSTEM_SHUTDOWN = 2;
    inline constexpr int32_t SOUND_SYSTEM_BEEP = 3;
    inline constexpr int32_t SOUND_SYSTEM_ERROR = 4;
    inline constexpr int32_t SOUND_SYSTEM_QUESTION = 5;
    inline constexpr int32_t SOUND_SYSTEM_WARNING = 6;
    inline constexpr int32_t SOUND_SYSTEM_INFORMATION = 7;
    inline constexpr int32_t SOUND_SYSTEM_MAXIMIZE = 8;
    inline constexpr int32_t SOUND_SYSTEM_MINIMIZE = 9;
    inline constexpr int32_t SOUND_SYSTEM_RESTOREUP = 10;
    inline constexpr int32_t SOUND_SYSTEM_RESTOREDOWN = 11;
    inline constexpr int32_t SOUND_SYSTEM_APPSTART = 12;
    inline constexpr int32_t SOUND_SYSTEM_FAULT = 13;
    inline constexpr int32_t SOUND_SYSTEM_APPEND = 14;
    inline constexpr int32_t SOUND_SYSTEM_MENUCOMMAND = 15;
    inline constexpr int32_t SOUND_SYSTEM_MENUPOPUP = 16;
    inline constexpr int32_t CSOUND_SYSTEM = 16;
    inline constexpr int32_t ALERT_SYSTEM_INFORMATIONAL = 1;
    inline constexpr int32_t ALERT_SYSTEM_WARNING = 2;
    inline constexpr int32_t ALERT_SYSTEM_ERROR = 3;
    inline constexpr int32_t ALERT_SYSTEM_QUERY = 4;
    inline constexpr int32_t ALERT_SYSTEM_CRITICAL = 5;
    inline constexpr int32_t CALERT_SYSTEM = 6;
    inline constexpr int32_t GUI_CARETBLINKING = 1;
    inline constexpr int32_t GUI_INMOVESIZE = 2;
    inline constexpr int32_t GUI_INMENUMODE = 4;
    inline constexpr int32_t GUI_SYSTEMMENUMODE = 8;
    inline constexpr int32_t GUI_POPUPMENUMODE = 16;
    inline constexpr int32_t GUI_16BITTASK = 32;
    inline constexpr int32_t USER_DEFAULT_SCREEN_DPI = 96;
    inline constexpr int32_t STATE_SYSTEM_UNAVAILABLE = 1;
    inline constexpr int32_t STATE_SYSTEM_SELECTED = 2;
    inline constexpr int32_t STATE_SYSTEM_FOCUSED = 4;
    inline constexpr int32_t STATE_SYSTEM_PRESSED = 8;
    inline constexpr int32_t STATE_SYSTEM_CHECKED = 16;
    inline constexpr int32_t STATE_SYSTEM_MIXED = 32;
    inline constexpr int32_t STATE_SYSTEM_INDETERMINATE = 32;
    inline constexpr int32_t STATE_SYSTEM_READONLY = 64;
    inline constexpr int32_t STATE_SYSTEM_HOTTRACKED = 128;
    inline constexpr int32_t STATE_SYSTEM_DEFAULT = 256;
    inline constexpr int32_t STATE_SYSTEM_EXPANDED = 512;
    inline constexpr int32_t STATE_SYSTEM_COLLAPSED = 1024;
    inline constexpr int32_t STATE_SYSTEM_BUSY = 2048;
    inline constexpr int32_t STATE_SYSTEM_FLOATING = 4096;
    inline constexpr int32_t STATE_SYSTEM_MARQUEED = 8192;
    inline constexpr int32_t STATE_SYSTEM_ANIMATED = 16384;
    inline constexpr int32_t STATE_SYSTEM_INVISIBLE = 32768;
    inline constexpr int32_t STATE_SYSTEM_OFFSCREEN = 65536;
    inline constexpr int32_t STATE_SYSTEM_SIZEABLE = 131072;
    inline constexpr int32_t STATE_SYSTEM_MOVEABLE = 262144;
    inline constexpr int32_t STATE_SYSTEM_SELFVOICING = 524288;
    inline constexpr int32_t STATE_SYSTEM_FOCUSABLE = 1048576;
    inline constexpr int32_t STATE_SYSTEM_SELECTABLE = 2097152;
    inline constexpr int32_t STATE_SYSTEM_LINKED = 4194304;
    inline constexpr int32_t STATE_SYSTEM_TRAVERSED = 8388608;
    inline constexpr int32_t STATE_SYSTEM_MULTISELECTABLE = 16777216;
    inline constexpr int32_t STATE_SYSTEM_EXTSELECTABLE = 33554432;
    inline constexpr int32_t STATE_SYSTEM_ALERT_LOW = 67108864;
    inline constexpr int32_t STATE_SYSTEM_ALERT_MEDIUM = 134217728;
    inline constexpr int32_t STATE_SYSTEM_ALERT_HIGH = 268435456;
    inline constexpr int32_t STATE_SYSTEM_PROTECTED = 536870912;
    inline constexpr int32_t STATE_SYSTEM_VALID = 1073741823;
    inline constexpr int32_t CCHILDREN_TITLEBAR = 5;
    inline constexpr int32_t CCHILDREN_SCROLLBAR = 5;
    inline constexpr int32_t CURSOR_SHOWING = 1;
    inline constexpr int32_t CURSOR_SUPPRESSED = 2;
    inline constexpr int32_t WS_ACTIVECAPTION = 1;
    inline constexpr int32_t GA_PARENT = 1;
    inline constexpr int32_t GA_ROOT = 2;
    inline constexpr int32_t GA_ROOTOWNER = 3;
    inline constexpr int32_t RIM_INPUT = 0;
    inline constexpr int32_t RIM_INPUTSINK = 1;
    inline constexpr int32_t RIM_TYPEMOUSE = 0;
    inline constexpr int32_t RIM_TYPEKEYBOARD = 1;
    inline constexpr int32_t RIM_TYPEHID = 2;
    inline constexpr int32_t RIM_TYPEMAX = 2;
    inline constexpr int32_t RI_MOUSE_LEFT_BUTTON_DOWN = 1;
    inline constexpr int32_t RI_MOUSE_LEFT_BUTTON_UP = 2;
    inline constexpr int32_t RI_MOUSE_RIGHT_BUTTON_DOWN = 4;
    inline constexpr int32_t RI_MOUSE_RIGHT_BUTTON_UP = 8;
    inline constexpr int32_t RI_MOUSE_MIDDLE_BUTTON_DOWN = 16;
    inline constexpr int32_t RI_MOUSE_MIDDLE_BUTTON_UP = 32;
    inline constexpr int32_t RI_MOUSE_BUTTON_1_DOWN = 1;
    inline constexpr int32_t RI_MOUSE_BUTTON_1_UP = 2;
    inline constexpr int32_t RI_MOUSE_BUTTON_2_DOWN = 4;
    inline constexpr int32_t RI_MOUSE_BUTTON_2_UP = 8;
    inline constexpr int32_t RI_MOUSE_BUTTON_3_DOWN = 16;
    inline constexpr int32_t RI_MOUSE_BUTTON_3_UP = 32;
    inline constexpr int32_t RI_MOUSE_BUTTON_4_DOWN = 64;
    inline constexpr int32_t RI_MOUSE_BUTTON_4_UP = 128;
    inline constexpr int32_t RI_MOUSE_BUTTON_5_DOWN = 256;
    inline constexpr int32_t RI_MOUSE_BUTTON_5_UP = 512;
    inline constexpr int32_t RI_MOUSE_WHEEL = 1024;
    inline constexpr int32_t RI_MOUSE_HWHEEL = 2048;
    inline constexpr int32_t MOUSE_MOVE_RELATIVE = 0;
    inline constexpr int32_t MOUSE_MOVE_ABSOLUTE = 1;
    inline constexpr int32_t MOUSE_VIRTUAL_DESKTOP = 2;
    inline constexpr int32_t MOUSE_ATTRIBUTES_CHANGED = 4;
    inline constexpr int32_t MOUSE_MOVE_NOCOALESCE = 8;
    inline constexpr int32_t KEYBOARD_OVERRUN_MAKE_CODE = 255;
    inline constexpr int32_t RI_KEY_MAKE = 0;
    inline constexpr int32_t RI_KEY_BREAK = 1;
    inline constexpr int32_t RI_KEY_E0 = 2;
    inline constexpr int32_t RI_KEY_E1 = 4;
    inline constexpr int32_t RI_KEY_TERMSRV_SET_LED = 8;
    inline constexpr int32_t RI_KEY_TERMSRV_SHADOW = 16;
    inline constexpr int32_t RID_INPUT = 268435459;
    inline constexpr int32_t RID_HEADER = 268435461;
    inline constexpr int32_t RIDI_PREPARSEDDATA = 536870917;
    inline constexpr int32_t RIDI_DEVICENAME = 536870919;
    inline constexpr int32_t RIDI_DEVICEINFO = 536870923;
    inline constexpr int32_t RIDEV_REMOVE = 1;
    inline constexpr int32_t RIDEV_EXCLUDE = 16;
    inline constexpr int32_t RIDEV_PAGEONLY = 32;
    inline constexpr int32_t RIDEV_NOLEGACY = 48;
    inline constexpr int32_t RIDEV_INPUTSINK = 256;
    inline constexpr int32_t RIDEV_CAPTUREMOUSE = 512;
    inline constexpr int32_t RIDEV_NOHOTKEYS = 512;
    inline constexpr int32_t RIDEV_APPKEYS = 1024;
    inline constexpr int32_t RIDEV_EXINPUTSINK = 4096;
    inline constexpr int32_t RIDEV_DEVNOTIFY = 8192;
    inline constexpr int32_t RIDEV_EXMODEMASK = 240;
    inline constexpr int32_t GIDC_ARRIVAL = 1;
    inline constexpr int32_t GIDC_REMOVAL = 2;
    inline constexpr int32_t POINTER_DEVICE_PRODUCT_STRING_MAX = 520;
    inline constexpr int32_t PDC_ARRIVAL = 1;
    inline constexpr int32_t PDC_REMOVAL = 2;
    inline constexpr int32_t PDC_ORIENTATION_0 = 4;
    inline constexpr int32_t PDC_ORIENTATION_90 = 8;
    inline constexpr int32_t PDC_ORIENTATION_180 = 16;
    inline constexpr int32_t PDC_ORIENTATION_270 = 32;
    inline constexpr int32_t PDC_MODE_DEFAULT = 64;
    inline constexpr int32_t PDC_MODE_CENTERED = 128;
    inline constexpr int32_t PDC_MAPPING_CHANGE = 256;
    inline constexpr int32_t PDC_RESOLUTION = 512;
    inline constexpr int32_t PDC_ORIGIN = 1024;
    inline constexpr int32_t PDC_MODE_ASPECTRATIOPRESERVED = 2048;
    inline constexpr int32_t MSGFLT_ADD = 1;
    inline constexpr int32_t MSGFLT_REMOVE = 2;
    inline constexpr int32_t MSGFLTINFO_NONE = 0;
    inline constexpr int32_t MSGFLTINFO_ALREADYALLOWED_FORWND = 1;
    inline constexpr int32_t MSGFLTINFO_ALREADYDISALLOWED_FORWND = 2;
    inline constexpr int32_t MSGFLTINFO_ALLOWED_HIGHER = 3;
    inline constexpr int32_t MSGFLT_RESET = 0;
    inline constexpr int32_t MSGFLT_ALLOW = 1;
    inline constexpr int32_t MSGFLT_DISALLOW = 2;
    inline constexpr int32_t GF_BEGIN = 1;
    inline constexpr int32_t GF_INERTIA = 2;
    inline constexpr int32_t GF_END = 4;
    inline constexpr int32_t GID_BEGIN = 1;
    inline constexpr int32_t GID_END = 2;
    inline constexpr int32_t GID_ZOOM = 3;
    inline constexpr int32_t GID_PAN = 4;
    inline constexpr int32_t GID_ROTATE = 5;
    inline constexpr int32_t GID_TWOFINGERTAP = 6;
    inline constexpr int32_t GID_PRESSANDTAP = 7;
    inline constexpr int32_t GID_ROLLOVER = 7;
    inline constexpr int32_t GC_ALLGESTURES = 1;
    inline constexpr int32_t GC_ZOOM = 1;
    inline constexpr int32_t GC_PAN = 1;
    inline constexpr int32_t GC_PAN_WITH_SINGLE_FINGER_VERTICALLY = 2;
    inline constexpr int32_t GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY = 4;
    inline constexpr int32_t GC_PAN_WITH_GUTTER = 8;
    inline constexpr int32_t GC_PAN_WITH_INERTIA = 16;
    inline constexpr int32_t GC_ROTATE = 1;
    inline constexpr int32_t GC_TWOFINGERTAP = 1;
    inline constexpr int32_t GC_PRESSANDTAP = 1;
    inline constexpr int32_t GC_ROLLOVER = 1;
    inline constexpr int32_t GESTURECONFIGMAXCOUNT = 256;
    inline constexpr int32_t NID_INTEGRATED_TOUCH = 1;
    inline constexpr int32_t NID_EXTERNAL_TOUCH = 2;
    inline constexpr int32_t NID_INTEGRATED_PEN = 4;
    inline constexpr int32_t NID_EXTERNAL_PEN = 8;
    inline constexpr int32_t NID_MULTI_INPUT = 64;
    inline constexpr int32_t NID_READY = 128;
    inline constexpr int32_t MAX_STR_BLOCKREASON = 256;
    inline constexpr uint32_t DXGI_CREATE_FACTORY_DEBUG = 0x1;
    inline constexpr uint32_t INFINITE = 0xffffffff;
    inline constexpr int32_t FACILITY_NULL = 0;
    inline constexpr int32_t FACILITY_RPC = 1;
    inline constexpr int32_t FACILITY_DISPATCH = 2;
    inline constexpr int32_t FACILITY_STORAGE = 3;
    inline constexpr int32_t FACILITY_ITF = 4;
    inline constexpr int32_t FACILITY_WIN32 = 7;
    inline constexpr int32_t FACILITY_WINDOWS = 8;
    inline constexpr int32_t FACILITY_SSPI = 9;
    inline constexpr int32_t FACILITY_SECURITY = 9;
    inline constexpr int32_t FACILITY_CONTROL = 10;
    inline constexpr int32_t FACILITY_CERT = 11;
    inline constexpr int32_t FACILITY_INTERNET = 12;
    inline constexpr int32_t FACILITY_MEDIASERVER = 13;
    inline constexpr int32_t FACILITY_MSMQ = 14;
    inline constexpr int32_t FACILITY_SETUPAPI = 15;
    inline constexpr int32_t FACILITY_SCARD = 16;
    inline constexpr int32_t FACILITY_COMPLUS = 17;
    inline constexpr int32_t FACILITY_AAF = 18;
    inline constexpr int32_t FACILITY_URT = 19;
    inline constexpr int32_t FACILITY_ACS = 20;
    inline constexpr int32_t FACILITY_DPLAY = 21;
    inline constexpr int32_t FACILITY_UMI = 22;
    inline constexpr int32_t FACILITY_SXS = 23;
    inline constexpr int32_t FACILITY_WINDOWS_CE = 24;
    inline constexpr int32_t FACILITY_HTTP = 25;
    inline constexpr int32_t FACILITY_USERMODE_COMMONLOG = 26;
    inline constexpr int32_t FACILITY_WER = 27;
    inline constexpr int32_t FACILITY_USERMODE_FILTER_MANAGER = 31;
    inline constexpr int32_t FACILITY_BACKGROUNDCOPY = 32;
    inline constexpr int32_t FACILITY_CONFIGURATION = 33;
    inline constexpr int32_t FACILITY_WIA = 33;
    inline constexpr int32_t FACILITY_STATE_MANAGEMENT = 34;
    inline constexpr int32_t FACILITY_METADIRECTORY = 35;
    inline constexpr int32_t FACILITY_WINDOWSUPDATE = 36;
    inline constexpr int32_t FACILITY_DIRECTORYSERVICE = 37;
    inline constexpr int32_t FACILITY_GRAPHICS = 38;
    inline constexpr int32_t FACILITY_SHELL = 39;
    inline constexpr int32_t FACILITY_NAP = 39;
    inline constexpr int32_t FACILITY_TPM_SERVICES = 40;
    inline constexpr int32_t FACILITY_TPM_SOFTWARE = 41;
    inline constexpr int32_t FACILITY_UI = 42;
    inline constexpr int32_t FACILITY_XAML = 43;
    inline constexpr int32_t FACILITY_ACTION_QUEUE = 44;
    inline constexpr int32_t FACILITY_PLA = 48;
    inline constexpr int32_t FACILITY_WINDOWS_SETUP = 48;
    inline constexpr int32_t FACILITY_FVE = 49;
    inline constexpr int32_t FACILITY_FWP = 50;
    inline constexpr int32_t FACILITY_WINRM = 51;
    inline constexpr int32_t FACILITY_NDIS = 52;
    inline constexpr int32_t FACILITY_USERMODE_HYPERVISOR = 53;
    inline constexpr int32_t FACILITY_CMI = 54;
    inline constexpr int32_t FACILITY_USERMODE_VIRTUALIZATION = 55;
    inline constexpr int32_t FACILITY_USERMODE_VOLMGR = 56;
    inline constexpr int32_t FACILITY_BCD = 57;
    inline constexpr int32_t FACILITY_USERMODE_VHD = 58;
    inline constexpr int32_t FACILITY_USERMODE_HNS = 59;
    inline constexpr int32_t FACILITY_SDIAG = 60;
    inline constexpr int32_t FACILITY_WEBSERVICES = 61;
    inline constexpr int32_t FACILITY_WINPE = 61;
    inline constexpr int32_t FACILITY_WPN = 62;
    inline constexpr int32_t FACILITY_WINDOWS_STORE = 63;
    inline constexpr int32_t FACILITY_INPUT = 64;
    inline constexpr int32_t FACILITY_QUIC = 65;
    inline constexpr int32_t FACILITY_EAP = 66;
    inline constexpr int32_t FACILITY_WINDOWS_DEFENDER = 80;
    inline constexpr int32_t FACILITY_OPC = 81;
    inline constexpr int32_t FACILITY_XPS = 82;
    inline constexpr int32_t FACILITY_MBN = 84;
    inline constexpr int32_t FACILITY_POWERSHELL = 84;
    inline constexpr int32_t FACILITY_RAS = 83;
    inline constexpr int32_t FACILITY_P2P_INT = 98;
    inline constexpr int32_t FACILITY_P2P = 99;
    inline constexpr int32_t FACILITY_DAF = 100;
    inline constexpr int32_t FACILITY_BLUETOOTH_ATT = 101;
    inline constexpr int32_t FACILITY_AUDIO = 102;
    inline constexpr int32_t FACILITY_STATEREPOSITORY = 103;
    inline constexpr int32_t FACILITY_VISUALCPP = 109;
    inline constexpr int32_t FACILITY_SCRIPT = 112;
    inline constexpr int32_t FACILITY_PARSE = 113;
    inline constexpr int32_t FACILITY_BLB = 120;
    inline constexpr int32_t FACILITY_BLB_CLI = 121;
    inline constexpr int32_t FACILITY_WSBAPP = 122;
    inline constexpr int32_t FACILITY_BLBUI = 128;
    inline constexpr int32_t FACILITY_USN = 129;
    inline constexpr int32_t FACILITY_USERMODE_VOLSNAP = 130;
    inline constexpr int32_t FACILITY_TIERING = 131;
    inline constexpr int32_t FACILITY_WSB_ONLINE = 133;
    inline constexpr int32_t FACILITY_ONLINE_ID = 134;
    inline constexpr int32_t FACILITY_DEVICE_UPDATE_AGENT = 135;
    inline constexpr int32_t FACILITY_DRVSERVICING = 136;
    inline constexpr int32_t FACILITY_DLS = 153;
    inline constexpr int32_t FACILITY_DELIVERY_OPTIMIZATION = 208;
    inline constexpr int32_t FACILITY_USERMODE_SPACES = 231;
    inline constexpr int32_t FACILITY_USER_MODE_SECURITY_CORE = 232;
    inline constexpr int32_t FACILITY_USERMODE_LICENSING = 234;
    inline constexpr int32_t FACILITY_SOS = 160;
    inline constexpr int32_t FACILITY_DEBUGGERS = 176;
    inline constexpr int32_t FACILITY_SPP = 256;
    inline constexpr int32_t FACILITY_RESTORE = 256;
    inline constexpr int32_t FACILITY_DMSERVER = 256;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_SERVER = 257;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_IMAGING = 258;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT = 259;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_UTIL = 260;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_BINLSVC = 261;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_PXE = 263;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_TFTP = 264;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT = 272;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING = 278;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER = 289;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT = 290;
    inline constexpr int32_t FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER = 293;
    inline constexpr int32_t FACILITY_LINGUISTIC_SERVICES = 305;
    inline constexpr int32_t FACILITY_AUDIOSTREAMING = 1094;
    inline constexpr int32_t FACILITY_TTD = 1490;
    inline constexpr int32_t FACILITY_ACCELERATOR = 1536;
    inline constexpr int32_t FACILITY_WMAAECMA = 1996;
    inline constexpr int32_t FACILITY_DIRECTMUSIC = 2168;
    inline constexpr int32_t FACILITY_DIRECT3D10 = 2169;
    inline constexpr int32_t FACILITY_DXGI = 2170;
    inline constexpr int32_t FACILITY_DXGI_DDI = 2171;
    inline constexpr int32_t FACILITY_DIRECT3D11 = 2172;
    inline constexpr int32_t FACILITY_DIRECT3D11_DEBUG = 2173;
    inline constexpr int32_t FACILITY_DIRECT3D12 = 2174;
    inline constexpr int32_t FACILITY_DIRECT3D12_DEBUG = 2175;
    inline constexpr int32_t FACILITY_DXCORE = 2176;
    inline constexpr int32_t FACILITY_LEAP = 2184;
    inline constexpr int32_t FACILITY_AUDCLNT = 2185;
    inline constexpr int32_t FACILITY_WINCODEC_DWRITE_DWM = 2200;
    inline constexpr int32_t FACILITY_WINML = 2192;
    inline constexpr int32_t FACILITY_DIRECT2D = 2201;
    inline constexpr int32_t FACILITY_DEFRAG = 2304;
    inline constexpr int32_t FACILITY_USERMODE_SDBUS = 2305;
    inline constexpr int32_t FACILITY_JSCRIPT = 2306;
    inline constexpr int32_t FACILITY_PIDGENX = 2561;
    inline constexpr int32_t FACILITY_EAS = 85;
    inline constexpr int32_t FACILITY_WEB = 885;
    inline constexpr int32_t FACILITY_WEB_SOCKET = 886;
    inline constexpr int32_t FACILITY_MOBILE = 1793;
    inline constexpr int32_t FACILITY_SQLITE = 1967;
    inline constexpr int32_t FACILITY_UTC = 1989;
    inline constexpr int32_t FACILITY_WEP = 2049;
    inline constexpr int32_t FACILITY_SYNCENGINE = 2050;
    inline constexpr int32_t FACILITY_XBOX = 2339;
    inline constexpr int32_t FACILITY_GAME = 2340;
    inline constexpr int32_t FACILITY_PIX = 2748;
    inline constexpr int32_t ERROR_SUCCESS = 0;
    inline constexpr int32_t NO_ERROR = 0;
    inline constexpr int32_t SEC_E_OK = 0;
    inline constexpr int32_t ERROR_INVALID_FUNCTION = 1;
    inline constexpr int32_t ERROR_FILE_NOT_FOUND = 2;
    inline constexpr int32_t ERROR_PATH_NOT_FOUND = 3;
    inline constexpr int32_t ERROR_TOO_MANY_OPEN_FILES = 4;
    inline constexpr int32_t ERROR_ACCESS_DENIED = 5;
    inline constexpr int32_t ERROR_INVALID_HANDLE = 6;
    inline constexpr int32_t ERROR_ARENA_TRASHED = 7;
    inline constexpr int32_t ERROR_NOT_ENOUGH_MEMORY = 8;
    inline constexpr int32_t ERROR_INVALID_BLOCK = 9;
    inline constexpr int32_t ERROR_BAD_ENVIRONMENT = 10;
    inline constexpr int32_t ERROR_BAD_FORMAT = 11;
    inline constexpr int32_t ERROR_INVALID_ACCESS = 12;
    inline constexpr int32_t ERROR_INVALID_DATA = 13;
    inline constexpr int32_t ERROR_OUTOFMEMORY = 14;
    inline constexpr int32_t ERROR_INVALID_DRIVE = 15;
    inline constexpr int32_t ERROR_CURRENT_DIRECTORY = 16;
    inline constexpr int32_t ERROR_NOT_SAME_DEVICE = 17;
    inline constexpr int32_t ERROR_NO_MORE_FILES = 18;
    inline constexpr int32_t ERROR_WRITE_PROTECT = 19;
    inline constexpr int32_t ERROR_BAD_UNIT = 20;
    inline constexpr int32_t ERROR_NOT_READY = 21;
    inline constexpr int32_t ERROR_BAD_COMMAND = 22;
    inline constexpr int32_t ERROR_CRC = 23;
    inline constexpr int32_t ERROR_BAD_LENGTH = 24;
    inline constexpr int32_t ERROR_SEEK = 25;
    inline constexpr int32_t ERROR_NOT_DOS_DISK = 26;
    inline constexpr int32_t ERROR_SECTOR_NOT_FOUND = 27;
    inline constexpr int32_t ERROR_OUT_OF_PAPER = 28;
    inline constexpr int32_t ERROR_WRITE_FAULT = 29;
    inline constexpr int32_t ERROR_READ_FAULT = 30;
    inline constexpr int32_t ERROR_GEN_FAILURE = 31;
    inline constexpr int32_t ERROR_SHARING_VIOLATION = 32;
    inline constexpr int32_t ERROR_LOCK_VIOLATION = 33;
    inline constexpr int32_t ERROR_WRONG_DISK = 34;
    inline constexpr int32_t ERROR_SHARING_BUFFER_EXCEEDED = 36;
    inline constexpr int32_t ERROR_HANDLE_EOF = 38;
    inline constexpr int32_t ERROR_HANDLE_DISK_FULL = 39;
    inline constexpr int32_t ERROR_NOT_SUPPORTED = 50;
    inline constexpr int32_t ERROR_REM_NOT_LIST = 51;
    inline constexpr int32_t ERROR_DUP_NAME = 52;
    inline constexpr int32_t ERROR_BAD_NETPATH = 53;
    inline constexpr int32_t ERROR_NETWORK_BUSY = 54;
    inline constexpr int32_t ERROR_DEV_NOT_EXIST = 55;
    inline constexpr int32_t ERROR_TOO_MANY_CMDS = 56;
    inline constexpr int32_t ERROR_ADAP_HDW_ERR = 57;
    inline constexpr int32_t ERROR_BAD_NET_RESP = 58;
    inline constexpr int32_t ERROR_UNEXP_NET_ERR = 59;
    inline constexpr int32_t ERROR_BAD_REM_ADAP = 60;
    inline constexpr int32_t ERROR_PRINTQ_FULL = 61;
    inline constexpr int32_t ERROR_NO_SPOOL_SPACE = 62;
    inline constexpr int32_t ERROR_PRINT_CANCELLED = 63;
    inline constexpr int32_t ERROR_NETNAME_DELETED = 64;
    inline constexpr int32_t ERROR_NETWORK_ACCESS_DENIED = 65;
    inline constexpr int32_t ERROR_BAD_DEV_TYPE = 66;
    inline constexpr int32_t ERROR_BAD_NET_NAME = 67;
    inline constexpr int32_t ERROR_TOO_MANY_NAMES = 68;
    inline constexpr int32_t ERROR_TOO_MANY_SESS = 69;
    inline constexpr int32_t ERROR_SHARING_PAUSED = 70;
    inline constexpr int32_t ERROR_REQ_NOT_ACCEP = 71;
    inline constexpr int32_t ERROR_REDIR_PAUSED = 72;
    inline constexpr int32_t ERROR_FILE_EXISTS = 80;
    inline constexpr int32_t ERROR_CANNOT_MAKE = 82;
    inline constexpr int32_t ERROR_FAIL_I24 = 83;
    inline constexpr int32_t ERROR_OUT_OF_STRUCTURES = 84;
    inline constexpr int32_t ERROR_ALREADY_ASSIGNED = 85;
    inline constexpr int32_t ERROR_INVALID_PASSWORD = 86;
    inline constexpr int32_t ERROR_INVALID_PARAMETER = 87;
    inline constexpr int32_t ERROR_NET_WRITE_FAULT = 88;
    inline constexpr int32_t ERROR_NO_PROC_SLOTS = 89;
    inline constexpr int32_t ERROR_TOO_MANY_SEMAPHORES = 100;
    inline constexpr int32_t ERROR_EXCL_SEM_ALREADY_OWNED = 101;
    inline constexpr int32_t ERROR_SEM_IS_SET = 102;
    inline constexpr int32_t ERROR_TOO_MANY_SEM_REQUESTS = 103;
    inline constexpr int32_t ERROR_INVALID_AT_INTERRUPT_TIME = 104;
    inline constexpr int32_t ERROR_SEM_OWNER_DIED = 105;
    inline constexpr int32_t ERROR_SEM_USER_LIMIT = 106;
    inline constexpr int32_t ERROR_DISK_CHANGE = 107;
    inline constexpr int32_t ERROR_DRIVE_LOCKED = 108;
    inline constexpr int32_t ERROR_BROKEN_PIPE = 109;
    inline constexpr int32_t ERROR_OPEN_FAILED = 110;
    inline constexpr int32_t ERROR_BUFFER_OVERFLOW = 111;
    inline constexpr int32_t ERROR_DISK_FULL = 112;
    inline constexpr int32_t ERROR_NO_MORE_SEARCH_HANDLES = 113;
    inline constexpr int32_t ERROR_INVALID_TARGET_HANDLE = 114;
    inline constexpr int32_t ERROR_INVALID_CATEGORY = 117;
    inline constexpr int32_t ERROR_INVALID_VERIFY_SWITCH = 118;
    inline constexpr int32_t ERROR_BAD_DRIVER_LEVEL = 119;
    inline constexpr int32_t ERROR_CALL_NOT_IMPLEMENTED = 120;
    inline constexpr int32_t ERROR_SEM_TIMEOUT = 121;
    inline constexpr int32_t ERROR_INSUFFICIENT_BUFFER = 122;
    inline constexpr int32_t ERROR_INVALID_NAME = 123;
    inline constexpr int32_t ERROR_INVALID_LEVEL = 124;
    inline constexpr int32_t ERROR_NO_VOLUME_LABEL = 125;
    inline constexpr int32_t ERROR_MOD_NOT_FOUND = 126;
    inline constexpr int32_t ERROR_PROC_NOT_FOUND = 127;
    inline constexpr int32_t ERROR_WAIT_NO_CHILDREN = 128;
    inline constexpr int32_t ERROR_CHILD_NOT_COMPLETE = 129;
    inline constexpr int32_t ERROR_DIRECT_ACCESS_HANDLE = 130;
    inline constexpr int32_t ERROR_NEGATIVE_SEEK = 131;
    inline constexpr int32_t ERROR_SEEK_ON_DEVICE = 132;
    inline constexpr int32_t ERROR_IS_JOIN_TARGET = 133;
    inline constexpr int32_t ERROR_IS_JOINED = 134;
    inline constexpr int32_t ERROR_IS_SUBSTED = 135;
    inline constexpr int32_t ERROR_NOT_JOINED = 136;
    inline constexpr int32_t ERROR_NOT_SUBSTED = 137;
    inline constexpr int32_t ERROR_JOIN_TO_JOIN = 138;
    inline constexpr int32_t ERROR_SUBST_TO_SUBST = 139;
    inline constexpr int32_t ERROR_JOIN_TO_SUBST = 140;
    inline constexpr int32_t ERROR_SUBST_TO_JOIN = 141;
    inline constexpr int32_t ERROR_BUSY_DRIVE = 142;
    inline constexpr int32_t ERROR_SAME_DRIVE = 143;
    inline constexpr int32_t ERROR_DIR_NOT_ROOT = 144;
    inline constexpr int32_t ERROR_DIR_NOT_EMPTY = 145;
    inline constexpr int32_t ERROR_IS_SUBST_PATH = 146;
    inline constexpr int32_t ERROR_IS_JOIN_PATH = 147;
    inline constexpr int32_t ERROR_PATH_BUSY = 148;
    inline constexpr int32_t ERROR_IS_SUBST_TARGET = 149;
    inline constexpr int32_t ERROR_SYSTEM_TRACE = 150;
    inline constexpr int32_t ERROR_INVALID_EVENT_COUNT = 151;
    inline constexpr int32_t ERROR_TOO_MANY_MUXWAITERS = 152;
    inline constexpr int32_t ERROR_INVALID_LIST_FORMAT = 153;
    inline constexpr int32_t ERROR_LABEL_TOO_LONG = 154;
    inline constexpr int32_t ERROR_TOO_MANY_TCBS = 155;
    inline constexpr int32_t ERROR_SIGNAL_REFUSED = 156;
    inline constexpr int32_t ERROR_DISCARDED = 157;
    inline constexpr int32_t ERROR_NOT_LOCKED = 158;
    inline constexpr int32_t ERROR_BAD_THREADID_ADDR = 159;
    inline constexpr int32_t ERROR_BAD_ARGUMENTS = 160;
    inline constexpr int32_t ERROR_BAD_PATHNAME = 161;
    inline constexpr int32_t ERROR_SIGNAL_PENDING = 162;
    inline constexpr int32_t ERROR_MAX_THRDS_REACHED = 164;
    inline constexpr int32_t ERROR_LOCK_FAILED = 167;
    inline constexpr int32_t ERROR_BUSY = 170;
    inline constexpr int32_t ERROR_DEVICE_SUPPORT_IN_PROGRESS = 171;
    inline constexpr int32_t ERROR_CANCEL_VIOLATION = 173;
    inline constexpr int32_t ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174;
    inline constexpr int32_t ERROR_INVALID_SEGMENT_NUMBER = 180;
    inline constexpr int32_t ERROR_INVALID_ORDINAL = 182;
    inline constexpr int32_t ERROR_ALREADY_EXISTS = 183;
    inline constexpr int32_t ERROR_INVALID_FLAG_NUMBER = 186;
    inline constexpr int32_t ERROR_SEM_NOT_FOUND = 187;
    inline constexpr int32_t ERROR_INVALID_STARTING_CODESEG = 188;
    inline constexpr int32_t ERROR_INVALID_STACKSEG = 189;
    inline constexpr int32_t ERROR_INVALID_MODULETYPE = 190;
    inline constexpr int32_t ERROR_INVALID_EXE_SIGNATURE = 191;
    inline constexpr int32_t ERROR_EXE_MARKED_INVALID = 192;
    inline constexpr int32_t ERROR_BAD_EXE_FORMAT = 193;
    inline constexpr int32_t ERROR_ITERATED_DATA_EXCEEDS_64k = 194;
    inline constexpr int32_t ERROR_INVALID_MINALLOCSIZE = 195;
    inline constexpr int32_t ERROR_DYNLINK_FROM_INVALID_RING = 196;
    inline constexpr int32_t ERROR_IOPL_NOT_ENABLED = 197;
    inline constexpr int32_t ERROR_INVALID_SEGDPL = 198;
    inline constexpr int32_t ERROR_AUTODATASEG_EXCEEDS_64k = 199;
    inline constexpr int32_t ERROR_RING2SEG_MUST_BE_MOVABLE = 200;
    inline constexpr int32_t ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201;
    inline constexpr int32_t ERROR_INFLOOP_IN_RELOC_CHAIN = 202;
    inline constexpr int32_t ERROR_ENVVAR_NOT_FOUND = 203;
    inline constexpr int32_t ERROR_NO_SIGNAL_SENT = 205;
    inline constexpr int32_t ERROR_FILENAME_EXCED_RANGE = 206;
    inline constexpr int32_t ERROR_RING2_STACK_IN_USE = 207;
    inline constexpr int32_t ERROR_META_EXPANSION_TOO_LONG = 208;
    inline constexpr int32_t ERROR_INVALID_SIGNAL_NUMBER = 209;
    inline constexpr int32_t ERROR_THREAD_1_INACTIVE = 210;
    inline constexpr int32_t ERROR_LOCKED = 212;
    inline constexpr int32_t ERROR_TOO_MANY_MODULES = 214;
    inline constexpr int32_t ERROR_NESTING_NOT_ALLOWED = 215;
    inline constexpr int32_t ERROR_EXE_MACHINE_TYPE_MISMATCH = 216;
    inline constexpr int32_t ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 217;
    inline constexpr int32_t ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 218;
    inline constexpr int32_t ERROR_FILE_CHECKED_OUT = 220;
    inline constexpr int32_t ERROR_CHECKOUT_REQUIRED = 221;
    inline constexpr int32_t ERROR_BAD_FILE_TYPE = 222;
    inline constexpr int32_t ERROR_FILE_TOO_LARGE = 223;
    inline constexpr int32_t ERROR_FORMS_AUTH_REQUIRED = 224;
    inline constexpr int32_t ERROR_VIRUS_INFECTED = 225;
    inline constexpr int32_t ERROR_VIRUS_DELETED = 226;
    inline constexpr int32_t ERROR_PIPE_LOCAL = 229;
    inline constexpr int32_t ERROR_BAD_PIPE = 230;
    inline constexpr int32_t ERROR_PIPE_BUSY = 231;
    inline constexpr int32_t ERROR_NO_DATA = 232;
    inline constexpr int32_t ERROR_PIPE_NOT_CONNECTED = 233;
    inline constexpr int32_t ERROR_MORE_DATA = 234;
    inline constexpr int32_t ERROR_NO_WORK_DONE = 235;
    inline constexpr int32_t ERROR_VC_DISCONNECTED = 240;
    inline constexpr int32_t ERROR_INVALID_EA_NAME = 254;
    inline constexpr int32_t ERROR_EA_LIST_INCONSISTENT = 255;
    inline constexpr int32_t WAIT_TIMEOUT = 258;
    inline constexpr int32_t ERROR_NO_MORE_ITEMS = 259;
    inline constexpr int32_t ERROR_CANNOT_COPY = 266;
    inline constexpr int32_t ERROR_DIRECTORY = 267;
    inline constexpr int32_t ERROR_EAS_DIDNT_FIT = 275;
    inline constexpr int32_t ERROR_EA_FILE_CORRUPT = 276;
    inline constexpr int32_t ERROR_EA_TABLE_FULL = 277;
    inline constexpr int32_t ERROR_INVALID_EA_HANDLE = 278;
    inline constexpr int32_t ERROR_EAS_NOT_SUPPORTED = 282;
    inline constexpr int32_t ERROR_NOT_OWNER = 288;
    inline constexpr int32_t ERROR_TOO_MANY_POSTS = 298;
    inline constexpr int32_t ERROR_PARTIAL_COPY = 299;
    inline constexpr int32_t ERROR_OPLOCK_NOT_GRANTED = 300;
    inline constexpr int32_t ERROR_INVALID_OPLOCK_PROTOCOL = 301;
    inline constexpr int32_t ERROR_DISK_TOO_FRAGMENTED = 302;
    inline constexpr int32_t ERROR_DELETE_PENDING = 303;
    inline constexpr int32_t ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304;
    inline constexpr int32_t ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305;
    inline constexpr int32_t ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306;
    inline constexpr int32_t ERROR_INVALID_LOCK_RANGE = 307;
    inline constexpr int32_t ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308;
    inline constexpr int32_t ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309;
    inline constexpr int32_t ERROR_INVALID_EXCEPTION_HANDLER = 310;
    inline constexpr int32_t ERROR_DUPLICATE_PRIVILEGES = 311;
    inline constexpr int32_t ERROR_NO_RANGES_PROCESSED = 312;
    inline constexpr int32_t ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 313;
    inline constexpr int32_t ERROR_DISK_RESOURCES_EXHAUSTED = 314;
    inline constexpr int32_t ERROR_INVALID_TOKEN = 315;
    inline constexpr int32_t ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 316;
    inline constexpr int32_t ERROR_MR_MID_NOT_FOUND = 317;
    inline constexpr int32_t ERROR_SCOPE_NOT_FOUND = 318;
    inline constexpr int32_t ERROR_UNDEFINED_SCOPE = 319;
    inline constexpr int32_t ERROR_INVALID_CAP = 320;
    inline constexpr int32_t ERROR_DEVICE_UNREACHABLE = 321;
    inline constexpr int32_t ERROR_DEVICE_NO_RESOURCES = 322;
    inline constexpr int32_t ERROR_DATA_CHECKSUM_ERROR = 323;
    inline constexpr int32_t ERROR_INTERMIXED_KERNEL_EA_OPERATION = 324;
    inline constexpr int32_t ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 326;
    inline constexpr int32_t ERROR_OFFSET_ALIGNMENT_VIOLATION = 327;
    inline constexpr int32_t ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 328;
    inline constexpr int32_t ERROR_OPERATION_IN_PROGRESS = 329;
    inline constexpr int32_t ERROR_BAD_DEVICE_PATH = 330;
    inline constexpr int32_t ERROR_TOO_MANY_DESCRIPTORS = 331;
    inline constexpr int32_t ERROR_SCRUB_DATA_DISABLED = 332;
    inline constexpr int32_t ERROR_NOT_REDUNDANT_STORAGE = 333;
    inline constexpr int32_t ERROR_RESIDENT_FILE_NOT_SUPPORTED = 334;
    inline constexpr int32_t ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 335;
    inline constexpr int32_t ERROR_DIRECTORY_NOT_SUPPORTED = 336;
    inline constexpr int32_t ERROR_NOT_READ_FROM_COPY = 337;
    inline constexpr int32_t ERROR_FT_WRITE_FAILURE = 338;
    inline constexpr int32_t ERROR_FT_DI_SCAN_REQUIRED = 339;
    inline constexpr int32_t ERROR_INVALID_KERNEL_INFO_VERSION = 340;
    inline constexpr int32_t ERROR_INVALID_PEP_INFO_VERSION = 341;
    inline constexpr int32_t ERROR_OBJECT_NOT_EXTERNALLY_BACKED = 342;
    inline constexpr int32_t ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN = 343;
    inline constexpr int32_t ERROR_COMPRESSION_NOT_BENEFICIAL = 344;
    inline constexpr int32_t ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = 345;
    inline constexpr int32_t ERROR_BLOCKED_BY_PARENTAL_CONTROLS = 346;
    inline constexpr int32_t ERROR_BLOCK_TOO_MANY_REFERENCES = 347;
    inline constexpr int32_t ERROR_MARKED_TO_DISALLOW_WRITES = 348;
    inline constexpr int32_t ERROR_ENCLAVE_FAILURE = 349;
    inline constexpr int32_t ERROR_FAIL_NOACTION_REBOOT = 350;
    inline constexpr int32_t ERROR_FAIL_SHUTDOWN = 351;
    inline constexpr int32_t ERROR_FAIL_RESTART = 352;
    inline constexpr int32_t ERROR_MAX_SESSIONS_REACHED = 353;
    inline constexpr int32_t ERROR_NETWORK_ACCESS_DENIED_EDP = 354;
    inline constexpr int32_t ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL = 355;
    inline constexpr int32_t ERROR_EDP_POLICY_DENIES_OPERATION = 356;
    inline constexpr int32_t ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = 357;
    inline constexpr int32_t ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT = 358;
    inline constexpr int32_t ERROR_DEVICE_IN_MAINTENANCE = 359;
    inline constexpr int32_t ERROR_NOT_SUPPORTED_ON_DAX = 360;
    inline constexpr int32_t ERROR_DAX_MAPPING_EXISTS = 361;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = 362;
    inline constexpr int32_t ERROR_CLOUD_FILE_METADATA_CORRUPT = 363;
    inline constexpr int32_t ERROR_CLOUD_FILE_METADATA_TOO_LARGE = 364;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE = 365;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH = 366;
    inline constexpr int32_t ERROR_CHILD_PROCESS_BLOCKED = 367;
    inline constexpr int32_t ERROR_STORAGE_LOST_DATA_PERSISTENCE = 368;
    inline constexpr int32_t ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE = 369;
    inline constexpr int32_t ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT = 370;
    inline constexpr int32_t ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = 371;
    inline constexpr int32_t ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN = 372;
    inline constexpr int32_t ERROR_GDI_HANDLE_LEAK = 373;
    inline constexpr int32_t ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS = 374;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED = 375;
    inline constexpr int32_t ERROR_NOT_A_CLOUD_FILE = 376;
    inline constexpr int32_t ERROR_CLOUD_FILE_NOT_IN_SYNC = 377;
    inline constexpr int32_t ERROR_CLOUD_FILE_ALREADY_CONNECTED = 378;
    inline constexpr int32_t ERROR_CLOUD_FILE_NOT_SUPPORTED = 379;
    inline constexpr int32_t ERROR_CLOUD_FILE_INVALID_REQUEST = 380;
    inline constexpr int32_t ERROR_CLOUD_FILE_READ_ONLY_VOLUME = 381;
    inline constexpr int32_t ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY = 382;
    inline constexpr int32_t ERROR_CLOUD_FILE_VALIDATION_FAILED = 383;
    inline constexpr int32_t ERROR_SMB1_NOT_AVAILABLE = 384;
    inline constexpr int32_t ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION = 385;
    inline constexpr int32_t ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = 386;
    inline constexpr int32_t ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES = 387;
    inline constexpr int32_t ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = 388;
    inline constexpr int32_t ERROR_CLOUD_FILE_UNSUCCESSFUL = 389;
    inline constexpr int32_t ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = 390;
    inline constexpr int32_t ERROR_CLOUD_FILE_IN_USE = 391;
    inline constexpr int32_t ERROR_CLOUD_FILE_PINNED = 392;
    inline constexpr int32_t ERROR_CLOUD_FILE_REQUEST_ABORTED = 393;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROPERTY_CORRUPT = 394;
    inline constexpr int32_t ERROR_CLOUD_FILE_ACCESS_DENIED = 395;
    inline constexpr int32_t ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS = 396;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT = 397;
    inline constexpr int32_t ERROR_CLOUD_FILE_REQUEST_CANCELED = 398;
    inline constexpr int32_t ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = 399;
    inline constexpr int32_t ERROR_THREAD_MODE_ALREADY_BACKGROUND = 400;
    inline constexpr int32_t ERROR_THREAD_MODE_NOT_BACKGROUND = 401;
    inline constexpr int32_t ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 402;
    inline constexpr int32_t ERROR_PROCESS_MODE_NOT_BACKGROUND = 403;
    inline constexpr int32_t ERROR_CLOUD_FILE_PROVIDER_TERMINATED = 404;
    inline constexpr int32_t ERROR_NOT_A_CLOUD_SYNC_ROOT = 405;
    inline constexpr int32_t ERROR_FILE_PROTECTED_UNDER_DPL = 406;
    inline constexpr int32_t ERROR_VOLUME_NOT_CLUSTER_ALIGNED = 407;
    inline constexpr int32_t ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND = 408;
    inline constexpr int32_t ERROR_APPX_FILE_NOT_ENCRYPTED = 409;
    inline constexpr int32_t ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED = 410;
    inline constexpr int32_t ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET = 411;
    inline constexpr int32_t ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE = 412;
    inline constexpr int32_t ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER = 413;
    inline constexpr int32_t ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = 414;
    inline constexpr int32_t ERROR_FT_READ_FAILURE = 415;
    inline constexpr int32_t ERROR_STORAGE_RESERVE_ID_INVALID = 416;
    inline constexpr int32_t ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = 417;
    inline constexpr int32_t ERROR_STORAGE_RESERVE_ALREADY_EXISTS = 418;
    inline constexpr int32_t ERROR_STORAGE_RESERVE_NOT_EMPTY = 419;
    inline constexpr int32_t ERROR_NOT_A_DAX_VOLUME = 420;
    inline constexpr int32_t ERROR_NOT_DAX_MAPPABLE = 421;
    inline constexpr int32_t ERROR_TIME_SENSITIVE_THREAD = 422;
    inline constexpr int32_t ERROR_DPL_NOT_SUPPORTED_FOR_USER = 423;
    inline constexpr int32_t ERROR_CASE_DIFFERING_NAMES_IN_DIR = 424;
    inline constexpr int32_t ERROR_FILE_NOT_SUPPORTED = 425;
    inline constexpr int32_t ERROR_CLOUD_FILE_REQUEST_TIMEOUT = 426;
    inline constexpr int32_t ERROR_NO_TASK_QUEUE = 427;
    inline constexpr int32_t ERROR_SRC_SRV_DLL_LOAD_FAILED = 428;
    inline constexpr int32_t ERROR_NOT_SUPPORTED_WITH_BTT = 429;
    inline constexpr int32_t ERROR_ENCRYPTION_DISABLED = 430;
    inline constexpr int32_t ERROR_ENCRYPTING_METADATA_DISALLOWED = 431;
    inline constexpr int32_t ERROR_CANT_CLEAR_ENCRYPTION_FLAG = 432;
    inline constexpr int32_t ERROR_NO_SUCH_DEVICE = 433;
    inline constexpr int32_t ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED = 434;
    inline constexpr int32_t ERROR_FILE_SNAP_IN_PROGRESS = 435;
    inline constexpr int32_t ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED = 436;
    inline constexpr int32_t ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = 437;
    inline constexpr int32_t ERROR_FILE_SNAP_IO_NOT_COORDINATED = 438;
    inline constexpr int32_t ERROR_FILE_SNAP_UNEXPECTED_ERROR = 439;
    inline constexpr int32_t ERROR_FILE_SNAP_INVALID_PARAMETER = 440;
    inline constexpr int32_t ERROR_UNSATISFIED_DEPENDENCIES = 441;
    inline constexpr int32_t ERROR_CASE_SENSITIVE_PATH = 442;
    inline constexpr int32_t ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = 443;
    inline constexpr int32_t ERROR_CAPAUTHZ_NOT_DEVUNLOCKED = 450;
    inline constexpr int32_t ERROR_CAPAUTHZ_CHANGE_TYPE = 451;
    inline constexpr int32_t ERROR_CAPAUTHZ_NOT_PROVISIONED = 452;
    inline constexpr int32_t ERROR_CAPAUTHZ_NOT_AUTHORIZED = 453;
    inline constexpr int32_t ERROR_CAPAUTHZ_NO_POLICY = 454;
    inline constexpr int32_t ERROR_CAPAUTHZ_DB_CORRUPTED = 455;
    inline constexpr int32_t ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG = 456;
    inline constexpr int32_t ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY = 457;
    inline constexpr int32_t ERROR_CAPAUTHZ_SCCD_PARSE_ERROR = 458;
    inline constexpr int32_t ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED = 459;
    inline constexpr int32_t ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH = 460;
    inline constexpr int32_t ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT = 480;
    inline constexpr int32_t ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT = 481;
    inline constexpr int32_t ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT = 482;
    inline constexpr int32_t ERROR_DEVICE_HARDWARE_ERROR = 483;
    inline constexpr int32_t ERROR_INVALID_ADDRESS = 487;
    inline constexpr int32_t ERROR_VRF_CFG_AND_IO_ENABLED = 1183;
    inline constexpr int32_t ERROR_PARTITION_TERMINATING = 1184;
    inline constexpr int32_t ERROR_USER_PROFILE_LOAD = 500;
    inline constexpr int32_t ERROR_ARITHMETIC_OVERFLOW = 534;
    inline constexpr int32_t ERROR_PIPE_CONNECTED = 535;
    inline constexpr int32_t ERROR_PIPE_LISTENING = 536;
    inline constexpr int32_t ERROR_VERIFIER_STOP = 537;
    inline constexpr int32_t ERROR_ABIOS_ERROR = 538;
    inline constexpr int32_t ERROR_WX86_WARNING = 539;
    inline constexpr int32_t ERROR_WX86_ERROR = 540;
    inline constexpr int32_t ERROR_TIMER_NOT_CANCELED = 541;
    inline constexpr int32_t ERROR_UNWIND = 542;
    inline constexpr int32_t ERROR_BAD_STACK = 543;
    inline constexpr int32_t ERROR_INVALID_UNWIND_TARGET = 544;
    inline constexpr int32_t ERROR_INVALID_PORT_ATTRIBUTES = 545;
    inline constexpr int32_t ERROR_PORT_MESSAGE_TOO_LONG = 546;
    inline constexpr int32_t ERROR_INVALID_QUOTA_LOWER = 547;
    inline constexpr int32_t ERROR_DEVICE_ALREADY_ATTACHED = 548;
    inline constexpr int32_t ERROR_INSTRUCTION_MISALIGNMENT = 549;
    inline constexpr int32_t ERROR_PROFILING_NOT_STARTED = 550;
    inline constexpr int32_t ERROR_PROFILING_NOT_STOPPED = 551;
    inline constexpr int32_t ERROR_COULD_NOT_INTERPRET = 552;
    inline constexpr int32_t ERROR_PROFILING_AT_LIMIT = 553;
    inline constexpr int32_t ERROR_CANT_WAIT = 554;
    inline constexpr int32_t ERROR_CANT_TERMINATE_SELF = 555;
    inline constexpr int32_t ERROR_UNEXPECTED_MM_CREATE_ERR = 556;
    inline constexpr int32_t ERROR_UNEXPECTED_MM_MAP_ERROR = 557;
    inline constexpr int32_t ERROR_UNEXPECTED_MM_EXTEND_ERR = 558;
    inline constexpr int32_t ERROR_BAD_FUNCTION_TABLE = 559;
    inline constexpr int32_t ERROR_NO_GUID_TRANSLATION = 560;
    inline constexpr int32_t ERROR_INVALID_LDT_SIZE = 561;
    inline constexpr int32_t ERROR_INVALID_LDT_OFFSET = 563;
    inline constexpr int32_t ERROR_INVALID_LDT_DESCRIPTOR = 564;
    inline constexpr int32_t ERROR_TOO_MANY_THREADS = 565;
    inline constexpr int32_t ERROR_THREAD_NOT_IN_PROCESS = 566;
    inline constexpr int32_t ERROR_PAGEFILE_QUOTA_EXCEEDED = 567;
    inline constexpr int32_t ERROR_LOGON_SERVER_CONFLICT = 568;
    inline constexpr int32_t ERROR_SYNCHRONIZATION_REQUIRED = 569;
    inline constexpr int32_t ERROR_NET_OPEN_FAILED = 570;
    inline constexpr int32_t ERROR_IO_PRIVILEGE_FAILED = 571;
    inline constexpr int32_t ERROR_CONTROL_C_EXIT = 572;
    inline constexpr int32_t ERROR_MISSING_SYSTEMFILE = 573;
    inline constexpr int32_t ERROR_UNHANDLED_EXCEPTION = 574;
    inline constexpr int32_t ERROR_APP_INIT_FAILURE = 575;
    inline constexpr int32_t ERROR_PAGEFILE_CREATE_FAILED = 576;
    inline constexpr int32_t ERROR_INVALID_IMAGE_HASH = 577;
    inline constexpr int32_t ERROR_NO_PAGEFILE = 578;
    inline constexpr int32_t ERROR_ILLEGAL_FLOAT_CONTEXT = 579;
    inline constexpr int32_t ERROR_NO_EVENT_PAIR = 580;
    inline constexpr int32_t ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 581;
    inline constexpr int32_t ERROR_ILLEGAL_CHARACTER = 582;
    inline constexpr int32_t ERROR_UNDEFINED_CHARACTER = 583;
    inline constexpr int32_t ERROR_FLOPPY_VOLUME = 584;
    inline constexpr int32_t ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 585;
    inline constexpr int32_t ERROR_BACKUP_CONTROLLER = 586;
    inline constexpr int32_t ERROR_MUTANT_LIMIT_EXCEEDED = 587;
    inline constexpr int32_t ERROR_FS_DRIVER_REQUIRED = 588;
    inline constexpr int32_t ERROR_CANNOT_LOAD_REGISTRY_FILE = 589;
    inline constexpr int32_t ERROR_DEBUG_ATTACH_FAILED = 590;
    inline constexpr int32_t ERROR_SYSTEM_PROCESS_TERMINATED = 591;
    inline constexpr int32_t ERROR_DATA_NOT_ACCEPTED = 592;
    inline constexpr int32_t ERROR_VDM_HARD_ERROR = 593;
    inline constexpr int32_t ERROR_DRIVER_CANCEL_TIMEOUT = 594;
    inline constexpr int32_t ERROR_REPLY_MESSAGE_MISMATCH = 595;
    inline constexpr int32_t ERROR_LOST_WRITEBEHIND_DATA = 596;
    inline constexpr int32_t ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 597;
    inline constexpr int32_t ERROR_NOT_TINY_STREAM = 598;
    inline constexpr int32_t ERROR_STACK_OVERFLOW_READ = 599;
    inline constexpr int32_t ERROR_CONVERT_TO_LARGE = 600;
    inline constexpr int32_t ERROR_FOUND_OUT_OF_SCOPE = 601;
    inline constexpr int32_t ERROR_ALLOCATE_BUCKET = 602;
    inline constexpr int32_t ERROR_MARSHALL_OVERFLOW = 603;
    inline constexpr int32_t ERROR_INVALID_VARIANT = 604;
    inline constexpr int32_t ERROR_BAD_COMPRESSION_BUFFER = 605;
    inline constexpr int32_t ERROR_AUDIT_FAILED = 606;
    inline constexpr int32_t ERROR_TIMER_RESOLUTION_NOT_SET = 607;
    inline constexpr int32_t ERROR_INSUFFICIENT_LOGON_INFO = 608;
    inline constexpr int32_t ERROR_BAD_DLL_ENTRYPOINT = 609;
    inline constexpr int32_t ERROR_BAD_SERVICE_ENTRYPOINT = 610;
    inline constexpr int32_t ERROR_IP_ADDRESS_CONFLICT1 = 611;
    inline constexpr int32_t ERROR_IP_ADDRESS_CONFLICT2 = 612;
    inline constexpr int32_t ERROR_REGISTRY_QUOTA_LIMIT = 613;
    inline constexpr int32_t ERROR_NO_CALLBACK_ACTIVE = 614;
    inline constexpr int32_t ERROR_PWD_TOO_SHORT = 615;
    inline constexpr int32_t ERROR_PWD_TOO_RECENT = 616;
    inline constexpr int32_t ERROR_PWD_HISTORY_CONFLICT = 617;
    inline constexpr int32_t ERROR_UNSUPPORTED_COMPRESSION = 618;
    inline constexpr int32_t ERROR_INVALID_HW_PROFILE = 619;
    inline constexpr int32_t ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 620;
    inline constexpr int32_t ERROR_QUOTA_LIST_INCONSISTENT = 621;
    inline constexpr int32_t ERROR_EVALUATION_EXPIRATION = 622;
    inline constexpr int32_t ERROR_ILLEGAL_DLL_RELOCATION = 623;
    inline constexpr int32_t ERROR_DLL_INIT_FAILED_LOGOFF = 624;
    inline constexpr int32_t ERROR_VALIDATE_CONTINUE = 625;
    inline constexpr int32_t ERROR_NO_MORE_MATCHES = 626;
    inline constexpr int32_t ERROR_RANGE_LIST_CONFLICT = 627;
    inline constexpr int32_t ERROR_SERVER_SID_MISMATCH = 628;
    inline constexpr int32_t ERROR_CANT_ENABLE_DENY_ONLY = 629;
    inline constexpr int32_t ERROR_FLOAT_MULTIPLE_FAULTS = 630;
    inline constexpr int32_t ERROR_FLOAT_MULTIPLE_TRAPS = 631;
    inline constexpr int32_t ERROR_NOINTERFACE = 632;
    inline constexpr int32_t ERROR_DRIVER_FAILED_SLEEP = 633;
    inline constexpr int32_t ERROR_CORRUPT_SYSTEM_FILE = 634;
    inline constexpr int32_t ERROR_COMMITMENT_MINIMUM = 635;
    inline constexpr int32_t ERROR_PNP_RESTART_ENUMERATION = 636;
    inline constexpr int32_t ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 637;
    inline constexpr int32_t ERROR_PNP_REBOOT_REQUIRED = 638;
    inline constexpr int32_t ERROR_INSUFFICIENT_POWER = 639;
    inline constexpr int32_t ERROR_MULTIPLE_FAULT_VIOLATION = 640;
    inline constexpr int32_t ERROR_SYSTEM_SHUTDOWN = 641;
    inline constexpr int32_t ERROR_PORT_NOT_SET = 642;
    inline constexpr int32_t ERROR_DS_VERSION_CHECK_FAILURE = 643;
    inline constexpr int32_t ERROR_RANGE_NOT_FOUND = 644;
    inline constexpr int32_t ERROR_NOT_SAFE_MODE_DRIVER = 646;
    inline constexpr int32_t ERROR_FAILED_DRIVER_ENTRY = 647;
    inline constexpr int32_t ERROR_DEVICE_ENUMERATION_ERROR = 648;
    inline constexpr int32_t ERROR_MOUNT_POINT_NOT_RESOLVED = 649;
    inline constexpr int32_t ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 650;
    inline constexpr int32_t ERROR_MCA_OCCURED = 651;
    inline constexpr int32_t ERROR_DRIVER_DATABASE_ERROR = 652;
    inline constexpr int32_t ERROR_SYSTEM_HIVE_TOO_LARGE = 653;
    inline constexpr int32_t ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 654;
    inline constexpr int32_t ERROR_VOLSNAP_PREPARE_HIBERNATE = 655;
    inline constexpr int32_t ERROR_HIBERNATION_FAILURE = 656;
    inline constexpr int32_t ERROR_PWD_TOO_LONG = 657;
    inline constexpr int32_t ERROR_FILE_SYSTEM_LIMITATION = 665;
    inline constexpr int32_t ERROR_ASSERTION_FAILURE = 668;
    inline constexpr int32_t ERROR_ACPI_ERROR = 669;
    inline constexpr int32_t ERROR_WOW_ASSERTION = 670;
    inline constexpr int32_t ERROR_PNP_BAD_MPS_TABLE = 671;
    inline constexpr int32_t ERROR_PNP_TRANSLATION_FAILED = 672;
    inline constexpr int32_t ERROR_PNP_IRQ_TRANSLATION_FAILED = 673;
    inline constexpr int32_t ERROR_PNP_INVALID_ID = 674;
    inline constexpr int32_t ERROR_WAKE_SYSTEM_DEBUGGER = 675;
    inline constexpr int32_t ERROR_HANDLES_CLOSED = 676;
    inline constexpr int32_t ERROR_EXTRANEOUS_INFORMATION = 677;
    inline constexpr int32_t ERROR_RXACT_COMMIT_NECESSARY = 678;
    inline constexpr int32_t ERROR_MEDIA_CHECK = 679;
    inline constexpr int32_t ERROR_GUID_SUBSTITUTION_MADE = 680;
    inline constexpr int32_t ERROR_STOPPED_ON_SYMLINK = 681;
    inline constexpr int32_t ERROR_LONGJUMP = 682;
    inline constexpr int32_t ERROR_PLUGPLAY_QUERY_VETOED = 683;
    inline constexpr int32_t ERROR_UNWIND_CONSOLIDATE = 684;
    inline constexpr int32_t ERROR_REGISTRY_HIVE_RECOVERED = 685;
    inline constexpr int32_t ERROR_DLL_MIGHT_BE_INSECURE = 686;
    inline constexpr int32_t ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 687;
    inline constexpr int32_t ERROR_DBG_EXCEPTION_NOT_HANDLED = 688;
    inline constexpr int32_t ERROR_DBG_REPLY_LATER = 689;
    inline constexpr int32_t ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 690;
    inline constexpr int32_t ERROR_DBG_TERMINATE_THREAD = 691;
    inline constexpr int32_t ERROR_DBG_TERMINATE_PROCESS = 692;
    inline constexpr int32_t ERROR_DBG_CONTROL_C = 693;
    inline constexpr int32_t ERROR_DBG_PRINTEXCEPTION_C = 694;
    inline constexpr int32_t ERROR_DBG_RIPEXCEPTION = 695;
    inline constexpr int32_t ERROR_DBG_CONTROL_BREAK = 696;
    inline constexpr int32_t ERROR_DBG_COMMAND_EXCEPTION = 697;
    inline constexpr int32_t ERROR_OBJECT_NAME_EXISTS = 698;
    inline constexpr int32_t ERROR_THREAD_WAS_SUSPENDED = 699;
    inline constexpr int32_t ERROR_IMAGE_NOT_AT_BASE = 700;
    inline constexpr int32_t ERROR_RXACT_STATE_CREATED = 701;
    inline constexpr int32_t ERROR_SEGMENT_NOTIFICATION = 702;
    inline constexpr int32_t ERROR_BAD_CURRENT_DIRECTORY = 703;
    inline constexpr int32_t ERROR_FT_READ_RECOVERY_FROM_BACKUP = 704;
    inline constexpr int32_t ERROR_FT_WRITE_RECOVERY = 705;
    inline constexpr int32_t ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 706;
    inline constexpr int32_t ERROR_RECEIVE_PARTIAL = 707;
    inline constexpr int32_t ERROR_RECEIVE_EXPEDITED = 708;
    inline constexpr int32_t ERROR_RECEIVE_PARTIAL_EXPEDITED = 709;
    inline constexpr int32_t ERROR_EVENT_DONE = 710;
    inline constexpr int32_t ERROR_EVENT_PENDING = 711;
    inline constexpr int32_t ERROR_CHECKING_FILE_SYSTEM = 712;
    inline constexpr int32_t ERROR_FATAL_APP_EXIT = 713;
    inline constexpr int32_t ERROR_PREDEFINED_HANDLE = 714;
    inline constexpr int32_t ERROR_WAS_UNLOCKED = 715;
    inline constexpr int32_t ERROR_SERVICE_NOTIFICATION = 716;
    inline constexpr int32_t ERROR_WAS_LOCKED = 717;
    inline constexpr int32_t ERROR_LOG_HARD_ERROR = 718;
    inline constexpr int32_t ERROR_ALREADY_WIN32 = 719;
    inline constexpr int32_t ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 720;
    inline constexpr int32_t ERROR_NO_YIELD_PERFORMED = 721;
    inline constexpr int32_t ERROR_TIMER_RESUME_IGNORED = 722;
    inline constexpr int32_t ERROR_ARBITRATION_UNHANDLED = 723;
    inline constexpr int32_t ERROR_CARDBUS_NOT_SUPPORTED = 724;
    inline constexpr int32_t ERROR_MP_PROCESSOR_MISMATCH = 725;
    inline constexpr int32_t ERROR_HIBERNATED = 726;
    inline constexpr int32_t ERROR_RESUME_HIBERNATION = 727;
    inline constexpr int32_t ERROR_FIRMWARE_UPDATED = 728;
    inline constexpr int32_t ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 729;
    inline constexpr int32_t ERROR_WAKE_SYSTEM = 730;
    inline constexpr int32_t ERROR_WAIT_1 = 731;
    inline constexpr int32_t ERROR_WAIT_2 = 732;
    inline constexpr int32_t ERROR_WAIT_3 = 733;
    inline constexpr int32_t ERROR_WAIT_63 = 734;
    inline constexpr int32_t ERROR_ABANDONED_WAIT_0 = 735;
    inline constexpr int32_t ERROR_ABANDONED_WAIT_63 = 736;
    inline constexpr int32_t ERROR_USER_APC = 737;
    inline constexpr int32_t ERROR_KERNEL_APC = 738;
    inline constexpr int32_t ERROR_ALERTED = 739;
    inline constexpr int32_t ERROR_ELEVATION_REQUIRED = 740;
    inline constexpr int32_t ERROR_REPARSE = 741;
    inline constexpr int32_t ERROR_OPLOCK_BREAK_IN_PROGRESS = 742;
    inline constexpr int32_t ERROR_VOLUME_MOUNTED = 743;
    inline constexpr int32_t ERROR_RXACT_COMMITTED = 744;
    inline constexpr int32_t ERROR_NOTIFY_CLEANUP = 745;
    inline constexpr int32_t ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 746;
    inline constexpr int32_t ERROR_PAGE_FAULT_TRANSITION = 747;
    inline constexpr int32_t ERROR_PAGE_FAULT_DEMAND_ZERO = 748;
    inline constexpr int32_t ERROR_PAGE_FAULT_COPY_ON_WRITE = 749;
    inline constexpr int32_t ERROR_PAGE_FAULT_GUARD_PAGE = 750;
    inline constexpr int32_t ERROR_PAGE_FAULT_PAGING_FILE = 751;
    inline constexpr int32_t ERROR_CACHE_PAGE_LOCKED = 752;
    inline constexpr int32_t ERROR_CRASH_DUMP = 753;
    inline constexpr int32_t ERROR_BUFFER_ALL_ZEROS = 754;
    inline constexpr int32_t ERROR_REPARSE_OBJECT = 755;
    inline constexpr int32_t ERROR_RESOURCE_REQUIREMENTS_CHANGED = 756;
    inline constexpr int32_t ERROR_TRANSLATION_COMPLETE = 757;
    inline constexpr int32_t ERROR_NOTHING_TO_TERMINATE = 758;
    inline constexpr int32_t ERROR_PROCESS_NOT_IN_JOB = 759;
    inline constexpr int32_t ERROR_PROCESS_IN_JOB = 760;
    inline constexpr int32_t ERROR_VOLSNAP_HIBERNATE_READY = 761;
    inline constexpr int32_t ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 762;
    inline constexpr int32_t ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 763;
    inline constexpr int32_t ERROR_INTERRUPT_STILL_CONNECTED = 764;
    inline constexpr int32_t ERROR_WAIT_FOR_OPLOCK = 765;
    inline constexpr int32_t ERROR_DBG_EXCEPTION_HANDLED = 766;
    inline constexpr int32_t ERROR_DBG_CONTINUE = 767;
    inline constexpr int32_t ERROR_CALLBACK_POP_STACK = 768;
    inline constexpr int32_t ERROR_COMPRESSION_DISABLED = 769;
    inline constexpr int32_t ERROR_CANTFETCHBACKWARDS = 770;
    inline constexpr int32_t ERROR_CANTSCROLLBACKWARDS = 771;
    inline constexpr int32_t ERROR_ROWSNOTRELEASED = 772;
    inline constexpr int32_t ERROR_BAD_ACCESSOR_FLAGS = 773;
    inline constexpr int32_t ERROR_ERRORS_ENCOUNTERED = 774;
    inline constexpr int32_t ERROR_NOT_CAPABLE = 775;
    inline constexpr int32_t ERROR_REQUEST_OUT_OF_SEQUENCE = 776;
    inline constexpr int32_t ERROR_VERSION_PARSE_ERROR = 777;
    inline constexpr int32_t ERROR_BADSTARTPOSITION = 778;
    inline constexpr int32_t ERROR_MEMORY_HARDWARE = 779;
    inline constexpr int32_t ERROR_DISK_REPAIR_DISABLED = 780;
    inline constexpr int32_t ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 781;
    inline constexpr int32_t ERROR_SYSTEM_POWERSTATE_TRANSITION = 782;
    inline constexpr int32_t ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 783;
    inline constexpr int32_t ERROR_MCA_EXCEPTION = 784;
    inline constexpr int32_t ERROR_ACCESS_AUDIT_BY_POLICY = 785;
    inline constexpr int32_t ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 786;
    inline constexpr int32_t ERROR_ABANDON_HIBERFILE = 787;
    inline constexpr int32_t ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 788;
    inline constexpr int32_t ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 789;
    inline constexpr int32_t ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 790;
    inline constexpr int32_t ERROR_BAD_MCFG_TABLE = 791;
    inline constexpr int32_t ERROR_DISK_REPAIR_REDIRECTED = 792;
    inline constexpr int32_t ERROR_DISK_REPAIR_UNSUCCESSFUL = 793;
    inline constexpr int32_t ERROR_CORRUPT_LOG_OVERFULL = 794;
    inline constexpr int32_t ERROR_CORRUPT_LOG_CORRUPTED = 795;
    inline constexpr int32_t ERROR_CORRUPT_LOG_UNAVAILABLE = 796;
    inline constexpr int32_t ERROR_CORRUPT_LOG_DELETED_FULL = 797;
    inline constexpr int32_t ERROR_CORRUPT_LOG_CLEARED = 798;
    inline constexpr int32_t ERROR_ORPHAN_NAME_EXHAUSTED = 799;
    inline constexpr int32_t ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = 800;
    inline constexpr int32_t ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = 801;
    inline constexpr int32_t ERROR_CANNOT_BREAK_OPLOCK = 802;
    inline constexpr int32_t ERROR_OPLOCK_HANDLE_CLOSED = 803;
    inline constexpr int32_t ERROR_NO_ACE_CONDITION = 804;
    inline constexpr int32_t ERROR_INVALID_ACE_CONDITION = 805;
    inline constexpr int32_t ERROR_FILE_HANDLE_REVOKED = 806;
    inline constexpr int32_t ERROR_IMAGE_AT_DIFFERENT_BASE = 807;
    inline constexpr int32_t ERROR_ENCRYPTED_IO_NOT_POSSIBLE = 808;
    inline constexpr int32_t ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS = 809;
    inline constexpr int32_t ERROR_QUOTA_ACTIVITY = 810;
    inline constexpr int32_t ERROR_HANDLE_REVOKED = 811;
    inline constexpr int32_t ERROR_CALLBACK_INVOKE_INLINE = 812;
    inline constexpr int32_t ERROR_CPU_SET_INVALID = 813;
    inline constexpr int32_t ERROR_ENCLAVE_NOT_TERMINATED = 814;
    inline constexpr int32_t ERROR_ENCLAVE_VIOLATION = 815;
    inline constexpr int32_t ERROR_EA_ACCESS_DENIED = 994;
    inline constexpr int32_t ERROR_OPERATION_ABORTED = 995;
    inline constexpr int32_t ERROR_IO_INCOMPLETE = 996;
    inline constexpr int32_t ERROR_IO_PENDING = 997;
    inline constexpr int32_t ERROR_NOACCESS = 998;
    inline constexpr int32_t ERROR_SWAPERROR = 999;
    inline constexpr int32_t ERROR_STACK_OVERFLOW = 1001;
    inline constexpr int32_t ERROR_INVALID_MESSAGE = 1002;
    inline constexpr int32_t ERROR_CAN_NOT_COMPLETE = 1003;
    inline constexpr int32_t ERROR_INVALID_FLAGS = 1004;
    inline constexpr int32_t ERROR_UNRECOGNIZED_VOLUME = 1005;
    inline constexpr int32_t ERROR_FILE_INVALID = 1006;
    inline constexpr int32_t ERROR_FULLSCREEN_MODE = 1007;
    inline constexpr int32_t ERROR_NO_TOKEN = 1008;
    inline constexpr int32_t ERROR_BADDB = 1009;
    inline constexpr int32_t ERROR_BADKEY = 1010;
    inline constexpr int32_t ERROR_CANTOPEN = 1011;
    inline constexpr int32_t ERROR_CANTREAD = 1012;
    inline constexpr int32_t ERROR_CANTWRITE = 1013;
    inline constexpr int32_t ERROR_REGISTRY_RECOVERED = 1014;
    inline constexpr int32_t ERROR_REGISTRY_CORRUPT = 1015;
    inline constexpr int32_t ERROR_REGISTRY_IO_FAILED = 1016;
    inline constexpr int32_t ERROR_NOT_REGISTRY_FILE = 1017;
    inline constexpr int32_t ERROR_KEY_DELETED = 1018;
    inline constexpr int32_t ERROR_NO_LOG_SPACE = 1019;
    inline constexpr int32_t ERROR_KEY_HAS_CHILDREN = 1020;
    inline constexpr int32_t ERROR_CHILD_MUST_BE_VOLATILE = 1021;
    inline constexpr int32_t ERROR_NOTIFY_ENUM_DIR = 1022;
    inline constexpr int32_t ERROR_DEPENDENT_SERVICES_RUNNING = 1051;
    inline constexpr int32_t ERROR_INVALID_SERVICE_CONTROL = 1052;
    inline constexpr int32_t ERROR_SERVICE_REQUEST_TIMEOUT = 1053;
    inline constexpr int32_t ERROR_SERVICE_NO_THREAD = 1054;
    inline constexpr int32_t ERROR_SERVICE_DATABASE_LOCKED = 1055;
    inline constexpr int32_t ERROR_SERVICE_ALREADY_RUNNING = 1056;
    inline constexpr int32_t ERROR_INVALID_SERVICE_ACCOUNT = 1057;
    inline constexpr int32_t ERROR_SERVICE_DISABLED = 1058;
    inline constexpr int32_t ERROR_CIRCULAR_DEPENDENCY = 1059;
    inline constexpr int32_t ERROR_SERVICE_DOES_NOT_EXIST = 1060;
    inline constexpr int32_t ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061;
    inline constexpr int32_t ERROR_SERVICE_NOT_ACTIVE = 1062;
    inline constexpr int32_t ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063;
    inline constexpr int32_t ERROR_EXCEPTION_IN_SERVICE = 1064;
    inline constexpr int32_t ERROR_DATABASE_DOES_NOT_EXIST = 1065;
    inline constexpr int32_t ERROR_SERVICE_SPECIFIC_ERROR = 1066;
    inline constexpr int32_t ERROR_PROCESS_ABORTED = 1067;
    inline constexpr int32_t ERROR_SERVICE_DEPENDENCY_FAIL = 1068;
    inline constexpr int32_t ERROR_SERVICE_LOGON_FAILED = 1069;
    inline constexpr int32_t ERROR_SERVICE_START_HANG = 1070;
    inline constexpr int32_t ERROR_INVALID_SERVICE_LOCK = 1071;
    inline constexpr int32_t ERROR_SERVICE_MARKED_FOR_DELETE = 1072;
    inline constexpr int32_t ERROR_SERVICE_EXISTS = 1073;
    inline constexpr int32_t ERROR_ALREADY_RUNNING_LKG = 1074;
    inline constexpr int32_t ERROR_SERVICE_DEPENDENCY_DELETED = 1075;
    inline constexpr int32_t ERROR_BOOT_ALREADY_ACCEPTED = 1076;
    inline constexpr int32_t ERROR_SERVICE_NEVER_STARTED = 1077;
    inline constexpr int32_t ERROR_DUPLICATE_SERVICE_NAME = 1078;
    inline constexpr int32_t ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079;
    inline constexpr int32_t ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080;
    inline constexpr int32_t ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081;
    inline constexpr int32_t ERROR_NO_RECOVERY_PROGRAM = 1082;
    inline constexpr int32_t ERROR_SERVICE_NOT_IN_EXE = 1083;
    inline constexpr int32_t ERROR_NOT_SAFEBOOT_SERVICE = 1084;
    inline constexpr int32_t ERROR_END_OF_MEDIA = 1100;
    inline constexpr int32_t ERROR_FILEMARK_DETECTED = 1101;
    inline constexpr int32_t ERROR_BEGINNING_OF_MEDIA = 1102;
    inline constexpr int32_t ERROR_SETMARK_DETECTED = 1103;
    inline constexpr int32_t ERROR_NO_DATA_DETECTED = 1104;
    inline constexpr int32_t ERROR_PARTITION_FAILURE = 1105;
    inline constexpr int32_t ERROR_INVALID_BLOCK_LENGTH = 1106;
    inline constexpr int32_t ERROR_DEVICE_NOT_PARTITIONED = 1107;
    inline constexpr int32_t ERROR_UNABLE_TO_LOCK_MEDIA = 1108;
    inline constexpr int32_t ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109;
    inline constexpr int32_t ERROR_MEDIA_CHANGED = 1110;
    inline constexpr int32_t ERROR_BUS_RESET = 1111;
    inline constexpr int32_t ERROR_NO_MEDIA_IN_DRIVE = 1112;
    inline constexpr int32_t ERROR_NO_UNICODE_TRANSLATION = 1113;
    inline constexpr int32_t ERROR_DLL_INIT_FAILED = 1114;
    inline constexpr int32_t ERROR_SHUTDOWN_IN_PROGRESS = 1115;
    inline constexpr int32_t ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116;
    inline constexpr int32_t ERROR_IO_DEVICE = 1117;
    inline constexpr int32_t ERROR_SERIAL_NO_DEVICE = 1118;
    inline constexpr int32_t ERROR_IRQ_BUSY = 1119;
    inline constexpr int32_t ERROR_MORE_WRITES = 1120;
    inline constexpr int32_t ERROR_COUNTER_TIMEOUT = 1121;
    inline constexpr int32_t ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122;
    inline constexpr int32_t ERROR_FLOPPY_WRONG_CYLINDER = 1123;
    inline constexpr int32_t ERROR_FLOPPY_UNKNOWN_ERROR = 1124;
    inline constexpr int32_t ERROR_FLOPPY_BAD_REGISTERS = 1125;
    inline constexpr int32_t ERROR_DISK_RECALIBRATE_FAILED = 1126;
    inline constexpr int32_t ERROR_DISK_OPERATION_FAILED = 1127;
    inline constexpr int32_t ERROR_DISK_RESET_FAILED = 1128;
    inline constexpr int32_t ERROR_EOM_OVERFLOW = 1129;
    inline constexpr int32_t ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130;
    inline constexpr int32_t ERROR_POSSIBLE_DEADLOCK = 1131;
    inline constexpr int32_t ERROR_MAPPED_ALIGNMENT = 1132;
    inline constexpr int32_t ERROR_SET_POWER_STATE_VETOED = 1140;
    inline constexpr int32_t ERROR_SET_POWER_STATE_FAILED = 1141;
    inline constexpr int32_t ERROR_TOO_MANY_LINKS = 1142;
    inline constexpr int32_t ERROR_OLD_WIN_VERSION = 1150;
    inline constexpr int32_t ERROR_APP_WRONG_OS = 1151;
    inline constexpr int32_t ERROR_SINGLE_INSTANCE_APP = 1152;
    inline constexpr int32_t ERROR_RMODE_APP = 1153;
    inline constexpr int32_t ERROR_INVALID_DLL = 1154;
    inline constexpr int32_t ERROR_NO_ASSOCIATION = 1155;
    inline constexpr int32_t ERROR_DDE_FAIL = 1156;
    inline constexpr int32_t ERROR_DLL_NOT_FOUND = 1157;
    inline constexpr int32_t ERROR_NO_MORE_USER_HANDLES = 1158;
    inline constexpr int32_t ERROR_MESSAGE_SYNC_ONLY = 1159;
    inline constexpr int32_t ERROR_SOURCE_ELEMENT_EMPTY = 1160;
    inline constexpr int32_t ERROR_DESTINATION_ELEMENT_FULL = 1161;
    inline constexpr int32_t ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162;
    inline constexpr int32_t ERROR_MAGAZINE_NOT_PRESENT = 1163;
    inline constexpr int32_t ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164;
    inline constexpr int32_t ERROR_DEVICE_REQUIRES_CLEANING = 1165;
    inline constexpr int32_t ERROR_DEVICE_DOOR_OPEN = 1166;
    inline constexpr int32_t ERROR_DEVICE_NOT_CONNECTED = 1167;
    inline constexpr int32_t ERROR_NOT_FOUND = 1168;
    inline constexpr int32_t ERROR_NO_MATCH = 1169;
    inline constexpr int32_t ERROR_SET_NOT_FOUND = 1170;
    inline constexpr int32_t ERROR_POINT_NOT_FOUND = 1171;
    inline constexpr int32_t ERROR_NO_TRACKING_SERVICE = 1172;
    inline constexpr int32_t ERROR_NO_VOLUME_ID = 1173;
    inline constexpr int32_t ERROR_UNABLE_TO_REMOVE_REPLACED = 1175;
    inline constexpr int32_t ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176;
    inline constexpr int32_t ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177;
    inline constexpr int32_t ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178;
    inline constexpr int32_t ERROR_JOURNAL_NOT_ACTIVE = 1179;
    inline constexpr int32_t ERROR_POTENTIAL_FILE_FOUND = 1180;
    inline constexpr int32_t ERROR_JOURNAL_ENTRY_DELETED = 1181;
    inline constexpr int32_t ERROR_SHUTDOWN_IS_SCHEDULED = 1190;
    inline constexpr int32_t ERROR_SHUTDOWN_USERS_LOGGED_ON = 1191;
    inline constexpr int32_t ERROR_BAD_DEVICE = 1200;
    inline constexpr int32_t ERROR_CONNECTION_UNAVAIL = 1201;
    inline constexpr int32_t ERROR_DEVICE_ALREADY_REMEMBERED = 1202;
    inline constexpr int32_t ERROR_NO_NET_OR_BAD_PATH = 1203;
    inline constexpr int32_t ERROR_BAD_PROVIDER = 1204;
    inline constexpr int32_t ERROR_CANNOT_OPEN_PROFILE = 1205;
    inline constexpr int32_t ERROR_BAD_PROFILE = 1206;
    inline constexpr int32_t ERROR_NOT_CONTAINER = 1207;
    inline constexpr int32_t ERROR_EXTENDED_ERROR = 1208;
    inline constexpr int32_t ERROR_INVALID_GROUPNAME = 1209;
    inline constexpr int32_t ERROR_INVALID_COMPUTERNAME = 1210;
    inline constexpr int32_t ERROR_INVALID_EVENTNAME = 1211;
    inline constexpr int32_t ERROR_INVALID_DOMAINNAME = 1212;
    inline constexpr int32_t ERROR_INVALID_SERVICENAME = 1213;
    inline constexpr int32_t ERROR_INVALID_NETNAME = 1214;
    inline constexpr int32_t ERROR_INVALID_SHARENAME = 1215;
    inline constexpr int32_t ERROR_INVALID_PASSWORDNAME = 1216;
    inline constexpr int32_t ERROR_INVALID_MESSAGENAME = 1217;
    inline constexpr int32_t ERROR_INVALID_MESSAGEDEST = 1218;
    inline constexpr int32_t ERROR_SESSION_CREDENTIAL_CONFLICT = 1219;
    inline constexpr int32_t ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220;
    inline constexpr int32_t ERROR_DUP_DOMAINNAME = 1221;
    inline constexpr int32_t ERROR_NO_NETWORK = 1222;
    inline constexpr int32_t ERROR_CANCELLED = 1223;
    inline constexpr int32_t ERROR_USER_MAPPED_FILE = 1224;
    inline constexpr int32_t ERROR_CONNECTION_REFUSED = 1225;
    inline constexpr int32_t ERROR_GRACEFUL_DISCONNECT = 1226;
    inline constexpr int32_t ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227;
    inline constexpr int32_t ERROR_ADDRESS_NOT_ASSOCIATED = 1228;
    inline constexpr int32_t ERROR_CONNECTION_INVALID = 1229;
    inline constexpr int32_t ERROR_CONNECTION_ACTIVE = 1230;
    inline constexpr int32_t ERROR_NETWORK_UNREACHABLE = 1231;
    inline constexpr int32_t ERROR_HOST_UNREACHABLE = 1232;
    inline constexpr int32_t ERROR_PROTOCOL_UNREACHABLE = 1233;
    inline constexpr int32_t ERROR_PORT_UNREACHABLE = 1234;
    inline constexpr int32_t ERROR_REQUEST_ABORTED = 1235;
    inline constexpr int32_t ERROR_CONNECTION_ABORTED = 1236;
    inline constexpr int32_t ERROR_RETRY = 1237;
    inline constexpr int32_t ERROR_CONNECTION_COUNT_LIMIT = 1238;
    inline constexpr int32_t ERROR_LOGIN_TIME_RESTRICTION = 1239;
    inline constexpr int32_t ERROR_LOGIN_WKSTA_RESTRICTION = 1240;
    inline constexpr int32_t ERROR_INCORRECT_ADDRESS = 1241;
    inline constexpr int32_t ERROR_ALREADY_REGISTERED = 1242;
    inline constexpr int32_t ERROR_SERVICE_NOT_FOUND = 1243;
    inline constexpr int32_t ERROR_NOT_AUTHENTICATED = 1244;
    inline constexpr int32_t ERROR_NOT_LOGGED_ON = 1245;
    inline constexpr int32_t ERROR_CONTINUE = 1246;
    inline constexpr int32_t ERROR_ALREADY_INITIALIZED = 1247;
    inline constexpr int32_t ERROR_NO_MORE_DEVICES = 1248;
    inline constexpr int32_t ERROR_NO_SUCH_SITE = 1249;
    inline constexpr int32_t ERROR_DOMAIN_CONTROLLER_EXISTS = 1250;
    inline constexpr int32_t ERROR_ONLY_IF_CONNECTED = 1251;
    inline constexpr int32_t ERROR_OVERRIDE_NOCHANGES = 1252;
    inline constexpr int32_t ERROR_BAD_USER_PROFILE = 1253;
    inline constexpr int32_t ERROR_NOT_SUPPORTED_ON_SBS = 1254;
    inline constexpr int32_t ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255;
    inline constexpr int32_t ERROR_HOST_DOWN = 1256;
    inline constexpr int32_t ERROR_NON_ACCOUNT_SID = 1257;
    inline constexpr int32_t ERROR_NON_DOMAIN_SID = 1258;
    inline constexpr int32_t ERROR_APPHELP_BLOCK = 1259;
    inline constexpr int32_t ERROR_ACCESS_DISABLED_BY_POLICY = 1260;
    inline constexpr int32_t ERROR_REG_NAT_CONSUMPTION = 1261;
    inline constexpr int32_t ERROR_CSCSHARE_OFFLINE = 1262;
    inline constexpr int32_t ERROR_PKINIT_FAILURE = 1263;
    inline constexpr int32_t ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264;
    inline constexpr int32_t ERROR_DOWNGRADE_DETECTED = 1265;
    inline constexpr int32_t ERROR_MACHINE_LOCKED = 1271;
    inline constexpr int32_t ERROR_SMB_GUEST_LOGON_BLOCKED = 1272;
    inline constexpr int32_t ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273;
    inline constexpr int32_t ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274;
    inline constexpr int32_t ERROR_DRIVER_BLOCKED = 1275;
    inline constexpr int32_t ERROR_INVALID_IMPORT_OF_NON_DLL = 1276;
    inline constexpr int32_t ERROR_ACCESS_DISABLED_WEBBLADE = 1277;
    inline constexpr int32_t ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 1278;
    inline constexpr int32_t ERROR_RECOVERY_FAILURE = 1279;
    inline constexpr int32_t ERROR_ALREADY_FIBER = 1280;
    inline constexpr int32_t ERROR_ALREADY_THREAD = 1281;
    inline constexpr int32_t ERROR_STACK_BUFFER_OVERRUN = 1282;
    inline constexpr int32_t ERROR_PARAMETER_QUOTA_EXCEEDED = 1283;
    inline constexpr int32_t ERROR_DEBUGGER_INACTIVE = 1284;
    inline constexpr int32_t ERROR_DELAY_LOAD_FAILED = 1285;
    inline constexpr int32_t ERROR_VDM_DISALLOWED = 1286;
    inline constexpr int32_t ERROR_UNIDENTIFIED_ERROR = 1287;
    inline constexpr int32_t ERROR_INVALID_CRUNTIME_PARAMETER = 1288;
    inline constexpr int32_t ERROR_BEYOND_VDL = 1289;
    inline constexpr int32_t ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = 1290;
    inline constexpr int32_t ERROR_DRIVER_PROCESS_TERMINATED = 1291;
    inline constexpr int32_t ERROR_IMPLEMENTATION_LIMIT = 1292;
    inline constexpr int32_t ERROR_PROCESS_IS_PROTECTED = 1293;
    inline constexpr int32_t ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = 1294;
    inline constexpr int32_t ERROR_DISK_QUOTA_EXCEEDED = 1295;
    inline constexpr int32_t ERROR_CONTENT_BLOCKED = 1296;
    inline constexpr int32_t ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = 1297;
    inline constexpr int32_t ERROR_APP_HANG = 1298;
    inline constexpr int32_t ERROR_INVALID_LABEL = 1299;
    inline constexpr int32_t ERROR_NOT_ALL_ASSIGNED = 1300;
    inline constexpr int32_t ERROR_SOME_NOT_MAPPED = 1301;
    inline constexpr int32_t ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302;
    inline constexpr int32_t ERROR_LOCAL_USER_SESSION_KEY = 1303;
    inline constexpr int32_t ERROR_NULL_LM_PASSWORD = 1304;
    inline constexpr int32_t ERROR_UNKNOWN_REVISION = 1305;
    inline constexpr int32_t ERROR_REVISION_MISMATCH = 1306;
    inline constexpr int32_t ERROR_INVALID_OWNER = 1307;
    inline constexpr int32_t ERROR_INVALID_PRIMARY_GROUP = 1308;
    inline constexpr int32_t ERROR_NO_IMPERSONATION_TOKEN = 1309;
    inline constexpr int32_t ERROR_CANT_DISABLE_MANDATORY = 1310;
    inline constexpr int32_t ERROR_NO_LOGON_SERVERS = 1311;
    inline constexpr int32_t ERROR_NO_SUCH_LOGON_SESSION = 1312;
    inline constexpr int32_t ERROR_NO_SUCH_PRIVILEGE = 1313;
    inline constexpr int32_t ERROR_PRIVILEGE_NOT_HELD = 1314;
    inline constexpr int32_t ERROR_INVALID_ACCOUNT_NAME = 1315;
    inline constexpr int32_t ERROR_USER_EXISTS = 1316;
    inline constexpr int32_t ERROR_NO_SUCH_USER = 1317;
    inline constexpr int32_t ERROR_GROUP_EXISTS = 1318;
    inline constexpr int32_t ERROR_NO_SUCH_GROUP = 1319;
    inline constexpr int32_t ERROR_MEMBER_IN_GROUP = 1320;
    inline constexpr int32_t ERROR_MEMBER_NOT_IN_GROUP = 1321;
    inline constexpr int32_t ERROR_LAST_ADMIN = 1322;
    inline constexpr int32_t ERROR_WRONG_PASSWORD = 1323;
    inline constexpr int32_t ERROR_ILL_FORMED_PASSWORD = 1324;
    inline constexpr int32_t ERROR_PASSWORD_RESTRICTION = 1325;
    inline constexpr int32_t ERROR_LOGON_FAILURE = 1326;
    inline constexpr int32_t ERROR_ACCOUNT_RESTRICTION = 1327;
    inline constexpr int32_t ERROR_INVALID_LOGON_HOURS = 1328;
    inline constexpr int32_t ERROR_INVALID_WORKSTATION = 1329;
    inline constexpr int32_t ERROR_PASSWORD_EXPIRED = 1330;
    inline constexpr int32_t ERROR_ACCOUNT_DISABLED = 1331;
    inline constexpr int32_t ERROR_NONE_MAPPED = 1332;
    inline constexpr int32_t ERROR_TOO_MANY_LUIDS_REQUESTED = 1333;
    inline constexpr int32_t ERROR_LUIDS_EXHAUSTED = 1334;
    inline constexpr int32_t ERROR_INVALID_SUB_AUTHORITY = 1335;
    inline constexpr int32_t ERROR_INVALID_ACL = 1336;
    inline constexpr int32_t ERROR_INVALID_SID = 1337;
    inline constexpr int32_t ERROR_INVALID_SECURITY_DESCR = 1338;
    inline constexpr int32_t ERROR_BAD_INHERITANCE_ACL = 1340;
    inline constexpr int32_t ERROR_SERVER_DISABLED = 1341;
    inline constexpr int32_t ERROR_SERVER_NOT_DISABLED = 1342;
    inline constexpr int32_t ERROR_INVALID_ID_AUTHORITY = 1343;
    inline constexpr int32_t ERROR_ALLOTTED_SPACE_EXCEEDED = 1344;
    inline constexpr int32_t ERROR_INVALID_GROUP_ATTRIBUTES = 1345;
    inline constexpr int32_t ERROR_BAD_IMPERSONATION_LEVEL = 1346;
    inline constexpr int32_t ERROR_CANT_OPEN_ANONYMOUS = 1347;
    inline constexpr int32_t ERROR_BAD_VALIDATION_CLASS = 1348;
    inline constexpr int32_t ERROR_BAD_TOKEN_TYPE = 1349;
    inline constexpr int32_t ERROR_NO_SECURITY_ON_OBJECT = 1350;
    inline constexpr int32_t ERROR_CANT_ACCESS_DOMAIN_INFO = 1351;
    inline constexpr int32_t ERROR_INVALID_SERVER_STATE = 1352;
    inline constexpr int32_t ERROR_INVALID_DOMAIN_STATE = 1353;
    inline constexpr int32_t ERROR_INVALID_DOMAIN_ROLE = 1354;
    inline constexpr int32_t ERROR_NO_SUCH_DOMAIN = 1355;
    inline constexpr int32_t ERROR_DOMAIN_EXISTS = 1356;
    inline constexpr int32_t ERROR_DOMAIN_LIMIT_EXCEEDED = 1357;
    inline constexpr int32_t ERROR_INTERNAL_DB_CORRUPTION = 1358;
    inline constexpr int32_t ERROR_INTERNAL_ERROR = 1359;
    inline constexpr int32_t ERROR_GENERIC_NOT_MAPPED = 1360;
    inline constexpr int32_t ERROR_BAD_DESCRIPTOR_FORMAT = 1361;
    inline constexpr int32_t ERROR_NOT_LOGON_PROCESS = 1362;
    inline constexpr int32_t ERROR_LOGON_SESSION_EXISTS = 1363;
    inline constexpr int32_t ERROR_NO_SUCH_PACKAGE = 1364;
    inline constexpr int32_t ERROR_BAD_LOGON_SESSION_STATE = 1365;
    inline constexpr int32_t ERROR_LOGON_SESSION_COLLISION = 1366;
    inline constexpr int32_t ERROR_INVALID_LOGON_TYPE = 1367;
    inline constexpr int32_t ERROR_CANNOT_IMPERSONATE = 1368;
    inline constexpr int32_t ERROR_RXACT_INVALID_STATE = 1369;
    inline constexpr int32_t ERROR_RXACT_COMMIT_FAILURE = 1370;
    inline constexpr int32_t ERROR_SPECIAL_ACCOUNT = 1371;
    inline constexpr int32_t ERROR_SPECIAL_GROUP = 1372;
    inline constexpr int32_t ERROR_SPECIAL_USER = 1373;
    inline constexpr int32_t ERROR_MEMBERS_PRIMARY_GROUP = 1374;
    inline constexpr int32_t ERROR_TOKEN_ALREADY_IN_USE = 1375;
    inline constexpr int32_t ERROR_NO_SUCH_ALIAS = 1376;
    inline constexpr int32_t ERROR_MEMBER_NOT_IN_ALIAS = 1377;
    inline constexpr int32_t ERROR_MEMBER_IN_ALIAS = 1378;
    inline constexpr int32_t ERROR_ALIAS_EXISTS = 1379;
    inline constexpr int32_t ERROR_LOGON_NOT_GRANTED = 1380;
    inline constexpr int32_t ERROR_TOO_MANY_SECRETS = 1381;
    inline constexpr int32_t ERROR_SECRET_TOO_LONG = 1382;
    inline constexpr int32_t ERROR_INTERNAL_DB_ERROR = 1383;
    inline constexpr int32_t ERROR_TOO_MANY_CONTEXT_IDS = 1384;
    inline constexpr int32_t ERROR_LOGON_TYPE_NOT_GRANTED = 1385;
    inline constexpr int32_t ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386;
    inline constexpr int32_t ERROR_NO_SUCH_MEMBER = 1387;
    inline constexpr int32_t ERROR_INVALID_MEMBER = 1388;
    inline constexpr int32_t ERROR_TOO_MANY_SIDS = 1389;
    inline constexpr int32_t ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390;
    inline constexpr int32_t ERROR_NO_INHERITANCE = 1391;
    inline constexpr int32_t ERROR_FILE_CORRUPT = 1392;
    inline constexpr int32_t ERROR_DISK_CORRUPT = 1393;
    inline constexpr int32_t ERROR_NO_USER_SESSION_KEY = 1394;
    inline constexpr int32_t ERROR_LICENSE_QUOTA_EXCEEDED = 1395;
    inline constexpr int32_t ERROR_WRONG_TARGET_NAME = 1396;
    inline constexpr int32_t ERROR_MUTUAL_AUTH_FAILED = 1397;
    inline constexpr int32_t ERROR_TIME_SKEW = 1398;
    inline constexpr int32_t ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399;
    inline constexpr int32_t ERROR_INVALID_WINDOW_HANDLE = 1400;
    inline constexpr int32_t ERROR_INVALID_MENU_HANDLE = 1401;
    inline constexpr int32_t ERROR_INVALID_CURSOR_HANDLE = 1402;
    inline constexpr int32_t ERROR_INVALID_ACCEL_HANDLE = 1403;
    inline constexpr int32_t ERROR_INVALID_HOOK_HANDLE = 1404;
    inline constexpr int32_t ERROR_INVALID_DWP_HANDLE = 1405;
    inline constexpr int32_t ERROR_TLW_WITH_WSCHILD = 1406;
    inline constexpr int32_t ERROR_CANNOT_FIND_WND_CLASS = 1407;
    inline constexpr int32_t ERROR_WINDOW_OF_OTHER_THREAD = 1408;
    inline constexpr int32_t ERROR_HOTKEY_ALREADY_REGISTERED = 1409;
    inline constexpr int32_t ERROR_CLASS_ALREADY_EXISTS = 1410;
    inline constexpr int32_t ERROR_CLASS_DOES_NOT_EXIST = 1411;
    inline constexpr int32_t ERROR_CLASS_HAS_WINDOWS = 1412;
    inline constexpr int32_t ERROR_INVALID_INDEX = 1413;
    inline constexpr int32_t ERROR_INVALID_ICON_HANDLE = 1414;
    inline constexpr int32_t ERROR_PRIVATE_DIALOG_INDEX = 1415;
    inline constexpr int32_t ERROR_LISTBOX_ID_NOT_FOUND = 1416;
    inline constexpr int32_t ERROR_NO_WILDCARD_CHARACTERS = 1417;
    inline constexpr int32_t ERROR_CLIPBOARD_NOT_OPEN = 1418;
    inline constexpr int32_t ERROR_HOTKEY_NOT_REGISTERED = 1419;
    inline constexpr int32_t ERROR_WINDOW_NOT_DIALOG = 1420;
    inline constexpr int32_t ERROR_CONTROL_ID_NOT_FOUND = 1421;
    inline constexpr int32_t ERROR_INVALID_COMBOBOX_MESSAGE = 1422;
    inline constexpr int32_t ERROR_WINDOW_NOT_COMBOBOX = 1423;
    inline constexpr int32_t ERROR_INVALID_EDIT_HEIGHT = 1424;
    inline constexpr int32_t ERROR_DC_NOT_FOUND = 1425;
    inline constexpr int32_t ERROR_INVALID_HOOK_FILTER = 1426;
    inline constexpr int32_t ERROR_INVALID_FILTER_PROC = 1427;
    inline constexpr int32_t ERROR_HOOK_NEEDS_HMOD = 1428;
    inline constexpr int32_t ERROR_GLOBAL_ONLY_HOOK = 1429;
    inline constexpr int32_t ERROR_JOURNAL_HOOK_SET = 1430;
    inline constexpr int32_t ERROR_HOOK_NOT_INSTALLED = 1431;
    inline constexpr int32_t ERROR_INVALID_LB_MESSAGE = 1432;
    inline constexpr int32_t ERROR_SETCOUNT_ON_BAD_LB = 1433;
    inline constexpr int32_t ERROR_LB_WITHOUT_TABSTOPS = 1434;
    inline constexpr int32_t ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435;
    inline constexpr int32_t ERROR_CHILD_WINDOW_MENU = 1436;
    inline constexpr int32_t ERROR_NO_SYSTEM_MENU = 1437;
    inline constexpr int32_t ERROR_INVALID_MSGBOX_STYLE = 1438;
    inline constexpr int32_t ERROR_INVALID_SPI_VALUE = 1439;
    inline constexpr int32_t ERROR_SCREEN_ALREADY_LOCKED = 1440;
    inline constexpr int32_t ERROR_HWNDS_HAVE_DIFF_PARENT = 1441;
    inline constexpr int32_t ERROR_NOT_CHILD_WINDOW = 1442;
    inline constexpr int32_t ERROR_INVALID_GW_COMMAND = 1443;
    inline constexpr int32_t ERROR_INVALID_THREAD_ID = 1444;
    inline constexpr int32_t ERROR_NON_MDICHILD_WINDOW = 1445;
    inline constexpr int32_t ERROR_POPUP_ALREADY_ACTIVE = 1446;
    inline constexpr int32_t ERROR_NO_SCROLLBARS = 1447;
    inline constexpr int32_t ERROR_INVALID_SCROLLBAR_RANGE = 1448;
    inline constexpr int32_t ERROR_INVALID_SHOWWIN_COMMAND = 1449;
    inline constexpr int32_t ERROR_NO_SYSTEM_RESOURCES = 1450;
    inline constexpr int32_t ERROR_NONPAGED_SYSTEM_RESOURCES = 1451;
    inline constexpr int32_t ERROR_PAGED_SYSTEM_RESOURCES = 1452;
    inline constexpr int32_t ERROR_WORKING_SET_QUOTA = 1453;
    inline constexpr int32_t ERROR_PAGEFILE_QUOTA = 1454;
    inline constexpr int32_t ERROR_COMMITMENT_LIMIT = 1455;
    inline constexpr int32_t ERROR_MENU_ITEM_NOT_FOUND = 1456;
    inline constexpr int32_t ERROR_INVALID_KEYBOARD_HANDLE = 1457;
    inline constexpr int32_t ERROR_HOOK_TYPE_NOT_ALLOWED = 1458;
    inline constexpr int32_t ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459;
    inline constexpr int32_t ERROR_TIMEOUT = 1460;
    inline constexpr int32_t ERROR_INVALID_MONITOR_HANDLE = 1461;
    inline constexpr int32_t ERROR_INCORRECT_SIZE = 1462;
    inline constexpr int32_t ERROR_SYMLINK_CLASS_DISABLED = 1463;
    inline constexpr int32_t ERROR_SYMLINK_NOT_SUPPORTED = 1464;
    inline constexpr int32_t ERROR_XML_PARSE_ERROR = 1465;
    inline constexpr int32_t ERROR_XMLDSIG_ERROR = 1466;
    inline constexpr int32_t ERROR_RESTART_APPLICATION = 1467;
    inline constexpr int32_t ERROR_WRONG_COMPARTMENT = 1468;
    inline constexpr int32_t ERROR_AUTHIP_FAILURE = 1469;
    inline constexpr int32_t ERROR_NO_NVRAM_RESOURCES = 1470;
    inline constexpr int32_t ERROR_NOT_GUI_PROCESS = 1471;
    inline constexpr int32_t ERROR_EVENTLOG_FILE_CORRUPT = 1500;
    inline constexpr int32_t ERROR_EVENTLOG_CANT_START = 1501;
    inline constexpr int32_t ERROR_LOG_FILE_FULL = 1502;
    inline constexpr int32_t ERROR_EVENTLOG_FILE_CHANGED = 1503;
    inline constexpr int32_t ERROR_CONTAINER_ASSIGNED = 1504;
    inline constexpr int32_t ERROR_JOB_NO_CONTAINER = 1505;
    inline constexpr int32_t ERROR_INVALID_TASK_NAME = 1550;
    inline constexpr int32_t ERROR_INVALID_TASK_INDEX = 1551;
    inline constexpr int32_t ERROR_THREAD_ALREADY_IN_TASK = 1552;
    inline constexpr int32_t ERROR_INSTALL_SERVICE_FAILURE = 1601;
    inline constexpr int32_t ERROR_INSTALL_USEREXIT = 1602;
    inline constexpr int32_t ERROR_INSTALL_FAILURE = 1603;
    inline constexpr int32_t ERROR_INSTALL_SUSPEND = 1604;
    inline constexpr int32_t ERROR_UNKNOWN_PRODUCT = 1605;
    inline constexpr int32_t ERROR_UNKNOWN_FEATURE = 1606;
    inline constexpr int32_t ERROR_UNKNOWN_COMPONENT = 1607;
    inline constexpr int32_t ERROR_UNKNOWN_PROPERTY = 1608;
    inline constexpr int32_t ERROR_INVALID_HANDLE_STATE = 1609;
    inline constexpr int32_t ERROR_BAD_CONFIGURATION = 1610;
    inline constexpr int32_t ERROR_INDEX_ABSENT = 1611;
    inline constexpr int32_t ERROR_INSTALL_SOURCE_ABSENT = 1612;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_VERSION = 1613;
    inline constexpr int32_t ERROR_PRODUCT_UNINSTALLED = 1614;
    inline constexpr int32_t ERROR_BAD_QUERY_SYNTAX = 1615;
    inline constexpr int32_t ERROR_INVALID_FIELD = 1616;
    inline constexpr int32_t ERROR_DEVICE_REMOVED = 1617;
    inline constexpr int32_t ERROR_INSTALL_ALREADY_RUNNING = 1618;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_INVALID = 1620;
    inline constexpr int32_t ERROR_INSTALL_UI_FAILURE = 1621;
    inline constexpr int32_t ERROR_INSTALL_LOG_FAILURE = 1622;
    inline constexpr int32_t ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623;
    inline constexpr int32_t ERROR_INSTALL_TRANSFORM_FAILURE = 1624;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_REJECTED = 1625;
    inline constexpr int32_t ERROR_FUNCTION_NOT_CALLED = 1626;
    inline constexpr int32_t ERROR_FUNCTION_FAILED = 1627;
    inline constexpr int32_t ERROR_INVALID_TABLE = 1628;
    inline constexpr int32_t ERROR_DATATYPE_MISMATCH = 1629;
    inline constexpr int32_t ERROR_UNSUPPORTED_TYPE = 1630;
    inline constexpr int32_t ERROR_CREATE_FAILED = 1631;
    inline constexpr int32_t ERROR_INSTALL_TEMP_UNWRITABLE = 1632;
    inline constexpr int32_t ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633;
    inline constexpr int32_t ERROR_INSTALL_NOTUSED = 1634;
    inline constexpr int32_t ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635;
    inline constexpr int32_t ERROR_PATCH_PACKAGE_INVALID = 1636;
    inline constexpr int32_t ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637;
    inline constexpr int32_t ERROR_PRODUCT_VERSION = 1638;
    inline constexpr int32_t ERROR_INVALID_COMMAND_LINE = 1639;
    inline constexpr int32_t ERROR_INSTALL_REMOTE_DISALLOWED = 1640;
    inline constexpr int32_t ERROR_SUCCESS_REBOOT_INITIATED = 1641;
    inline constexpr int32_t ERROR_PATCH_TARGET_NOT_FOUND = 1642;
    inline constexpr int32_t ERROR_PATCH_PACKAGE_REJECTED = 1643;
    inline constexpr int32_t ERROR_INSTALL_TRANSFORM_REJECTED = 1644;
    inline constexpr int32_t ERROR_INSTALL_REMOTE_PROHIBITED = 1645;
    inline constexpr int32_t ERROR_PATCH_REMOVAL_UNSUPPORTED = 1646;
    inline constexpr int32_t ERROR_UNKNOWN_PATCH = 1647;
    inline constexpr int32_t ERROR_PATCH_NO_SEQUENCE = 1648;
    inline constexpr int32_t ERROR_PATCH_REMOVAL_DISALLOWED = 1649;
    inline constexpr int32_t ERROR_INVALID_PATCH_XML = 1650;
    inline constexpr int32_t ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 1651;
    inline constexpr int32_t ERROR_INSTALL_SERVICE_SAFEBOOT = 1652;
    inline constexpr int32_t ERROR_FAIL_FAST_EXCEPTION = 1653;
    inline constexpr int32_t ERROR_INSTALL_REJECTED = 1654;
    inline constexpr int32_t ERROR_DYNAMIC_CODE_BLOCKED = 1655;
    inline constexpr int32_t ERROR_NOT_SAME_OBJECT = 1656;
    inline constexpr int32_t ERROR_STRICT_CFG_VIOLATION = 1657;
    inline constexpr int32_t ERROR_SET_CONTEXT_DENIED = 1660;
    inline constexpr int32_t ERROR_CROSS_PARTITION_VIOLATION = 1661;
    inline constexpr int32_t ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = 1662;
    inline constexpr int32_t RPC_S_INVALID_STRING_BINDING = 1700;
    inline constexpr int32_t RPC_S_WRONG_KIND_OF_BINDING = 1701;
    inline constexpr int32_t RPC_S_INVALID_BINDING = 1702;
    inline constexpr int32_t RPC_S_PROTSEQ_NOT_SUPPORTED = 1703;
    inline constexpr int32_t RPC_S_INVALID_RPC_PROTSEQ = 1704;
    inline constexpr int32_t RPC_S_INVALID_STRING_UUID = 1705;
    inline constexpr int32_t RPC_S_INVALID_ENDPOINT_FORMAT = 1706;
    inline constexpr int32_t RPC_S_INVALID_NET_ADDR = 1707;
    inline constexpr int32_t RPC_S_NO_ENDPOINT_FOUND = 1708;
    inline constexpr int32_t RPC_S_INVALID_TIMEOUT = 1709;
    inline constexpr int32_t RPC_S_OBJECT_NOT_FOUND = 1710;
    inline constexpr int32_t RPC_S_ALREADY_REGISTERED = 1711;
    inline constexpr int32_t RPC_S_TYPE_ALREADY_REGISTERED = 1712;
    inline constexpr int32_t RPC_S_ALREADY_LISTENING = 1713;
    inline constexpr int32_t RPC_S_NO_PROTSEQS_REGISTERED = 1714;
    inline constexpr int32_t RPC_S_NOT_LISTENING = 1715;
    inline constexpr int32_t RPC_S_UNKNOWN_MGR_TYPE = 1716;
    inline constexpr int32_t RPC_S_UNKNOWN_IF = 1717;
    inline constexpr int32_t RPC_S_NO_BINDINGS = 1718;
    inline constexpr int32_t RPC_S_NO_PROTSEQS = 1719;
    inline constexpr int32_t RPC_S_CANT_CREATE_ENDPOINT = 1720;
    inline constexpr int32_t RPC_S_OUT_OF_RESOURCES = 1721;
    inline constexpr int32_t RPC_S_SERVER_UNAVAILABLE = 1722;
    inline constexpr int32_t RPC_S_SERVER_TOO_BUSY = 1723;
    inline constexpr int32_t RPC_S_INVALID_NETWORK_OPTIONS = 1724;
    inline constexpr int32_t RPC_S_NO_CALL_ACTIVE = 1725;
    inline constexpr int32_t RPC_S_CALL_FAILED = 1726;
    inline constexpr int32_t RPC_S_CALL_FAILED_DNE = 1727;
    inline constexpr int32_t RPC_S_PROTOCOL_ERROR = 1728;
    inline constexpr int32_t RPC_S_PROXY_ACCESS_DENIED = 1729;
    inline constexpr int32_t RPC_S_UNSUPPORTED_TRANS_SYN = 1730;
    inline constexpr int32_t RPC_S_UNSUPPORTED_TYPE = 1732;
    inline constexpr int32_t RPC_S_INVALID_TAG = 1733;
    inline constexpr int32_t RPC_S_INVALID_BOUND = 1734;
    inline constexpr int32_t RPC_S_NO_ENTRY_NAME = 1735;
    inline constexpr int32_t RPC_S_INVALID_NAME_SYNTAX = 1736;
    inline constexpr int32_t RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737;
    inline constexpr int32_t RPC_S_UUID_NO_ADDRESS = 1739;
    inline constexpr int32_t RPC_S_DUPLICATE_ENDPOINT = 1740;
    inline constexpr int32_t RPC_S_UNKNOWN_AUTHN_TYPE = 1741;
    inline constexpr int32_t RPC_S_MAX_CALLS_TOO_SMALL = 1742;
    inline constexpr int32_t RPC_S_STRING_TOO_LONG = 1743;
    inline constexpr int32_t RPC_S_PROTSEQ_NOT_FOUND = 1744;
    inline constexpr int32_t RPC_S_PROCNUM_OUT_OF_RANGE = 1745;
    inline constexpr int32_t RPC_S_BINDING_HAS_NO_AUTH = 1746;
    inline constexpr int32_t RPC_S_UNKNOWN_AUTHN_SERVICE = 1747;
    inline constexpr int32_t RPC_S_UNKNOWN_AUTHN_LEVEL = 1748;
    inline constexpr int32_t RPC_S_INVALID_AUTH_IDENTITY = 1749;
    inline constexpr int32_t RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750;
    inline constexpr int32_t EPT_S_INVALID_ENTRY = 1751;
    inline constexpr int32_t EPT_S_CANT_PERFORM_OP = 1752;
    inline constexpr int32_t EPT_S_NOT_REGISTERED = 1753;
    inline constexpr int32_t RPC_S_NOTHING_TO_EXPORT = 1754;
    inline constexpr int32_t RPC_S_INCOMPLETE_NAME = 1755;
    inline constexpr int32_t RPC_S_INVALID_VERS_OPTION = 1756;
    inline constexpr int32_t RPC_S_NO_MORE_MEMBERS = 1757;
    inline constexpr int32_t RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758;
    inline constexpr int32_t RPC_S_INTERFACE_NOT_FOUND = 1759;
    inline constexpr int32_t RPC_S_ENTRY_ALREADY_EXISTS = 1760;
    inline constexpr int32_t RPC_S_ENTRY_NOT_FOUND = 1761;
    inline constexpr int32_t RPC_S_NAME_SERVICE_UNAVAILABLE = 1762;
    inline constexpr int32_t RPC_S_INVALID_NAF_ID = 1763;
    inline constexpr int32_t RPC_S_CANNOT_SUPPORT = 1764;
    inline constexpr int32_t RPC_S_NO_CONTEXT_AVAILABLE = 1765;
    inline constexpr int32_t RPC_S_INTERNAL_ERROR = 1766;
    inline constexpr int32_t RPC_S_ZERO_DIVIDE = 1767;
    inline constexpr int32_t RPC_S_ADDRESS_ERROR = 1768;
    inline constexpr int32_t RPC_S_FP_DIV_ZERO = 1769;
    inline constexpr int32_t RPC_S_FP_UNDERFLOW = 1770;
    inline constexpr int32_t RPC_S_FP_OVERFLOW = 1771;
    inline constexpr int32_t RPC_X_NO_MORE_ENTRIES = 1772;
    inline constexpr int32_t RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773;
    inline constexpr int32_t RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774;
    inline constexpr int32_t RPC_X_SS_IN_NULL_CONTEXT = 1775;
    inline constexpr int32_t RPC_X_SS_CONTEXT_DAMAGED = 1777;
    inline constexpr int32_t RPC_X_SS_HANDLES_MISMATCH = 1778;
    inline constexpr int32_t RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779;
    inline constexpr int32_t RPC_X_NULL_REF_POINTER = 1780;
    inline constexpr int32_t RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781;
    inline constexpr int32_t RPC_X_BYTE_COUNT_TOO_SMALL = 1782;
    inline constexpr int32_t RPC_X_BAD_STUB_DATA = 1783;
    inline constexpr int32_t ERROR_INVALID_USER_BUFFER = 1784;
    inline constexpr int32_t ERROR_UNRECOGNIZED_MEDIA = 1785;
    inline constexpr int32_t ERROR_NO_TRUST_LSA_SECRET = 1786;
    inline constexpr int32_t ERROR_NO_TRUST_SAM_ACCOUNT = 1787;
    inline constexpr int32_t ERROR_TRUSTED_DOMAIN_FAILURE = 1788;
    inline constexpr int32_t ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789;
    inline constexpr int32_t ERROR_TRUST_FAILURE = 1790;
    inline constexpr int32_t RPC_S_CALL_IN_PROGRESS = 1791;
    inline constexpr int32_t ERROR_NETLOGON_NOT_STARTED = 1792;
    inline constexpr int32_t ERROR_ACCOUNT_EXPIRED = 1793;
    inline constexpr int32_t ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795;
    inline constexpr int32_t ERROR_UNKNOWN_PORT = 1796;
    inline constexpr int32_t ERROR_UNKNOWN_PRINTER_DRIVER = 1797;
    inline constexpr int32_t ERROR_UNKNOWN_PRINTPROCESSOR = 1798;
    inline constexpr int32_t ERROR_INVALID_SEPARATOR_FILE = 1799;
    inline constexpr int32_t ERROR_INVALID_PRIORITY = 1800;
    inline constexpr int32_t ERROR_INVALID_PRINTER_NAME = 1801;
    inline constexpr int32_t ERROR_PRINTER_ALREADY_EXISTS = 1802;
    inline constexpr int32_t ERROR_INVALID_PRINTER_COMMAND = 1803;
    inline constexpr int32_t ERROR_INVALID_DATATYPE = 1804;
    inline constexpr int32_t ERROR_INVALID_ENVIRONMENT = 1805;
    inline constexpr int32_t RPC_S_NO_MORE_BINDINGS = 1806;
    inline constexpr int32_t ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807;
    inline constexpr int32_t ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808;
    inline constexpr int32_t ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809;
    inline constexpr int32_t ERROR_DOMAIN_TRUST_INCONSISTENT = 1810;
    inline constexpr int32_t ERROR_SERVER_HAS_OPEN_HANDLES = 1811;
    inline constexpr int32_t ERROR_RESOURCE_DATA_NOT_FOUND = 1812;
    inline constexpr int32_t ERROR_RESOURCE_TYPE_NOT_FOUND = 1813;
    inline constexpr int32_t ERROR_RESOURCE_NAME_NOT_FOUND = 1814;
    inline constexpr int32_t ERROR_RESOURCE_LANG_NOT_FOUND = 1815;
    inline constexpr int32_t ERROR_NOT_ENOUGH_QUOTA = 1816;
    inline constexpr int32_t RPC_S_NO_INTERFACES = 1817;
    inline constexpr int32_t RPC_S_CALL_CANCELLED = 1818;
    inline constexpr int32_t RPC_S_BINDING_INCOMPLETE = 1819;
    inline constexpr int32_t RPC_S_COMM_FAILURE = 1820;
    inline constexpr int32_t RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821;
    inline constexpr int32_t RPC_S_NO_PRINC_NAME = 1822;
    inline constexpr int32_t RPC_S_NOT_RPC_ERROR = 1823;
    inline constexpr int32_t RPC_S_UUID_LOCAL_ONLY = 1824;
    inline constexpr int32_t RPC_S_SEC_PKG_ERROR = 1825;
    inline constexpr int32_t RPC_S_NOT_CANCELLED = 1826;
    inline constexpr int32_t RPC_X_INVALID_ES_ACTION = 1827;
    inline constexpr int32_t RPC_X_WRONG_ES_VERSION = 1828;
    inline constexpr int32_t RPC_X_WRONG_STUB_VERSION = 1829;
    inline constexpr int32_t RPC_X_INVALID_PIPE_OBJECT = 1830;
    inline constexpr int32_t RPC_X_WRONG_PIPE_ORDER = 1831;
    inline constexpr int32_t RPC_X_WRONG_PIPE_VERSION = 1832;
    inline constexpr int32_t RPC_S_COOKIE_AUTH_FAILED = 1833;
    inline constexpr int32_t RPC_S_DO_NOT_DISTURB = 1834;
    inline constexpr int32_t RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED = 1835;
    inline constexpr int32_t RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH = 1836;
    inline constexpr int32_t RPC_S_GROUP_MEMBER_NOT_FOUND = 1898;
    inline constexpr int32_t EPT_S_CANT_CREATE = 1899;
    inline constexpr int32_t RPC_S_INVALID_OBJECT = 1900;
    inline constexpr int32_t ERROR_INVALID_TIME = 1901;
    inline constexpr int32_t ERROR_INVALID_FORM_NAME = 1902;
    inline constexpr int32_t ERROR_INVALID_FORM_SIZE = 1903;
    inline constexpr int32_t ERROR_ALREADY_WAITING = 1904;
    inline constexpr int32_t ERROR_PRINTER_DELETED = 1905;
    inline constexpr int32_t ERROR_INVALID_PRINTER_STATE = 1906;
    inline constexpr int32_t ERROR_PASSWORD_MUST_CHANGE = 1907;
    inline constexpr int32_t ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908;
    inline constexpr int32_t ERROR_ACCOUNT_LOCKED_OUT = 1909;
    inline constexpr int32_t OR_INVALID_OXID = 1910;
    inline constexpr int32_t OR_INVALID_OID = 1911;
    inline constexpr int32_t OR_INVALID_SET = 1912;
    inline constexpr int32_t RPC_S_SEND_INCOMPLETE = 1913;
    inline constexpr int32_t RPC_S_INVALID_ASYNC_HANDLE = 1914;
    inline constexpr int32_t RPC_S_INVALID_ASYNC_CALL = 1915;
    inline constexpr int32_t RPC_X_PIPE_CLOSED = 1916;
    inline constexpr int32_t RPC_X_PIPE_DISCIPLINE_ERROR = 1917;
    inline constexpr int32_t RPC_X_PIPE_EMPTY = 1918;
    inline constexpr int32_t ERROR_NO_SITENAME = 1919;
    inline constexpr int32_t ERROR_CANT_ACCESS_FILE = 1920;
    inline constexpr int32_t ERROR_CANT_RESOLVE_FILENAME = 1921;
    inline constexpr int32_t RPC_S_ENTRY_TYPE_MISMATCH = 1922;
    inline constexpr int32_t RPC_S_NOT_ALL_OBJS_EXPORTED = 1923;
    inline constexpr int32_t RPC_S_INTERFACE_NOT_EXPORTED = 1924;
    inline constexpr int32_t RPC_S_PROFILE_NOT_ADDED = 1925;
    inline constexpr int32_t RPC_S_PRF_ELT_NOT_ADDED = 1926;
    inline constexpr int32_t RPC_S_PRF_ELT_NOT_REMOVED = 1927;
    inline constexpr int32_t RPC_S_GRP_ELT_NOT_ADDED = 1928;
    inline constexpr int32_t RPC_S_GRP_ELT_NOT_REMOVED = 1929;
    inline constexpr int32_t ERROR_KM_DRIVER_BLOCKED = 1930;
    inline constexpr int32_t ERROR_CONTEXT_EXPIRED = 1931;
    inline constexpr int32_t ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 1932;
    inline constexpr int32_t ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 1933;
    inline constexpr int32_t ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 1934;
    inline constexpr int32_t ERROR_AUTHENTICATION_FIREWALL_FAILED = 1935;
    inline constexpr int32_t ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 1936;
    inline constexpr int32_t ERROR_NTLM_BLOCKED = 1937;
    inline constexpr int32_t ERROR_PASSWORD_CHANGE_REQUIRED = 1938;
    inline constexpr int32_t ERROR_LOST_MODE_LOGON_RESTRICTION = 1939;
    inline constexpr int32_t ERROR_INVALID_PIXEL_FORMAT = 2000;
    inline constexpr int32_t ERROR_BAD_DRIVER = 2001;
    inline constexpr int32_t ERROR_INVALID_WINDOW_STYLE = 2002;
    inline constexpr int32_t ERROR_METAFILE_NOT_SUPPORTED = 2003;
    inline constexpr int32_t ERROR_TRANSFORM_NOT_SUPPORTED = 2004;
    inline constexpr int32_t ERROR_CLIPPING_NOT_SUPPORTED = 2005;
    inline constexpr int32_t ERROR_INVALID_CMM = 2010;
    inline constexpr int32_t ERROR_INVALID_PROFILE = 2011;
    inline constexpr int32_t ERROR_TAG_NOT_FOUND = 2012;
    inline constexpr int32_t ERROR_TAG_NOT_PRESENT = 2013;
    inline constexpr int32_t ERROR_DUPLICATE_TAG = 2014;
    inline constexpr int32_t ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2015;
    inline constexpr int32_t ERROR_PROFILE_NOT_FOUND = 2016;
    inline constexpr int32_t ERROR_INVALID_COLORSPACE = 2017;
    inline constexpr int32_t ERROR_ICM_NOT_ENABLED = 2018;
    inline constexpr int32_t ERROR_DELETING_ICM_XFORM = 2019;
    inline constexpr int32_t ERROR_INVALID_TRANSFORM = 2020;
    inline constexpr int32_t ERROR_COLORSPACE_MISMATCH = 2021;
    inline constexpr int32_t ERROR_INVALID_COLORINDEX = 2022;
    inline constexpr int32_t ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = 2023;
    inline constexpr int32_t ERROR_CONNECTED_OTHER_PASSWORD = 2108;
    inline constexpr int32_t ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 2109;
    inline constexpr int32_t ERROR_BAD_USERNAME = 2202;
    inline constexpr int32_t ERROR_NOT_CONNECTED = 2250;
    inline constexpr int32_t ERROR_OPEN_FILES = 2401;
    inline constexpr int32_t ERROR_ACTIVE_CONNECTIONS = 2402;
    inline constexpr int32_t ERROR_DEVICE_IN_USE = 2404;
    inline constexpr int32_t ERROR_UNKNOWN_PRINT_MONITOR = 3000;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_IN_USE = 3001;
    inline constexpr int32_t ERROR_SPOOL_FILE_NOT_FOUND = 3002;
    inline constexpr int32_t ERROR_SPL_NO_STARTDOC = 3003;
    inline constexpr int32_t ERROR_SPL_NO_ADDJOB = 3004;
    inline constexpr int32_t ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005;
    inline constexpr int32_t ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006;
    inline constexpr int32_t ERROR_INVALID_PRINT_MONITOR = 3007;
    inline constexpr int32_t ERROR_PRINT_MONITOR_IN_USE = 3008;
    inline constexpr int32_t ERROR_PRINTER_HAS_JOBS_QUEUED = 3009;
    inline constexpr int32_t ERROR_SUCCESS_REBOOT_REQUIRED = 3010;
    inline constexpr int32_t ERROR_SUCCESS_RESTART_REQUIRED = 3011;
    inline constexpr int32_t ERROR_PRINTER_NOT_FOUND = 3012;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_WARNED = 3013;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_BLOCKED = 3014;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = 3015;
    inline constexpr int32_t ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = 3016;
    inline constexpr int32_t ERROR_FAIL_REBOOT_REQUIRED = 3017;
    inline constexpr int32_t ERROR_FAIL_REBOOT_INITIATED = 3018;
    inline constexpr int32_t ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = 3019;
    inline constexpr int32_t ERROR_PRINT_JOB_RESTART_REQUIRED = 3020;
    inline constexpr int32_t ERROR_INVALID_PRINTER_DRIVER_MANIFEST = 3021;
    inline constexpr int32_t ERROR_PRINTER_NOT_SHAREABLE = 3022;
    inline constexpr int32_t ERROR_REQUEST_PAUSED = 3050;
    inline constexpr int32_t ERROR_APPEXEC_CONDITION_NOT_SATISFIED = 3060;
    inline constexpr int32_t ERROR_APPEXEC_HANDLE_INVALIDATED = 3061;
    inline constexpr int32_t ERROR_APPEXEC_INVALID_HOST_GENERATION = 3062;
    inline constexpr int32_t ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION = 3063;
    inline constexpr int32_t ERROR_APPEXEC_INVALID_HOST_STATE = 3064;
    inline constexpr int32_t ERROR_APPEXEC_NO_DONOR = 3065;
    inline constexpr int32_t ERROR_APPEXEC_HOST_ID_MISMATCH = 3066;
    inline constexpr int32_t ERROR_APPEXEC_UNKNOWN_USER = 3067;
    inline constexpr int32_t ERROR_IO_REISSUE_AS_CACHED = 3950;
    inline constexpr int32_t ERROR_WINS_INTERNAL = 4000;
    inline constexpr int32_t ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001;
    inline constexpr int32_t ERROR_STATIC_INIT = 4002;
    inline constexpr int32_t ERROR_INC_BACKUP = 4003;
    inline constexpr int32_t ERROR_FULL_BACKUP = 4004;
    inline constexpr int32_t ERROR_REC_NON_EXISTENT = 4005;
    inline constexpr int32_t ERROR_RPL_NOT_ALLOWED = 4006;
    inline constexpr int32_t PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED = 4050;
    inline constexpr int32_t PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO = 4051;
    inline constexpr int32_t PEERDIST_ERROR_MISSING_DATA = 4052;
    inline constexpr int32_t PEERDIST_ERROR_NO_MORE = 4053;
    inline constexpr int32_t PEERDIST_ERROR_NOT_INITIALIZED = 4054;
    inline constexpr int32_t PEERDIST_ERROR_ALREADY_INITIALIZED = 4055;
    inline constexpr int32_t PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS = 4056;
    inline constexpr int32_t PEERDIST_ERROR_INVALIDATED = 4057;
    inline constexpr int32_t PEERDIST_ERROR_ALREADY_EXISTS = 4058;
    inline constexpr int32_t PEERDIST_ERROR_OPERATION_NOTFOUND = 4059;
    inline constexpr int32_t PEERDIST_ERROR_ALREADY_COMPLETED = 4060;
    inline constexpr int32_t PEERDIST_ERROR_OUT_OF_BOUNDS = 4061;
    inline constexpr int32_t PEERDIST_ERROR_VERSION_UNSUPPORTED = 4062;
    inline constexpr int32_t PEERDIST_ERROR_INVALID_CONFIGURATION = 4063;
    inline constexpr int32_t PEERDIST_ERROR_NOT_LICENSED = 4064;
    inline constexpr int32_t PEERDIST_ERROR_SERVICE_UNAVAILABLE = 4065;
    inline constexpr int32_t PEERDIST_ERROR_TRUST_FAILURE = 4066;
    inline constexpr int32_t ERROR_DHCP_ADDRESS_CONFLICT = 4100;
    inline constexpr int32_t ERROR_WMI_GUID_NOT_FOUND = 4200;
    inline constexpr int32_t ERROR_WMI_INSTANCE_NOT_FOUND = 4201;
    inline constexpr int32_t ERROR_WMI_ITEMID_NOT_FOUND = 4202;
    inline constexpr int32_t ERROR_WMI_TRY_AGAIN = 4203;
    inline constexpr int32_t ERROR_WMI_DP_NOT_FOUND = 4204;
    inline constexpr int32_t ERROR_WMI_UNRESOLVED_INSTANCE_REF = 4205;
    inline constexpr int32_t ERROR_WMI_ALREADY_ENABLED = 4206;
    inline constexpr int32_t ERROR_WMI_GUID_DISCONNECTED = 4207;
    inline constexpr int32_t ERROR_WMI_SERVER_UNAVAILABLE = 4208;
    inline constexpr int32_t ERROR_WMI_DP_FAILED = 4209;
    inline constexpr int32_t ERROR_WMI_INVALID_MOF = 4210;
    inline constexpr int32_t ERROR_WMI_INVALID_REGINFO = 4211;
    inline constexpr int32_t ERROR_WMI_ALREADY_DISABLED = 4212;
    inline constexpr int32_t ERROR_WMI_READ_ONLY = 4213;
    inline constexpr int32_t ERROR_WMI_SET_FAILURE = 4214;
    inline constexpr int32_t ERROR_NOT_APPCONTAINER = 4250;
    inline constexpr int32_t ERROR_APPCONTAINER_REQUIRED = 4251;
    inline constexpr int32_t ERROR_NOT_SUPPORTED_IN_APPCONTAINER = 4252;
    inline constexpr int32_t ERROR_INVALID_PACKAGE_SID_LENGTH = 4253;
    inline constexpr int32_t ERROR_INVALID_MEDIA = 4300;
    inline constexpr int32_t ERROR_INVALID_LIBRARY = 4301;
    inline constexpr int32_t ERROR_INVALID_MEDIA_POOL = 4302;
    inline constexpr int32_t ERROR_DRIVE_MEDIA_MISMATCH = 4303;
    inline constexpr int32_t ERROR_MEDIA_OFFLINE = 4304;
    inline constexpr int32_t ERROR_LIBRARY_OFFLINE = 4305;
    inline constexpr int32_t ERROR_EMPTY = 4306;
    inline constexpr int32_t ERROR_NOT_EMPTY = 4307;
    inline constexpr int32_t ERROR_MEDIA_UNAVAILABLE = 4308;
    inline constexpr int32_t ERROR_RESOURCE_DISABLED = 4309;
    inline constexpr int32_t ERROR_INVALID_CLEANER = 4310;
    inline constexpr int32_t ERROR_UNABLE_TO_CLEAN = 4311;
    inline constexpr int32_t ERROR_OBJECT_NOT_FOUND = 4312;
    inline constexpr int32_t ERROR_DATABASE_FAILURE = 4313;
    inline constexpr int32_t ERROR_DATABASE_FULL = 4314;
    inline constexpr int32_t ERROR_MEDIA_INCOMPATIBLE = 4315;
    inline constexpr int32_t ERROR_RESOURCE_NOT_PRESENT = 4316;
    inline constexpr int32_t ERROR_INVALID_OPERATION = 4317;
    inline constexpr int32_t ERROR_MEDIA_NOT_AVAILABLE = 4318;
    inline constexpr int32_t ERROR_DEVICE_NOT_AVAILABLE = 4319;
    inline constexpr int32_t ERROR_REQUEST_REFUSED = 4320;
    inline constexpr int32_t ERROR_INVALID_DRIVE_OBJECT = 4321;
    inline constexpr int32_t ERROR_LIBRARY_FULL = 4322;
    inline constexpr int32_t ERROR_MEDIUM_NOT_ACCESSIBLE = 4323;
    inline constexpr int32_t ERROR_UNABLE_TO_LOAD_MEDIUM = 4324;
    inline constexpr int32_t ERROR_UNABLE_TO_INVENTORY_DRIVE = 4325;
    inline constexpr int32_t ERROR_UNABLE_TO_INVENTORY_SLOT = 4326;
    inline constexpr int32_t ERROR_UNABLE_TO_INVENTORY_TRANSPORT = 4327;
    inline constexpr int32_t ERROR_TRANSPORT_FULL = 4328;
    inline constexpr int32_t ERROR_CONTROLLING_IEPORT = 4329;
    inline constexpr int32_t ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = 4330;
    inline constexpr int32_t ERROR_CLEANER_SLOT_SET = 4331;
    inline constexpr int32_t ERROR_CLEANER_SLOT_NOT_SET = 4332;
    inline constexpr int32_t ERROR_CLEANER_CARTRIDGE_SPENT = 4333;
    inline constexpr int32_t ERROR_UNEXPECTED_OMID = 4334;
    inline constexpr int32_t ERROR_CANT_DELETE_LAST_ITEM = 4335;
    inline constexpr int32_t ERROR_MESSAGE_EXCEEDS_MAX_SIZE = 4336;
    inline constexpr int32_t ERROR_VOLUME_CONTAINS_SYS_FILES = 4337;
    inline constexpr int32_t ERROR_INDIGENOUS_TYPE = 4338;
    inline constexpr int32_t ERROR_NO_SUPPORTING_DRIVES = 4339;
    inline constexpr int32_t ERROR_CLEANER_CARTRIDGE_INSTALLED = 4340;
    inline constexpr int32_t ERROR_IEPORT_FULL = 4341;
    inline constexpr int32_t ERROR_FILE_OFFLINE = 4350;
    inline constexpr int32_t ERROR_REMOTE_STORAGE_NOT_ACTIVE = 4351;
    inline constexpr int32_t ERROR_REMOTE_STORAGE_MEDIA_ERROR = 4352;
    inline constexpr int32_t ERROR_NOT_A_REPARSE_POINT = 4390;
    inline constexpr int32_t ERROR_REPARSE_ATTRIBUTE_CONFLICT = 4391;
    inline constexpr int32_t ERROR_INVALID_REPARSE_DATA = 4392;
    inline constexpr int32_t ERROR_REPARSE_TAG_INVALID = 4393;
    inline constexpr int32_t ERROR_REPARSE_TAG_MISMATCH = 4394;
    inline constexpr int32_t ERROR_REPARSE_POINT_ENCOUNTERED = 4395;
    inline constexpr int32_t ERROR_APP_DATA_NOT_FOUND = 4400;
    inline constexpr int32_t ERROR_APP_DATA_EXPIRED = 4401;
    inline constexpr int32_t ERROR_APP_DATA_CORRUPT = 4402;
    inline constexpr int32_t ERROR_APP_DATA_LIMIT_EXCEEDED = 4403;
    inline constexpr int32_t ERROR_APP_DATA_REBOOT_REQUIRED = 4404;
    inline constexpr int32_t ERROR_SECUREBOOT_ROLLBACK_DETECTED = 4420;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_VIOLATION = 4421;
    inline constexpr int32_t ERROR_SECUREBOOT_INVALID_POLICY = 4422;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = 4423;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_NOT_SIGNED = 4424;
    inline constexpr int32_t ERROR_SECUREBOOT_NOT_ENABLED = 4425;
    inline constexpr int32_t ERROR_SECUREBOOT_FILE_REPLACED = 4426;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED = 4427;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_UNKNOWN = 4428;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION = 4429;
    inline constexpr int32_t ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH = 4430;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED = 4431;
    inline constexpr int32_t ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH = 4432;
    inline constexpr int32_t ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING = 4433;
    inline constexpr int32_t ERROR_SECUREBOOT_NOT_BASE_POLICY = 4434;
    inline constexpr int32_t ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY = 4435;
    inline constexpr int32_t ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = 4440;
    inline constexpr int32_t ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = 4441;
    inline constexpr int32_t ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = 4442;
    inline constexpr int32_t ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = 4443;
    inline constexpr int32_t ERROR_ALREADY_HAS_STREAM_ID = 4444;
    inline constexpr int32_t ERROR_SMR_GARBAGE_COLLECTION_REQUIRED = 4445;
    inline constexpr int32_t ERROR_WOF_WIM_HEADER_CORRUPT = 4446;
    inline constexpr int32_t ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT = 4447;
    inline constexpr int32_t ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT = 4448;
    inline constexpr int32_t ERROR_VOLUME_NOT_SIS_ENABLED = 4500;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED = 4550;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION = 4551;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_INVALID_POLICY = 4552;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED = 4553;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES = 4554;
    inline constexpr int32_t ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED = 4555;
    inline constexpr int32_t ERROR_VSM_NOT_INITIALIZED = 4560;
    inline constexpr int32_t ERROR_VSM_DMA_PROTECTION_NOT_IN_USE = 4561;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED = 4570;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_INVALID = 4571;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED = 4572;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED = 4573;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND = 4574;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_NOT_ACTIVE = 4575;
    inline constexpr int32_t ERROR_PLATFORM_MANIFEST_NOT_SIGNED = 4576;
    inline constexpr int32_t ERROR_DEPENDENT_RESOURCE_EXISTS = 5001;
    inline constexpr int32_t ERROR_DEPENDENCY_NOT_FOUND = 5002;
    inline constexpr int32_t ERROR_DEPENDENCY_ALREADY_EXISTS = 5003;
    inline constexpr int32_t ERROR_RESOURCE_NOT_ONLINE = 5004;
    inline constexpr int32_t ERROR_HOST_NODE_NOT_AVAILABLE = 5005;
    inline constexpr int32_t ERROR_RESOURCE_NOT_AVAILABLE = 5006;
    inline constexpr int32_t ERROR_RESOURCE_NOT_FOUND = 5007;
    inline constexpr int32_t ERROR_SHUTDOWN_CLUSTER = 5008;
    inline constexpr int32_t ERROR_CANT_EVICT_ACTIVE_NODE = 5009;
    inline constexpr int32_t ERROR_OBJECT_ALREADY_EXISTS = 5010;
    inline constexpr int32_t ERROR_OBJECT_IN_LIST = 5011;
    inline constexpr int32_t ERROR_GROUP_NOT_AVAILABLE = 5012;
    inline constexpr int32_t ERROR_GROUP_NOT_FOUND = 5013;
    inline constexpr int32_t ERROR_GROUP_NOT_ONLINE = 5014;
    inline constexpr int32_t ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 5015;
    inline constexpr int32_t ERROR_HOST_NODE_NOT_GROUP_OWNER = 5016;
    inline constexpr int32_t ERROR_RESMON_CREATE_FAILED = 5017;
    inline constexpr int32_t ERROR_RESMON_ONLINE_FAILED = 5018;
    inline constexpr int32_t ERROR_RESOURCE_ONLINE = 5019;
    inline constexpr int32_t ERROR_QUORUM_RESOURCE = 5020;
    inline constexpr int32_t ERROR_NOT_QUORUM_CAPABLE = 5021;
    inline constexpr int32_t ERROR_CLUSTER_SHUTTING_DOWN = 5022;
    inline constexpr int32_t ERROR_INVALID_STATE = 5023;
    inline constexpr int32_t ERROR_RESOURCE_PROPERTIES_STORED = 5024;
    inline constexpr int32_t ERROR_NOT_QUORUM_CLASS = 5025;
    inline constexpr int32_t ERROR_CORE_RESOURCE = 5026;
    inline constexpr int32_t ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 5027;
    inline constexpr int32_t ERROR_QUORUMLOG_OPEN_FAILED = 5028;
    inline constexpr int32_t ERROR_CLUSTERLOG_CORRUPT = 5029;
    inline constexpr int32_t ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 5030;
    inline constexpr int32_t ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 5031;
    inline constexpr int32_t ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 5032;
    inline constexpr int32_t ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 5033;
    inline constexpr int32_t ERROR_QUORUM_OWNER_ALIVE = 5034;
    inline constexpr int32_t ERROR_NETWORK_NOT_AVAILABLE = 5035;
    inline constexpr int32_t ERROR_NODE_NOT_AVAILABLE = 5036;
    inline constexpr int32_t ERROR_ALL_NODES_NOT_AVAILABLE = 5037;
    inline constexpr int32_t ERROR_RESOURCE_FAILED = 5038;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_NODE = 5039;
    inline constexpr int32_t ERROR_CLUSTER_NODE_EXISTS = 5040;
    inline constexpr int32_t ERROR_CLUSTER_JOIN_IN_PROGRESS = 5041;
    inline constexpr int32_t ERROR_CLUSTER_NODE_NOT_FOUND = 5042;
    inline constexpr int32_t ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = 5043;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_EXISTS = 5044;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_NOT_FOUND = 5045;
    inline constexpr int32_t ERROR_CLUSTER_NETINTERFACE_EXISTS = 5046;
    inline constexpr int32_t ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = 5047;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_REQUEST = 5048;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = 5049;
    inline constexpr int32_t ERROR_CLUSTER_NODE_DOWN = 5050;
    inline constexpr int32_t ERROR_CLUSTER_NODE_UNREACHABLE = 5051;
    inline constexpr int32_t ERROR_CLUSTER_NODE_NOT_MEMBER = 5052;
    inline constexpr int32_t ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = 5053;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_NETWORK = 5054;
    inline constexpr int32_t ERROR_CLUSTER_NODE_UP = 5056;
    inline constexpr int32_t ERROR_CLUSTER_IPADDR_IN_USE = 5057;
    inline constexpr int32_t ERROR_CLUSTER_NODE_NOT_PAUSED = 5058;
    inline constexpr int32_t ERROR_CLUSTER_NO_SECURITY_CONTEXT = 5059;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_NOT_INTERNAL = 5060;
    inline constexpr int32_t ERROR_CLUSTER_NODE_ALREADY_UP = 5061;
    inline constexpr int32_t ERROR_CLUSTER_NODE_ALREADY_DOWN = 5062;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = 5063;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = 5064;
    inline constexpr int32_t ERROR_CLUSTER_NODE_ALREADY_MEMBER = 5065;
    inline constexpr int32_t ERROR_CLUSTER_LAST_INTERNAL_NETWORK = 5066;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = 5067;
    inline constexpr int32_t ERROR_INVALID_OPERATION_ON_QUORUM = 5068;
    inline constexpr int32_t ERROR_DEPENDENCY_NOT_ALLOWED = 5069;
    inline constexpr int32_t ERROR_CLUSTER_NODE_PAUSED = 5070;
    inline constexpr int32_t ERROR_NODE_CANT_HOST_RESOURCE = 5071;
    inline constexpr int32_t ERROR_CLUSTER_NODE_NOT_READY = 5072;
    inline constexpr int32_t ERROR_CLUSTER_NODE_SHUTTING_DOWN = 5073;
    inline constexpr int32_t ERROR_CLUSTER_JOIN_ABORTED = 5074;
    inline constexpr int32_t ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = 5075;
    inline constexpr int32_t ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = 5076;
    inline constexpr int32_t ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = 5077;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = 5078;
    inline constexpr int32_t ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = 5079;
    inline constexpr int32_t ERROR_CLUSTER_RESNAME_NOT_FOUND = 5080;
    inline constexpr int32_t ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = 5081;
    inline constexpr int32_t ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = 5082;
    inline constexpr int32_t ERROR_CLUSTER_DATABASE_SEQMISMATCH = 5083;
    inline constexpr int32_t ERROR_RESMON_INVALID_STATE = 5084;
    inline constexpr int32_t ERROR_CLUSTER_GUM_NOT_LOCKER = 5085;
    inline constexpr int32_t ERROR_QUORUM_DISK_NOT_FOUND = 5086;
    inline constexpr int32_t ERROR_DATABASE_BACKUP_CORRUPT = 5087;
    inline constexpr int32_t ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = 5088;
    inline constexpr int32_t ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = 5089;
    inline constexpr int32_t ERROR_NO_ADMIN_ACCESS_POINT = 5090;
    inline constexpr int32_t ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = 5890;
    inline constexpr int32_t ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = 5891;
    inline constexpr int32_t ERROR_CLUSTER_MEMBERSHIP_HALT = 5892;
    inline constexpr int32_t ERROR_CLUSTER_INSTANCE_ID_MISMATCH = 5893;
    inline constexpr int32_t ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = 5894;
    inline constexpr int32_t ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = 5895;
    inline constexpr int32_t ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = 5896;
    inline constexpr int32_t ERROR_CLUSTER_PARAMETER_MISMATCH = 5897;
    inline constexpr int32_t ERROR_NODE_CANNOT_BE_CLUSTERED = 5898;
    inline constexpr int32_t ERROR_CLUSTER_WRONG_OS_VERSION = 5899;
    inline constexpr int32_t ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = 5900;
    inline constexpr int32_t ERROR_CLUSCFG_ALREADY_COMMITTED = 5901;
    inline constexpr int32_t ERROR_CLUSCFG_ROLLBACK_FAILED = 5902;
    inline constexpr int32_t ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = 5903;
    inline constexpr int32_t ERROR_CLUSTER_OLD_VERSION = 5904;
    inline constexpr int32_t ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = 5905;
    inline constexpr int32_t ERROR_CLUSTER_NO_NET_ADAPTERS = 5906;
    inline constexpr int32_t ERROR_CLUSTER_POISONED = 5907;
    inline constexpr int32_t ERROR_CLUSTER_GROUP_MOVING = 5908;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_TYPE_BUSY = 5909;
    inline constexpr int32_t ERROR_RESOURCE_CALL_TIMED_OUT = 5910;
    inline constexpr int32_t ERROR_INVALID_CLUSTER_IPV6_ADDRESS = 5911;
    inline constexpr int32_t ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION = 5912;
    inline constexpr int32_t ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = 5913;
    inline constexpr int32_t ERROR_CLUSTER_PARTIAL_SEND = 5914;
    inline constexpr int32_t ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION = 5915;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_STRING_TERMINATION = 5916;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_STRING_FORMAT = 5917;
    inline constexpr int32_t ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS = 5918;
    inline constexpr int32_t ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS = 5919;
    inline constexpr int32_t ERROR_CLUSTER_NULL_DATA = 5920;
    inline constexpr int32_t ERROR_CLUSTER_PARTIAL_READ = 5921;
    inline constexpr int32_t ERROR_CLUSTER_PARTIAL_WRITE = 5922;
    inline constexpr int32_t ERROR_CLUSTER_CANT_DESERIALIZE_DATA = 5923;
    inline constexpr int32_t ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT = 5924;
    inline constexpr int32_t ERROR_CLUSTER_NO_QUORUM = 5925;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_IPV6_NETWORK = 5926;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK = 5927;
    inline constexpr int32_t ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = 5928;
    inline constexpr int32_t ERROR_DEPENDENCY_TREE_TOO_COMPLEX = 5929;
    inline constexpr int32_t ERROR_EXCEPTION_IN_RESOURCE_CALL = 5930;
    inline constexpr int32_t ERROR_CLUSTER_RHS_FAILED_INITIALIZATION = 5931;
    inline constexpr int32_t ERROR_CLUSTER_NOT_INSTALLED = 5932;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE = 5933;
    inline constexpr int32_t ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = 5934;
    inline constexpr int32_t ERROR_CLUSTER_TOO_MANY_NODES = 5935;
    inline constexpr int32_t ERROR_CLUSTER_OBJECT_ALREADY_USED = 5936;
    inline constexpr int32_t ERROR_NONCORE_GROUPS_FOUND = 5937;
    inline constexpr int32_t ERROR_FILE_SHARE_RESOURCE_CONFLICT = 5938;
    inline constexpr int32_t ERROR_CLUSTER_EVICT_INVALID_REQUEST = 5939;
    inline constexpr int32_t ERROR_CLUSTER_SINGLETON_RESOURCE = 5940;
    inline constexpr int32_t ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = 5941;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = 5942;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR = 5943;
    inline constexpr int32_t ERROR_CLUSTER_GROUP_BUSY = 5944;
    inline constexpr int32_t ERROR_CLUSTER_NOT_SHARED_VOLUME = 5945;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR = 5946;
    inline constexpr int32_t ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = 5947;
    inline constexpr int32_t ERROR_CLUSTER_USE_SHARED_VOLUMES_API = 5948;
    inline constexpr int32_t ERROR_CLUSTER_BACKUP_IN_PROGRESS = 5949;
    inline constexpr int32_t ERROR_NON_CSV_PATH = 5950;
    inline constexpr int32_t ERROR_CSV_VOLUME_NOT_LOCAL = 5951;
    inline constexpr int32_t ERROR_CLUSTER_WATCHDOG_TERMINATING = 5952;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES = 5953;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_NODE_WEIGHT = 5954;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_VETOED_CALL = 5955;
    inline constexpr int32_t ERROR_RESMON_SYSTEM_RESOURCES_LACKING = 5956;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION = 5957;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE = 5958;
    inline constexpr int32_t ERROR_CLUSTER_GROUP_QUEUED = 5959;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = 5960;
    inline constexpr int32_t ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED = 5961;
    inline constexpr int32_t ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = 5962;
    inline constexpr int32_t ERROR_CLUSTER_DISK_NOT_CONNECTED = 5963;
    inline constexpr int32_t ERROR_DISK_NOT_CSV_CAPABLE = 5964;
    inline constexpr int32_t ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE = 5965;
    inline constexpr int32_t ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = 5966;
    inline constexpr int32_t ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED = 5967;
    inline constexpr int32_t ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = 5968;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES = 5969;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE = 5970;
    inline constexpr int32_t ERROR_CLUSTER_AFFINITY_CONFLICT = 5971;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE = 5972;
    inline constexpr int32_t ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS = 5973;
    inline constexpr int32_t ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED = 5974;
    inline constexpr int32_t ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED = 5975;
    inline constexpr int32_t ERROR_CLUSTER_UPGRADE_IN_PROGRESS = 5976;
    inline constexpr int32_t ERROR_CLUSTER_UPGRADE_INCOMPLETE = 5977;
    inline constexpr int32_t ERROR_CLUSTER_NODE_IN_GRACE_PERIOD = 5978;
    inline constexpr int32_t ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT = 5979;
    inline constexpr int32_t ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER = 5980;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_NOT_MONITORED = 5981;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED = 5982;
    inline constexpr int32_t ERROR_CLUSTER_RESOURCE_IS_REPLICATED = 5983;
    inline constexpr int32_t ERROR_CLUSTER_NODE_ISOLATED = 5984;
    inline constexpr int32_t ERROR_CLUSTER_NODE_QUARANTINED = 5985;
    inline constexpr int32_t ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED = 5986;
    inline constexpr int32_t ERROR_CLUSTER_SPACE_DEGRADED = 5987;
    inline constexpr int32_t ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED = 5988;
    inline constexpr int32_t ERROR_CLUSTER_CSV_INVALID_HANDLE = 5989;
    inline constexpr int32_t ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR = 5990;
    inline constexpr int32_t ERROR_GROUPSET_NOT_AVAILABLE = 5991;
    inline constexpr int32_t ERROR_GROUPSET_NOT_FOUND = 5992;
    inline constexpr int32_t ERROR_GROUPSET_CANT_PROVIDE = 5993;
    inline constexpr int32_t ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND = 5994;
    inline constexpr int32_t ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY = 5995;
    inline constexpr int32_t ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION = 5996;
    inline constexpr int32_t ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS = 5997;
    inline constexpr int32_t ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME = 5998;
    inline constexpr int32_t ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE = 5999;
    inline constexpr int32_t ERROR_ENCRYPTION_FAILED = 6000;
    inline constexpr int32_t ERROR_DECRYPTION_FAILED = 6001;
    inline constexpr int32_t ERROR_FILE_ENCRYPTED = 6002;
    inline constexpr int32_t ERROR_NO_RECOVERY_POLICY = 6003;
    inline constexpr int32_t ERROR_NO_EFS = 6004;
    inline constexpr int32_t ERROR_WRONG_EFS = 6005;
    inline constexpr int32_t ERROR_NO_USER_KEYS = 6006;
    inline constexpr int32_t ERROR_FILE_NOT_ENCRYPTED = 6007;
    inline constexpr int32_t ERROR_NOT_EXPORT_FORMAT = 6008;
    inline constexpr int32_t ERROR_FILE_READ_ONLY = 6009;
    inline constexpr int32_t ERROR_DIR_EFS_DISALLOWED = 6010;
    inline constexpr int32_t ERROR_EFS_SERVER_NOT_TRUSTED = 6011;
    inline constexpr int32_t ERROR_BAD_RECOVERY_POLICY = 6012;
    inline constexpr int32_t ERROR_EFS_ALG_BLOB_TOO_BIG = 6013;
    inline constexpr int32_t ERROR_VOLUME_NOT_SUPPORT_EFS = 6014;
    inline constexpr int32_t ERROR_EFS_DISABLED = 6015;
    inline constexpr int32_t ERROR_EFS_VERSION_NOT_SUPPORT = 6016;
    inline constexpr int32_t ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = 6017;
    inline constexpr int32_t ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = 6018;
    inline constexpr int32_t ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = 6019;
    inline constexpr int32_t ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = 6020;
    inline constexpr int32_t ERROR_CS_ENCRYPTION_FILE_NOT_CSE = 6021;
    inline constexpr int32_t ERROR_ENCRYPTION_POLICY_DENIES_OPERATION = 6022;
    inline constexpr int32_t ERROR_WIP_ENCRYPTION_FAILED = 6023;
    inline constexpr int32_t ERROR_NO_BROWSER_SERVERS_FOUND = 6118;
    inline constexpr int32_t SCHED_E_SERVICE_NOT_LOCALSYSTEM = 6200;
    inline constexpr int32_t ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM = 6250;
    inline constexpr int32_t ERROR_LOG_SECTOR_INVALID = 6600;
    inline constexpr int32_t ERROR_LOG_SECTOR_PARITY_INVALID = 6601;
    inline constexpr int32_t ERROR_LOG_SECTOR_REMAPPED = 6602;
    inline constexpr int32_t ERROR_LOG_BLOCK_INCOMPLETE = 6603;
    inline constexpr int32_t ERROR_LOG_INVALID_RANGE = 6604;
    inline constexpr int32_t ERROR_LOG_BLOCKS_EXHAUSTED = 6605;
    inline constexpr int32_t ERROR_LOG_READ_CONTEXT_INVALID = 6606;
    inline constexpr int32_t ERROR_LOG_RESTART_INVALID = 6607;
    inline constexpr int32_t ERROR_LOG_BLOCK_VERSION = 6608;
    inline constexpr int32_t ERROR_LOG_BLOCK_INVALID = 6609;
    inline constexpr int32_t ERROR_LOG_READ_MODE_INVALID = 6610;
    inline constexpr int32_t ERROR_LOG_NO_RESTART = 6611;
    inline constexpr int32_t ERROR_LOG_METADATA_CORRUPT = 6612;
    inline constexpr int32_t ERROR_LOG_METADATA_INVALID = 6613;
    inline constexpr int32_t ERROR_LOG_METADATA_INCONSISTENT = 6614;
    inline constexpr int32_t ERROR_LOG_RESERVATION_INVALID = 6615;
    inline constexpr int32_t ERROR_LOG_CANT_DELETE = 6616;
    inline constexpr int32_t ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = 6617;
    inline constexpr int32_t ERROR_LOG_START_OF_LOG = 6618;
    inline constexpr int32_t ERROR_LOG_POLICY_ALREADY_INSTALLED = 6619;
    inline constexpr int32_t ERROR_LOG_POLICY_NOT_INSTALLED = 6620;
    inline constexpr int32_t ERROR_LOG_POLICY_INVALID = 6621;
    inline constexpr int32_t ERROR_LOG_POLICY_CONFLICT = 6622;
    inline constexpr int32_t ERROR_LOG_PINNED_ARCHIVE_TAIL = 6623;
    inline constexpr int32_t ERROR_LOG_RECORD_NONEXISTENT = 6624;
    inline constexpr int32_t ERROR_LOG_RECORDS_RESERVED_INVALID = 6625;
    inline constexpr int32_t ERROR_LOG_SPACE_RESERVED_INVALID = 6626;
    inline constexpr int32_t ERROR_LOG_TAIL_INVALID = 6627;
    inline constexpr int32_t ERROR_LOG_FULL = 6628;
    inline constexpr int32_t ERROR_COULD_NOT_RESIZE_LOG = 6629;
    inline constexpr int32_t ERROR_LOG_MULTIPLEXED = 6630;
    inline constexpr int32_t ERROR_LOG_DEDICATED = 6631;
    inline constexpr int32_t ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = 6632;
    inline constexpr int32_t ERROR_LOG_ARCHIVE_IN_PROGRESS = 6633;
    inline constexpr int32_t ERROR_LOG_EPHEMERAL = 6634;
    inline constexpr int32_t ERROR_LOG_NOT_ENOUGH_CONTAINERS = 6635;
    inline constexpr int32_t ERROR_LOG_CLIENT_ALREADY_REGISTERED = 6636;
    inline constexpr int32_t ERROR_LOG_CLIENT_NOT_REGISTERED = 6637;
    inline constexpr int32_t ERROR_LOG_FULL_HANDLER_IN_PROGRESS = 6638;
    inline constexpr int32_t ERROR_LOG_CONTAINER_READ_FAILED = 6639;
    inline constexpr int32_t ERROR_LOG_CONTAINER_WRITE_FAILED = 6640;
    inline constexpr int32_t ERROR_LOG_CONTAINER_OPEN_FAILED = 6641;
    inline constexpr int32_t ERROR_LOG_CONTAINER_STATE_INVALID = 6642;
    inline constexpr int32_t ERROR_LOG_STATE_INVALID = 6643;
    inline constexpr int32_t ERROR_LOG_PINNED = 6644;
    inline constexpr int32_t ERROR_LOG_METADATA_FLUSH_FAILED = 6645;
    inline constexpr int32_t ERROR_LOG_INCONSISTENT_SECURITY = 6646;
    inline constexpr int32_t ERROR_LOG_APPENDED_FLUSH_FAILED = 6647;
    inline constexpr int32_t ERROR_LOG_PINNED_RESERVATION = 6648;
    inline constexpr int32_t ERROR_INVALID_TRANSACTION = 6700;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_ACTIVE = 6701;
    inline constexpr int32_t ERROR_TRANSACTION_REQUEST_NOT_VALID = 6702;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_REQUESTED = 6703;
    inline constexpr int32_t ERROR_TRANSACTION_ALREADY_ABORTED = 6704;
    inline constexpr int32_t ERROR_TRANSACTION_ALREADY_COMMITTED = 6705;
    inline constexpr int32_t ERROR_TM_INITIALIZATION_FAILED = 6706;
    inline constexpr int32_t ERROR_RESOURCEMANAGER_READ_ONLY = 6707;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_JOINED = 6708;
    inline constexpr int32_t ERROR_TRANSACTION_SUPERIOR_EXISTS = 6709;
    inline constexpr int32_t ERROR_CRM_PROTOCOL_ALREADY_EXISTS = 6710;
    inline constexpr int32_t ERROR_TRANSACTION_PROPAGATION_FAILED = 6711;
    inline constexpr int32_t ERROR_CRM_PROTOCOL_NOT_FOUND = 6712;
    inline constexpr int32_t ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER = 6713;
    inline constexpr int32_t ERROR_CURRENT_TRANSACTION_NOT_VALID = 6714;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_FOUND = 6715;
    inline constexpr int32_t ERROR_RESOURCEMANAGER_NOT_FOUND = 6716;
    inline constexpr int32_t ERROR_ENLISTMENT_NOT_FOUND = 6717;
    inline constexpr int32_t ERROR_TRANSACTIONMANAGER_NOT_FOUND = 6718;
    inline constexpr int32_t ERROR_TRANSACTIONMANAGER_NOT_ONLINE = 6719;
    inline constexpr int32_t ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = 6720;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_ROOT = 6721;
    inline constexpr int32_t ERROR_TRANSACTION_OBJECT_EXPIRED = 6722;
    inline constexpr int32_t ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED = 6723;
    inline constexpr int32_t ERROR_TRANSACTION_RECORD_TOO_LONG = 6724;
    inline constexpr int32_t ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED = 6725;
    inline constexpr int32_t ERROR_TRANSACTION_INTEGRITY_VIOLATED = 6726;
    inline constexpr int32_t ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH = 6727;
    inline constexpr int32_t ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = 6728;
    inline constexpr int32_t ERROR_TRANSACTION_MUST_WRITETHROUGH = 6729;
    inline constexpr int32_t ERROR_TRANSACTION_NO_SUPERIOR = 6730;
    inline constexpr int32_t ERROR_HEURISTIC_DAMAGE_POSSIBLE = 6731;
    inline constexpr int32_t ERROR_TRANSACTIONAL_CONFLICT = 6800;
    inline constexpr int32_t ERROR_RM_NOT_ACTIVE = 6801;
    inline constexpr int32_t ERROR_RM_METADATA_CORRUPT = 6802;
    inline constexpr int32_t ERROR_DIRECTORY_NOT_RM = 6803;
    inline constexpr int32_t ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = 6805;
    inline constexpr int32_t ERROR_LOG_RESIZE_INVALID_SIZE = 6806;
    inline constexpr int32_t ERROR_OBJECT_NO_LONGER_EXISTS = 6807;
    inline constexpr int32_t ERROR_STREAM_MINIVERSION_NOT_FOUND = 6808;
    inline constexpr int32_t ERROR_STREAM_MINIVERSION_NOT_VALID = 6809;
    inline constexpr int32_t ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 6810;
    inline constexpr int32_t ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 6811;
    inline constexpr int32_t ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS = 6812;
    inline constexpr int32_t ERROR_REMOTE_FILE_VERSION_MISMATCH = 6814;
    inline constexpr int32_t ERROR_HANDLE_NO_LONGER_VALID = 6815;
    inline constexpr int32_t ERROR_NO_TXF_METADATA = 6816;
    inline constexpr int32_t ERROR_LOG_CORRUPTION_DETECTED = 6817;
    inline constexpr int32_t ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = 6818;
    inline constexpr int32_t ERROR_RM_DISCONNECTED = 6819;
    inline constexpr int32_t ERROR_ENLISTMENT_NOT_SUPERIOR = 6820;
    inline constexpr int32_t ERROR_RECOVERY_NOT_NEEDED = 6821;
    inline constexpr int32_t ERROR_RM_ALREADY_STARTED = 6822;
    inline constexpr int32_t ERROR_FILE_IDENTITY_NOT_PERSISTENT = 6823;
    inline constexpr int32_t ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 6824;
    inline constexpr int32_t ERROR_CANT_CROSS_RM_BOUNDARY = 6825;
    inline constexpr int32_t ERROR_TXF_DIR_NOT_EMPTY = 6826;
    inline constexpr int32_t ERROR_INDOUBT_TRANSACTIONS_EXIST = 6827;
    inline constexpr int32_t ERROR_TM_VOLATILE = 6828;
    inline constexpr int32_t ERROR_ROLLBACK_TIMER_EXPIRED = 6829;
    inline constexpr int32_t ERROR_TXF_ATTRIBUTE_CORRUPT = 6830;
    inline constexpr int32_t ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = 6831;
    inline constexpr int32_t ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = 6832;
    inline constexpr int32_t ERROR_LOG_GROWTH_FAILED = 6833;
    inline constexpr int32_t ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 6834;
    inline constexpr int32_t ERROR_TXF_METADATA_ALREADY_PRESENT = 6835;
    inline constexpr int32_t ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 6836;
    inline constexpr int32_t ERROR_TRANSACTION_REQUIRED_PROMOTION = 6837;
    inline constexpr int32_t ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION = 6838;
    inline constexpr int32_t ERROR_TRANSACTIONS_NOT_FROZEN = 6839;
    inline constexpr int32_t ERROR_TRANSACTION_FREEZE_IN_PROGRESS = 6840;
    inline constexpr int32_t ERROR_NOT_SNAPSHOT_VOLUME = 6841;
    inline constexpr int32_t ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = 6842;
    inline constexpr int32_t ERROR_DATA_LOST_REPAIR = 6843;
    inline constexpr int32_t ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION = 6844;
    inline constexpr int32_t ERROR_TM_IDENTITY_MISMATCH = 6845;
    inline constexpr int32_t ERROR_FLOATED_SECTION = 6846;
    inline constexpr int32_t ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = 6847;
    inline constexpr int32_t ERROR_CANNOT_ABORT_TRANSACTIONS = 6848;
    inline constexpr int32_t ERROR_BAD_CLUSTERS = 6849;
    inline constexpr int32_t ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = 6850;
    inline constexpr int32_t ERROR_VOLUME_DIRTY = 6851;
    inline constexpr int32_t ERROR_NO_LINK_TRACKING_IN_TRANSACTION = 6852;
    inline constexpr int32_t ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = 6853;
    inline constexpr int32_t ERROR_EXPIRED_HANDLE = 6854;
    inline constexpr int32_t ERROR_TRANSACTION_NOT_ENLISTED = 6855;
    inline constexpr int32_t ERROR_CTX_WINSTATION_NAME_INVALID = 7001;
    inline constexpr int32_t ERROR_CTX_INVALID_PD = 7002;
    inline constexpr int32_t ERROR_CTX_PD_NOT_FOUND = 7003;
    inline constexpr int32_t ERROR_CTX_WD_NOT_FOUND = 7004;
    inline constexpr int32_t ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 7005;
    inline constexpr int32_t ERROR_CTX_SERVICE_NAME_COLLISION = 7006;
    inline constexpr int32_t ERROR_CTX_CLOSE_PENDING = 7007;
    inline constexpr int32_t ERROR_CTX_NO_OUTBUF = 7008;
    inline constexpr int32_t ERROR_CTX_MODEM_INF_NOT_FOUND = 7009;
    inline constexpr int32_t ERROR_CTX_INVALID_MODEMNAME = 7010;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_ERROR = 7011;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 7012;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 7013;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 7014;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_BUSY = 7015;
    inline constexpr int32_t ERROR_CTX_MODEM_RESPONSE_VOICE = 7016;
    inline constexpr int32_t ERROR_CTX_TD_ERROR = 7017;
    inline constexpr int32_t ERROR_CTX_WINSTATION_NOT_FOUND = 7022;
    inline constexpr int32_t ERROR_CTX_WINSTATION_ALREADY_EXISTS = 7023;
    inline constexpr int32_t ERROR_CTX_WINSTATION_BUSY = 7024;
    inline constexpr int32_t ERROR_CTX_BAD_VIDEO_MODE = 7025;
    inline constexpr int32_t ERROR_CTX_GRAPHICS_INVALID = 7035;
    inline constexpr int32_t ERROR_CTX_LOGON_DISABLED = 7037;
    inline constexpr int32_t ERROR_CTX_NOT_CONSOLE = 7038;
    inline constexpr int32_t ERROR_CTX_CLIENT_QUERY_TIMEOUT = 7040;
    inline constexpr int32_t ERROR_CTX_CONSOLE_DISCONNECT = 7041;
    inline constexpr int32_t ERROR_CTX_CONSOLE_CONNECT = 7042;
    inline constexpr int32_t ERROR_CTX_SHADOW_DENIED = 7044;
    inline constexpr int32_t ERROR_CTX_WINSTATION_ACCESS_DENIED = 7045;
    inline constexpr int32_t ERROR_CTX_INVALID_WD = 7049;
    inline constexpr int32_t ERROR_CTX_SHADOW_INVALID = 7050;
    inline constexpr int32_t ERROR_CTX_SHADOW_DISABLED = 7051;
    inline constexpr int32_t ERROR_CTX_CLIENT_LICENSE_IN_USE = 7052;
    inline constexpr int32_t ERROR_CTX_CLIENT_LICENSE_NOT_SET = 7053;
    inline constexpr int32_t ERROR_CTX_LICENSE_NOT_AVAILABLE = 7054;
    inline constexpr int32_t ERROR_CTX_LICENSE_CLIENT_INVALID = 7055;
    inline constexpr int32_t ERROR_CTX_LICENSE_EXPIRED = 7056;
    inline constexpr int32_t ERROR_CTX_SHADOW_NOT_RUNNING = 7057;
    inline constexpr int32_t ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 7058;
    inline constexpr int32_t ERROR_ACTIVATION_COUNT_EXCEEDED = 7059;
    inline constexpr int32_t ERROR_CTX_WINSTATIONS_DISABLED = 7060;
    inline constexpr int32_t ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = 7061;
    inline constexpr int32_t ERROR_CTX_SESSION_IN_USE = 7062;
    inline constexpr int32_t ERROR_CTX_NO_FORCE_LOGOFF = 7063;
    inline constexpr int32_t ERROR_CTX_ACCOUNT_RESTRICTION = 7064;
    inline constexpr int32_t ERROR_RDP_PROTOCOL_ERROR = 7065;
    inline constexpr int32_t ERROR_CTX_CDM_CONNECT = 7066;
    inline constexpr int32_t ERROR_CTX_CDM_DISCONNECT = 7067;
    inline constexpr int32_t ERROR_CTX_SECURITY_LAYER_ERROR = 7068;
    inline constexpr int32_t ERROR_TS_INCOMPATIBLE_SESSIONS = 7069;
    inline constexpr int32_t ERROR_TS_VIDEO_SUBSYSTEM_ERROR = 7070;
    inline constexpr int32_t FRS_ERR_INVALID_API_SEQUENCE = 8001;
    inline constexpr int32_t FRS_ERR_STARTING_SERVICE = 8002;
    inline constexpr int32_t FRS_ERR_STOPPING_SERVICE = 8003;
    inline constexpr int32_t FRS_ERR_INTERNAL_API = 8004;
    inline constexpr int32_t FRS_ERR_INTERNAL = 8005;
    inline constexpr int32_t FRS_ERR_SERVICE_COMM = 8006;
    inline constexpr int32_t FRS_ERR_INSUFFICIENT_PRIV = 8007;
    inline constexpr int32_t FRS_ERR_AUTHENTICATION = 8008;
    inline constexpr int32_t FRS_ERR_PARENT_INSUFFICIENT_PRIV = 8009;
    inline constexpr int32_t FRS_ERR_PARENT_AUTHENTICATION = 8010;
    inline constexpr int32_t FRS_ERR_CHILD_TO_PARENT_COMM = 8011;
    inline constexpr int32_t FRS_ERR_PARENT_TO_CHILD_COMM = 8012;
    inline constexpr int32_t FRS_ERR_SYSVOL_POPULATE = 8013;
    inline constexpr int32_t FRS_ERR_SYSVOL_POPULATE_TIMEOUT = 8014;
    inline constexpr int32_t FRS_ERR_SYSVOL_IS_BUSY = 8015;
    inline constexpr int32_t FRS_ERR_SYSVOL_DEMOTE = 8016;
    inline constexpr int32_t FRS_ERR_INVALID_SERVICE_PARAMETER = 8017;
    inline constexpr int32_t ERROR_DS_NOT_INSTALLED = 8200;
    inline constexpr int32_t ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 8201;
    inline constexpr int32_t ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 8202;
    inline constexpr int32_t ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 8203;
    inline constexpr int32_t ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 8204;
    inline constexpr int32_t ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 8205;
    inline constexpr int32_t ERROR_DS_BUSY = 8206;
    inline constexpr int32_t ERROR_DS_UNAVAILABLE = 8207;
    inline constexpr int32_t ERROR_DS_NO_RIDS_ALLOCATED = 8208;
    inline constexpr int32_t ERROR_DS_NO_MORE_RIDS = 8209;
    inline constexpr int32_t ERROR_DS_INCORRECT_ROLE_OWNER = 8210;
    inline constexpr int32_t ERROR_DS_RIDMGR_INIT_ERROR = 8211;
    inline constexpr int32_t ERROR_DS_OBJ_CLASS_VIOLATION = 8212;
    inline constexpr int32_t ERROR_DS_CANT_ON_NON_LEAF = 8213;
    inline constexpr int32_t ERROR_DS_CANT_ON_RDN = 8214;
    inline constexpr int32_t ERROR_DS_CANT_MOD_OBJ_CLASS = 8215;
    inline constexpr int32_t ERROR_DS_CROSS_DOM_MOVE_ERROR = 8216;
    inline constexpr int32_t ERROR_DS_GC_NOT_AVAILABLE = 8217;
    inline constexpr int32_t ERROR_SHARED_POLICY = 8218;
    inline constexpr int32_t ERROR_POLICY_OBJECT_NOT_FOUND = 8219;
    inline constexpr int32_t ERROR_POLICY_ONLY_IN_DS = 8220;
    inline constexpr int32_t ERROR_PROMOTION_ACTIVE = 8221;
    inline constexpr int32_t ERROR_NO_PROMOTION_ACTIVE = 8222;
    inline constexpr int32_t ERROR_DS_OPERATIONS_ERROR = 8224;
    inline constexpr int32_t ERROR_DS_PROTOCOL_ERROR = 8225;
    inline constexpr int32_t ERROR_DS_TIMELIMIT_EXCEEDED = 8226;
    inline constexpr int32_t ERROR_DS_SIZELIMIT_EXCEEDED = 8227;
    inline constexpr int32_t ERROR_DS_ADMIN_LIMIT_EXCEEDED = 8228;
    inline constexpr int32_t ERROR_DS_COMPARE_FALSE = 8229;
    inline constexpr int32_t ERROR_DS_COMPARE_TRUE = 8230;
    inline constexpr int32_t ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 8231;
    inline constexpr int32_t ERROR_DS_STRONG_AUTH_REQUIRED = 8232;
    inline constexpr int32_t ERROR_DS_INAPPROPRIATE_AUTH = 8233;
    inline constexpr int32_t ERROR_DS_AUTH_UNKNOWN = 8234;
    inline constexpr int32_t ERROR_DS_REFERRAL = 8235;
    inline constexpr int32_t ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 8236;
    inline constexpr int32_t ERROR_DS_CONFIDENTIALITY_REQUIRED = 8237;
    inline constexpr int32_t ERROR_DS_INAPPROPRIATE_MATCHING = 8238;
    inline constexpr int32_t ERROR_DS_CONSTRAINT_VIOLATION = 8239;
    inline constexpr int32_t ERROR_DS_NO_SUCH_OBJECT = 8240;
    inline constexpr int32_t ERROR_DS_ALIAS_PROBLEM = 8241;
    inline constexpr int32_t ERROR_DS_INVALID_DN_SYNTAX = 8242;
    inline constexpr int32_t ERROR_DS_IS_LEAF = 8243;
    inline constexpr int32_t ERROR_DS_ALIAS_DEREF_PROBLEM = 8244;
    inline constexpr int32_t ERROR_DS_UNWILLING_TO_PERFORM = 8245;
    inline constexpr int32_t ERROR_DS_LOOP_DETECT = 8246;
    inline constexpr int32_t ERROR_DS_NAMING_VIOLATION = 8247;
    inline constexpr int32_t ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 8248;
    inline constexpr int32_t ERROR_DS_AFFECTS_MULTIPLE_DSAS = 8249;
    inline constexpr int32_t ERROR_DS_SERVER_DOWN = 8250;
    inline constexpr int32_t ERROR_DS_LOCAL_ERROR = 8251;
    inline constexpr int32_t ERROR_DS_ENCODING_ERROR = 8252;
    inline constexpr int32_t ERROR_DS_DECODING_ERROR = 8253;
    inline constexpr int32_t ERROR_DS_FILTER_UNKNOWN = 8254;
    inline constexpr int32_t ERROR_DS_PARAM_ERROR = 8255;
    inline constexpr int32_t ERROR_DS_NOT_SUPPORTED = 8256;
    inline constexpr int32_t ERROR_DS_NO_RESULTS_RETURNED = 8257;
    inline constexpr int32_t ERROR_DS_CONTROL_NOT_FOUND = 8258;
    inline constexpr int32_t ERROR_DS_CLIENT_LOOP = 8259;
    inline constexpr int32_t ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 8260;
    inline constexpr int32_t ERROR_DS_SORT_CONTROL_MISSING = 8261;
    inline constexpr int32_t ERROR_DS_OFFSET_RANGE_ERROR = 8262;
    inline constexpr int32_t ERROR_DS_RIDMGR_DISABLED = 8263;
    inline constexpr int32_t ERROR_DS_ROOT_MUST_BE_NC = 8301;
    inline constexpr int32_t ERROR_DS_ADD_REPLICA_INHIBITED = 8302;
    inline constexpr int32_t ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 8303;
    inline constexpr int32_t ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 8304;
    inline constexpr int32_t ERROR_DS_OBJ_STRING_NAME_EXISTS = 8305;
    inline constexpr int32_t ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 8306;
    inline constexpr int32_t ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 8307;
    inline constexpr int32_t ERROR_DS_NO_REQUESTED_ATTS_FOUND = 8308;
    inline constexpr int32_t ERROR_DS_USER_BUFFER_TO_SMALL = 8309;
    inline constexpr int32_t ERROR_DS_ATT_IS_NOT_ON_OBJ = 8310;
    inline constexpr int32_t ERROR_DS_ILLEGAL_MOD_OPERATION = 8311;
    inline constexpr int32_t ERROR_DS_OBJ_TOO_LARGE = 8312;
    inline constexpr int32_t ERROR_DS_BAD_INSTANCE_TYPE = 8313;
    inline constexpr int32_t ERROR_DS_MASTERDSA_REQUIRED = 8314;
    inline constexpr int32_t ERROR_DS_OBJECT_CLASS_REQUIRED = 8315;
    inline constexpr int32_t ERROR_DS_MISSING_REQUIRED_ATT = 8316;
    inline constexpr int32_t ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 8317;
    inline constexpr int32_t ERROR_DS_ATT_ALREADY_EXISTS = 8318;
    inline constexpr int32_t ERROR_DS_CANT_ADD_ATT_VALUES = 8320;
    inline constexpr int32_t ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321;
    inline constexpr int32_t ERROR_DS_RANGE_CONSTRAINT = 8322;
    inline constexpr int32_t ERROR_DS_ATT_VAL_ALREADY_EXISTS = 8323;
    inline constexpr int32_t ERROR_DS_CANT_REM_MISSING_ATT = 8324;
    inline constexpr int32_t ERROR_DS_CANT_REM_MISSING_ATT_VAL = 8325;
    inline constexpr int32_t ERROR_DS_ROOT_CANT_BE_SUBREF = 8326;
    inline constexpr int32_t ERROR_DS_NO_CHAINING = 8327;
    inline constexpr int32_t ERROR_DS_NO_CHAINED_EVAL = 8328;
    inline constexpr int32_t ERROR_DS_NO_PARENT_OBJECT = 8329;
    inline constexpr int32_t ERROR_DS_PARENT_IS_AN_ALIAS = 8330;
    inline constexpr int32_t ERROR_DS_CANT_MIX_MASTER_AND_REPS = 8331;
    inline constexpr int32_t ERROR_DS_CHILDREN_EXIST = 8332;
    inline constexpr int32_t ERROR_DS_OBJ_NOT_FOUND = 8333;
    inline constexpr int32_t ERROR_DS_ALIASED_OBJ_MISSING = 8334;
    inline constexpr int32_t ERROR_DS_BAD_NAME_SYNTAX = 8335;
    inline constexpr int32_t ERROR_DS_ALIAS_POINTS_TO_ALIAS = 8336;
    inline constexpr int32_t ERROR_DS_CANT_DEREF_ALIAS = 8337;
    inline constexpr int32_t ERROR_DS_OUT_OF_SCOPE = 8338;
    inline constexpr int32_t ERROR_DS_OBJECT_BEING_REMOVED = 8339;
    inline constexpr int32_t ERROR_DS_CANT_DELETE_DSA_OBJ = 8340;
    inline constexpr int32_t ERROR_DS_GENERIC_ERROR = 8341;
    inline constexpr int32_t ERROR_DS_DSA_MUST_BE_INT_MASTER = 8342;
    inline constexpr int32_t ERROR_DS_CLASS_NOT_DSA = 8343;
    inline constexpr int32_t ERROR_DS_INSUFF_ACCESS_RIGHTS = 8344;
    inline constexpr int32_t ERROR_DS_ILLEGAL_SUPERIOR = 8345;
    inline constexpr int32_t ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 8346;
    inline constexpr int32_t ERROR_DS_NAME_TOO_MANY_PARTS = 8347;
    inline constexpr int32_t ERROR_DS_NAME_TOO_LONG = 8348;
    inline constexpr int32_t ERROR_DS_NAME_VALUE_TOO_LONG = 8349;
    inline constexpr int32_t ERROR_DS_NAME_UNPARSEABLE = 8350;
    inline constexpr int32_t ERROR_DS_NAME_TYPE_UNKNOWN = 8351;
    inline constexpr int32_t ERROR_DS_NOT_AN_OBJECT = 8352;
    inline constexpr int32_t ERROR_DS_SEC_DESC_TOO_SHORT = 8353;
    inline constexpr int32_t ERROR_DS_SEC_DESC_INVALID = 8354;
    inline constexpr int32_t ERROR_DS_NO_DELETED_NAME = 8355;
    inline constexpr int32_t ERROR_DS_SUBREF_MUST_HAVE_PARENT = 8356;
    inline constexpr int32_t ERROR_DS_NCNAME_MUST_BE_NC = 8357;
    inline constexpr int32_t ERROR_DS_CANT_ADD_SYSTEM_ONLY = 8358;
    inline constexpr int32_t ERROR_DS_CLASS_MUST_BE_CONCRETE = 8359;
    inline constexpr int32_t ERROR_DS_INVALID_DMD = 8360;
    inline constexpr int32_t ERROR_DS_OBJ_GUID_EXISTS = 8361;
    inline constexpr int32_t ERROR_DS_NOT_ON_BACKLINK = 8362;
    inline constexpr int32_t ERROR_DS_NO_CROSSREF_FOR_NC = 8363;
    inline constexpr int32_t ERROR_DS_SHUTTING_DOWN = 8364;
    inline constexpr int32_t ERROR_DS_UNKNOWN_OPERATION = 8365;
    inline constexpr int32_t ERROR_DS_INVALID_ROLE_OWNER = 8366;
    inline constexpr int32_t ERROR_DS_COULDNT_CONTACT_FSMO = 8367;
    inline constexpr int32_t ERROR_DS_CROSS_NC_DN_RENAME = 8368;
    inline constexpr int32_t ERROR_DS_CANT_MOD_SYSTEM_ONLY = 8369;
    inline constexpr int32_t ERROR_DS_REPLICATOR_ONLY = 8370;
    inline constexpr int32_t ERROR_DS_OBJ_CLASS_NOT_DEFINED = 8371;
    inline constexpr int32_t ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 8372;
    inline constexpr int32_t ERROR_DS_NAME_REFERENCE_INVALID = 8373;
    inline constexpr int32_t ERROR_DS_CROSS_REF_EXISTS = 8374;
    inline constexpr int32_t ERROR_DS_CANT_DEL_MASTER_CROSSREF = 8375;
    inline constexpr int32_t ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 8376;
    inline constexpr int32_t ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 8377;
    inline constexpr int32_t ERROR_DS_DUP_RDN = 8378;
    inline constexpr int32_t ERROR_DS_DUP_OID = 8379;
    inline constexpr int32_t ERROR_DS_DUP_MAPI_ID = 8380;
    inline constexpr int32_t ERROR_DS_DUP_SCHEMA_ID_GUID = 8381;
    inline constexpr int32_t ERROR_DS_DUP_LDAP_DISPLAY_NAME = 8382;
    inline constexpr int32_t ERROR_DS_SEMANTIC_ATT_TEST = 8383;
    inline constexpr int32_t ERROR_DS_SYNTAX_MISMATCH = 8384;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_MUST_HAVE = 8385;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_MAY_HAVE = 8386;
    inline constexpr int32_t ERROR_DS_NONEXISTENT_MAY_HAVE = 8387;
    inline constexpr int32_t ERROR_DS_NONEXISTENT_MUST_HAVE = 8388;
    inline constexpr int32_t ERROR_DS_AUX_CLS_TEST_FAIL = 8389;
    inline constexpr int32_t ERROR_DS_NONEXISTENT_POSS_SUP = 8390;
    inline constexpr int32_t ERROR_DS_SUB_CLS_TEST_FAIL = 8391;
    inline constexpr int32_t ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 8392;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_AUX_CLS = 8393;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_SUB_CLS = 8394;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_POSS_SUP = 8395;
    inline constexpr int32_t ERROR_DS_RECALCSCHEMA_FAILED = 8396;
    inline constexpr int32_t ERROR_DS_TREE_DELETE_NOT_FINISHED = 8397;
    inline constexpr int32_t ERROR_DS_CANT_DELETE = 8398;
    inline constexpr int32_t ERROR_DS_ATT_SCHEMA_REQ_ID = 8399;
    inline constexpr int32_t ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 8400;
    inline constexpr int32_t ERROR_DS_CANT_CACHE_ATT = 8401;
    inline constexpr int32_t ERROR_DS_CANT_CACHE_CLASS = 8402;
    inline constexpr int32_t ERROR_DS_CANT_REMOVE_ATT_CACHE = 8403;
    inline constexpr int32_t ERROR_DS_CANT_REMOVE_CLASS_CACHE = 8404;
    inline constexpr int32_t ERROR_DS_CANT_RETRIEVE_DN = 8405;
    inline constexpr int32_t ERROR_DS_MISSING_SUPREF = 8406;
    inline constexpr int32_t ERROR_DS_CANT_RETRIEVE_INSTANCE = 8407;
    inline constexpr int32_t ERROR_DS_CODE_INCONSISTENCY = 8408;
    inline constexpr int32_t ERROR_DS_DATABASE_ERROR = 8409;
    inline constexpr int32_t ERROR_DS_GOVERNSID_MISSING = 8410;
    inline constexpr int32_t ERROR_DS_MISSING_EXPECTED_ATT = 8411;
    inline constexpr int32_t ERROR_DS_NCNAME_MISSING_CR_REF = 8412;
    inline constexpr int32_t ERROR_DS_SECURITY_CHECKING_ERROR = 8413;
    inline constexpr int32_t ERROR_DS_SCHEMA_NOT_LOADED = 8414;
    inline constexpr int32_t ERROR_DS_SCHEMA_ALLOC_FAILED = 8415;
    inline constexpr int32_t ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 8416;
    inline constexpr int32_t ERROR_DS_GCVERIFY_ERROR = 8417;
    inline constexpr int32_t ERROR_DS_DRA_SCHEMA_MISMATCH = 8418;
    inline constexpr int32_t ERROR_DS_CANT_FIND_DSA_OBJ = 8419;
    inline constexpr int32_t ERROR_DS_CANT_FIND_EXPECTED_NC = 8420;
    inline constexpr int32_t ERROR_DS_CANT_FIND_NC_IN_CACHE = 8421;
    inline constexpr int32_t ERROR_DS_CANT_RETRIEVE_CHILD = 8422;
    inline constexpr int32_t ERROR_DS_SECURITY_ILLEGAL_MODIFY = 8423;
    inline constexpr int32_t ERROR_DS_CANT_REPLACE_HIDDEN_REC = 8424;
    inline constexpr int32_t ERROR_DS_BAD_HIERARCHY_FILE = 8425;
    inline constexpr int32_t ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 8426;
    inline constexpr int32_t ERROR_DS_CONFIG_PARAM_MISSING = 8427;
    inline constexpr int32_t ERROR_DS_COUNTING_AB_INDICES_FAILED = 8428;
    inline constexpr int32_t ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 8429;
    inline constexpr int32_t ERROR_DS_INTERNAL_FAILURE = 8430;
    inline constexpr int32_t ERROR_DS_UNKNOWN_ERROR = 8431;
    inline constexpr int32_t ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 8432;
    inline constexpr int32_t ERROR_DS_REFUSING_FSMO_ROLES = 8433;
    inline constexpr int32_t ERROR_DS_MISSING_FSMO_SETTINGS = 8434;
    inline constexpr int32_t ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 8435;
    inline constexpr int32_t ERROR_DS_DRA_GENERIC = 8436;
    inline constexpr int32_t ERROR_DS_DRA_INVALID_PARAMETER = 8437;
    inline constexpr int32_t ERROR_DS_DRA_BUSY = 8438;
    inline constexpr int32_t ERROR_DS_DRA_BAD_DN = 8439;
    inline constexpr int32_t ERROR_DS_DRA_BAD_NC = 8440;
    inline constexpr int32_t ERROR_DS_DRA_DN_EXISTS = 8441;
    inline constexpr int32_t ERROR_DS_DRA_INTERNAL_ERROR = 8442;
    inline constexpr int32_t ERROR_DS_DRA_INCONSISTENT_DIT = 8443;
    inline constexpr int32_t ERROR_DS_DRA_CONNECTION_FAILED = 8444;
    inline constexpr int32_t ERROR_DS_DRA_BAD_INSTANCE_TYPE = 8445;
    inline constexpr int32_t ERROR_DS_DRA_OUT_OF_MEM = 8446;
    inline constexpr int32_t ERROR_DS_DRA_MAIL_PROBLEM = 8447;
    inline constexpr int32_t ERROR_DS_DRA_REF_ALREADY_EXISTS = 8448;
    inline constexpr int32_t ERROR_DS_DRA_REF_NOT_FOUND = 8449;
    inline constexpr int32_t ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 8450;
    inline constexpr int32_t ERROR_DS_DRA_DB_ERROR = 8451;
    inline constexpr int32_t ERROR_DS_DRA_NO_REPLICA = 8452;
    inline constexpr int32_t ERROR_DS_DRA_ACCESS_DENIED = 8453;
    inline constexpr int32_t ERROR_DS_DRA_NOT_SUPPORTED = 8454;
    inline constexpr int32_t ERROR_DS_DRA_RPC_CANCELLED = 8455;
    inline constexpr int32_t ERROR_DS_DRA_SOURCE_DISABLED = 8456;
    inline constexpr int32_t ERROR_DS_DRA_SINK_DISABLED = 8457;
    inline constexpr int32_t ERROR_DS_DRA_NAME_COLLISION = 8458;
    inline constexpr int32_t ERROR_DS_DRA_SOURCE_REINSTALLED = 8459;
    inline constexpr int32_t ERROR_DS_DRA_MISSING_PARENT = 8460;
    inline constexpr int32_t ERROR_DS_DRA_PREEMPTED = 8461;
    inline constexpr int32_t ERROR_DS_DRA_ABANDON_SYNC = 8462;
    inline constexpr int32_t ERROR_DS_DRA_SHUTDOWN = 8463;
    inline constexpr int32_t ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 8464;
    inline constexpr int32_t ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 8465;
    inline constexpr int32_t ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 8466;
    inline constexpr int32_t ERROR_DS_INSTALL_SCHEMA_MISMATCH = 8467;
    inline constexpr int32_t ERROR_DS_DUP_LINK_ID = 8468;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_RESOLVING = 8469;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_NOT_FOUND = 8470;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_NOT_UNIQUE = 8471;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_NO_MAPPING = 8472;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 8473;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 8474;
    inline constexpr int32_t ERROR_DS_CONSTRUCTED_ATT_MOD = 8475;
    inline constexpr int32_t ERROR_DS_WRONG_OM_OBJ_CLASS = 8476;
    inline constexpr int32_t ERROR_DS_DRA_REPL_PENDING = 8477;
    inline constexpr int32_t ERROR_DS_DS_REQUIRED = 8478;
    inline constexpr int32_t ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 8479;
    inline constexpr int32_t ERROR_DS_NON_BASE_SEARCH = 8480;
    inline constexpr int32_t ERROR_DS_CANT_RETRIEVE_ATTS = 8481;
    inline constexpr int32_t ERROR_DS_BACKLINK_WITHOUT_LINK = 8482;
    inline constexpr int32_t ERROR_DS_EPOCH_MISMATCH = 8483;
    inline constexpr int32_t ERROR_DS_SRC_NAME_MISMATCH = 8484;
    inline constexpr int32_t ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 8485;
    inline constexpr int32_t ERROR_DS_DST_NC_MISMATCH = 8486;
    inline constexpr int32_t ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 8487;
    inline constexpr int32_t ERROR_DS_SRC_GUID_MISMATCH = 8488;
    inline constexpr int32_t ERROR_DS_CANT_MOVE_DELETED_OBJECT = 8489;
    inline constexpr int32_t ERROR_DS_PDC_OPERATION_IN_PROGRESS = 8490;
    inline constexpr int32_t ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 8491;
    inline constexpr int32_t ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 8492;
    inline constexpr int32_t ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 8493;
    inline constexpr int32_t ERROR_DS_NC_MUST_HAVE_NC_PARENT = 8494;
    inline constexpr int32_t ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 8495;
    inline constexpr int32_t ERROR_DS_DST_DOMAIN_NOT_NATIVE = 8496;
    inline constexpr int32_t ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 8497;
    inline constexpr int32_t ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 8498;
    inline constexpr int32_t ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 8499;
    inline constexpr int32_t ERROR_DS_INVALID_SEARCH_FLAG = 8500;
    inline constexpr int32_t ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 8501;
    inline constexpr int32_t ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 8502;
    inline constexpr int32_t ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 8503;
    inline constexpr int32_t ERROR_DS_SAM_INIT_FAILURE = 8504;
    inline constexpr int32_t ERROR_DS_SENSITIVE_GROUP_VIOLATION = 8505;
    inline constexpr int32_t ERROR_DS_CANT_MOD_PRIMARYGROUPID = 8506;
    inline constexpr int32_t ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 8507;
    inline constexpr int32_t ERROR_DS_NONSAFE_SCHEMA_CHANGE = 8508;
    inline constexpr int32_t ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 8509;
    inline constexpr int32_t ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 8510;
    inline constexpr int32_t ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 8511;
    inline constexpr int32_t ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 8512;
    inline constexpr int32_t ERROR_DS_INVALID_GROUP_TYPE = 8513;
    inline constexpr int32_t ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 8514;
    inline constexpr int32_t ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 8515;
    inline constexpr int32_t ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 8516;
    inline constexpr int32_t ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 8517;
    inline constexpr int32_t ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 8518;
    inline constexpr int32_t ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 8519;
    inline constexpr int32_t ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 8520;
    inline constexpr int32_t ERROR_DS_HAVE_PRIMARY_MEMBERS = 8521;
    inline constexpr int32_t ERROR_DS_STRING_SD_CONVERSION_FAILED = 8522;
    inline constexpr int32_t ERROR_DS_NAMING_MASTER_GC = 8523;
    inline constexpr int32_t ERROR_DS_DNS_LOOKUP_FAILURE = 8524;
    inline constexpr int32_t ERROR_DS_COULDNT_UPDATE_SPNS = 8525;
    inline constexpr int32_t ERROR_DS_CANT_RETRIEVE_SD = 8526;
    inline constexpr int32_t ERROR_DS_KEY_NOT_UNIQUE = 8527;
    inline constexpr int32_t ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 8528;
    inline constexpr int32_t ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 8529;
    inline constexpr int32_t ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 8530;
    inline constexpr int32_t ERROR_DS_CANT_START = 8531;
    inline constexpr int32_t ERROR_DS_INIT_FAILURE = 8532;
    inline constexpr int32_t ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 8533;
    inline constexpr int32_t ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 8534;
    inline constexpr int32_t ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 8535;
    inline constexpr int32_t ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 8536;
    inline constexpr int32_t ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 8537;
    inline constexpr int32_t ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 8538;
    inline constexpr int32_t ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 8539;
    inline constexpr int32_t ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 8540;
    inline constexpr int32_t ERROR_SAM_INIT_FAILURE = 8541;
    inline constexpr int32_t ERROR_DS_DRA_SCHEMA_INFO_SHIP = 8542;
    inline constexpr int32_t ERROR_DS_DRA_SCHEMA_CONFLICT = 8543;
    inline constexpr int32_t ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = 8544;
    inline constexpr int32_t ERROR_DS_DRA_OBJ_NC_MISMATCH = 8545;
    inline constexpr int32_t ERROR_DS_NC_STILL_HAS_DSAS = 8546;
    inline constexpr int32_t ERROR_DS_GC_REQUIRED = 8547;
    inline constexpr int32_t ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 8548;
    inline constexpr int32_t ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 8549;
    inline constexpr int32_t ERROR_DS_CANT_ADD_TO_GC = 8550;
    inline constexpr int32_t ERROR_DS_NO_CHECKPOINT_WITH_PDC = 8551;
    inline constexpr int32_t ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 8552;
    inline constexpr int32_t ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 8553;
    inline constexpr int32_t ERROR_DS_INVALID_NAME_FOR_SPN = 8554;
    inline constexpr int32_t ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 8555;
    inline constexpr int32_t ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 8556;
    inline constexpr int32_t ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 8557;
    inline constexpr int32_t ERROR_DS_MUST_BE_RUN_ON_DST_DC = 8558;
    inline constexpr int32_t ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 8559;
    inline constexpr int32_t ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 8560;
    inline constexpr int32_t ERROR_DS_INIT_FAILURE_CONSOLE = 8561;
    inline constexpr int32_t ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 8562;
    inline constexpr int32_t ERROR_DS_FOREST_VERSION_TOO_HIGH = 8563;
    inline constexpr int32_t ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 8564;
    inline constexpr int32_t ERROR_DS_FOREST_VERSION_TOO_LOW = 8565;
    inline constexpr int32_t ERROR_DS_DOMAIN_VERSION_TOO_LOW = 8566;
    inline constexpr int32_t ERROR_DS_INCOMPATIBLE_VERSION = 8567;
    inline constexpr int32_t ERROR_DS_LOW_DSA_VERSION = 8568;
    inline constexpr int32_t ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 8569;
    inline constexpr int32_t ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 8570;
    inline constexpr int32_t ERROR_DS_NAME_NOT_UNIQUE = 8571;
    inline constexpr int32_t ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 8572;
    inline constexpr int32_t ERROR_DS_OUT_OF_VERSION_STORE = 8573;
    inline constexpr int32_t ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 8574;
    inline constexpr int32_t ERROR_DS_NO_REF_DOMAIN = 8575;
    inline constexpr int32_t ERROR_DS_RESERVED_LINK_ID = 8576;
    inline constexpr int32_t ERROR_DS_LINK_ID_NOT_AVAILABLE = 8577;
    inline constexpr int32_t ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 8578;
    inline constexpr int32_t ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 8579;
    inline constexpr int32_t ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 8580;
    inline constexpr int32_t ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 8581;
    inline constexpr int32_t ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 8582;
    inline constexpr int32_t ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 8583;
    inline constexpr int32_t ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 8584;
    inline constexpr int32_t ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 8585;
    inline constexpr int32_t ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 8586;
    inline constexpr int32_t ERROR_DS_THREAD_LIMIT_EXCEEDED = 8587;
    inline constexpr int32_t ERROR_DS_NOT_CLOSEST = 8588;
    inline constexpr int32_t ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 8589;
    inline constexpr int32_t ERROR_DS_SINGLE_USER_MODE_FAILED = 8590;
    inline constexpr int32_t ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 8591;
    inline constexpr int32_t ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 8592;
    inline constexpr int32_t ERROR_DS_DIFFERENT_REPL_EPOCHS = 8593;
    inline constexpr int32_t ERROR_DS_DRS_EXTENSIONS_CHANGED = 8594;
    inline constexpr int32_t ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 8595;
    inline constexpr int32_t ERROR_DS_NO_MSDS_INTID = 8596;
    inline constexpr int32_t ERROR_DS_DUP_MSDS_INTID = 8597;
    inline constexpr int32_t ERROR_DS_EXISTS_IN_RDNATTID = 8598;
    inline constexpr int32_t ERROR_DS_AUTHORIZATION_FAILED = 8599;
    inline constexpr int32_t ERROR_DS_INVALID_SCRIPT = 8600;
    inline constexpr int32_t ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 8601;
    inline constexpr int32_t ERROR_DS_CROSS_REF_BUSY = 8602;
    inline constexpr int32_t ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 8603;
    inline constexpr int32_t ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 8604;
    inline constexpr int32_t ERROR_DS_DUPLICATE_ID_FOUND = 8605;
    inline constexpr int32_t ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 8606;
    inline constexpr int32_t ERROR_DS_GROUP_CONVERSION_ERROR = 8607;
    inline constexpr int32_t ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 8608;
    inline constexpr int32_t ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 8609;
    inline constexpr int32_t ERROR_DS_ROLE_NOT_VERIFIED = 8610;
    inline constexpr int32_t ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 8611;
    inline constexpr int32_t ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 8612;
    inline constexpr int32_t ERROR_DS_EXISTING_AD_CHILD_NC = 8613;
    inline constexpr int32_t ERROR_DS_REPL_LIFETIME_EXCEEDED = 8614;
    inline constexpr int32_t ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = 8615;
    inline constexpr int32_t ERROR_DS_LDAP_SEND_QUEUE_FULL = 8616;
    inline constexpr int32_t ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 8617;
    inline constexpr int32_t ERROR_DS_POLICY_NOT_KNOWN = 8618;
    inline constexpr int32_t ERROR_NO_SITE_SETTINGS_OBJECT = 8619;
    inline constexpr int32_t ERROR_NO_SECRETS = 8620;
    inline constexpr int32_t ERROR_NO_WRITABLE_DC_FOUND = 8621;
    inline constexpr int32_t ERROR_DS_NO_SERVER_OBJECT = 8622;
    inline constexpr int32_t ERROR_DS_NO_NTDSA_OBJECT = 8623;
    inline constexpr int32_t ERROR_DS_NON_ASQ_SEARCH = 8624;
    inline constexpr int32_t ERROR_DS_AUDIT_FAILURE = 8625;
    inline constexpr int32_t ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = 8626;
    inline constexpr int32_t ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = 8627;
    inline constexpr int32_t ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = 8628;
    inline constexpr int32_t ERROR_DS_DRA_CORRUPT_UTD_VECTOR = 8629;
    inline constexpr int32_t ERROR_DS_DRA_SECRETS_DENIED = 8630;
    inline constexpr int32_t ERROR_DS_RESERVED_MAPI_ID = 8631;
    inline constexpr int32_t ERROR_DS_MAPI_ID_NOT_AVAILABLE = 8632;
    inline constexpr int32_t ERROR_DS_DRA_MISSING_KRBTGT_SECRET = 8633;
    inline constexpr int32_t ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 8634;
    inline constexpr int32_t ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = 8635;
    inline constexpr int32_t ERROR_INVALID_USER_PRINCIPAL_NAME = 8636;
    inline constexpr int32_t ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 8637;
    inline constexpr int32_t ERROR_DS_OID_NOT_FOUND = 8638;
    inline constexpr int32_t ERROR_DS_DRA_RECYCLED_TARGET = 8639;
    inline constexpr int32_t ERROR_DS_DISALLOWED_NC_REDIRECT = 8640;
    inline constexpr int32_t ERROR_DS_HIGH_ADLDS_FFL = 8641;
    inline constexpr int32_t ERROR_DS_HIGH_DSA_VERSION = 8642;
    inline constexpr int32_t ERROR_DS_LOW_ADLDS_FFL = 8643;
    inline constexpr int32_t ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = 8644;
    inline constexpr int32_t ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = 8645;
    inline constexpr int32_t ERROR_INCORRECT_ACCOUNT_TYPE = 8646;
    inline constexpr int32_t ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST = 8647;
    inline constexpr int32_t ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST = 8648;
    inline constexpr int32_t ERROR_DS_MISSING_FOREST_TRUST = 8649;
    inline constexpr int32_t ERROR_DS_VALUE_KEY_NOT_UNIQUE = 8650;
    inline constexpr int32_t DNS_ERROR_RESPONSE_CODES_BASE = 9000;
    inline constexpr int32_t DNS_ERROR_MASK = 9000;
    inline constexpr int32_t DNS_ERROR_RCODE_FORMAT_ERROR = 9001;
    inline constexpr int32_t DNS_ERROR_RCODE_SERVER_FAILURE = 9002;
    inline constexpr int32_t DNS_ERROR_RCODE_NAME_ERROR = 9003;
    inline constexpr int32_t DNS_ERROR_RCODE_NOT_IMPLEMENTED = 9004;
    inline constexpr int32_t DNS_ERROR_RCODE_REFUSED = 9005;
    inline constexpr int32_t DNS_ERROR_RCODE_YXDOMAIN = 9006;
    inline constexpr int32_t DNS_ERROR_RCODE_YXRRSET = 9007;
    inline constexpr int32_t DNS_ERROR_RCODE_NXRRSET = 9008;
    inline constexpr int32_t DNS_ERROR_RCODE_NOTAUTH = 9009;
    inline constexpr int32_t DNS_ERROR_RCODE_NOTZONE = 9010;
    inline constexpr int32_t DNS_ERROR_RCODE_BADSIG = 9016;
    inline constexpr int32_t DNS_ERROR_RCODE_BADKEY = 9017;
    inline constexpr int32_t DNS_ERROR_RCODE_BADTIME = 9018;
    inline constexpr int32_t DNS_ERROR_DNSSEC_BASE = 9100;
    inline constexpr int32_t DNS_ERROR_KEYMASTER_REQUIRED = 9101;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = 9102;
    inline constexpr int32_t DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = 9103;
    inline constexpr int32_t DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = 9104;
    inline constexpr int32_t DNS_ERROR_UNSUPPORTED_ALGORITHM = 9105;
    inline constexpr int32_t DNS_ERROR_INVALID_KEY_SIZE = 9106;
    inline constexpr int32_t DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = 9107;
    inline constexpr int32_t DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = 9108;
    inline constexpr int32_t DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = 9109;
    inline constexpr int32_t DNS_ERROR_UNEXPECTED_CNG_ERROR = 9110;
    inline constexpr int32_t DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = 9111;
    inline constexpr int32_t DNS_ERROR_KSP_NOT_ACCESSIBLE = 9112;
    inline constexpr int32_t DNS_ERROR_TOO_MANY_SKDS = 9113;
    inline constexpr int32_t DNS_ERROR_INVALID_ROLLOVER_PERIOD = 9114;
    inline constexpr int32_t DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = 9115;
    inline constexpr int32_t DNS_ERROR_ROLLOVER_IN_PROGRESS = 9116;
    inline constexpr int32_t DNS_ERROR_STANDBY_KEY_NOT_PRESENT = 9117;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_ZSK = 9118;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = 9119;
    inline constexpr int32_t DNS_ERROR_ROLLOVER_ALREADY_QUEUED = 9120;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = 9121;
    inline constexpr int32_t DNS_ERROR_BAD_KEYMASTER = 9122;
    inline constexpr int32_t DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = 9123;
    inline constexpr int32_t DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = 9124;
    inline constexpr int32_t DNS_ERROR_DNSSEC_IS_DISABLED = 9125;
    inline constexpr int32_t DNS_ERROR_INVALID_XML = 9126;
    inline constexpr int32_t DNS_ERROR_NO_VALID_TRUST_ANCHORS = 9127;
    inline constexpr int32_t DNS_ERROR_ROLLOVER_NOT_POKEABLE = 9128;
    inline constexpr int32_t DNS_ERROR_NSEC3_NAME_COLLISION = 9129;
    inline constexpr int32_t DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = 9130;
    inline constexpr int32_t DNS_ERROR_PACKET_FMT_BASE = 9500;
    inline constexpr int32_t DNS_INFO_NO_RECORDS = 9501;
    inline constexpr int32_t DNS_ERROR_BAD_PACKET = 9502;
    inline constexpr int32_t DNS_ERROR_NO_PACKET = 9503;
    inline constexpr int32_t DNS_ERROR_RCODE = 9504;
    inline constexpr int32_t DNS_ERROR_UNSECURE_PACKET = 9505;
    inline constexpr int32_t DNS_REQUEST_PENDING = 9506;
    inline constexpr int32_t DNS_ERROR_GENERAL_API_BASE = 9550;
    inline constexpr int32_t DNS_ERROR_INVALID_TYPE = 9551;
    inline constexpr int32_t DNS_ERROR_INVALID_IP_ADDRESS = 9552;
    inline constexpr int32_t DNS_ERROR_INVALID_PROPERTY = 9553;
    inline constexpr int32_t DNS_ERROR_TRY_AGAIN_LATER = 9554;
    inline constexpr int32_t DNS_ERROR_NOT_UNIQUE = 9555;
    inline constexpr int32_t DNS_ERROR_NON_RFC_NAME = 9556;
    inline constexpr int32_t DNS_STATUS_FQDN = 9557;
    inline constexpr int32_t DNS_STATUS_DOTTED_NAME = 9558;
    inline constexpr int32_t DNS_STATUS_SINGLE_PART_NAME = 9559;
    inline constexpr int32_t DNS_ERROR_INVALID_NAME_CHAR = 9560;
    inline constexpr int32_t DNS_ERROR_NUMERIC_NAME = 9561;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 9562;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 9563;
    inline constexpr int32_t DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 9564;
    inline constexpr int32_t DNS_ERROR_INCONSISTENT_ROOT_HINTS = 9565;
    inline constexpr int32_t DNS_ERROR_DWORD_VALUE_TOO_SMALL = 9566;
    inline constexpr int32_t DNS_ERROR_DWORD_VALUE_TOO_LARGE = 9567;
    inline constexpr int32_t DNS_ERROR_BACKGROUND_LOADING = 9568;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_ON_RODC = 9569;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = 9570;
    inline constexpr int32_t DNS_ERROR_DELEGATION_REQUIRED = 9571;
    inline constexpr int32_t DNS_ERROR_INVALID_POLICY_TABLE = 9572;
    inline constexpr int32_t DNS_ERROR_ADDRESS_REQUIRED = 9573;
    inline constexpr int32_t DNS_ERROR_ZONE_BASE = 9600;
    inline constexpr int32_t DNS_ERROR_ZONE_DOES_NOT_EXIST = 9601;
    inline constexpr int32_t DNS_ERROR_NO_ZONE_INFO = 9602;
    inline constexpr int32_t DNS_ERROR_INVALID_ZONE_OPERATION = 9603;
    inline constexpr int32_t DNS_ERROR_ZONE_CONFIGURATION_ERROR = 9604;
    inline constexpr int32_t DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 9605;
    inline constexpr int32_t DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 9606;
    inline constexpr int32_t DNS_ERROR_ZONE_LOCKED = 9607;
    inline constexpr int32_t DNS_ERROR_ZONE_CREATION_FAILED = 9608;
    inline constexpr int32_t DNS_ERROR_ZONE_ALREADY_EXISTS = 9609;
    inline constexpr int32_t DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 9610;
    inline constexpr int32_t DNS_ERROR_INVALID_ZONE_TYPE = 9611;
    inline constexpr int32_t DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 9612;
    inline constexpr int32_t DNS_ERROR_ZONE_NOT_SECONDARY = 9613;
    inline constexpr int32_t DNS_ERROR_NEED_SECONDARY_ADDRESSES = 9614;
    inline constexpr int32_t DNS_ERROR_WINS_INIT_FAILED = 9615;
    inline constexpr int32_t DNS_ERROR_NEED_WINS_SERVERS = 9616;
    inline constexpr int32_t DNS_ERROR_NBSTAT_INIT_FAILED = 9617;
    inline constexpr int32_t DNS_ERROR_SOA_DELETE_INVALID = 9618;
    inline constexpr int32_t DNS_ERROR_FORWARDER_ALREADY_EXISTS = 9619;
    inline constexpr int32_t DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 9620;
    inline constexpr int32_t DNS_ERROR_ZONE_IS_SHUTDOWN = 9621;
    inline constexpr int32_t DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = 9622;
    inline constexpr int32_t DNS_ERROR_DATAFILE_BASE = 9650;
    inline constexpr int32_t DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 9651;
    inline constexpr int32_t DNS_ERROR_INVALID_DATAFILE_NAME = 9652;
    inline constexpr int32_t DNS_ERROR_DATAFILE_OPEN_FAILURE = 9653;
    inline constexpr int32_t DNS_ERROR_FILE_WRITEBACK_FAILED = 9654;
    inline constexpr int32_t DNS_ERROR_DATAFILE_PARSING = 9655;
    inline constexpr int32_t DNS_ERROR_DATABASE_BASE = 9700;
    inline constexpr int32_t DNS_ERROR_RECORD_DOES_NOT_EXIST = 9701;
    inline constexpr int32_t DNS_ERROR_RECORD_FORMAT = 9702;
    inline constexpr int32_t DNS_ERROR_NODE_CREATION_FAILED = 9703;
    inline constexpr int32_t DNS_ERROR_UNKNOWN_RECORD_TYPE = 9704;
    inline constexpr int32_t DNS_ERROR_RECORD_TIMED_OUT = 9705;
    inline constexpr int32_t DNS_ERROR_NAME_NOT_IN_ZONE = 9706;
    inline constexpr int32_t DNS_ERROR_CNAME_LOOP = 9707;
    inline constexpr int32_t DNS_ERROR_NODE_IS_CNAME = 9708;
    inline constexpr int32_t DNS_ERROR_CNAME_COLLISION = 9709;
    inline constexpr int32_t DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 9710;
    inline constexpr int32_t DNS_ERROR_RECORD_ALREADY_EXISTS = 9711;
    inline constexpr int32_t DNS_ERROR_SECONDARY_DATA = 9712;
    inline constexpr int32_t DNS_ERROR_NO_CREATE_CACHE_DATA = 9713;
    inline constexpr int32_t DNS_ERROR_NAME_DOES_NOT_EXIST = 9714;
    inline constexpr int32_t DNS_WARNING_PTR_CREATE_FAILED = 9715;
    inline constexpr int32_t DNS_WARNING_DOMAIN_UNDELETED = 9716;
    inline constexpr int32_t DNS_ERROR_DS_UNAVAILABLE = 9717;
    inline constexpr int32_t DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 9718;
    inline constexpr int32_t DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 9719;
    inline constexpr int32_t DNS_ERROR_NODE_IS_DNAME = 9720;
    inline constexpr int32_t DNS_ERROR_DNAME_COLLISION = 9721;
    inline constexpr int32_t DNS_ERROR_ALIAS_LOOP = 9722;
    inline constexpr int32_t DNS_ERROR_OPERATION_BASE = 9750;
    inline constexpr int32_t DNS_INFO_AXFR_COMPLETE = 9751;
    inline constexpr int32_t DNS_ERROR_AXFR = 9752;
    inline constexpr int32_t DNS_INFO_ADDED_LOCAL_WINS = 9753;
    inline constexpr int32_t DNS_ERROR_SECURE_BASE = 9800;
    inline constexpr int32_t DNS_STATUS_CONTINUE_NEEDED = 9801;
    inline constexpr int32_t DNS_ERROR_SETUP_BASE = 9850;
    inline constexpr int32_t DNS_ERROR_NO_TCPIP = 9851;
    inline constexpr int32_t DNS_ERROR_NO_DNS_SERVERS = 9852;
    inline constexpr int32_t DNS_ERROR_DP_BASE = 9900;
    inline constexpr int32_t DNS_ERROR_DP_DOES_NOT_EXIST = 9901;
    inline constexpr int32_t DNS_ERROR_DP_ALREADY_EXISTS = 9902;
    inline constexpr int32_t DNS_ERROR_DP_NOT_ENLISTED = 9903;
    inline constexpr int32_t DNS_ERROR_DP_ALREADY_ENLISTED = 9904;
    inline constexpr int32_t DNS_ERROR_DP_NOT_AVAILABLE = 9905;
    inline constexpr int32_t DNS_ERROR_DP_FSMO_ERROR = 9906;
    inline constexpr int32_t DNS_ERROR_RRL_NOT_ENABLED = 9911;
    inline constexpr int32_t DNS_ERROR_RRL_INVALID_WINDOW_SIZE = 9912;
    inline constexpr int32_t DNS_ERROR_RRL_INVALID_IPV4_PREFIX = 9913;
    inline constexpr int32_t DNS_ERROR_RRL_INVALID_IPV6_PREFIX = 9914;
    inline constexpr int32_t DNS_ERROR_RRL_INVALID_TC_RATE = 9915;
    inline constexpr int32_t DNS_ERROR_RRL_INVALID_LEAK_RATE = 9916;
    inline constexpr int32_t DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE = 9917;
    inline constexpr int32_t DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS = 9921;
    inline constexpr int32_t DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST = 9922;
    inline constexpr int32_t DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = 9923;
    inline constexpr int32_t DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME = 9924;
    inline constexpr int32_t DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE = 9925;
    inline constexpr int32_t DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = 9951;
    inline constexpr int32_t DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = 9952;
    inline constexpr int32_t DNS_ERROR_DEFAULT_ZONESCOPE = 9953;
    inline constexpr int32_t DNS_ERROR_INVALID_ZONESCOPE_NAME = 9954;
    inline constexpr int32_t DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = 9955;
    inline constexpr int32_t DNS_ERROR_LOAD_ZONESCOPE_FAILED = 9956;
    inline constexpr int32_t DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED = 9957;
    inline constexpr int32_t DNS_ERROR_INVALID_SCOPE_NAME = 9958;
    inline constexpr int32_t DNS_ERROR_SCOPE_DOES_NOT_EXIST = 9959;
    inline constexpr int32_t DNS_ERROR_DEFAULT_SCOPE = 9960;
    inline constexpr int32_t DNS_ERROR_INVALID_SCOPE_OPERATION = 9961;
    inline constexpr int32_t DNS_ERROR_SCOPE_LOCKED = 9962;
    inline constexpr int32_t DNS_ERROR_SCOPE_ALREADY_EXISTS = 9963;
    inline constexpr int32_t DNS_ERROR_POLICY_ALREADY_EXISTS = 9971;
    inline constexpr int32_t DNS_ERROR_POLICY_DOES_NOT_EXIST = 9972;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA = 9973;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_SETTINGS = 9974;
    inline constexpr int32_t DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = 9975;
    inline constexpr int32_t DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = 9976;
    inline constexpr int32_t DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = 9977;
    inline constexpr int32_t DNS_ERROR_SUBNET_DOES_NOT_EXIST = 9978;
    inline constexpr int32_t DNS_ERROR_SUBNET_ALREADY_EXISTS = 9979;
    inline constexpr int32_t DNS_ERROR_POLICY_LOCKED = 9980;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_WEIGHT = 9981;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_NAME = 9982;
    inline constexpr int32_t DNS_ERROR_POLICY_MISSING_CRITERIA = 9983;
    inline constexpr int32_t DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = 9984;
    inline constexpr int32_t DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID = 9985;
    inline constexpr int32_t DNS_ERROR_POLICY_SCOPE_MISSING = 9986;
    inline constexpr int32_t DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = 9987;
    inline constexpr int32_t DNS_ERROR_SERVERSCOPE_IS_REFERENCED = 9988;
    inline constexpr int32_t DNS_ERROR_ZONESCOPE_IS_REFERENCED = 9989;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET = 9990;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL = 9991;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL = 9992;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE = 9993;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = 9994;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE = 9995;
    inline constexpr int32_t DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY = 9996;
    inline constexpr int32_t WSABASEERR = 10000;
    inline constexpr int32_t WSAEINTR = 10004;
    inline constexpr int32_t WSAEBADF = 10009;
    inline constexpr int32_t WSAEACCES = 10013;
    inline constexpr int32_t WSAEFAULT = 10014;
    inline constexpr int32_t WSAEINVAL = 10022;
    inline constexpr int32_t WSAEMFILE = 10024;
    inline constexpr int32_t WSAEWOULDBLOCK = 10035;
    inline constexpr int32_t WSAEINPROGRESS = 10036;
    inline constexpr int32_t WSAEALREADY = 10037;
    inline constexpr int32_t WSAENOTSOCK = 10038;
    inline constexpr int32_t WSAEDESTADDRREQ = 10039;
    inline constexpr int32_t WSAEMSGSIZE = 10040;
    inline constexpr int32_t WSAEPROTOTYPE = 10041;
    inline constexpr int32_t WSAENOPROTOOPT = 10042;
    inline constexpr int32_t WSAEPROTONOSUPPORT = 10043;
    inline constexpr int32_t WSAESOCKTNOSUPPORT = 10044;
    inline constexpr int32_t WSAEOPNOTSUPP = 10045;
    inline constexpr int32_t WSAEPFNOSUPPORT = 10046;
    inline constexpr int32_t WSAEAFNOSUPPORT = 10047;
    inline constexpr int32_t WSAEADDRINUSE = 10048;
    inline constexpr int32_t WSAEADDRNOTAVAIL = 10049;
    inline constexpr int32_t WSAENETDOWN = 10050;
    inline constexpr int32_t WSAENETUNREACH = 10051;
    inline constexpr int32_t WSAENETRESET = 10052;
    inline constexpr int32_t WSAECONNABORTED = 10053;
    inline constexpr int32_t WSAECONNRESET = 10054;
    inline constexpr int32_t WSAENOBUFS = 10055;
    inline constexpr int32_t WSAEISCONN = 10056;
    inline constexpr int32_t WSAENOTCONN = 10057;
    inline constexpr int32_t WSAESHUTDOWN = 10058;
    inline constexpr int32_t WSAETOOMANYREFS = 10059;
    inline constexpr int32_t WSAETIMEDOUT = 10060;
    inline constexpr int32_t WSAECONNREFUSED = 10061;
    inline constexpr int32_t WSAELOOP = 10062;
    inline constexpr int32_t WSAENAMETOOLONG = 10063;
    inline constexpr int32_t WSAEHOSTDOWN = 10064;
    inline constexpr int32_t WSAEHOSTUNREACH = 10065;
    inline constexpr int32_t WSAENOTEMPTY = 10066;
    inline constexpr int32_t WSAEPROCLIM = 10067;
    inline constexpr int32_t WSAEUSERS = 10068;
    inline constexpr int32_t WSAEDQUOT = 10069;
    inline constexpr int32_t WSAESTALE = 10070;
    inline constexpr int32_t WSAEREMOTE = 10071;
    inline constexpr int32_t WSASYSNOTREADY = 10091;
    inline constexpr int32_t WSAVERNOTSUPPORTED = 10092;
    inline constexpr int32_t WSANOTINITIALISED = 10093;
    inline constexpr int32_t WSAEDISCON = 10101;
    inline constexpr int32_t WSAENOMORE = 10102;
    inline constexpr int32_t WSAECANCELLED = 10103;
    inline constexpr int32_t WSAEINVALIDPROCTABLE = 10104;
    inline constexpr int32_t WSAEINVALIDPROVIDER = 10105;
    inline constexpr int32_t WSAEPROVIDERFAILEDINIT = 10106;
    inline constexpr int32_t WSASYSCALLFAILURE = 10107;
    inline constexpr int32_t WSASERVICE_NOT_FOUND = 10108;
    inline constexpr int32_t WSATYPE_NOT_FOUND = 10109;
    inline constexpr int32_t WSA_E_NO_MORE = 10110;
    inline constexpr int32_t WSA_E_CANCELLED = 10111;
    inline constexpr int32_t WSAEREFUSED = 10112;
    inline constexpr int32_t WSAHOST_NOT_FOUND = 11001;
    inline constexpr int32_t WSATRY_AGAIN = 11002;
    inline constexpr int32_t WSANO_RECOVERY = 11003;
    inline constexpr int32_t WSANO_DATA = 11004;
    inline constexpr int32_t WSA_QOS_RECEIVERS = 11005;
    inline constexpr int32_t WSA_QOS_SENDERS = 11006;
    inline constexpr int32_t WSA_QOS_NO_SENDERS = 11007;
    inline constexpr int32_t WSA_QOS_NO_RECEIVERS = 11008;
    inline constexpr int32_t WSA_QOS_REQUEST_CONFIRMED = 11009;
    inline constexpr int32_t WSA_QOS_ADMISSION_FAILURE = 11010;
    inline constexpr int32_t WSA_QOS_POLICY_FAILURE = 11011;
    inline constexpr int32_t WSA_QOS_BAD_STYLE = 11012;
    inline constexpr int32_t WSA_QOS_BAD_OBJECT = 11013;
    inline constexpr int32_t WSA_QOS_TRAFFIC_CTRL_ERROR = 11014;
    inline constexpr int32_t WSA_QOS_GENERIC_ERROR = 11015;
    inline constexpr int32_t WSA_QOS_ESERVICETYPE = 11016;
    inline constexpr int32_t WSA_QOS_EFLOWSPEC = 11017;
    inline constexpr int32_t WSA_QOS_EPROVSPECBUF = 11018;
    inline constexpr int32_t WSA_QOS_EFILTERSTYLE = 11019;
    inline constexpr int32_t WSA_QOS_EFILTERTYPE = 11020;
    inline constexpr int32_t WSA_QOS_EFILTERCOUNT = 11021;
    inline constexpr int32_t WSA_QOS_EOBJLENGTH = 11022;
    inline constexpr int32_t WSA_QOS_EFLOWCOUNT = 11023;
    inline constexpr int32_t WSA_QOS_EUNKOWNPSOBJ = 11024;
    inline constexpr int32_t WSA_QOS_EPOLICYOBJ = 11025;
    inline constexpr int32_t WSA_QOS_EFLOWDESC = 11026;
    inline constexpr int32_t WSA_QOS_EPSFLOWSPEC = 11027;
    inline constexpr int32_t WSA_QOS_EPSFILTERSPEC = 11028;
    inline constexpr int32_t WSA_QOS_ESDMODEOBJ = 11029;
    inline constexpr int32_t WSA_QOS_ESHAPERATEOBJ = 11030;
    inline constexpr int32_t WSA_QOS_RESERVED_PETYPE = 11031;
    inline constexpr int32_t WSA_SECURE_HOST_NOT_FOUND = 11032;
    inline constexpr int32_t WSA_IPSEC_NAME_POLICY_ERROR = 11033;
    inline constexpr int32_t ERROR_IPSEC_QM_POLICY_EXISTS = 13000;
    inline constexpr int32_t ERROR_IPSEC_QM_POLICY_NOT_FOUND = 13001;
    inline constexpr int32_t ERROR_IPSEC_QM_POLICY_IN_USE = 13002;
    inline constexpr int32_t ERROR_IPSEC_MM_POLICY_EXISTS = 13003;
    inline constexpr int32_t ERROR_IPSEC_MM_POLICY_NOT_FOUND = 13004;
    inline constexpr int32_t ERROR_IPSEC_MM_POLICY_IN_USE = 13005;
    inline constexpr int32_t ERROR_IPSEC_MM_FILTER_EXISTS = 13006;
    inline constexpr int32_t ERROR_IPSEC_MM_FILTER_NOT_FOUND = 13007;
    inline constexpr int32_t ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 13008;
    inline constexpr int32_t ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 13009;
    inline constexpr int32_t ERROR_IPSEC_MM_AUTH_EXISTS = 13010;
    inline constexpr int32_t ERROR_IPSEC_MM_AUTH_NOT_FOUND = 13011;
    inline constexpr int32_t ERROR_IPSEC_MM_AUTH_IN_USE = 13012;
    inline constexpr int32_t ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 13013;
    inline constexpr int32_t ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 13014;
    inline constexpr int32_t ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 13015;
    inline constexpr int32_t ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 13016;
    inline constexpr int32_t ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 13017;
    inline constexpr int32_t ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 13018;
    inline constexpr int32_t ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 13019;
    inline constexpr int32_t ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 13020;
    inline constexpr int32_t ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 13021;
    inline constexpr int32_t ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 13022;
    inline constexpr int32_t ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 13023;
    inline constexpr int32_t WARNING_IPSEC_MM_POLICY_PRUNED = 13024;
    inline constexpr int32_t WARNING_IPSEC_QM_POLICY_PRUNED = 13025;
    inline constexpr int32_t ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = 13800;
    inline constexpr int32_t ERROR_IPSEC_IKE_AUTH_FAIL = 13801;
    inline constexpr int32_t ERROR_IPSEC_IKE_ATTRIB_FAIL = 13802;
    inline constexpr int32_t ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 13803;
    inline constexpr int32_t ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 13804;
    inline constexpr int32_t ERROR_IPSEC_IKE_TIMED_OUT = 13805;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_CERT = 13806;
    inline constexpr int32_t ERROR_IPSEC_IKE_SA_DELETED = 13807;
    inline constexpr int32_t ERROR_IPSEC_IKE_SA_REAPED = 13808;
    inline constexpr int32_t ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = 13809;
    inline constexpr int32_t ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = 13810;
    inline constexpr int32_t ERROR_IPSEC_IKE_QUEUE_DROP_MM = 13811;
    inline constexpr int32_t ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 13812;
    inline constexpr int32_t ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 13813;
    inline constexpr int32_t ERROR_IPSEC_IKE_MM_DELAY_DROP = 13814;
    inline constexpr int32_t ERROR_IPSEC_IKE_QM_DELAY_DROP = 13815;
    inline constexpr int32_t ERROR_IPSEC_IKE_ERROR = 13816;
    inline constexpr int32_t ERROR_IPSEC_IKE_CRL_FAILED = 13817;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 13818;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 13819;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_PRIVATE_KEY = 13820;
    inline constexpr int32_t ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = 13821;
    inline constexpr int32_t ERROR_IPSEC_IKE_DH_FAIL = 13822;
    inline constexpr int32_t ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = 13823;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_HEADER = 13824;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_POLICY = 13825;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_SIGNATURE = 13826;
    inline constexpr int32_t ERROR_IPSEC_IKE_KERBEROS_ERROR = 13827;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_PUBLIC_KEY = 13828;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR = 13829;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_SA = 13830;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 13831;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 13832;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_KE = 13833;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_ID = 13834;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 13835;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 13836;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 13837;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_SIG = 13838;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 13839;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 13840;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 13841;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 13842;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_PAYLOAD = 13843;
    inline constexpr int32_t ERROR_IPSEC_IKE_LOAD_SOFT_SA = 13844;
    inline constexpr int32_t ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 13845;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_COOKIE = 13846;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_PEER_CERT = 13847;
    inline constexpr int32_t ERROR_IPSEC_IKE_PEER_CRL_FAILED = 13848;
    inline constexpr int32_t ERROR_IPSEC_IKE_POLICY_CHANGE = 13849;
    inline constexpr int32_t ERROR_IPSEC_IKE_NO_MM_POLICY = 13850;
    inline constexpr int32_t ERROR_IPSEC_IKE_NOTCBPRIV = 13851;
    inline constexpr int32_t ERROR_IPSEC_IKE_SECLOADFAIL = 13852;
    inline constexpr int32_t ERROR_IPSEC_IKE_FAILSSPINIT = 13853;
    inline constexpr int32_t ERROR_IPSEC_IKE_FAILQUERYSSP = 13854;
    inline constexpr int32_t ERROR_IPSEC_IKE_SRVACQFAIL = 13855;
    inline constexpr int32_t ERROR_IPSEC_IKE_SRVQUERYCRED = 13856;
    inline constexpr int32_t ERROR_IPSEC_IKE_GETSPIFAIL = 13857;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_FILTER = 13858;
    inline constexpr int32_t ERROR_IPSEC_IKE_OUT_OF_MEMORY = 13859;
    inline constexpr int32_t ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 13860;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_POLICY = 13861;
    inline constexpr int32_t ERROR_IPSEC_IKE_UNKNOWN_DOI = 13862;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_SITUATION = 13863;
    inline constexpr int32_t ERROR_IPSEC_IKE_DH_FAILURE = 13864;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_GROUP = 13865;
    inline constexpr int32_t ERROR_IPSEC_IKE_ENCRYPT = 13866;
    inline constexpr int32_t ERROR_IPSEC_IKE_DECRYPT = 13867;
    inline constexpr int32_t ERROR_IPSEC_IKE_POLICY_MATCH = 13868;
    inline constexpr int32_t ERROR_IPSEC_IKE_UNSUPPORTED_ID = 13869;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_HASH = 13870;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_HASH_ALG = 13871;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 13872;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 13873;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 13874;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_SIG = 13875;
    inline constexpr int32_t ERROR_IPSEC_IKE_LOAD_FAILED = 13876;
    inline constexpr int32_t ERROR_IPSEC_IKE_RPC_DELETE = 13877;
    inline constexpr int32_t ERROR_IPSEC_IKE_BENIGN_REINIT = 13878;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 13879;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = 13880;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 13881;
    inline constexpr int32_t ERROR_IPSEC_IKE_MM_LIMIT = 13882;
    inline constexpr int32_t ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 13883;
    inline constexpr int32_t ERROR_IPSEC_IKE_QM_LIMIT = 13884;
    inline constexpr int32_t ERROR_IPSEC_IKE_MM_EXPIRED = 13885;
    inline constexpr int32_t ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = 13886;
    inline constexpr int32_t ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = 13887;
    inline constexpr int32_t ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = 13888;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = 13889;
    inline constexpr int32_t ERROR_IPSEC_IKE_DOS_COOKIE_SENT = 13890;
    inline constexpr int32_t ERROR_IPSEC_IKE_SHUTTING_DOWN = 13891;
    inline constexpr int32_t ERROR_IPSEC_IKE_CGA_AUTH_FAILED = 13892;
    inline constexpr int32_t ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = 13893;
    inline constexpr int32_t ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = 13894;
    inline constexpr int32_t ERROR_IPSEC_IKE_QM_EXPIRED = 13895;
    inline constexpr int32_t ERROR_IPSEC_IKE_TOO_MANY_FILTERS = 13896;
    inline constexpr int32_t ERROR_IPSEC_IKE_NEG_STATUS_END = 13897;
    inline constexpr int32_t ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = 13898;
    inline constexpr int32_t ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = 13899;
    inline constexpr int32_t ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = 13900;
    inline constexpr int32_t ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = 13901;
    inline constexpr int32_t ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = 13902;
    inline constexpr int32_t ERROR_IPSEC_IKE_RATELIMIT_DROP = 13903;
    inline constexpr int32_t ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = 13904;
    inline constexpr int32_t ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = 13905;
    inline constexpr int32_t ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = 13906;
    inline constexpr int32_t ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = 13907;
    inline constexpr int32_t ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = 13908;
    inline constexpr int32_t ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = 13909;
    inline constexpr int32_t ERROR_IPSEC_BAD_SPI = 13910;
    inline constexpr int32_t ERROR_IPSEC_SA_LIFETIME_EXPIRED = 13911;
    inline constexpr int32_t ERROR_IPSEC_WRONG_SA = 13912;
    inline constexpr int32_t ERROR_IPSEC_REPLAY_CHECK_FAILED = 13913;
    inline constexpr int32_t ERROR_IPSEC_INVALID_PACKET = 13914;
    inline constexpr int32_t ERROR_IPSEC_INTEGRITY_CHECK_FAILED = 13915;
    inline constexpr int32_t ERROR_IPSEC_CLEAR_TEXT_DROP = 13916;
    inline constexpr int32_t ERROR_IPSEC_AUTH_FIREWALL_DROP = 13917;
    inline constexpr int32_t ERROR_IPSEC_THROTTLE_DROP = 13918;
    inline constexpr int32_t ERROR_IPSEC_DOSP_BLOCK = 13925;
    inline constexpr int32_t ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = 13926;
    inline constexpr int32_t ERROR_IPSEC_DOSP_INVALID_PACKET = 13927;
    inline constexpr int32_t ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = 13928;
    inline constexpr int32_t ERROR_IPSEC_DOSP_MAX_ENTRIES = 13929;
    inline constexpr int32_t ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 13930;
    inline constexpr int32_t ERROR_IPSEC_DOSP_NOT_INSTALLED = 13931;
    inline constexpr int32_t ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 13932;
    inline constexpr int32_t ERROR_SXS_SECTION_NOT_FOUND = 14000;
    inline constexpr int32_t ERROR_SXS_CANT_GEN_ACTCTX = 14001;
    inline constexpr int32_t ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 14002;
    inline constexpr int32_t ERROR_SXS_ASSEMBLY_NOT_FOUND = 14003;
    inline constexpr int32_t ERROR_SXS_MANIFEST_FORMAT_ERROR = 14004;
    inline constexpr int32_t ERROR_SXS_MANIFEST_PARSE_ERROR = 14005;
    inline constexpr int32_t ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 14006;
    inline constexpr int32_t ERROR_SXS_KEY_NOT_FOUND = 14007;
    inline constexpr int32_t ERROR_SXS_VERSION_CONFLICT = 14008;
    inline constexpr int32_t ERROR_SXS_WRONG_SECTION_TYPE = 14009;
    inline constexpr int32_t ERROR_SXS_THREAD_QUERIES_DISABLED = 14010;
    inline constexpr int32_t ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 14011;
    inline constexpr int32_t ERROR_SXS_UNKNOWN_ENCODING_GROUP = 14012;
    inline constexpr int32_t ERROR_SXS_UNKNOWN_ENCODING = 14013;
    inline constexpr int32_t ERROR_SXS_INVALID_XML_NAMESPACE_URI = 14014;
    inline constexpr int32_t ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14015;
    inline constexpr int32_t ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14016;
    inline constexpr int32_t ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 14017;
    inline constexpr int32_t ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 14018;
    inline constexpr int32_t ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 14019;
    inline constexpr int32_t ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 14020;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_DLL_NAME = 14021;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 14022;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_CLSID = 14023;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_IID = 14024;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_TLBID = 14025;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_PROGID = 14026;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 14027;
    inline constexpr int32_t ERROR_SXS_FILE_HASH_MISMATCH = 14028;
    inline constexpr int32_t ERROR_SXS_POLICY_PARSE_ERROR = 14029;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSINGQUOTE = 14030;
    inline constexpr int32_t ERROR_SXS_XML_E_COMMENTSYNTAX = 14031;
    inline constexpr int32_t ERROR_SXS_XML_E_BADSTARTNAMECHAR = 14032;
    inline constexpr int32_t ERROR_SXS_XML_E_BADNAMECHAR = 14033;
    inline constexpr int32_t ERROR_SXS_XML_E_BADCHARINSTRING = 14034;
    inline constexpr int32_t ERROR_SXS_XML_E_XMLDECLSYNTAX = 14035;
    inline constexpr int32_t ERROR_SXS_XML_E_BADCHARDATA = 14036;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSINGWHITESPACE = 14037;
    inline constexpr int32_t ERROR_SXS_XML_E_EXPECTINGTAGEND = 14038;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSINGSEMICOLON = 14039;
    inline constexpr int32_t ERROR_SXS_XML_E_UNBALANCEDPAREN = 14040;
    inline constexpr int32_t ERROR_SXS_XML_E_INTERNALERROR = 14041;
    inline constexpr int32_t ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 14042;
    inline constexpr int32_t ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 14043;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSING_PAREN = 14044;
    inline constexpr int32_t ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 14045;
    inline constexpr int32_t ERROR_SXS_XML_E_MULTIPLE_COLONS = 14046;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALID_DECIMAL = 14047;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 14048;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALID_UNICODE = 14049;
    inline constexpr int32_t ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 14050;
    inline constexpr int32_t ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 14051;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDTAG = 14052;
    inline constexpr int32_t ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 14053;
    inline constexpr int32_t ERROR_SXS_XML_E_MULTIPLEROOTS = 14054;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 14055;
    inline constexpr int32_t ERROR_SXS_XML_E_BADXMLDECL = 14056;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSINGROOT = 14057;
    inline constexpr int32_t ERROR_SXS_XML_E_UNEXPECTEDEOF = 14058;
    inline constexpr int32_t ERROR_SXS_XML_E_BADPEREFINSUBSET = 14059;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 14060;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDENDTAG = 14061;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDSTRING = 14062;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 14063;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDDECL = 14064;
    inline constexpr int32_t ERROR_SXS_XML_E_UNCLOSEDCDATA = 14065;
    inline constexpr int32_t ERROR_SXS_XML_E_RESERVEDNAMESPACE = 14066;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALIDENCODING = 14067;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALIDSWITCH = 14068;
    inline constexpr int32_t ERROR_SXS_XML_E_BADXMLCASE = 14069;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALID_STANDALONE = 14070;
    inline constexpr int32_t ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 14071;
    inline constexpr int32_t ERROR_SXS_XML_E_INVALID_VERSION = 14072;
    inline constexpr int32_t ERROR_SXS_XML_E_MISSINGEQUALS = 14073;
    inline constexpr int32_t ERROR_SXS_PROTECTION_RECOVERY_FAILED = 14074;
    inline constexpr int32_t ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 14075;
    inline constexpr int32_t ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 14076;
    inline constexpr int32_t ERROR_SXS_UNTRANSLATABLE_HRESULT = 14077;
    inline constexpr int32_t ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 14078;
    inline constexpr int32_t ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 14079;
    inline constexpr int32_t ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 14080;
    inline constexpr int32_t ERROR_SXS_ASSEMBLY_MISSING = 14081;
    inline constexpr int32_t ERROR_SXS_CORRUPT_ACTIVATION_STACK = 14082;
    inline constexpr int32_t ERROR_SXS_CORRUPTION = 14083;
    inline constexpr int32_t ERROR_SXS_EARLY_DEACTIVATION = 14084;
    inline constexpr int32_t ERROR_SXS_INVALID_DEACTIVATION = 14085;
    inline constexpr int32_t ERROR_SXS_MULTIPLE_DEACTIVATION = 14086;
    inline constexpr int32_t ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 14087;
    inline constexpr int32_t ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 14088;
    inline constexpr int32_t ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 14089;
    inline constexpr int32_t ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 14090;
    inline constexpr int32_t ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 14091;
    inline constexpr int32_t ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 14092;
    inline constexpr int32_t ERROR_SXS_IDENTITY_PARSE_ERROR = 14093;
    inline constexpr int32_t ERROR_MALFORMED_SUBSTITUTION_STRING = 14094;
    inline constexpr int32_t ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 14095;
    inline constexpr int32_t ERROR_UNMAPPED_SUBSTITUTION_STRING = 14096;
    inline constexpr int32_t ERROR_SXS_ASSEMBLY_NOT_LOCKED = 14097;
    inline constexpr int32_t ERROR_SXS_COMPONENT_STORE_CORRUPT = 14098;
    inline constexpr int32_t ERROR_ADVANCED_INSTALLER_FAILED = 14099;
    inline constexpr int32_t ERROR_XML_ENCODING_MISMATCH = 14100;
    inline constexpr int32_t ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 14101;
    inline constexpr int32_t ERROR_SXS_IDENTITIES_DIFFERENT = 14102;
    inline constexpr int32_t ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 14103;
    inline constexpr int32_t ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 14104;
    inline constexpr int32_t ERROR_SXS_MANIFEST_TOO_BIG = 14105;
    inline constexpr int32_t ERROR_SXS_SETTING_NOT_REGISTERED = 14106;
    inline constexpr int32_t ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 14107;
    inline constexpr int32_t ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 14108;
    inline constexpr int32_t ERROR_GENERIC_COMMAND_FAILED = 14109;
    inline constexpr int32_t ERROR_SXS_FILE_HASH_MISSING = 14110;
    inline constexpr int32_t ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = 14111;
    inline constexpr int32_t ERROR_EVT_INVALID_CHANNEL_PATH = 15000;
    inline constexpr int32_t ERROR_EVT_INVALID_QUERY = 15001;
    inline constexpr int32_t ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = 15002;
    inline constexpr int32_t ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = 15003;
    inline constexpr int32_t ERROR_EVT_INVALID_PUBLISHER_NAME = 15004;
    inline constexpr int32_t ERROR_EVT_INVALID_EVENT_DATA = 15005;
    inline constexpr int32_t ERROR_EVT_CHANNEL_NOT_FOUND = 15007;
    inline constexpr int32_t ERROR_EVT_MALFORMED_XML_TEXT = 15008;
    inline constexpr int32_t ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = 15009;
    inline constexpr int32_t ERROR_EVT_CONFIGURATION_ERROR = 15010;
    inline constexpr int32_t ERROR_EVT_QUERY_RESULT_STALE = 15011;
    inline constexpr int32_t ERROR_EVT_QUERY_RESULT_INVALID_POSITION = 15012;
    inline constexpr int32_t ERROR_EVT_NON_VALIDATING_MSXML = 15013;
    inline constexpr int32_t ERROR_EVT_FILTER_ALREADYSCOPED = 15014;
    inline constexpr int32_t ERROR_EVT_FILTER_NOTELTSET = 15015;
    inline constexpr int32_t ERROR_EVT_FILTER_INVARG = 15016;
    inline constexpr int32_t ERROR_EVT_FILTER_INVTEST = 15017;
    inline constexpr int32_t ERROR_EVT_FILTER_INVTYPE = 15018;
    inline constexpr int32_t ERROR_EVT_FILTER_PARSEERR = 15019;
    inline constexpr int32_t ERROR_EVT_FILTER_UNSUPPORTEDOP = 15020;
    inline constexpr int32_t ERROR_EVT_FILTER_UNEXPECTEDTOKEN = 15021;
    inline constexpr int32_t ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = 15022;
    inline constexpr int32_t ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = 15023;
    inline constexpr int32_t ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = 15024;
    inline constexpr int32_t ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = 15025;
    inline constexpr int32_t ERROR_EVT_FILTER_TOO_COMPLEX = 15026;
    inline constexpr int32_t ERROR_EVT_MESSAGE_NOT_FOUND = 15027;
    inline constexpr int32_t ERROR_EVT_MESSAGE_ID_NOT_FOUND = 15028;
    inline constexpr int32_t ERROR_EVT_UNRESOLVED_VALUE_INSERT = 15029;
    inline constexpr int32_t ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = 15030;
    inline constexpr int32_t ERROR_EVT_MAX_INSERTS_REACHED = 15031;
    inline constexpr int32_t ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = 15032;
    inline constexpr int32_t ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 15033;
    inline constexpr int32_t ERROR_EVT_VERSION_TOO_OLD = 15034;
    inline constexpr int32_t ERROR_EVT_VERSION_TOO_NEW = 15035;
    inline constexpr int32_t ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = 15036;
    inline constexpr int32_t ERROR_EVT_PUBLISHER_DISABLED = 15037;
    inline constexpr int32_t ERROR_EVT_FILTER_OUT_OF_RANGE = 15038;
    inline constexpr int32_t ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = 15080;
    inline constexpr int32_t ERROR_EC_LOG_DISABLED = 15081;
    inline constexpr int32_t ERROR_EC_CIRCULAR_FORWARDING = 15082;
    inline constexpr int32_t ERROR_EC_CREDSTORE_FULL = 15083;
    inline constexpr int32_t ERROR_EC_CRED_NOT_FOUND = 15084;
    inline constexpr int32_t ERROR_EC_NO_ACTIVE_CHANNEL = 15085;
    inline constexpr int32_t ERROR_MUI_FILE_NOT_FOUND = 15100;
    inline constexpr int32_t ERROR_MUI_INVALID_FILE = 15101;
    inline constexpr int32_t ERROR_MUI_INVALID_RC_CONFIG = 15102;
    inline constexpr int32_t ERROR_MUI_INVALID_LOCALE_NAME = 15103;
    inline constexpr int32_t ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 15104;
    inline constexpr int32_t ERROR_MUI_FILE_NOT_LOADED = 15105;
    inline constexpr int32_t ERROR_RESOURCE_ENUM_USER_STOP = 15106;
    inline constexpr int32_t ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 15107;
    inline constexpr int32_t ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 15108;
    inline constexpr int32_t ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 15110;
    inline constexpr int32_t ERROR_MRM_INVALID_PRICONFIG = 15111;
    inline constexpr int32_t ERROR_MRM_INVALID_FILE_TYPE = 15112;
    inline constexpr int32_t ERROR_MRM_UNKNOWN_QUALIFIER = 15113;
    inline constexpr int32_t ERROR_MRM_INVALID_QUALIFIER_VALUE = 15114;
    inline constexpr int32_t ERROR_MRM_NO_CANDIDATE = 15115;
    inline constexpr int32_t ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 15116;
    inline constexpr int32_t ERROR_MRM_RESOURCE_TYPE_MISMATCH = 15117;
    inline constexpr int32_t ERROR_MRM_DUPLICATE_MAP_NAME = 15118;
    inline constexpr int32_t ERROR_MRM_DUPLICATE_ENTRY = 15119;
    inline constexpr int32_t ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 15120;
    inline constexpr int32_t ERROR_MRM_FILEPATH_TOO_LONG = 15121;
    inline constexpr int32_t ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 15122;
    inline constexpr int32_t ERROR_MRM_INVALID_PRI_FILE = 15126;
    inline constexpr int32_t ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 15127;
    inline constexpr int32_t ERROR_MRM_MAP_NOT_FOUND = 15135;
    inline constexpr int32_t ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 15136;
    inline constexpr int32_t ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 15137;
    inline constexpr int32_t ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 15138;
    inline constexpr int32_t ERROR_MRM_AUTOMERGE_ENABLED = 15139;
    inline constexpr int32_t ERROR_MRM_TOO_MANY_RESOURCES = 15140;
    inline constexpr int32_t ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE = 15141;
    inline constexpr int32_t ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE = 15142;
    inline constexpr int32_t ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = 15143;
    inline constexpr int32_t ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST = 15144;
    inline constexpr int32_t ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT = 15145;
    inline constexpr int32_t ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE = 15146;
    inline constexpr int32_t ERROR_MRM_GENERATION_COUNT_MISMATCH = 15147;
    inline constexpr int32_t ERROR_PRI_MERGE_VERSION_MISMATCH = 15148;
    inline constexpr int32_t ERROR_PRI_MERGE_MISSING_SCHEMA = 15149;
    inline constexpr int32_t ERROR_PRI_MERGE_LOAD_FILE_FAILED = 15150;
    inline constexpr int32_t ERROR_PRI_MERGE_ADD_FILE_FAILED = 15151;
    inline constexpr int32_t ERROR_PRI_MERGE_WRITE_FILE_FAILED = 15152;
    inline constexpr int32_t ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED = 15153;
    inline constexpr int32_t ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED = 15154;
    inline constexpr int32_t ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED = 15155;
    inline constexpr int32_t ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = 15156;
    inline constexpr int32_t ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED = 15157;
    inline constexpr int32_t ERROR_PRI_MERGE_INVALID_FILE_NAME = 15158;
    inline constexpr int32_t ERROR_MRM_PACKAGE_NOT_FOUND = 15159;
    inline constexpr int32_t ERROR_MRM_MISSING_DEFAULT_LANGUAGE = 15160;
    inline constexpr int32_t ERROR_MCA_INVALID_CAPABILITIES_STRING = 15200;
    inline constexpr int32_t ERROR_MCA_INVALID_VCP_VERSION = 15201;
    inline constexpr int32_t ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 15202;
    inline constexpr int32_t ERROR_MCA_MCCS_VERSION_MISMATCH = 15203;
    inline constexpr int32_t ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 15204;
    inline constexpr int32_t ERROR_MCA_INTERNAL_ERROR = 15205;
    inline constexpr int32_t ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 15206;
    inline constexpr int32_t ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 15207;
    inline constexpr int32_t ERROR_AMBIGUOUS_SYSTEM_DEVICE = 15250;
    inline constexpr int32_t ERROR_SYSTEM_DEVICE_NOT_FOUND = 15299;
    inline constexpr int32_t ERROR_HASH_NOT_SUPPORTED = 15300;
    inline constexpr int32_t ERROR_HASH_NOT_PRESENT = 15301;
    inline constexpr int32_t ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 15321;
    inline constexpr int32_t ERROR_GPIO_CLIENT_INFORMATION_INVALID = 15322;
    inline constexpr int32_t ERROR_GPIO_VERSION_NOT_SUPPORTED = 15323;
    inline constexpr int32_t ERROR_GPIO_INVALID_REGISTRATION_PACKET = 15324;
    inline constexpr int32_t ERROR_GPIO_OPERATION_DENIED = 15325;
    inline constexpr int32_t ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = 15326;
    inline constexpr int32_t ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = 15327;
    inline constexpr int32_t ERROR_CANNOT_SWITCH_RUNLEVEL = 15400;
    inline constexpr int32_t ERROR_INVALID_RUNLEVEL_SETTING = 15401;
    inline constexpr int32_t ERROR_RUNLEVEL_SWITCH_TIMEOUT = 15402;
    inline constexpr int32_t ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 15403;
    inline constexpr int32_t ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = 15404;
    inline constexpr int32_t ERROR_SERVICES_FAILED_AUTOSTART = 15405;
    inline constexpr int32_t ERROR_COM_TASK_STOP_PENDING = 15501;
    inline constexpr int32_t ERROR_INSTALL_OPEN_PACKAGE_FAILED = 15600;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_NOT_FOUND = 15601;
    inline constexpr int32_t ERROR_INSTALL_INVALID_PACKAGE = 15602;
    inline constexpr int32_t ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = 15603;
    inline constexpr int32_t ERROR_INSTALL_OUT_OF_DISK_SPACE = 15604;
    inline constexpr int32_t ERROR_INSTALL_NETWORK_FAILURE = 15605;
    inline constexpr int32_t ERROR_INSTALL_REGISTRATION_FAILURE = 15606;
    inline constexpr int32_t ERROR_INSTALL_DEREGISTRATION_FAILURE = 15607;
    inline constexpr int32_t ERROR_INSTALL_CANCEL = 15608;
    inline constexpr int32_t ERROR_INSTALL_FAILED = 15609;
    inline constexpr int32_t ERROR_REMOVE_FAILED = 15610;
    inline constexpr int32_t ERROR_PACKAGE_ALREADY_EXISTS = 15611;
    inline constexpr int32_t ERROR_NEEDS_REMEDIATION = 15612;
    inline constexpr int32_t ERROR_INSTALL_PREREQUISITE_FAILED = 15613;
    inline constexpr int32_t ERROR_PACKAGE_REPOSITORY_CORRUPTED = 15614;
    inline constexpr int32_t ERROR_INSTALL_POLICY_FAILURE = 15615;
    inline constexpr int32_t ERROR_PACKAGE_UPDATING = 15616;
    inline constexpr int32_t ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = 15617;
    inline constexpr int32_t ERROR_PACKAGES_IN_USE = 15618;
    inline constexpr int32_t ERROR_RECOVERY_FILE_CORRUPT = 15619;
    inline constexpr int32_t ERROR_INVALID_STAGED_SIGNATURE = 15620;
    inline constexpr int32_t ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = 15621;
    inline constexpr int32_t ERROR_INSTALL_PACKAGE_DOWNGRADE = 15622;
    inline constexpr int32_t ERROR_SYSTEM_NEEDS_REMEDIATION = 15623;
    inline constexpr int32_t ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = 15624;
    inline constexpr int32_t ERROR_RESILIENCY_FILE_CORRUPT = 15625;
    inline constexpr int32_t ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = 15626;
    inline constexpr int32_t ERROR_PACKAGE_MOVE_FAILED = 15627;
    inline constexpr int32_t ERROR_INSTALL_VOLUME_NOT_EMPTY = 15628;
    inline constexpr int32_t ERROR_INSTALL_VOLUME_OFFLINE = 15629;
    inline constexpr int32_t ERROR_INSTALL_VOLUME_CORRUPT = 15630;
    inline constexpr int32_t ERROR_NEEDS_REGISTRATION = 15631;
    inline constexpr int32_t ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE = 15632;
    inline constexpr int32_t ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED = 15633;
    inline constexpr int32_t ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE = 15634;
    inline constexpr int32_t ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM = 15635;
    inline constexpr int32_t ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING = 15636;
    inline constexpr int32_t ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE = 15637;
    inline constexpr int32_t ERROR_PACKAGE_STAGING_ONHOLD = 15638;
    inline constexpr int32_t ERROR_INSTALL_INVALID_RELATED_SET_UPDATE = 15639;
    inline constexpr int32_t ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15640;
    inline constexpr int32_t ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF = 15641;
    inline constexpr int32_t ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED = 15642;
    inline constexpr int32_t ERROR_PACKAGES_REPUTATION_CHECK_FAILED = 15643;
    inline constexpr int32_t ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT = 15644;
    inline constexpr int32_t ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED = 15645;
    inline constexpr int32_t ERROR_APPINSTALLER_ACTIVATION_BLOCKED = 15646;
    inline constexpr int32_t ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED = 15647;
    inline constexpr int32_t ERROR_APPX_RAW_DATA_WRITE_FAILED = 15648;
    inline constexpr int32_t ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE = 15649;
    inline constexpr int32_t ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE = 15650;
    inline constexpr int32_t ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY = 15651;
    inline constexpr int32_t ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY = 15652;
    inline constexpr int32_t ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER = 15653;
    inline constexpr int32_t ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED = 15654;
    inline constexpr int32_t ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE = 15655;
    inline constexpr int32_t ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES = 15656;
    inline constexpr int32_t ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED = 15657;
    inline constexpr int32_t ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST = 15658;
    inline constexpr int32_t ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT = 15659;
    inline constexpr int32_t ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15660;
    inline constexpr int32_t ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15661;
    inline constexpr int32_t ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED = 15662;
    inline constexpr int32_t ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15663;
    inline constexpr int32_t APPMODEL_ERROR_NO_PACKAGE = 15700;
    inline constexpr int32_t APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = 15701;
    inline constexpr int32_t APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT = 15702;
    inline constexpr int32_t APPMODEL_ERROR_NO_APPLICATION = 15703;
    inline constexpr int32_t APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED = 15704;
    inline constexpr int32_t APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID = 15705;
    inline constexpr int32_t APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE = 15706;
    inline constexpr int32_t APPMODEL_ERROR_NO_MUTABLE_DIRECTORY = 15707;
    inline constexpr int32_t ERROR_STATE_LOAD_STORE_FAILED = 15800;
    inline constexpr int32_t ERROR_STATE_GET_VERSION_FAILED = 15801;
    inline constexpr int32_t ERROR_STATE_SET_VERSION_FAILED = 15802;
    inline constexpr int32_t ERROR_STATE_STRUCTURED_RESET_FAILED = 15803;
    inline constexpr int32_t ERROR_STATE_OPEN_CONTAINER_FAILED = 15804;
    inline constexpr int32_t ERROR_STATE_CREATE_CONTAINER_FAILED = 15805;
    inline constexpr int32_t ERROR_STATE_DELETE_CONTAINER_FAILED = 15806;
    inline constexpr int32_t ERROR_STATE_READ_SETTING_FAILED = 15807;
    inline constexpr int32_t ERROR_STATE_WRITE_SETTING_FAILED = 15808;
    inline constexpr int32_t ERROR_STATE_DELETE_SETTING_FAILED = 15809;
    inline constexpr int32_t ERROR_STATE_QUERY_SETTING_FAILED = 15810;
    inline constexpr int32_t ERROR_STATE_READ_COMPOSITE_SETTING_FAILED = 15811;
    inline constexpr int32_t ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED = 15812;
    inline constexpr int32_t ERROR_STATE_ENUMERATE_CONTAINER_FAILED = 15813;
    inline constexpr int32_t ERROR_STATE_ENUMERATE_SETTINGS_FAILED = 15814;
    inline constexpr int32_t ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15815;
    inline constexpr int32_t ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15816;
    inline constexpr int32_t ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = 15817;
    inline constexpr int32_t ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = 15818;
    inline constexpr int32_t ERROR_API_UNAVAILABLE = 15841;
    inline constexpr int32_t STORE_ERROR_UNLICENSED = 15861;
    inline constexpr int32_t STORE_ERROR_UNLICENSED_USER = 15862;
    inline constexpr int32_t STORE_ERROR_PENDING_COM_TRANSACTION = 15863;
    inline constexpr int32_t STORE_ERROR_LICENSE_REVOKED = 15864;
    inline constexpr int32_t SEVERITY_SUCCESS = 0;
    inline constexpr int32_t SEVERITY_ERROR = 1;
    inline constexpr int32_t FACILITY_NT_BIT = 268435456;
    inline constexpr int32_t NOERROR = 0;
    inline constexpr int32_t E_UNEXPECTED = -2147418113;
    inline constexpr int32_t E_NOTIMPL = -2147467263;
    inline constexpr int32_t E_OUTOFMEMORY = -2147024882;
    inline constexpr int32_t E_INVALIDARG = -2147024809;
    inline constexpr int32_t E_NOINTERFACE = -2147467262;
    inline constexpr int32_t E_POINTER = -2147467261;
    inline constexpr int32_t E_HANDLE = -2147024890;
    inline constexpr int32_t E_ABORT = -2147467260;
    inline constexpr int32_t E_FAIL = -2147467259;
    inline constexpr int32_t E_ACCESSDENIED = -2147024891;
    inline constexpr int32_t E_PENDING = -2147483638;
    inline constexpr int32_t E_BOUNDS = -2147483637;
    inline constexpr int32_t E_CHANGED_STATE = -2147483636;
    inline constexpr int32_t E_ILLEGAL_STATE_CHANGE = -2147483635;
    inline constexpr int32_t E_ILLEGAL_METHOD_CALL = -2147483634;
    inline constexpr int32_t RO_E_METADATA_NAME_NOT_FOUND = -2147483633;
    inline constexpr int32_t RO_E_METADATA_NAME_IS_NAMESPACE = -2147483632;
    inline constexpr int32_t RO_E_METADATA_INVALID_TYPE_FORMAT = -2147483631;
    inline constexpr int32_t RO_E_INVALID_METADATA_FILE = -2147483630;
    inline constexpr int32_t RO_E_CLOSED = -2147483629;
    inline constexpr int32_t RO_E_EXCLUSIVE_WRITE = -2147483628;
    inline constexpr int32_t RO_E_CHANGE_NOTIFICATION_IN_PROGRESS = -2147483627;
    inline constexpr int32_t RO_E_ERROR_STRING_NOT_FOUND = -2147483626;
    inline constexpr int32_t E_STRING_NOT_NULL_TERMINATED = -2147483625;
    inline constexpr int32_t E_ILLEGAL_DELEGATE_ASSIGNMENT = -2147483624;
    inline constexpr int32_t E_ASYNC_OPERATION_NOT_STARTED = -2147483623;
    inline constexpr int32_t E_APPLICATION_EXITING = -2147483622;
    inline constexpr int32_t E_APPLICATION_VIEW_EXITING = -2147483621;
    inline constexpr int32_t RO_E_MUST_BE_AGILE = -2147483620;
    inline constexpr int32_t RO_E_UNSUPPORTED_FROM_MTA = -2147483619;
    inline constexpr int32_t RO_E_COMMITTED = -2147483618;
    inline constexpr int32_t RO_E_BLOCKED_CROSS_ASTA_CALL = -2147483617;
    inline constexpr int32_t RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER = -2147483616;
    inline constexpr int32_t RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER = -2147483615;
    inline constexpr int32_t CO_E_INIT_TLS = -2147467258;
    inline constexpr int32_t CO_E_INIT_SHARED_ALLOCATOR = -2147467257;
    inline constexpr int32_t CO_E_INIT_MEMORY_ALLOCATOR = -2147467256;
    inline constexpr int32_t CO_E_INIT_CLASS_CACHE = -2147467255;
    inline constexpr int32_t CO_E_INIT_RPC_CHANNEL = -2147467254;
    inline constexpr int32_t CO_E_INIT_TLS_SET_CHANNEL_CONTROL = -2147467253;
    inline constexpr int32_t CO_E_INIT_TLS_CHANNEL_CONTROL = -2147467252;
    inline constexpr int32_t CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = -2147467251;
    inline constexpr int32_t CO_E_INIT_SCM_MUTEX_EXISTS = -2147467250;
    inline constexpr int32_t CO_E_INIT_SCM_FILE_MAPPING_EXISTS = -2147467249;
    inline constexpr int32_t CO_E_INIT_SCM_MAP_VIEW_OF_FILE = -2147467248;
    inline constexpr int32_t CO_E_INIT_SCM_EXEC_FAILURE = -2147467247;
    inline constexpr int32_t CO_E_INIT_ONLY_SINGLE_THREADED = -2147467246;
    inline constexpr int32_t CO_E_CANT_REMOTE = -2147467245;
    inline constexpr int32_t CO_E_BAD_SERVER_NAME = -2147467244;
    inline constexpr int32_t CO_E_WRONG_SERVER_IDENTITY = -2147467243;
    inline constexpr int32_t CO_E_OLE1DDE_DISABLED = -2147467242;
    inline constexpr int32_t CO_E_RUNAS_SYNTAX = -2147467241;
    inline constexpr int32_t CO_E_CREATEPROCESS_FAILURE = -2147467240;
    inline constexpr int32_t CO_E_RUNAS_CREATEPROCESS_FAILURE = -2147467239;
    inline constexpr int32_t CO_E_RUNAS_LOGON_FAILURE = -2147467238;
    inline constexpr int32_t CO_E_LAUNCH_PERMSSION_DENIED = -2147467237;
    inline constexpr int32_t CO_E_START_SERVICE_FAILURE = -2147467236;
    inline constexpr int32_t CO_E_REMOTE_COMMUNICATION_FAILURE = -2147467235;
    inline constexpr int32_t CO_E_SERVER_START_TIMEOUT = -2147467234;
    inline constexpr int32_t CO_E_CLSREG_INCONSISTENT = -2147467233;
    inline constexpr int32_t CO_E_IIDREG_INCONSISTENT = -2147467232;
    inline constexpr int32_t CO_E_NOT_SUPPORTED = -2147467231;
    inline constexpr int32_t CO_E_RELOAD_DLL = -2147467230;
    inline constexpr int32_t CO_E_MSI_ERROR = -2147467229;
    inline constexpr int32_t CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT = -2147467228;
    inline constexpr int32_t CO_E_SERVER_PAUSED = -2147467227;
    inline constexpr int32_t CO_E_SERVER_NOT_PAUSED = -2147467226;
    inline constexpr int32_t CO_E_CLASS_DISABLED = -2147467225;
    inline constexpr int32_t CO_E_CLRNOTAVAILABLE = -2147467224;
    inline constexpr int32_t CO_E_ASYNC_WORK_REJECTED = -2147467223;
    inline constexpr int32_t CO_E_SERVER_INIT_TIMEOUT = -2147467222;
    inline constexpr int32_t CO_E_NO_SECCTX_IN_ACTIVATE = -2147467221;
    inline constexpr int32_t CO_E_TRACKER_CONFIG = -2147467216;
    inline constexpr int32_t CO_E_THREADPOOL_CONFIG = -2147467215;
    inline constexpr int32_t CO_E_SXS_CONFIG = -2147467214;
    inline constexpr int32_t CO_E_MALFORMED_SPN = -2147467213;
    inline constexpr int32_t CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN = -2147467212;
    inline constexpr int32_t CO_E_PREMATURE_STUB_RUNDOWN = -2147467211;
    inline constexpr int32_t S_OK = 0;
    inline constexpr int32_t S_FALSE = 1;
    inline constexpr int32_t OLE_E_FIRST = -2147221504;
    inline constexpr int32_t OLE_E_LAST = -2147221249;
    inline constexpr int32_t OLE_S_FIRST = 262144;
    inline constexpr int32_t OLE_S_LAST = 262399;
    inline constexpr int32_t OLE_E_OLEVERB = -2147221504;
    inline constexpr int32_t OLE_E_ADVF = -2147221503;
    inline constexpr int32_t OLE_E_ENUM_NOMORE = -2147221502;
    inline constexpr int32_t OLE_E_ADVISENOTSUPPORTED = -2147221501;
    inline constexpr int32_t OLE_E_NOCONNECTION = -2147221500;
    inline constexpr int32_t OLE_E_NOTRUNNING = -2147221499;
    inline constexpr int32_t OLE_E_NOCACHE = -2147221498;
    inline constexpr int32_t OLE_E_BLANK = -2147221497;
    inline constexpr int32_t OLE_E_CLASSDIFF = -2147221496;
    inline constexpr int32_t OLE_E_CANT_GETMONIKER = -2147221495;
    inline constexpr int32_t OLE_E_CANT_BINDTOSOURCE = -2147221494;
    inline constexpr int32_t OLE_E_STATIC = -2147221493;
    inline constexpr int32_t OLE_E_PROMPTSAVECANCELLED = -2147221492;
    inline constexpr int32_t OLE_E_INVALIDRECT = -2147221491;
    inline constexpr int32_t OLE_E_WRONGCOMPOBJ = -2147221490;
    inline constexpr int32_t OLE_E_INVALIDHWND = -2147221489;
    inline constexpr int32_t OLE_E_NOT_INPLACEACTIVE = -2147221488;
    inline constexpr int32_t OLE_E_CANTCONVERT = -2147221487;
    inline constexpr int32_t OLE_E_NOSTORAGE = -2147221486;
    inline constexpr int32_t DV_E_FORMATETC = -2147221404;
    inline constexpr int32_t DV_E_DVTARGETDEVICE = -2147221403;
    inline constexpr int32_t DV_E_STGMEDIUM = -2147221402;
    inline constexpr int32_t DV_E_STATDATA = -2147221401;
    inline constexpr int32_t DV_E_LINDEX = -2147221400;
    inline constexpr int32_t DV_E_TYMED = -2147221399;
    inline constexpr int32_t DV_E_CLIPFORMAT = -2147221398;
    inline constexpr int32_t DV_E_DVASPECT = -2147221397;
    inline constexpr int32_t DV_E_DVTARGETDEVICE_SIZE = -2147221396;
    inline constexpr int32_t DV_E_NOIVIEWOBJECT = -2147221395;
    inline constexpr int32_t DRAGDROP_E_FIRST = -2147221248;
    inline constexpr int32_t DRAGDROP_E_LAST = -2147221233;
    inline constexpr int32_t DRAGDROP_S_FIRST = 262400;
    inline constexpr int32_t DRAGDROP_S_LAST = 262415;
    inline constexpr int32_t DRAGDROP_E_NOTREGISTERED = -2147221248;
    inline constexpr int32_t DRAGDROP_E_ALREADYREGISTERED = -2147221247;
    inline constexpr int32_t DRAGDROP_E_INVALIDHWND = -2147221246;
    inline constexpr int32_t DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED = -2147221245;
    inline constexpr int32_t CLASSFACTORY_E_FIRST = -2147221232;
    inline constexpr int32_t CLASSFACTORY_E_LAST = -2147221217;
    inline constexpr int32_t CLASSFACTORY_S_FIRST = 262416;
    inline constexpr int32_t CLASSFACTORY_S_LAST = 262431;
    inline constexpr int32_t CLASS_E_NOAGGREGATION = -2147221232;
    inline constexpr int32_t CLASS_E_CLASSNOTAVAILABLE = -2147221231;
    inline constexpr int32_t CLASS_E_NOTLICENSED = -2147221230;
    inline constexpr int32_t MARSHAL_E_FIRST = -2147221216;
    inline constexpr int32_t MARSHAL_E_LAST = -2147221201;
    inline constexpr int32_t MARSHAL_S_FIRST = 262432;
    inline constexpr int32_t MARSHAL_S_LAST = 262447;
    inline constexpr int32_t DATA_E_FIRST = -2147221200;
    inline constexpr int32_t DATA_E_LAST = -2147221185;
    inline constexpr int32_t DATA_S_FIRST = 262448;
    inline constexpr int32_t DATA_S_LAST = 262463;
    inline constexpr int32_t VIEW_E_FIRST = -2147221184;
    inline constexpr int32_t VIEW_E_LAST = -2147221169;
    inline constexpr int32_t VIEW_S_FIRST = 262464;
    inline constexpr int32_t VIEW_S_LAST = 262479;
    inline constexpr int32_t VIEW_E_DRAW = -2147221184;
    inline constexpr int32_t REGDB_E_FIRST = -2147221168;
    inline constexpr int32_t REGDB_E_LAST = -2147221153;
    inline constexpr int32_t REGDB_S_FIRST = 262480;
    inline constexpr int32_t REGDB_S_LAST = 262495;
    inline constexpr int32_t REGDB_E_READREGDB = -2147221168;
    inline constexpr int32_t REGDB_E_WRITEREGDB = -2147221167;
    inline constexpr int32_t REGDB_E_KEYMISSING = -2147221166;
    inline constexpr int32_t REGDB_E_INVALIDVALUE = -2147221165;
    inline constexpr int32_t REGDB_E_CLASSNOTREG = -2147221164;
    inline constexpr int32_t REGDB_E_IIDNOTREG = -2147221163;
    inline constexpr int32_t REGDB_E_BADTHREADINGMODEL = -2147221162;
    inline constexpr int32_t REGDB_E_PACKAGEPOLICYVIOLATION = -2147221161;
    inline constexpr int32_t CAT_E_FIRST = -2147221152;
    inline constexpr int32_t CAT_E_LAST = -2147221151;
    inline constexpr int32_t CAT_E_CATIDNOEXIST = -2147221152;
    inline constexpr int32_t CAT_E_NODESCRIPTION = -2147221151;
    inline constexpr int32_t CS_E_FIRST = -2147221148;
    inline constexpr int32_t CS_E_LAST = -2147221137;
    inline constexpr int32_t CS_E_PACKAGE_NOTFOUND = -2147221148;
    inline constexpr int32_t CS_E_NOT_DELETABLE = -2147221147;
    inline constexpr int32_t CS_E_CLASS_NOTFOUND = -2147221146;
    inline constexpr int32_t CS_E_INVALID_VERSION = -2147221145;
    inline constexpr int32_t CS_E_NO_CLASSSTORE = -2147221144;
    inline constexpr int32_t CS_E_OBJECT_NOTFOUND = -2147221143;
    inline constexpr int32_t CS_E_OBJECT_ALREADY_EXISTS = -2147221142;
    inline constexpr int32_t CS_E_INVALID_PATH = -2147221141;
    inline constexpr int32_t CS_E_NETWORK_ERROR = -2147221140;
    inline constexpr int32_t CS_E_ADMIN_LIMIT_EXCEEDED = -2147221139;
    inline constexpr int32_t CS_E_SCHEMA_MISMATCH = -2147221138;
    inline constexpr int32_t CS_E_INTERNAL_ERROR = -2147221137;
    inline constexpr int32_t CACHE_E_FIRST = -2147221136;
    inline constexpr int32_t CACHE_E_LAST = -2147221121;
    inline constexpr int32_t CACHE_S_FIRST = 262512;
    inline constexpr int32_t CACHE_S_LAST = 262527;
    inline constexpr int32_t CACHE_E_NOCACHE_UPDATED = -2147221136;
    inline constexpr int32_t OLEOBJ_E_FIRST = -2147221120;
    inline constexpr int32_t OLEOBJ_E_LAST = -2147221105;
    inline constexpr int32_t OLEOBJ_S_FIRST = 262528;
    inline constexpr int32_t OLEOBJ_S_LAST = 262543;
    inline constexpr int32_t OLEOBJ_E_NOVERBS = -2147221120;
    inline constexpr int32_t OLEOBJ_E_INVALIDVERB = -2147221119;
    inline constexpr int32_t CLIENTSITE_E_FIRST = -2147221104;
    inline constexpr int32_t CLIENTSITE_E_LAST = -2147221089;
    inline constexpr int32_t CLIENTSITE_S_FIRST = 262544;
    inline constexpr int32_t CLIENTSITE_S_LAST = 262559;
    inline constexpr int32_t INPLACE_E_NOTUNDOABLE = -2147221088;
    inline constexpr int32_t INPLACE_E_NOTOOLSPACE = -2147221087;
    inline constexpr int32_t INPLACE_E_FIRST = -2147221088;
    inline constexpr int32_t INPLACE_E_LAST = -2147221073;
    inline constexpr int32_t INPLACE_S_FIRST = 262560;
    inline constexpr int32_t INPLACE_S_LAST = 262575;
    inline constexpr int32_t ENUM_E_FIRST = -2147221072;
    inline constexpr int32_t ENUM_E_LAST = -2147221057;
    inline constexpr int32_t ENUM_S_FIRST = 262576;
    inline constexpr int32_t ENUM_S_LAST = 262591;
    inline constexpr int32_t CONVERT10_E_FIRST = -2147221056;
    inline constexpr int32_t CONVERT10_E_LAST = -2147221041;
    inline constexpr int32_t CONVERT10_S_FIRST = 262592;
    inline constexpr int32_t CONVERT10_S_LAST = 262607;
    inline constexpr int32_t CONVERT10_E_OLESTREAM_GET = -2147221056;
    inline constexpr int32_t CONVERT10_E_OLESTREAM_PUT = -2147221055;
    inline constexpr int32_t CONVERT10_E_OLESTREAM_FMT = -2147221054;
    inline constexpr int32_t CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = -2147221053;
    inline constexpr int32_t CONVERT10_E_STG_FMT = -2147221052;
    inline constexpr int32_t CONVERT10_E_STG_NO_STD_STREAM = -2147221051;
    inline constexpr int32_t CONVERT10_E_STG_DIB_TO_BITMAP = -2147221050;
    inline constexpr int32_t CLIPBRD_E_FIRST = -2147221040;
    inline constexpr int32_t CLIPBRD_E_LAST = -2147221025;
    inline constexpr int32_t CLIPBRD_S_FIRST = 262608;
    inline constexpr int32_t CLIPBRD_S_LAST = 262623;
    inline constexpr int32_t CLIPBRD_E_CANT_OPEN = -2147221040;
    inline constexpr int32_t CLIPBRD_E_CANT_EMPTY = -2147221039;
    inline constexpr int32_t CLIPBRD_E_CANT_SET = -2147221038;
    inline constexpr int32_t CLIPBRD_E_BAD_DATA = -2147221037;
    inline constexpr int32_t CLIPBRD_E_CANT_CLOSE = -2147221036;
    inline constexpr int32_t MK_E_FIRST = -2147221024;
    inline constexpr int32_t MK_E_LAST = -2147221009;
    inline constexpr int32_t MK_S_FIRST = 262624;
    inline constexpr int32_t MK_S_LAST = 262639;
    inline constexpr int32_t MK_E_CONNECTMANUALLY = -2147221024;
    inline constexpr int32_t MK_E_EXCEEDEDDEADLINE = -2147221023;
    inline constexpr int32_t MK_E_NEEDGENERIC = -2147221022;
    inline constexpr int32_t MK_E_UNAVAILABLE = -2147221021;
    inline constexpr int32_t MK_E_SYNTAX = -2147221020;
    inline constexpr int32_t MK_E_NOOBJECT = -2147221019;
    inline constexpr int32_t MK_E_INVALIDEXTENSION = -2147221018;
    inline constexpr int32_t MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = -2147221017;
    inline constexpr int32_t MK_E_NOTBINDABLE = -2147221016;
    inline constexpr int32_t MK_E_NOTBOUND = -2147221015;
    inline constexpr int32_t MK_E_CANTOPENFILE = -2147221014;
    inline constexpr int32_t MK_E_MUSTBOTHERUSER = -2147221013;
    inline constexpr int32_t MK_E_NOINVERSE = -2147221012;
    inline constexpr int32_t MK_E_NOSTORAGE = -2147221011;
    inline constexpr int32_t MK_E_NOPREFIX = -2147221010;
    inline constexpr int32_t MK_E_ENUMERATION_FAILED = -2147221009;
    inline constexpr int32_t CO_E_FIRST = -2147221008;
    inline constexpr int32_t CO_E_LAST = -2147220993;
    inline constexpr int32_t CO_S_FIRST = 262640;
    inline constexpr int32_t CO_S_LAST = 262655;
    inline constexpr int32_t CO_E_NOTINITIALIZED = -2147221008;
    inline constexpr int32_t CO_E_ALREADYINITIALIZED = -2147221007;
    inline constexpr int32_t CO_E_CANTDETERMINECLASS = -2147221006;
    inline constexpr int32_t CO_E_CLASSSTRING = -2147221005;
    inline constexpr int32_t CO_E_IIDSTRING = -2147221004;
    inline constexpr int32_t CO_E_APPNOTFOUND = -2147221003;
    inline constexpr int32_t CO_E_APPSINGLEUSE = -2147221002;
    inline constexpr int32_t CO_E_ERRORINAPP = -2147221001;
    inline constexpr int32_t CO_E_DLLNOTFOUND = -2147221000;
    inline constexpr int32_t CO_E_ERRORINDLL = -2147220999;
    inline constexpr int32_t CO_E_WRONGOSFORAPP = -2147220998;
    inline constexpr int32_t CO_E_OBJNOTREG = -2147220997;
    inline constexpr int32_t CO_E_OBJISREG = -2147220996;
    inline constexpr int32_t CO_E_OBJNOTCONNECTED = -2147220995;
    inline constexpr int32_t CO_E_APPDIDNTREG = -2147220994;
    inline constexpr int32_t CO_E_RELEASED = -2147220993;
    inline constexpr int32_t EVENT_E_FIRST = -2147220992;
    inline constexpr int32_t EVENT_E_LAST = -2147220961;
    inline constexpr int32_t EVENT_S_FIRST = 262656;
    inline constexpr int32_t EVENT_S_LAST = 262687;
    inline constexpr int32_t EVENT_S_SOME_SUBSCRIBERS_FAILED = 262656;
    inline constexpr int32_t EVENT_E_ALL_SUBSCRIBERS_FAILED = -2147220991;
    inline constexpr int32_t EVENT_S_NOSUBSCRIBERS = 262658;
    inline constexpr int32_t EVENT_E_QUERYSYNTAX = -2147220989;
    inline constexpr int32_t EVENT_E_QUERYFIELD = -2147220988;
    inline constexpr int32_t EVENT_E_INTERNALEXCEPTION = -2147220987;
    inline constexpr int32_t EVENT_E_INTERNALERROR = -2147220986;
    inline constexpr int32_t EVENT_E_INVALID_PER_USER_SID = -2147220985;
    inline constexpr int32_t EVENT_E_USER_EXCEPTION = -2147220984;
    inline constexpr int32_t EVENT_E_TOO_MANY_METHODS = -2147220983;
    inline constexpr int32_t EVENT_E_MISSING_EVENTCLASS = -2147220982;
    inline constexpr int32_t EVENT_E_NOT_ALL_REMOVED = -2147220981;
    inline constexpr int32_t EVENT_E_COMPLUS_NOT_INSTALLED = -2147220980;
    inline constexpr int32_t EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT = -2147220979;
    inline constexpr int32_t EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT = -2147220978;
    inline constexpr int32_t EVENT_E_INVALID_EVENT_CLASS_PARTITION = -2147220977;
    inline constexpr int32_t EVENT_E_PER_USER_SID_NOT_LOGGED_ON = -2147220976;
    inline constexpr int32_t TPC_E_INVALID_PROPERTY = -2147220927;
    inline constexpr int32_t TPC_E_NO_DEFAULT_TABLET = -2147220974;
    inline constexpr int32_t TPC_E_UNKNOWN_PROPERTY = -2147220965;
    inline constexpr int32_t TPC_E_INVALID_INPUT_RECT = -2147220967;
    inline constexpr int32_t TPC_E_INVALID_STROKE = -2147220958;
    inline constexpr int32_t TPC_E_INITIALIZE_FAIL = -2147220957;
    inline constexpr int32_t TPC_E_NOT_RELEVANT = -2147220942;
    inline constexpr int32_t TPC_E_INVALID_PACKET_DESCRIPTION = -2147220941;
    inline constexpr int32_t TPC_E_RECOGNIZER_NOT_REGISTERED = -2147220939;
    inline constexpr int32_t TPC_E_INVALID_RIGHTS = -2147220938;
    inline constexpr int32_t TPC_E_OUT_OF_ORDER_CALL = -2147220937;
    inline constexpr int32_t TPC_E_QUEUE_FULL = -2147220936;
    inline constexpr int32_t TPC_E_INVALID_CONFIGURATION = -2147220935;
    inline constexpr int32_t TPC_E_INVALID_DATA_FROM_RECOGNIZER = -2147220934;
    inline constexpr int32_t TPC_S_TRUNCATED = 262738;
    inline constexpr int32_t TPC_S_INTERRUPTED = 262739;
    inline constexpr int32_t TPC_S_NO_DATA_TO_PROCESS = 262740;
    inline constexpr uint32_t XACT_E_FIRST = 0x8004d000;
    inline constexpr uint32_t XACT_E_LAST = 0x8004d02b;
    inline constexpr int32_t XACT_S_FIRST = 315392;
    inline constexpr int32_t XACT_S_LAST = 315408;
    inline constexpr int32_t XACT_E_ALREADYOTHERSINGLEPHASE = -2147168256;
    inline constexpr int32_t XACT_E_CANTRETAIN = -2147168255;
    inline constexpr int32_t XACT_E_COMMITFAILED = -2147168254;
    inline constexpr int32_t XACT_E_COMMITPREVENTED = -2147168253;
    inline constexpr int32_t XACT_E_HEURISTICABORT = -2147168252;
    inline constexpr int32_t XACT_E_HEURISTICCOMMIT = -2147168251;
    inline constexpr int32_t XACT_E_HEURISTICDAMAGE = -2147168250;
    inline constexpr int32_t XACT_E_HEURISTICDANGER = -2147168249;
    inline constexpr int32_t XACT_E_ISOLATIONLEVEL = -2147168248;
    inline constexpr int32_t XACT_E_NOASYNC = -2147168247;
    inline constexpr int32_t XACT_E_NOENLIST = -2147168246;
    inline constexpr int32_t XACT_E_NOISORETAIN = -2147168245;
    inline constexpr int32_t XACT_E_NORESOURCE = -2147168244;
    inline constexpr int32_t XACT_E_NOTCURRENT = -2147168243;
    inline constexpr int32_t XACT_E_NOTRANSACTION = -2147168242;
    inline constexpr int32_t XACT_E_NOTSUPPORTED = -2147168241;
    inline constexpr int32_t XACT_E_UNKNOWNRMGRID = -2147168240;
    inline constexpr int32_t XACT_E_WRONGSTATE = -2147168239;
    inline constexpr int32_t XACT_E_WRONGUOW = -2147168238;
    inline constexpr int32_t XACT_E_XTIONEXISTS = -2147168237;
    inline constexpr int32_t XACT_E_NOIMPORTOBJECT = -2147168236;
    inline constexpr int32_t XACT_E_INVALIDCOOKIE = -2147168235;
    inline constexpr int32_t XACT_E_INDOUBT = -2147168234;
    inline constexpr int32_t XACT_E_NOTIMEOUT = -2147168233;
    inline constexpr int32_t XACT_E_ALREADYINPROGRESS = -2147168232;
    inline constexpr int32_t XACT_E_ABORTED = -2147168231;
    inline constexpr int32_t XACT_E_LOGFULL = -2147168230;
    inline constexpr int32_t XACT_E_TMNOTAVAILABLE = -2147168229;
    inline constexpr int32_t XACT_E_CONNECTION_DOWN = -2147168228;
    inline constexpr int32_t XACT_E_CONNECTION_DENIED = -2147168227;
    inline constexpr int32_t XACT_E_REENLISTTIMEOUT = -2147168226;
    inline constexpr int32_t XACT_E_TIP_CONNECT_FAILED = -2147168225;
    inline constexpr int32_t XACT_E_TIP_PROTOCOL_ERROR = -2147168224;
    inline constexpr int32_t XACT_E_TIP_PULL_FAILED = -2147168223;
    inline constexpr int32_t XACT_E_DEST_TMNOTAVAILABLE = -2147168222;
    inline constexpr int32_t XACT_E_TIP_DISABLED = -2147168221;
    inline constexpr int32_t XACT_E_NETWORK_TX_DISABLED = -2147168220;
    inline constexpr int32_t XACT_E_PARTNER_NETWORK_TX_DISABLED = -2147168219;
    inline constexpr int32_t XACT_E_XA_TX_DISABLED = -2147168218;
    inline constexpr int32_t XACT_E_UNABLE_TO_READ_DTC_CONFIG = -2147168217;
    inline constexpr int32_t XACT_E_UNABLE_TO_LOAD_DTC_PROXY = -2147168216;
    inline constexpr int32_t XACT_E_ABORTING = -2147168215;
    inline constexpr int32_t XACT_E_PUSH_COMM_FAILURE = -2147168214;
    inline constexpr int32_t XACT_E_PULL_COMM_FAILURE = -2147168213;
    inline constexpr int32_t XACT_E_LU_TX_DISABLED = -2147168212;
    inline constexpr int32_t XACT_E_CLERKNOTFOUND = -2147168128;
    inline constexpr int32_t XACT_E_CLERKEXISTS = -2147168127;
    inline constexpr int32_t XACT_E_RECOVERYINPROGRESS = -2147168126;
    inline constexpr int32_t XACT_E_TRANSACTIONCLOSED = -2147168125;
    inline constexpr int32_t XACT_E_INVALIDLSN = -2147168124;
    inline constexpr int32_t XACT_E_REPLAYREQUEST = -2147168123;
    inline constexpr int32_t XACT_S_ASYNC = 315392;
    inline constexpr int32_t XACT_S_DEFECT = 315393;
    inline constexpr int32_t XACT_S_READONLY = 315394;
    inline constexpr int32_t XACT_S_SOMENORETAIN = 315395;
    inline constexpr int32_t XACT_S_OKINFORM = 315396;
    inline constexpr int32_t XACT_S_MADECHANGESCONTENT = 315397;
    inline constexpr int32_t XACT_S_MADECHANGESINFORM = 315398;
    inline constexpr int32_t XACT_S_ALLNORETAIN = 315399;
    inline constexpr int32_t XACT_S_ABORTING = 315400;
    inline constexpr int32_t XACT_S_SINGLEPHASE = 315401;
    inline constexpr int32_t XACT_S_LOCALLY_OK = 315402;
    inline constexpr int32_t XACT_S_LASTRESOURCEMANAGER = 315408;
    inline constexpr int32_t CONTEXT_E_FIRST = -2147164160;
    inline constexpr int32_t CONTEXT_E_LAST = -2147164113;
    inline constexpr int32_t CONTEXT_S_FIRST = 319488;
    inline constexpr int32_t CONTEXT_S_LAST = 319535;
    inline constexpr int32_t CONTEXT_E_ABORTED = -2147164158;
    inline constexpr int32_t CONTEXT_E_ABORTING = -2147164157;
    inline constexpr int32_t CONTEXT_E_NOCONTEXT = -2147164156;
    inline constexpr int32_t CONTEXT_E_WOULD_DEADLOCK = -2147164155;
    inline constexpr int32_t CONTEXT_E_SYNCH_TIMEOUT = -2147164154;
    inline constexpr int32_t CONTEXT_E_OLDREF = -2147164153;
    inline constexpr int32_t CONTEXT_E_ROLENOTFOUND = -2147164148;
    inline constexpr int32_t CONTEXT_E_TMNOTAVAILABLE = -2147164145;
    inline constexpr int32_t CO_E_ACTIVATIONFAILED = -2147164127;
    inline constexpr int32_t CO_E_ACTIVATIONFAILED_EVENTLOGGED = -2147164126;
    inline constexpr int32_t CO_E_ACTIVATIONFAILED_CATALOGERROR = -2147164125;
    inline constexpr int32_t CO_E_ACTIVATIONFAILED_TIMEOUT = -2147164124;
    inline constexpr int32_t CO_E_INITIALIZATIONFAILED = -2147164123;
    inline constexpr int32_t CONTEXT_E_NOJIT = -2147164122;
    inline constexpr int32_t CONTEXT_E_NOTRANSACTION = -2147164121;
    inline constexpr int32_t CO_E_THREADINGMODEL_CHANGED = -2147164120;
    inline constexpr int32_t CO_E_NOIISINTRINSICS = -2147164119;
    inline constexpr int32_t CO_E_NOCOOKIES = -2147164118;
    inline constexpr int32_t CO_E_DBERROR = -2147164117;
    inline constexpr int32_t CO_E_NOTPOOLED = -2147164116;
    inline constexpr int32_t CO_E_NOTCONSTRUCTED = -2147164115;
    inline constexpr int32_t CO_E_NOSYNCHRONIZATION = -2147164114;
    inline constexpr int32_t CO_E_ISOLEVELMISMATCH = -2147164113;
    inline constexpr int32_t CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED = -2147164112;
    inline constexpr int32_t CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED = -2147164111;
    inline constexpr int32_t OLE_S_USEREG = 262144;
    inline constexpr int32_t OLE_S_STATIC = 262145;
    inline constexpr int32_t OLE_S_MAC_CLIPFORMAT = 262146;
    inline constexpr int32_t DRAGDROP_S_DROP = 262400;
    inline constexpr int32_t DRAGDROP_S_CANCEL = 262401;
    inline constexpr int32_t DRAGDROP_S_USEDEFAULTCURSORS = 262402;
    inline constexpr int32_t DATA_S_SAMEFORMATETC = 262448;
    inline constexpr int32_t VIEW_S_ALREADY_FROZEN = 262464;
    inline constexpr int32_t CACHE_S_FORMATETC_NOTSUPPORTED = 262512;
    inline constexpr int32_t CACHE_S_SAMECACHE = 262513;
    inline constexpr int32_t CACHE_S_SOMECACHES_NOTUPDATED = 262514;
    inline constexpr int32_t OLEOBJ_S_INVALIDVERB = 262528;
    inline constexpr int32_t OLEOBJ_S_CANNOT_DOVERB_NOW = 262529;
    inline constexpr int32_t OLEOBJ_S_INVALIDHWND = 262530;
    inline constexpr int32_t INPLACE_S_TRUNCATED = 262560;
    inline constexpr int32_t CONVERT10_S_NO_PRESENTATION = 262592;
    inline constexpr int32_t MK_S_REDUCED_TO_SELF = 262626;
    inline constexpr int32_t MK_S_ME = 262628;
    inline constexpr int32_t MK_S_HIM = 262629;
    inline constexpr int32_t MK_S_US = 262630;
    inline constexpr int32_t MK_S_MONIKERALREADYREGISTERED = 262631;
    inline constexpr int32_t SCHED_S_TASK_READY = 267008;
    inline constexpr int32_t SCHED_S_TASK_RUNNING = 267009;
    inline constexpr int32_t SCHED_S_TASK_DISABLED = 267010;
    inline constexpr int32_t SCHED_S_TASK_HAS_NOT_RUN = 267011;
    inline constexpr int32_t SCHED_S_TASK_NO_MORE_RUNS = 267012;
    inline constexpr int32_t SCHED_S_TASK_NOT_SCHEDULED = 267013;
    inline constexpr int32_t SCHED_S_TASK_TERMINATED = 267014;
    inline constexpr int32_t SCHED_S_TASK_NO_VALID_TRIGGERS = 267015;
    inline constexpr int32_t SCHED_S_EVENT_TRIGGER = 267016;
    inline constexpr int32_t SCHED_E_TRIGGER_NOT_FOUND = -2147216631;
    inline constexpr int32_t SCHED_E_TASK_NOT_READY = -2147216630;
    inline constexpr int32_t SCHED_E_TASK_NOT_RUNNING = -2147216629;
    inline constexpr int32_t SCHED_E_SERVICE_NOT_INSTALLED = -2147216628;
    inline constexpr int32_t SCHED_E_CANNOT_OPEN_TASK = -2147216627;
    inline constexpr int32_t SCHED_E_INVALID_TASK = -2147216626;
    inline constexpr int32_t SCHED_E_ACCOUNT_INFORMATION_NOT_SET = -2147216625;
    inline constexpr int32_t SCHED_E_ACCOUNT_NAME_NOT_FOUND = -2147216624;
    inline constexpr int32_t SCHED_E_ACCOUNT_DBASE_CORRUPT = -2147216623;
    inline constexpr int32_t SCHED_E_NO_SECURITY_SERVICES = -2147216622;
    inline constexpr int32_t SCHED_E_UNKNOWN_OBJECT_VERSION = -2147216621;
    inline constexpr int32_t SCHED_E_UNSUPPORTED_ACCOUNT_OPTION = -2147216620;
    inline constexpr int32_t SCHED_E_SERVICE_NOT_RUNNING = -2147216619;
    inline constexpr int32_t SCHED_E_UNEXPECTEDNODE = -2147216618;
    inline constexpr int32_t SCHED_E_NAMESPACE = -2147216617;
    inline constexpr int32_t SCHED_E_INVALIDVALUE = -2147216616;
    inline constexpr int32_t SCHED_E_MISSINGNODE = -2147216615;
    inline constexpr int32_t SCHED_E_MALFORMEDXML = -2147216614;
    inline constexpr int32_t SCHED_S_SOME_TRIGGERS_FAILED = 267035;
    inline constexpr int32_t SCHED_S_BATCH_LOGON_PROBLEM = 267036;
    inline constexpr int32_t SCHED_E_TOO_MANY_NODES = -2147216611;
    inline constexpr int32_t SCHED_E_PAST_END_BOUNDARY = -2147216610;
    inline constexpr int32_t SCHED_E_ALREADY_RUNNING = -2147216609;
    inline constexpr int32_t SCHED_E_USER_NOT_LOGGED_ON = -2147216608;
    inline constexpr int32_t SCHED_E_INVALID_TASK_HASH = -2147216607;
    inline constexpr int32_t SCHED_E_SERVICE_NOT_AVAILABLE = -2147216606;
    inline constexpr int32_t SCHED_E_SERVICE_TOO_BUSY = -2147216605;
    inline constexpr int32_t SCHED_E_TASK_ATTEMPTED = -2147216604;
    inline constexpr int32_t SCHED_S_TASK_QUEUED = 267045;
    inline constexpr int32_t SCHED_E_TASK_DISABLED = -2147216602;
    inline constexpr int32_t SCHED_E_TASK_NOT_V1_COMPAT = -2147216601;
    inline constexpr int32_t SCHED_E_START_ON_DEMAND = -2147216600;
    inline constexpr int32_t SCHED_E_TASK_NOT_UBPM_COMPAT = -2147216599;
    inline constexpr int32_t SCHED_E_DEPRECATED_FEATURE_USED = -2147216592;
    inline constexpr int32_t CO_E_CLASS_CREATE_FAILED = -2146959359;
    inline constexpr int32_t CO_E_SCM_ERROR = -2146959358;
    inline constexpr int32_t CO_E_SCM_RPC_FAILURE = -2146959357;
    inline constexpr int32_t CO_E_BAD_PATH = -2146959356;
    inline constexpr int32_t CO_E_SERVER_EXEC_FAILURE = -2146959355;
    inline constexpr int32_t CO_E_OBJSRV_RPC_FAILURE = -2146959354;
    inline constexpr int32_t MK_E_NO_NORMALIZED = -2146959353;
    inline constexpr int32_t CO_E_SERVER_STOPPING = -2146959352;
    inline constexpr int32_t MEM_E_INVALID_ROOT = -2146959351;
    inline constexpr int32_t MEM_E_INVALID_LINK = -2146959344;
    inline constexpr int32_t MEM_E_INVALID_SIZE = -2146959343;
    inline constexpr int32_t CO_S_NOTALLINTERFACES = 524306;
    inline constexpr int32_t CO_S_MACHINENAMENOTFOUND = 524307;
    inline constexpr int32_t CO_E_MISSING_DISPLAYNAME = -2146959339;
    inline constexpr int32_t CO_E_RUNAS_VALUE_MUST_BE_AAA = -2146959338;
    inline constexpr int32_t CO_E_ELEVATION_DISABLED = -2146959337;
    inline constexpr int32_t APPX_E_PACKAGING_INTERNAL = -2146958848;
    inline constexpr int32_t APPX_E_INTERLEAVING_NOT_ALLOWED = -2146958847;
    inline constexpr int32_t APPX_E_RELATIONSHIPS_NOT_ALLOWED = -2146958846;
    inline constexpr int32_t APPX_E_MISSING_REQUIRED_FILE = -2146958845;
    inline constexpr int32_t APPX_E_INVALID_MANIFEST = -2146958844;
    inline constexpr int32_t APPX_E_INVALID_BLOCKMAP = -2146958843;
    inline constexpr int32_t APPX_E_CORRUPT_CONTENT = -2146958842;
    inline constexpr int32_t APPX_E_BLOCK_HASH_INVALID = -2146958841;
    inline constexpr int32_t APPX_E_REQUESTED_RANGE_TOO_LARGE = -2146958840;
    inline constexpr int32_t APPX_E_INVALID_SIP_CLIENT_DATA = -2146958839;
    inline constexpr int32_t APPX_E_INVALID_KEY_INFO = -2146958838;
    inline constexpr int32_t APPX_E_INVALID_CONTENTGROUPMAP = -2146958837;
    inline constexpr int32_t APPX_E_INVALID_APPINSTALLER = -2146958836;
    inline constexpr int32_t APPX_E_DELTA_BASELINE_VERSION_MISMATCH = -2146958835;
    inline constexpr int32_t APPX_E_DELTA_PACKAGE_MISSING_FILE = -2146958834;
    inline constexpr int32_t APPX_E_INVALID_DELTA_PACKAGE = -2146958833;
    inline constexpr int32_t APPX_E_DELTA_APPENDED_PACKAGE_NOT_ALLOWED = -2146958832;
    inline constexpr int32_t APPX_E_INVALID_PACKAGING_LAYOUT = -2146958831;
    inline constexpr int32_t APPX_E_INVALID_PACKAGESIGNCONFIG = -2146958830;
    inline constexpr int32_t APPX_E_RESOURCESPRI_NOT_ALLOWED = -2146958829;
    inline constexpr int32_t APPX_E_FILE_COMPRESSION_MISMATCH = -2146958828;
    inline constexpr int32_t APPX_E_INVALID_PAYLOAD_PACKAGE_EXTENSION = -2146958827;
    inline constexpr int32_t APPX_E_INVALID_ENCRYPTION_EXCLUSION_FILE_LIST = -2146958826;
    inline constexpr int32_t BT_E_SPURIOUS_ACTIVATION = -2146958592;
    inline constexpr int32_t DISP_E_UNKNOWNINTERFACE = -2147352575;
    inline constexpr int32_t DISP_E_MEMBERNOTFOUND = -2147352573;
    inline constexpr int32_t DISP_E_PARAMNOTFOUND = -2147352572;
    inline constexpr int32_t DISP_E_TYPEMISMATCH = -2147352571;
    inline constexpr int32_t DISP_E_UNKNOWNNAME = -2147352570;
    inline constexpr int32_t DISP_E_NONAMEDARGS = -2147352569;
    inline constexpr int32_t DISP_E_BADVARTYPE = -2147352568;
    inline constexpr int32_t DISP_E_EXCEPTION = -2147352567;
    inline constexpr int32_t DISP_E_OVERFLOW = -2147352566;
    inline constexpr int32_t DISP_E_BADINDEX = -2147352565;
    inline constexpr int32_t DISP_E_UNKNOWNLCID = -2147352564;
    inline constexpr int32_t DISP_E_ARRAYISLOCKED = -2147352563;
    inline constexpr int32_t DISP_E_BADPARAMCOUNT = -2147352562;
    inline constexpr int32_t DISP_E_PARAMNOTOPTIONAL = -2147352561;
    inline constexpr int32_t DISP_E_BADCALLEE = -2147352560;
    inline constexpr int32_t DISP_E_NOTACOLLECTION = -2147352559;
    inline constexpr int32_t DISP_E_DIVBYZERO = -2147352558;
    inline constexpr int32_t DISP_E_BUFFERTOOSMALL = -2147352557;
    inline constexpr int32_t TYPE_E_BUFFERTOOSMALL = -2147319786;
    inline constexpr int32_t TYPE_E_FIELDNOTFOUND = -2147319785;
    inline constexpr int32_t TYPE_E_INVDATAREAD = -2147319784;
    inline constexpr int32_t TYPE_E_UNSUPFORMAT = -2147319783;
    inline constexpr int32_t TYPE_E_REGISTRYACCESS = -2147319780;
    inline constexpr int32_t TYPE_E_LIBNOTREGISTERED = -2147319779;
    inline constexpr int32_t TYPE_E_UNDEFINEDTYPE = -2147319769;
    inline constexpr int32_t TYPE_E_QUALIFIEDNAMEDISALLOWED = -2147319768;
    inline constexpr int32_t TYPE_E_INVALIDSTATE = -2147319767;
    inline constexpr int32_t TYPE_E_WRONGTYPEKIND = -2147319766;
    inline constexpr int32_t TYPE_E_ELEMENTNOTFOUND = -2147319765;
    inline constexpr int32_t TYPE_E_AMBIGUOUSNAME = -2147319764;
    inline constexpr int32_t TYPE_E_NAMECONFLICT = -2147319763;
    inline constexpr int32_t TYPE_E_UNKNOWNLCID = -2147319762;
    inline constexpr int32_t TYPE_E_DLLFUNCTIONNOTFOUND = -2147319761;
    inline constexpr int32_t TYPE_E_BADMODULEKIND = -2147317571;
    inline constexpr int32_t TYPE_E_SIZETOOBIG = -2147317563;
    inline constexpr int32_t TYPE_E_DUPLICATEID = -2147317562;
    inline constexpr int32_t TYPE_E_INVALIDID = -2147317553;
    inline constexpr int32_t TYPE_E_TYPEMISMATCH = -2147316576;
    inline constexpr int32_t TYPE_E_OUTOFBOUNDS = -2147316575;
    inline constexpr int32_t TYPE_E_IOERROR = -2147316574;
    inline constexpr int32_t TYPE_E_CANTCREATETMPFILE = -2147316573;
    inline constexpr int32_t TYPE_E_CANTLOADLIBRARY = -2147312566;
    inline constexpr int32_t TYPE_E_INCONSISTENTPROPFUNCS = -2147312509;
    inline constexpr int32_t TYPE_E_CIRCULARTYPE = -2147312508;
    inline constexpr int32_t STG_E_INVALIDFUNCTION = -2147287039;
    inline constexpr int32_t STG_E_FILENOTFOUND = -2147287038;
    inline constexpr int32_t STG_E_PATHNOTFOUND = -2147287037;
    inline constexpr int32_t STG_E_TOOMANYOPENFILES = -2147287036;
    inline constexpr int32_t STG_E_ACCESSDENIED = -2147287035;
    inline constexpr int32_t STG_E_INVALIDHANDLE = -2147287034;
    inline constexpr int32_t STG_E_INSUFFICIENTMEMORY = -2147287032;
    inline constexpr int32_t STG_E_INVALIDPOINTER = -2147287031;
    inline constexpr int32_t STG_E_NOMOREFILES = -2147287022;
    inline constexpr int32_t STG_E_DISKISWRITEPROTECTED = -2147287021;
    inline constexpr int32_t STG_E_SEEKERROR = -2147287015;
    inline constexpr int32_t STG_E_WRITEFAULT = -2147287011;
    inline constexpr int32_t STG_E_READFAULT = -2147287010;
    inline constexpr int32_t STG_E_SHAREVIOLATION = -2147287008;
    inline constexpr int32_t STG_E_LOCKVIOLATION = -2147287007;
    inline constexpr int32_t STG_E_FILEALREADYEXISTS = -2147286960;
    inline constexpr int32_t STG_E_INVALIDPARAMETER = -2147286953;
    inline constexpr int32_t STG_E_MEDIUMFULL = -2147286928;
    inline constexpr int32_t STG_E_PROPSETMISMATCHED = -2147286800;
    inline constexpr int32_t STG_E_ABNORMALAPIEXIT = -2147286790;
    inline constexpr int32_t STG_E_INVALIDHEADER = -2147286789;
    inline constexpr int32_t STG_E_INVALIDNAME = -2147286788;
    inline constexpr int32_t STG_E_UNKNOWN = -2147286787;
    inline constexpr int32_t STG_E_UNIMPLEMENTEDFUNCTION = -2147286786;
    inline constexpr int32_t STG_E_INVALIDFLAG = -2147286785;
    inline constexpr int32_t STG_E_INUSE = -2147286784;
    inline constexpr int32_t STG_E_NOTCURRENT = -2147286783;
    inline constexpr int32_t STG_E_REVERTED = -2147286782;
    inline constexpr int32_t STG_E_CANTSAVE = -2147286781;
    inline constexpr int32_t STG_E_OLDFORMAT = -2147286780;
    inline constexpr int32_t STG_E_OLDDLL = -2147286779;
    inline constexpr int32_t STG_E_SHAREREQUIRED = -2147286778;
    inline constexpr int32_t STG_E_NOTFILEBASEDSTORAGE = -2147286777;
    inline constexpr int32_t STG_E_EXTANTMARSHALLINGS = -2147286776;
    inline constexpr int32_t STG_E_DOCFILECORRUPT = -2147286775;
    inline constexpr int32_t STG_E_BADBASEADDRESS = -2147286768;
    inline constexpr int32_t STG_E_DOCFILETOOLARGE = -2147286767;
    inline constexpr int32_t STG_E_NOTSIMPLEFORMAT = -2147286766;
    inline constexpr int32_t STG_E_INCOMPLETE = -2147286527;
    inline constexpr int32_t STG_E_TERMINATED = -2147286526;
    inline constexpr int32_t STG_S_CONVERTED = 197120;
    inline constexpr int32_t STG_S_BLOCK = 197121;
    inline constexpr int32_t STG_S_RETRYNOW = 197122;
    inline constexpr int32_t STG_S_MONITORING = 197123;
    inline constexpr int32_t STG_S_MULTIPLEOPENS = 197124;
    inline constexpr int32_t STG_S_CONSOLIDATIONFAILED = 197125;
    inline constexpr int32_t STG_S_CANNOTCONSOLIDATE = 197126;
    inline constexpr int32_t STG_S_POWER_CYCLE_REQUIRED = 197127;
    inline constexpr int32_t STG_E_FIRMWARE_SLOT_INVALID = -2147286520;
    inline constexpr int32_t STG_E_FIRMWARE_IMAGE_INVALID = -2147286519;
    inline constexpr int32_t STG_E_DEVICE_UNRESPONSIVE = -2147286518;
    inline constexpr int32_t STG_E_STATUS_COPY_PROTECTION_FAILURE = -2147286267;
    inline constexpr int32_t STG_E_CSS_AUTHENTICATION_FAILURE = -2147286266;
    inline constexpr int32_t STG_E_CSS_KEY_NOT_PRESENT = -2147286265;
    inline constexpr int32_t STG_E_CSS_KEY_NOT_ESTABLISHED = -2147286264;
    inline constexpr int32_t STG_E_CSS_SCRAMBLED_SECTOR = -2147286263;
    inline constexpr int32_t STG_E_CSS_REGION_MISMATCH = -2147286262;
    inline constexpr int32_t STG_E_RESETS_EXHAUSTED = -2147286261;
    inline constexpr int32_t RPC_E_CALL_REJECTED = -2147418111;
    inline constexpr int32_t RPC_E_CALL_CANCELED = -2147418110;
    inline constexpr int32_t RPC_E_CANTPOST_INSENDCALL = -2147418109;
    inline constexpr int32_t RPC_E_CANTCALLOUT_INASYNCCALL = -2147418108;
    inline constexpr int32_t RPC_E_CANTCALLOUT_INEXTERNALCALL = -2147418107;
    inline constexpr int32_t RPC_E_CONNECTION_TERMINATED = -2147418106;
    inline constexpr int32_t RPC_E_SERVER_DIED = -2147418105;
    inline constexpr int32_t RPC_E_CLIENT_DIED = -2147418104;
    inline constexpr int32_t RPC_E_INVALID_DATAPACKET = -2147418103;
    inline constexpr int32_t RPC_E_CANTTRANSMIT_CALL = -2147418102;
    inline constexpr int32_t RPC_E_CLIENT_CANTMARSHAL_DATA = -2147418101;
    inline constexpr int32_t RPC_E_CLIENT_CANTUNMARSHAL_DATA = -2147418100;
    inline constexpr int32_t RPC_E_SERVER_CANTMARSHAL_DATA = -2147418099;
    inline constexpr int32_t RPC_E_SERVER_CANTUNMARSHAL_DATA = -2147418098;
    inline constexpr int32_t RPC_E_INVALID_DATA = -2147418097;
    inline constexpr int32_t RPC_E_INVALID_PARAMETER = -2147418096;
    inline constexpr int32_t RPC_E_CANTCALLOUT_AGAIN = -2147418095;
    inline constexpr int32_t RPC_E_SERVER_DIED_DNE = -2147418094;
    inline constexpr int32_t RPC_E_SYS_CALL_FAILED = -2147417856;
    inline constexpr int32_t RPC_E_OUT_OF_RESOURCES = -2147417855;
    inline constexpr int32_t RPC_E_ATTEMPTED_MULTITHREAD = -2147417854;
    inline constexpr int32_t RPC_E_NOT_REGISTERED = -2147417853;
    inline constexpr int32_t RPC_E_FAULT = -2147417852;
    inline constexpr int32_t RPC_E_SERVERFAULT = -2147417851;
    inline constexpr int32_t RPC_E_CHANGED_MODE = -2147417850;
    inline constexpr int32_t RPC_E_INVALIDMETHOD = -2147417849;
    inline constexpr int32_t RPC_E_DISCONNECTED = -2147417848;
    inline constexpr int32_t RPC_E_RETRY = -2147417847;
    inline constexpr int32_t RPC_E_SERVERCALL_RETRYLATER = -2147417846;
    inline constexpr int32_t RPC_E_SERVERCALL_REJECTED = -2147417845;
    inline constexpr int32_t RPC_E_INVALID_CALLDATA = -2147417844;
    inline constexpr int32_t RPC_E_CANTCALLOUT_ININPUTSYNCCALL = -2147417843;
    inline constexpr int32_t RPC_E_WRONG_THREAD = -2147417842;
    inline constexpr int32_t RPC_E_THREAD_NOT_INIT = -2147417841;
    inline constexpr int32_t RPC_E_VERSION_MISMATCH = -2147417840;
    inline constexpr int32_t RPC_E_INVALID_HEADER = -2147417839;
    inline constexpr int32_t RPC_E_INVALID_EXTENSION = -2147417838;
    inline constexpr int32_t RPC_E_INVALID_IPID = -2147417837;
    inline constexpr int32_t RPC_E_INVALID_OBJECT = -2147417836;
    inline constexpr int32_t RPC_S_CALLPENDING = -2147417835;
    inline constexpr int32_t RPC_S_WAITONTIMER = -2147417834;
    inline constexpr int32_t RPC_E_CALL_COMPLETE = -2147417833;
    inline constexpr int32_t RPC_E_UNSECURE_CALL = -2147417832;
    inline constexpr int32_t RPC_E_TOO_LATE = -2147417831;
    inline constexpr int32_t RPC_E_NO_GOOD_SECURITY_PACKAGES = -2147417830;
    inline constexpr int32_t RPC_E_ACCESS_DENIED = -2147417829;
    inline constexpr int32_t RPC_E_REMOTE_DISABLED = -2147417828;
    inline constexpr int32_t RPC_E_INVALID_OBJREF = -2147417827;
    inline constexpr int32_t RPC_E_NO_CONTEXT = -2147417826;
    inline constexpr int32_t RPC_E_TIMEOUT = -2147417825;
    inline constexpr int32_t RPC_E_NO_SYNC = -2147417824;
    inline constexpr int32_t RPC_E_FULLSIC_REQUIRED = -2147417823;
    inline constexpr int32_t RPC_E_INVALID_STD_NAME = -2147417822;
    inline constexpr int32_t CO_E_FAILEDTOIMPERSONATE = -2147417821;
    inline constexpr int32_t CO_E_FAILEDTOGETSECCTX = -2147417820;
    inline constexpr int32_t CO_E_FAILEDTOOPENTHREADTOKEN = -2147417819;
    inline constexpr int32_t CO_E_FAILEDTOGETTOKENINFO = -2147417818;
    inline constexpr int32_t CO_E_TRUSTEEDOESNTMATCHCLIENT = -2147417817;
    inline constexpr int32_t CO_E_FAILEDTOQUERYCLIENTBLANKET = -2147417816;
    inline constexpr int32_t CO_E_FAILEDTOSETDACL = -2147417815;
    inline constexpr int32_t CO_E_ACCESSCHECKFAILED = -2147417814;
    inline constexpr int32_t CO_E_NETACCESSAPIFAILED = -2147417813;
    inline constexpr int32_t CO_E_WRONGTRUSTEENAMESYNTAX = -2147417812;
    inline constexpr int32_t CO_E_INVALIDSID = -2147417811;
    inline constexpr int32_t CO_E_CONVERSIONFAILED = -2147417810;
    inline constexpr int32_t CO_E_NOMATCHINGSIDFOUND = -2147417809;
    inline constexpr int32_t CO_E_LOOKUPACCSIDFAILED = -2147417808;
    inline constexpr int32_t CO_E_NOMATCHINGNAMEFOUND = -2147417807;
    inline constexpr int32_t CO_E_LOOKUPACCNAMEFAILED = -2147417806;
    inline constexpr int32_t CO_E_SETSERLHNDLFAILED = -2147417805;
    inline constexpr int32_t CO_E_FAILEDTOGETWINDIR = -2147417804;
    inline constexpr int32_t CO_E_PATHTOOLONG = -2147417803;
    inline constexpr int32_t CO_E_FAILEDTOGENUUID = -2147417802;
    inline constexpr int32_t CO_E_FAILEDTOCREATEFILE = -2147417801;
    inline constexpr int32_t CO_E_FAILEDTOCLOSEHANDLE = -2147417800;
    inline constexpr int32_t CO_E_EXCEEDSYSACLLIMIT = -2147417799;
    inline constexpr int32_t CO_E_ACESINWRONGORDER = -2147417798;
    inline constexpr int32_t CO_E_INCOMPATIBLESTREAMVERSION = -2147417797;
    inline constexpr int32_t CO_E_FAILEDTOOPENPROCESSTOKEN = -2147417796;
    inline constexpr int32_t CO_E_DECODEFAILED = -2147417795;
    inline constexpr int32_t CO_E_ACNOTINITIALIZED = -2147417793;
    inline constexpr int32_t CO_E_CANCEL_DISABLED = -2147417792;
    inline constexpr int32_t RPC_E_UNEXPECTED = -2147352577;
    inline constexpr int32_t ERROR_AUDITING_DISABLED = -1073151999;
    inline constexpr int32_t ERROR_ALL_SIDS_FILTERED = -1073151998;
    inline constexpr int32_t ERROR_BIZRULES_NOT_ENABLED = -1073151997;
    inline constexpr int32_t NTE_BAD_UID = -2146893823;
    inline constexpr int32_t NTE_BAD_HASH = -2146893822;
    inline constexpr int32_t NTE_BAD_KEY = -2146893821;
    inline constexpr int32_t NTE_BAD_LEN = -2146893820;
    inline constexpr int32_t NTE_BAD_DATA = -2146893819;
    inline constexpr int32_t NTE_BAD_SIGNATURE = -2146893818;
    inline constexpr int32_t NTE_BAD_VER = -2146893817;
    inline constexpr int32_t NTE_BAD_ALGID = -2146893816;
    inline constexpr int32_t NTE_BAD_FLAGS = -2146893815;
    inline constexpr int32_t NTE_BAD_TYPE = -2146893814;
    inline constexpr int32_t NTE_BAD_KEY_STATE = -2146893813;
    inline constexpr int32_t NTE_BAD_HASH_STATE = -2146893812;
    inline constexpr int32_t NTE_NO_KEY = -2146893811;
    inline constexpr int32_t NTE_NO_MEMORY = -2146893810;
    inline constexpr int32_t NTE_EXISTS = -2146893809;
    inline constexpr int32_t NTE_PERM = -2146893808;
    inline constexpr int32_t NTE_NOT_FOUND = -2146893807;
    inline constexpr int32_t NTE_DOUBLE_ENCRYPT = -2146893806;
    inline constexpr int32_t NTE_BAD_PROVIDER = -2146893805;
    inline constexpr int32_t NTE_BAD_PROV_TYPE = -2146893804;
    inline constexpr int32_t NTE_BAD_PUBLIC_KEY = -2146893803;
    inline constexpr int32_t NTE_BAD_KEYSET = -2146893802;
    inline constexpr int32_t NTE_PROV_TYPE_NOT_DEF = -2146893801;
    inline constexpr int32_t NTE_PROV_TYPE_ENTRY_BAD = -2146893800;
    inline constexpr int32_t NTE_KEYSET_NOT_DEF = -2146893799;
    inline constexpr int32_t NTE_KEYSET_ENTRY_BAD = -2146893798;
    inline constexpr int32_t NTE_PROV_TYPE_NO_MATCH = -2146893797;
    inline constexpr int32_t NTE_SIGNATURE_FILE_BAD = -2146893796;
    inline constexpr int32_t NTE_PROVIDER_DLL_FAIL = -2146893795;
    inline constexpr int32_t NTE_PROV_DLL_NOT_FOUND = -2146893794;
    inline constexpr int32_t NTE_BAD_KEYSET_PARAM = -2146893793;
    inline constexpr int32_t NTE_FAIL = -2146893792;
    inline constexpr int32_t NTE_SYS_ERR = -2146893791;
    inline constexpr int32_t NTE_SILENT_CONTEXT = -2146893790;
    inline constexpr int32_t NTE_TOKEN_KEYSET_STORAGE_FULL = -2146893789;
    inline constexpr int32_t NTE_TEMPORARY_PROFILE = -2146893788;
    inline constexpr int32_t NTE_FIXEDPARAMETER = -2146893787;
    inline constexpr int32_t NTE_INVALID_HANDLE = -2146893786;
    inline constexpr int32_t NTE_INVALID_PARAMETER = -2146893785;
    inline constexpr int32_t NTE_BUFFER_TOO_SMALL = -2146893784;
    inline constexpr int32_t NTE_NOT_SUPPORTED = -2146893783;
    inline constexpr int32_t NTE_NO_MORE_ITEMS = -2146893782;
    inline constexpr int32_t NTE_BUFFERS_OVERLAP = -2146893781;
    inline constexpr int32_t NTE_DECRYPTION_FAILURE = -2146893780;
    inline constexpr int32_t NTE_INTERNAL_ERROR = -2146893779;
    inline constexpr int32_t NTE_UI_REQUIRED = -2146893778;
    inline constexpr int32_t NTE_HMAC_NOT_SUPPORTED = -2146893777;
    inline constexpr int32_t NTE_DEVICE_NOT_READY = -2146893776;
    inline constexpr int32_t NTE_AUTHENTICATION_IGNORED = -2146893775;
    inline constexpr int32_t NTE_VALIDATION_FAILED = -2146893774;
    inline constexpr int32_t NTE_INCORRECT_PASSWORD = -2146893773;
    inline constexpr int32_t NTE_ENCRYPTION_FAILURE = -2146893772;
    inline constexpr int32_t NTE_DEVICE_NOT_FOUND = -2146893771;
    inline constexpr int32_t NTE_USER_CANCELLED = -2146893770;
    inline constexpr int32_t NTE_PASSWORD_CHANGE_REQUIRED = -2146893769;
    inline constexpr int32_t NTE_NOT_ACTIVE_CONSOLE = -2146893768;
    inline constexpr int32_t SEC_E_INSUFFICIENT_MEMORY = -2146893056;
    inline constexpr int32_t SEC_E_INVALID_HANDLE = -2146893055;
    inline constexpr int32_t SEC_E_UNSUPPORTED_FUNCTION = -2146893054;
    inline constexpr int32_t SEC_E_TARGET_UNKNOWN = -2146893053;
    inline constexpr int32_t SEC_E_INTERNAL_ERROR = -2146893052;
    inline constexpr int32_t SEC_E_SECPKG_NOT_FOUND = -2146893051;
    inline constexpr int32_t SEC_E_NOT_OWNER = -2146893050;
    inline constexpr int32_t SEC_E_CANNOT_INSTALL = -2146893049;
    inline constexpr int32_t SEC_E_INVALID_TOKEN = -2146893048;
    inline constexpr int32_t SEC_E_CANNOT_PACK = -2146893047;
    inline constexpr int32_t SEC_E_QOP_NOT_SUPPORTED = -2146893046;
    inline constexpr int32_t SEC_E_NO_IMPERSONATION = -2146893045;
    inline constexpr int32_t SEC_E_LOGON_DENIED = -2146893044;
    inline constexpr int32_t SEC_E_UNKNOWN_CREDENTIALS = -2146893043;
    inline constexpr int32_t SEC_E_NO_CREDENTIALS = -2146893042;
    inline constexpr int32_t SEC_E_MESSAGE_ALTERED = -2146893041;
    inline constexpr int32_t SEC_E_OUT_OF_SEQUENCE = -2146893040;
    inline constexpr int32_t SEC_E_NO_AUTHENTICATING_AUTHORITY = -2146893039;
    inline constexpr int32_t SEC_I_CONTINUE_NEEDED = 590610;
    inline constexpr int32_t SEC_I_COMPLETE_NEEDED = 590611;
    inline constexpr int32_t SEC_I_COMPLETE_AND_CONTINUE = 590612;
    inline constexpr int32_t SEC_I_LOCAL_LOGON = 590613;
    inline constexpr int32_t SEC_I_GENERIC_EXTENSION_RECEIVED = 590614;
    inline constexpr int32_t SEC_E_BAD_PKGID = -2146893034;
    inline constexpr int32_t SEC_E_CONTEXT_EXPIRED = -2146893033;
    inline constexpr int32_t SEC_I_CONTEXT_EXPIRED = 590615;
    inline constexpr int32_t SEC_E_INCOMPLETE_MESSAGE = -2146893032;
    inline constexpr int32_t SEC_E_INCOMPLETE_CREDENTIALS = -2146893024;
    inline constexpr int32_t SEC_E_BUFFER_TOO_SMALL = -2146893023;
    inline constexpr int32_t SEC_I_INCOMPLETE_CREDENTIALS = 590624;
    inline constexpr int32_t SEC_I_RENEGOTIATE = 590625;
    inline constexpr int32_t SEC_E_WRONG_PRINCIPAL = -2146893022;
    inline constexpr int32_t SEC_I_NO_LSA_CONTEXT = 590627;
    inline constexpr int32_t SEC_E_TIME_SKEW = -2146893020;
    inline constexpr int32_t SEC_E_UNTRUSTED_ROOT = -2146893019;
    inline constexpr int32_t SEC_E_ILLEGAL_MESSAGE = -2146893018;
    inline constexpr int32_t SEC_E_CERT_UNKNOWN = -2146893017;
    inline constexpr int32_t SEC_E_CERT_EXPIRED = -2146893016;
    inline constexpr int32_t SEC_E_ENCRYPT_FAILURE = -2146893015;
    inline constexpr int32_t SEC_E_DECRYPT_FAILURE = -2146893008;
    inline constexpr int32_t SEC_E_ALGORITHM_MISMATCH = -2146893007;
    inline constexpr int32_t SEC_E_SECURITY_QOS_FAILED = -2146893006;
    inline constexpr int32_t SEC_E_UNFINISHED_CONTEXT_DELETED = -2146893005;
    inline constexpr int32_t SEC_E_NO_TGT_REPLY = -2146893004;
    inline constexpr int32_t SEC_E_NO_IP_ADDRESSES = -2146893003;
    inline constexpr int32_t SEC_E_WRONG_CREDENTIAL_HANDLE = -2146893002;
    inline constexpr int32_t SEC_E_CRYPTO_SYSTEM_INVALID = -2146893001;
    inline constexpr int32_t SEC_E_MAX_REFERRALS_EXCEEDED = -2146893000;
    inline constexpr int32_t SEC_E_MUST_BE_KDC = -2146892999;
    inline constexpr int32_t SEC_E_STRONG_CRYPTO_NOT_SUPPORTED = -2146892998;
    inline constexpr int32_t SEC_E_TOO_MANY_PRINCIPALS = -2146892997;
    inline constexpr int32_t SEC_E_NO_PA_DATA = -2146892996;
    inline constexpr int32_t SEC_E_PKINIT_NAME_MISMATCH = -2146892995;
    inline constexpr int32_t SEC_E_SMARTCARD_LOGON_REQUIRED = -2146892994;
    inline constexpr int32_t SEC_E_SHUTDOWN_IN_PROGRESS = -2146892993;
    inline constexpr int32_t SEC_E_KDC_INVALID_REQUEST = -2146892992;
    inline constexpr int32_t SEC_E_KDC_UNABLE_TO_REFER = -2146892991;
    inline constexpr int32_t SEC_E_KDC_UNKNOWN_ETYPE = -2146892990;
    inline constexpr int32_t SEC_E_UNSUPPORTED_PREAUTH = -2146892989;
    inline constexpr int32_t SEC_E_DELEGATION_REQUIRED = -2146892987;
    inline constexpr int32_t SEC_E_BAD_BINDINGS = -2146892986;
    inline constexpr int32_t SEC_E_MULTIPLE_ACCOUNTS = -2146892985;
    inline constexpr int32_t SEC_E_NO_KERB_KEY = -2146892984;
    inline constexpr int32_t SEC_E_CERT_WRONG_USAGE = -2146892983;
    inline constexpr int32_t SEC_E_DOWNGRADE_DETECTED = -2146892976;
    inline constexpr int32_t SEC_E_SMARTCARD_CERT_REVOKED = -2146892975;
    inline constexpr int32_t SEC_E_ISSUING_CA_UNTRUSTED = -2146892974;
    inline constexpr int32_t SEC_E_REVOCATION_OFFLINE_C = -2146892973;
    inline constexpr int32_t SEC_E_PKINIT_CLIENT_FAILURE = -2146892972;
    inline constexpr int32_t SEC_E_SMARTCARD_CERT_EXPIRED = -2146892971;
    inline constexpr int32_t SEC_E_NO_S4U_PROT_SUPPORT = -2146892970;
    inline constexpr int32_t SEC_E_CROSSREALM_DELEGATION_FAILURE = -2146892969;
    inline constexpr int32_t SEC_E_REVOCATION_OFFLINE_KDC = -2146892968;
    inline constexpr int32_t SEC_E_ISSUING_CA_UNTRUSTED_KDC = -2146892967;
    inline constexpr int32_t SEC_E_KDC_CERT_EXPIRED = -2146892966;
    inline constexpr int32_t SEC_E_KDC_CERT_REVOKED = -2146892965;
    inline constexpr int32_t SEC_I_SIGNATURE_NEEDED = 590684;
    inline constexpr int32_t SEC_E_INVALID_PARAMETER = -2146892963;
    inline constexpr int32_t SEC_E_DELEGATION_POLICY = -2146892962;
    inline constexpr int32_t SEC_E_POLICY_NLTM_ONLY = -2146892961;
    inline constexpr int32_t SEC_I_NO_RENEGOTIATION = 590688;
    inline constexpr int32_t SEC_E_NO_CONTEXT = -2146892959;
    inline constexpr int32_t SEC_E_PKU2U_CERT_FAILURE = -2146892958;
    inline constexpr int32_t SEC_E_MUTUAL_AUTH_FAILED = -2146892957;
    inline constexpr int32_t SEC_I_MESSAGE_FRAGMENT = 590692;
    inline constexpr int32_t SEC_E_ONLY_HTTPS_ALLOWED = -2146892955;
    inline constexpr int32_t SEC_I_CONTINUE_NEEDED_MESSAGE_OK = 590694;
    inline constexpr int32_t SEC_E_APPLICATION_PROTOCOL_MISMATCH = -2146892953;
    inline constexpr int32_t SEC_I_ASYNC_CALL_PENDING = 590696;
    inline constexpr int32_t SEC_E_INVALID_UPN_NAME = -2146892951;
    inline constexpr int32_t SEC_E_EXT_BUFFER_TOO_SMALL = -2146892950;
    inline constexpr int32_t SEC_E_INSUFFICIENT_BUFFERS = -2146892949;
    inline constexpr int32_t CRYPT_E_MSG_ERROR = -2146889727;
    inline constexpr int32_t CRYPT_E_UNKNOWN_ALGO = -2146889726;
    inline constexpr int32_t CRYPT_E_OID_FORMAT = -2146889725;
    inline constexpr int32_t CRYPT_E_INVALID_MSG_TYPE = -2146889724;
    inline constexpr int32_t CRYPT_E_UNEXPECTED_ENCODING = -2146889723;
    inline constexpr int32_t CRYPT_E_AUTH_ATTR_MISSING = -2146889722;
    inline constexpr int32_t CRYPT_E_HASH_VALUE = -2146889721;
    inline constexpr int32_t CRYPT_E_INVALID_INDEX = -2146889720;
    inline constexpr int32_t CRYPT_E_ALREADY_DECRYPTED = -2146889719;
    inline constexpr int32_t CRYPT_E_NOT_DECRYPTED = -2146889718;
    inline constexpr int32_t CRYPT_E_RECIPIENT_NOT_FOUND = -2146889717;
    inline constexpr int32_t CRYPT_E_CONTROL_TYPE = -2146889716;
    inline constexpr int32_t CRYPT_E_ISSUER_SERIALNUMBER = -2146889715;
    inline constexpr int32_t CRYPT_E_SIGNER_NOT_FOUND = -2146889714;
    inline constexpr int32_t CRYPT_E_ATTRIBUTES_MISSING = -2146889713;
    inline constexpr int32_t CRYPT_E_STREAM_MSG_NOT_READY = -2146889712;
    inline constexpr int32_t CRYPT_E_STREAM_INSUFFICIENT_DATA = -2146889711;
    inline constexpr int32_t CRYPT_I_NEW_PROTECTION_REQUIRED = 593938;
    inline constexpr int32_t CRYPT_E_BAD_LEN = -2146885631;
    inline constexpr int32_t CRYPT_E_BAD_ENCODE = -2146885630;
    inline constexpr int32_t CRYPT_E_FILE_ERROR = -2146885629;
    inline constexpr int32_t CRYPT_E_NOT_FOUND = -2146885628;
    inline constexpr int32_t CRYPT_E_EXISTS = -2146885627;
    inline constexpr int32_t CRYPT_E_NO_PROVIDER = -2146885626;
    inline constexpr int32_t CRYPT_E_SELF_SIGNED = -2146885625;
    inline constexpr int32_t CRYPT_E_DELETED_PREV = -2146885624;
    inline constexpr int32_t CRYPT_E_NO_MATCH = -2146885623;
    inline constexpr int32_t CRYPT_E_UNEXPECTED_MSG_TYPE = -2146885622;
    inline constexpr int32_t CRYPT_E_NO_KEY_PROPERTY = -2146885621;
    inline constexpr int32_t CRYPT_E_NO_DECRYPT_CERT = -2146885620;
    inline constexpr int32_t CRYPT_E_BAD_MSG = -2146885619;
    inline constexpr int32_t CRYPT_E_NO_SIGNER = -2146885618;
    inline constexpr int32_t CRYPT_E_PENDING_CLOSE = -2146885617;
    inline constexpr int32_t CRYPT_E_REVOKED = -2146885616;
    inline constexpr int32_t CRYPT_E_NO_REVOCATION_DLL = -2146885615;
    inline constexpr int32_t CRYPT_E_NO_REVOCATION_CHECK = -2146885614;
    inline constexpr int32_t CRYPT_E_REVOCATION_OFFLINE = -2146885613;
    inline constexpr int32_t CRYPT_E_NOT_IN_REVOCATION_DATABASE = -2146885612;
    inline constexpr int32_t CRYPT_E_INVALID_NUMERIC_STRING = -2146885600;
    inline constexpr int32_t CRYPT_E_INVALID_PRINTABLE_STRING = -2146885599;
    inline constexpr int32_t CRYPT_E_INVALID_IA5_STRING = -2146885598;
    inline constexpr int32_t CRYPT_E_INVALID_X500_STRING = -2146885597;
    inline constexpr int32_t CRYPT_E_NOT_CHAR_STRING = -2146885596;
    inline constexpr int32_t CRYPT_E_FILERESIZED = -2146885595;
    inline constexpr int32_t CRYPT_E_SECURITY_SETTINGS = -2146885594;
    inline constexpr int32_t CRYPT_E_NO_VERIFY_USAGE_DLL = -2146885593;
    inline constexpr int32_t CRYPT_E_NO_VERIFY_USAGE_CHECK = -2146885592;
    inline constexpr int32_t CRYPT_E_VERIFY_USAGE_OFFLINE = -2146885591;
    inline constexpr int32_t CRYPT_E_NOT_IN_CTL = -2146885590;
    inline constexpr int32_t CRYPT_E_NO_TRUSTED_SIGNER = -2146885589;
    inline constexpr int32_t CRYPT_E_MISSING_PUBKEY_PARA = -2146885588;
    inline constexpr int32_t CRYPT_E_OBJECT_LOCATOR_OBJECT_NOT_FOUND = -2146885587;
    inline constexpr int32_t CRYPT_E_OSS_ERROR = -2146881536;
    inline constexpr int32_t OSS_MORE_BUF = -2146881535;
    inline constexpr int32_t OSS_NEGATIVE_UINTEGER = -2146881534;
    inline constexpr int32_t OSS_PDU_RANGE = -2146881533;
    inline constexpr int32_t OSS_MORE_INPUT = -2146881532;
    inline constexpr int32_t OSS_DATA_ERROR = -2146881531;
    inline constexpr int32_t OSS_BAD_ARG = -2146881530;
    inline constexpr int32_t OSS_BAD_VERSION = -2146881529;
    inline constexpr int32_t OSS_OUT_MEMORY = -2146881528;
    inline constexpr int32_t OSS_PDU_MISMATCH = -2146881527;
    inline constexpr int32_t OSS_LIMITED = -2146881526;
    inline constexpr int32_t OSS_BAD_PTR = -2146881525;
    inline constexpr int32_t OSS_BAD_TIME = -2146881524;
    inline constexpr int32_t OSS_INDEFINITE_NOT_SUPPORTED = -2146881523;
    inline constexpr int32_t OSS_MEM_ERROR = -2146881522;
    inline constexpr int32_t OSS_BAD_TABLE = -2146881521;
    inline constexpr int32_t OSS_TOO_LONG = -2146881520;
    inline constexpr int32_t OSS_CONSTRAINT_VIOLATED = -2146881519;
    inline constexpr int32_t OSS_FATAL_ERROR = -2146881518;
    inline constexpr int32_t OSS_ACCESS_SERIALIZATION_ERROR = -2146881517;
    inline constexpr int32_t OSS_NULL_TBL = -2146881516;
    inline constexpr int32_t OSS_NULL_FCN = -2146881515;
    inline constexpr int32_t OSS_BAD_ENCRULES = -2146881514;
    inline constexpr int32_t OSS_UNAVAIL_ENCRULES = -2146881513;
    inline constexpr int32_t OSS_CANT_OPEN_TRACE_WINDOW = -2146881512;
    inline constexpr int32_t OSS_UNIMPLEMENTED = -2146881511;
    inline constexpr int32_t OSS_OID_DLL_NOT_LINKED = -2146881510;
    inline constexpr int32_t OSS_CANT_OPEN_TRACE_FILE = -2146881509;
    inline constexpr int32_t OSS_TRACE_FILE_ALREADY_OPEN = -2146881508;
    inline constexpr int32_t OSS_TABLE_MISMATCH = -2146881507;
    inline constexpr int32_t OSS_TYPE_NOT_SUPPORTED = -2146881506;
    inline constexpr int32_t OSS_REAL_DLL_NOT_LINKED = -2146881505;
    inline constexpr int32_t OSS_REAL_CODE_NOT_LINKED = -2146881504;
    inline constexpr int32_t OSS_OUT_OF_RANGE = -2146881503;
    inline constexpr int32_t OSS_COPIER_DLL_NOT_LINKED = -2146881502;
    inline constexpr int32_t OSS_CONSTRAINT_DLL_NOT_LINKED = -2146881501;
    inline constexpr int32_t OSS_COMPARATOR_DLL_NOT_LINKED = -2146881500;
    inline constexpr int32_t OSS_COMPARATOR_CODE_NOT_LINKED = -2146881499;
    inline constexpr int32_t OSS_MEM_MGR_DLL_NOT_LINKED = -2146881498;
    inline constexpr int32_t OSS_PDV_DLL_NOT_LINKED = -2146881497;
    inline constexpr int32_t OSS_PDV_CODE_NOT_LINKED = -2146881496;
    inline constexpr int32_t OSS_API_DLL_NOT_LINKED = -2146881495;
    inline constexpr int32_t OSS_BERDER_DLL_NOT_LINKED = -2146881494;
    inline constexpr int32_t OSS_PER_DLL_NOT_LINKED = -2146881493;
    inline constexpr int32_t OSS_OPEN_TYPE_ERROR = -2146881492;
    inline constexpr int32_t OSS_MUTEX_NOT_CREATED = -2146881491;
    inline constexpr int32_t OSS_CANT_CLOSE_TRACE_FILE = -2146881490;
    inline constexpr int32_t CRYPT_E_ASN1_ERROR = -2146881280;
    inline constexpr int32_t CRYPT_E_ASN1_INTERNAL = -2146881279;
    inline constexpr int32_t CRYPT_E_ASN1_EOD = -2146881278;
    inline constexpr int32_t CRYPT_E_ASN1_CORRUPT = -2146881277;
    inline constexpr int32_t CRYPT_E_ASN1_LARGE = -2146881276;
    inline constexpr int32_t CRYPT_E_ASN1_CONSTRAINT = -2146881275;
    inline constexpr int32_t CRYPT_E_ASN1_MEMORY = -2146881274;
    inline constexpr int32_t CRYPT_E_ASN1_OVERFLOW = -2146881273;
    inline constexpr int32_t CRYPT_E_ASN1_BADPDU = -2146881272;
    inline constexpr int32_t CRYPT_E_ASN1_BADARGS = -2146881271;
    inline constexpr int32_t CRYPT_E_ASN1_BADREAL = -2146881270;
    inline constexpr int32_t CRYPT_E_ASN1_BADTAG = -2146881269;
    inline constexpr int32_t CRYPT_E_ASN1_CHOICE = -2146881268;
    inline constexpr int32_t CRYPT_E_ASN1_RULE = -2146881267;
    inline constexpr int32_t CRYPT_E_ASN1_UTF8 = -2146881266;
    inline constexpr int32_t CRYPT_E_ASN1_PDU_TYPE = -2146881229;
    inline constexpr int32_t CRYPT_E_ASN1_NYI = -2146881228;
    inline constexpr int32_t CRYPT_E_ASN1_EXTENDED = -2146881023;
    inline constexpr int32_t CRYPT_E_ASN1_NOEOD = -2146881022;
    inline constexpr int32_t CERTSRV_E_BAD_REQUESTSUBJECT = -2146877439;
    inline constexpr int32_t CERTSRV_E_NO_REQUEST = -2146877438;
    inline constexpr int32_t CERTSRV_E_BAD_REQUESTSTATUS = -2146877437;
    inline constexpr int32_t CERTSRV_E_PROPERTY_EMPTY = -2146877436;
    inline constexpr int32_t CERTSRV_E_INVALID_CA_CERTIFICATE = -2146877435;
    inline constexpr int32_t CERTSRV_E_SERVER_SUSPENDED = -2146877434;
    inline constexpr int32_t CERTSRV_E_ENCODING_LENGTH = -2146877433;
    inline constexpr int32_t CERTSRV_E_ROLECONFLICT = -2146877432;
    inline constexpr int32_t CERTSRV_E_RESTRICTEDOFFICER = -2146877431;
    inline constexpr int32_t CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED = -2146877430;
    inline constexpr int32_t CERTSRV_E_NO_VALID_KRA = -2146877429;
    inline constexpr int32_t CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL = -2146877428;
    inline constexpr int32_t CERTSRV_E_NO_CAADMIN_DEFINED = -2146877427;
    inline constexpr int32_t CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE = -2146877426;
    inline constexpr int32_t CERTSRV_E_NO_DB_SESSIONS = -2146877425;
    inline constexpr int32_t CERTSRV_E_ALIGNMENT_FAULT = -2146877424;
    inline constexpr int32_t CERTSRV_E_ENROLL_DENIED = -2146877423;
    inline constexpr int32_t CERTSRV_E_TEMPLATE_DENIED = -2146877422;
    inline constexpr int32_t CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE = -2146877421;
    inline constexpr int32_t CERTSRV_E_ADMIN_DENIED_REQUEST = -2146877420;
    inline constexpr int32_t CERTSRV_E_NO_POLICY_SERVER = -2146877419;
    inline constexpr int32_t CERTSRV_E_WEAK_SIGNATURE_OR_KEY = -2146877418;
    inline constexpr int32_t CERTSRV_E_KEY_ATTESTATION_NOT_SUPPORTED = -2146877417;
    inline constexpr int32_t CERTSRV_E_ENCRYPTION_CERT_REQUIRED = -2146877416;
    inline constexpr int32_t CERTSRV_E_UNSUPPORTED_CERT_TYPE = -2146875392;
    inline constexpr int32_t CERTSRV_E_NO_CERT_TYPE = -2146875391;
    inline constexpr int32_t CERTSRV_E_TEMPLATE_CONFLICT = -2146875390;
    inline constexpr int32_t CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED = -2146875389;
    inline constexpr int32_t CERTSRV_E_ARCHIVED_KEY_REQUIRED = -2146875388;
    inline constexpr int32_t CERTSRV_E_SMIME_REQUIRED = -2146875387;
    inline constexpr int32_t CERTSRV_E_BAD_RENEWAL_SUBJECT = -2146875386;
    inline constexpr int32_t CERTSRV_E_BAD_TEMPLATE_VERSION = -2146875385;
    inline constexpr int32_t CERTSRV_E_TEMPLATE_POLICY_REQUIRED = -2146875384;
    inline constexpr int32_t CERTSRV_E_SIGNATURE_POLICY_REQUIRED = -2146875383;
    inline constexpr int32_t CERTSRV_E_SIGNATURE_COUNT = -2146875382;
    inline constexpr int32_t CERTSRV_E_SIGNATURE_REJECTED = -2146875381;
    inline constexpr int32_t CERTSRV_E_ISSUANCE_POLICY_REQUIRED = -2146875380;
    inline constexpr int32_t CERTSRV_E_SUBJECT_UPN_REQUIRED = -2146875379;
    inline constexpr int32_t CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED = -2146875378;
    inline constexpr int32_t CERTSRV_E_SUBJECT_DNS_REQUIRED = -2146875377;
    inline constexpr int32_t CERTSRV_E_ARCHIVED_KEY_UNEXPECTED = -2146875376;
    inline constexpr int32_t CERTSRV_E_KEY_LENGTH = -2146875375;
    inline constexpr int32_t CERTSRV_E_SUBJECT_EMAIL_REQUIRED = -2146875374;
    inline constexpr int32_t CERTSRV_E_UNKNOWN_CERT_TYPE = -2146875373;
    inline constexpr int32_t CERTSRV_E_CERT_TYPE_OVERLAP = -2146875372;
    inline constexpr int32_t CERTSRV_E_TOO_MANY_SIGNATURES = -2146875371;
    inline constexpr int32_t CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY = -2146875370;
    inline constexpr int32_t CERTSRV_E_INVALID_EK = -2146875369;
    inline constexpr int32_t CERTSRV_E_INVALID_IDBINDING = -2146875368;
    inline constexpr int32_t CERTSRV_E_INVALID_ATTESTATION = -2146875367;
    inline constexpr int32_t CERTSRV_E_KEY_ATTESTATION = -2146875366;
    inline constexpr int32_t CERTSRV_E_CORRUPT_KEY_ATTESTATION = -2146875365;
    inline constexpr int32_t CERTSRV_E_EXPIRED_CHALLENGE = -2146875364;
    inline constexpr int32_t CERTSRV_E_INVALID_RESPONSE = -2146875363;
    inline constexpr int32_t CERTSRV_E_INVALID_REQUESTID = -2146875362;
    inline constexpr int32_t CERTSRV_E_REQUEST_PRECERTIFICATE_MISMATCH = -2146875361;
    inline constexpr int32_t CERTSRV_E_PENDING_CLIENT_RESPONSE = -2146875360;
    inline constexpr int32_t XENROLL_E_KEY_NOT_EXPORTABLE = -2146873344;
    inline constexpr int32_t XENROLL_E_CANNOT_ADD_ROOT_CERT = -2146873343;
    inline constexpr int32_t XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND = -2146873342;
    inline constexpr int32_t XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH = -2146873341;
    inline constexpr int32_t XENROLL_E_RESPONSE_KA_HASH_MISMATCH = -2146873340;
    inline constexpr int32_t XENROLL_E_KEYSPEC_SMIME_MISMATCH = -2146873339;
    inline constexpr int32_t TRUST_E_SYSTEM_ERROR = -2146869247;
    inline constexpr int32_t TRUST_E_NO_SIGNER_CERT = -2146869246;
    inline constexpr int32_t TRUST_E_COUNTER_SIGNER = -2146869245;
    inline constexpr int32_t TRUST_E_CERT_SIGNATURE = -2146869244;
    inline constexpr int32_t TRUST_E_TIME_STAMP = -2146869243;
    inline constexpr int32_t TRUST_E_BAD_DIGEST = -2146869232;
    inline constexpr int32_t TRUST_E_MALFORMED_SIGNATURE = -2146869231;
    inline constexpr int32_t TRUST_E_BASIC_CONSTRAINTS = -2146869223;
    inline constexpr int32_t TRUST_E_FINANCIAL_CRITERIA = -2146869218;
    inline constexpr int32_t MSSIPOTF_E_OUTOFMEMRANGE = -2146865151;
    inline constexpr int32_t MSSIPOTF_E_CANTGETOBJECT = -2146865150;
    inline constexpr int32_t MSSIPOTF_E_NOHEADTABLE = -2146865149;
    inline constexpr int32_t MSSIPOTF_E_BAD_MAGICNUMBER = -2146865148;
    inline constexpr int32_t MSSIPOTF_E_BAD_OFFSET_TABLE = -2146865147;
    inline constexpr int32_t MSSIPOTF_E_TABLE_TAGORDER = -2146865146;
    inline constexpr int32_t MSSIPOTF_E_TABLE_LONGWORD = -2146865145;
    inline constexpr int32_t MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT = -2146865144;
    inline constexpr int32_t MSSIPOTF_E_TABLES_OVERLAP = -2146865143;
    inline constexpr int32_t MSSIPOTF_E_TABLE_PADBYTES = -2146865142;
    inline constexpr int32_t MSSIPOTF_E_FILETOOSMALL = -2146865141;
    inline constexpr int32_t MSSIPOTF_E_TABLE_CHECKSUM = -2146865140;
    inline constexpr int32_t MSSIPOTF_E_FILE_CHECKSUM = -2146865139;
    inline constexpr int32_t MSSIPOTF_E_FAILED_POLICY = -2146865136;
    inline constexpr int32_t MSSIPOTF_E_FAILED_HINTS_CHECK = -2146865135;
    inline constexpr int32_t MSSIPOTF_E_NOT_OPENTYPE = -2146865134;
    inline constexpr int32_t MSSIPOTF_E_FILE = -2146865133;
    inline constexpr int32_t MSSIPOTF_E_CRYPT = -2146865132;
    inline constexpr int32_t MSSIPOTF_E_BADVERSION = -2146865131;
    inline constexpr int32_t MSSIPOTF_E_DSIG_STRUCTURE = -2146865130;
    inline constexpr int32_t MSSIPOTF_E_PCONST_CHECK = -2146865129;
    inline constexpr int32_t MSSIPOTF_E_STRUCTURE = -2146865128;
    inline constexpr int32_t ERROR_CRED_REQUIRES_CONFIRMATION = -2146865127;
    inline constexpr int32_t NTE_OP_OK = 0;
    inline constexpr int32_t TRUST_E_PROVIDER_UNKNOWN = -2146762751;
    inline constexpr int32_t TRUST_E_ACTION_UNKNOWN = -2146762750;
    inline constexpr int32_t TRUST_E_SUBJECT_FORM_UNKNOWN = -2146762749;
    inline constexpr int32_t TRUST_E_SUBJECT_NOT_TRUSTED = -2146762748;
    inline constexpr int32_t DIGSIG_E_ENCODE = -2146762747;
    inline constexpr int32_t DIGSIG_E_DECODE = -2146762746;
    inline constexpr int32_t DIGSIG_E_EXTENSIBILITY = -2146762745;
    inline constexpr int32_t DIGSIG_E_CRYPTO = -2146762744;
    inline constexpr int32_t PERSIST_E_SIZEDEFINITE = -2146762743;
    inline constexpr int32_t PERSIST_E_SIZEINDEFINITE = -2146762742;
    inline constexpr int32_t PERSIST_E_NOTSELFSIZING = -2146762741;
    inline constexpr int32_t TRUST_E_NOSIGNATURE = -2146762496;
    inline constexpr int32_t CERT_E_EXPIRED = -2146762495;
    inline constexpr int32_t CERT_E_VALIDITYPERIODNESTING = -2146762494;
    inline constexpr int32_t CERT_E_ROLE = -2146762493;
    inline constexpr int32_t CERT_E_PATHLENCONST = -2146762492;
    inline constexpr int32_t CERT_E_CRITICAL = -2146762491;
    inline constexpr int32_t CERT_E_PURPOSE = -2146762490;
    inline constexpr int32_t CERT_E_ISSUERCHAINING = -2146762489;
    inline constexpr int32_t CERT_E_MALFORMED = -2146762488;
    inline constexpr int32_t CERT_E_UNTRUSTEDROOT = -2146762487;
    inline constexpr int32_t CERT_E_CHAINING = -2146762486;
    inline constexpr int32_t TRUST_E_FAIL = -2146762485;
    inline constexpr int32_t CERT_E_REVOKED = -2146762484;
    inline constexpr int32_t CERT_E_UNTRUSTEDTESTROOT = -2146762483;
    inline constexpr int32_t CERT_E_REVOCATION_FAILURE = -2146762482;
    inline constexpr int32_t CERT_E_CN_NO_MATCH = -2146762481;
    inline constexpr int32_t CERT_E_WRONG_USAGE = -2146762480;
    inline constexpr int32_t TRUST_E_EXPLICIT_DISTRUST = -2146762479;
    inline constexpr int32_t CERT_E_UNTRUSTEDCA = -2146762478;
    inline constexpr int32_t CERT_E_INVALID_POLICY = -2146762477;
    inline constexpr int32_t CERT_E_INVALID_NAME = -2146762476;
    inline constexpr int32_t SPAPI_E_EXPECTED_SECTION_NAME = -2146500608;
    inline constexpr int32_t SPAPI_E_BAD_SECTION_NAME_LINE = -2146500607;
    inline constexpr int32_t SPAPI_E_SECTION_NAME_TOO_LONG = -2146500606;
    inline constexpr int32_t SPAPI_E_GENERAL_SYNTAX = -2146500605;
    inline constexpr int32_t SPAPI_E_WRONG_INF_STYLE = -2146500352;
    inline constexpr int32_t SPAPI_E_SECTION_NOT_FOUND = -2146500351;
    inline constexpr int32_t SPAPI_E_LINE_NOT_FOUND = -2146500350;
    inline constexpr int32_t SPAPI_E_NO_BACKUP = -2146500349;
    inline constexpr int32_t SPAPI_E_NO_ASSOCIATED_CLASS = -2146500096;
    inline constexpr int32_t SPAPI_E_CLASS_MISMATCH = -2146500095;
    inline constexpr int32_t SPAPI_E_DUPLICATE_FOUND = -2146500094;
    inline constexpr int32_t SPAPI_E_NO_DRIVER_SELECTED = -2146500093;
    inline constexpr int32_t SPAPI_E_KEY_DOES_NOT_EXIST = -2146500092;
    inline constexpr int32_t SPAPI_E_INVALID_DEVINST_NAME = -2146500091;
    inline constexpr int32_t SPAPI_E_INVALID_CLASS = -2146500090;
    inline constexpr int32_t SPAPI_E_DEVINST_ALREADY_EXISTS = -2146500089;
    inline constexpr int32_t SPAPI_E_DEVINFO_NOT_REGISTERED = -2146500088;
    inline constexpr int32_t SPAPI_E_INVALID_REG_PROPERTY = -2146500087;
    inline constexpr int32_t SPAPI_E_NO_INF = -2146500086;
    inline constexpr int32_t SPAPI_E_NO_SUCH_DEVINST = -2146500085;
    inline constexpr int32_t SPAPI_E_CANT_LOAD_CLASS_ICON = -2146500084;
    inline constexpr int32_t SPAPI_E_INVALID_CLASS_INSTALLER = -2146500083;
    inline constexpr int32_t SPAPI_E_DI_DO_DEFAULT = -2146500082;
    inline constexpr int32_t SPAPI_E_DI_NOFILECOPY = -2146500081;
    inline constexpr int32_t SPAPI_E_INVALID_HWPROFILE = -2146500080;
    inline constexpr int32_t SPAPI_E_NO_DEVICE_SELECTED = -2146500079;
    inline constexpr int32_t SPAPI_E_DEVINFO_LIST_LOCKED = -2146500078;
    inline constexpr int32_t SPAPI_E_DEVINFO_DATA_LOCKED = -2146500077;
    inline constexpr int32_t SPAPI_E_DI_BAD_PATH = -2146500076;
    inline constexpr int32_t SPAPI_E_NO_CLASSINSTALL_PARAMS = -2146500075;
    inline constexpr int32_t SPAPI_E_FILEQUEUE_LOCKED = -2146500074;
    inline constexpr int32_t SPAPI_E_BAD_SERVICE_INSTALLSECT = -2146500073;
    inline constexpr int32_t SPAPI_E_NO_CLASS_DRIVER_LIST = -2146500072;
    inline constexpr int32_t SPAPI_E_NO_ASSOCIATED_SERVICE = -2146500071;
    inline constexpr int32_t SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE = -2146500070;
    inline constexpr int32_t SPAPI_E_DEVICE_INTERFACE_ACTIVE = -2146500069;
    inline constexpr int32_t SPAPI_E_DEVICE_INTERFACE_REMOVED = -2146500068;
    inline constexpr int32_t SPAPI_E_BAD_INTERFACE_INSTALLSECT = -2146500067;
    inline constexpr int32_t SPAPI_E_NO_SUCH_INTERFACE_CLASS = -2146500066;
    inline constexpr int32_t SPAPI_E_INVALID_REFERENCE_STRING = -2146500065;
    inline constexpr int32_t SPAPI_E_INVALID_MACHINENAME = -2146500064;
    inline constexpr int32_t SPAPI_E_REMOTE_COMM_FAILURE = -2146500063;
    inline constexpr int32_t SPAPI_E_MACHINE_UNAVAILABLE = -2146500062;
    inline constexpr int32_t SPAPI_E_NO_CONFIGMGR_SERVICES = -2146500061;
    inline constexpr int32_t SPAPI_E_INVALID_PROPPAGE_PROVIDER = -2146500060;
    inline constexpr int32_t SPAPI_E_NO_SUCH_DEVICE_INTERFACE = -2146500059;
    inline constexpr int32_t SPAPI_E_DI_POSTPROCESSING_REQUIRED = -2146500058;
    inline constexpr int32_t SPAPI_E_INVALID_COINSTALLER = -2146500057;
    inline constexpr int32_t SPAPI_E_NO_COMPAT_DRIVERS = -2146500056;
    inline constexpr int32_t SPAPI_E_NO_DEVICE_ICON = -2146500055;
    inline constexpr int32_t SPAPI_E_INVALID_INF_LOGCONFIG = -2146500054;
    inline constexpr int32_t SPAPI_E_DI_DONT_INSTALL = -2146500053;
    inline constexpr int32_t SPAPI_E_INVALID_FILTER_DRIVER = -2146500052;
    inline constexpr int32_t SPAPI_E_NON_WINDOWS_NT_DRIVER = -2146500051;
    inline constexpr int32_t SPAPI_E_NON_WINDOWS_DRIVER = -2146500050;
    inline constexpr int32_t SPAPI_E_NO_CATALOG_FOR_OEM_INF = -2146500049;
    inline constexpr int32_t SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE = -2146500048;
    inline constexpr int32_t SPAPI_E_NOT_DISABLEABLE = -2146500047;
    inline constexpr int32_t SPAPI_E_CANT_REMOVE_DEVINST = -2146500046;
    inline constexpr int32_t SPAPI_E_INVALID_TARGET = -2146500045;
    inline constexpr int32_t SPAPI_E_DRIVER_NONNATIVE = -2146500044;
    inline constexpr int32_t SPAPI_E_IN_WOW64 = -2146500043;
    inline constexpr int32_t SPAPI_E_SET_SYSTEM_RESTORE_POINT = -2146500042;
    inline constexpr int32_t SPAPI_E_INCORRECTLY_COPIED_INF = -2146500041;
    inline constexpr int32_t SPAPI_E_SCE_DISABLED = -2146500040;
    inline constexpr int32_t SPAPI_E_UNKNOWN_EXCEPTION = -2146500039;
    inline constexpr int32_t SPAPI_E_PNP_REGISTRY_ERROR = -2146500038;
    inline constexpr int32_t SPAPI_E_REMOTE_REQUEST_UNSUPPORTED = -2146500037;
    inline constexpr int32_t SPAPI_E_NOT_AN_INSTALLED_OEM_INF = -2146500036;
    inline constexpr int32_t SPAPI_E_INF_IN_USE_BY_DEVICES = -2146500035;
    inline constexpr int32_t SPAPI_E_DI_FUNCTION_OBSOLETE = -2146500034;
    inline constexpr int32_t SPAPI_E_NO_AUTHENTICODE_CATALOG = -2146500033;
    inline constexpr int32_t SPAPI_E_AUTHENTICODE_DISALLOWED = -2146500032;
    inline constexpr int32_t SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER = -2146500031;
    inline constexpr int32_t SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED = -2146500030;
    inline constexpr int32_t SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED = -2146500029;
    inline constexpr int32_t SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH = -2146500028;
    inline constexpr int32_t SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE = -2146500027;
    inline constexpr int32_t SPAPI_E_DEVICE_INSTALLER_NOT_READY = -2146500026;
    inline constexpr int32_t SPAPI_E_DRIVER_STORE_ADD_FAILED = -2146500025;
    inline constexpr int32_t SPAPI_E_DEVICE_INSTALL_BLOCKED = -2146500024;
    inline constexpr int32_t SPAPI_E_DRIVER_INSTALL_BLOCKED = -2146500023;
    inline constexpr int32_t SPAPI_E_WRONG_INF_TYPE = -2146500022;
    inline constexpr int32_t SPAPI_E_FILE_HASH_NOT_IN_CATALOG = -2146500021;
    inline constexpr int32_t SPAPI_E_DRIVER_STORE_DELETE_FAILED = -2146500020;
    inline constexpr int32_t SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW = -2146499840;
    inline constexpr int32_t SPAPI_E_ERROR_NOT_INSTALLED = -2146496512;
    inline constexpr int32_t SCARD_F_INTERNAL_ERROR = -2146435071;
    inline constexpr int32_t SCARD_E_CANCELLED = -2146435070;
    inline constexpr int32_t SCARD_E_INVALID_HANDLE = -2146435069;
    inline constexpr int32_t SCARD_E_INVALID_PARAMETER = -2146435068;
    inline constexpr int32_t SCARD_E_INVALID_TARGET = -2146435067;
    inline constexpr int32_t SCARD_E_NO_MEMORY = -2146435066;
    inline constexpr int32_t SCARD_F_WAITED_TOO_LONG = -2146435065;
    inline constexpr int32_t SCARD_E_INSUFFICIENT_BUFFER = -2146435064;
    inline constexpr int32_t SCARD_E_UNKNOWN_READER = -2146435063;
    inline constexpr int32_t SCARD_E_TIMEOUT = -2146435062;
    inline constexpr int32_t SCARD_E_SHARING_VIOLATION = -2146435061;
    inline constexpr int32_t SCARD_E_NO_SMARTCARD = -2146435060;
    inline constexpr int32_t SCARD_E_UNKNOWN_CARD = -2146435059;
    inline constexpr int32_t SCARD_E_CANT_DISPOSE = -2146435058;
    inline constexpr int32_t SCARD_E_PROTO_MISMATCH = -2146435057;
    inline constexpr int32_t SCARD_E_NOT_READY = -2146435056;
    inline constexpr int32_t SCARD_E_INVALID_VALUE = -2146435055;
    inline constexpr int32_t SCARD_E_SYSTEM_CANCELLED = -2146435054;
    inline constexpr int32_t SCARD_F_COMM_ERROR = -2146435053;
    inline constexpr int32_t SCARD_F_UNKNOWN_ERROR = -2146435052;
    inline constexpr int32_t SCARD_E_INVALID_ATR = -2146435051;
    inline constexpr int32_t SCARD_E_NOT_TRANSACTED = -2146435050;
    inline constexpr int32_t SCARD_E_READER_UNAVAILABLE = -2146435049;
    inline constexpr int32_t SCARD_P_SHUTDOWN = -2146435048;
    inline constexpr int32_t SCARD_E_PCI_TOO_SMALL = -2146435047;
    inline constexpr int32_t SCARD_E_READER_UNSUPPORTED = -2146435046;
    inline constexpr int32_t SCARD_E_DUPLICATE_READER = -2146435045;
    inline constexpr int32_t SCARD_E_CARD_UNSUPPORTED = -2146435044;
    inline constexpr int32_t SCARD_E_NO_SERVICE = -2146435043;
    inline constexpr int32_t SCARD_E_SERVICE_STOPPED = -2146435042;
    inline constexpr int32_t SCARD_E_UNEXPECTED = -2146435041;
    inline constexpr int32_t SCARD_E_ICC_INSTALLATION = -2146435040;
    inline constexpr int32_t SCARD_E_ICC_CREATEORDER = -2146435039;
    inline constexpr int32_t SCARD_E_UNSUPPORTED_FEATURE = -2146435038;
    inline constexpr int32_t SCARD_E_DIR_NOT_FOUND = -2146435037;
    inline constexpr int32_t SCARD_E_FILE_NOT_FOUND = -2146435036;
    inline constexpr int32_t SCARD_E_NO_DIR = -2146435035;
    inline constexpr int32_t SCARD_E_NO_FILE = -2146435034;
    inline constexpr int32_t SCARD_E_NO_ACCESS = -2146435033;
    inline constexpr int32_t SCARD_E_WRITE_TOO_MANY = -2146435032;
    inline constexpr int32_t SCARD_E_BAD_SEEK = -2146435031;
    inline constexpr int32_t SCARD_E_INVALID_CHV = -2146435030;
    inline constexpr int32_t SCARD_E_UNKNOWN_RES_MNG = -2146435029;
    inline constexpr int32_t SCARD_E_NO_SUCH_CERTIFICATE = -2146435028;
    inline constexpr int32_t SCARD_E_CERTIFICATE_UNAVAILABLE = -2146435027;
    inline constexpr int32_t SCARD_E_NO_READERS_AVAILABLE = -2146435026;
    inline constexpr int32_t SCARD_E_COMM_DATA_LOST = -2146435025;
    inline constexpr int32_t SCARD_E_NO_KEY_CONTAINER = -2146435024;
    inline constexpr int32_t SCARD_E_SERVER_TOO_BUSY = -2146435023;
    inline constexpr int32_t SCARD_E_PIN_CACHE_EXPIRED = -2146435022;
    inline constexpr int32_t SCARD_E_NO_PIN_CACHE = -2146435021;
    inline constexpr int32_t SCARD_E_READ_ONLY_CARD = -2146435020;
    inline constexpr int32_t SCARD_W_UNSUPPORTED_CARD = -2146434971;
    inline constexpr int32_t SCARD_W_UNRESPONSIVE_CARD = -2146434970;
    inline constexpr int32_t SCARD_W_UNPOWERED_CARD = -2146434969;
    inline constexpr int32_t SCARD_W_RESET_CARD = -2146434968;
    inline constexpr int32_t SCARD_W_REMOVED_CARD = -2146434967;
    inline constexpr int32_t SCARD_W_SECURITY_VIOLATION = -2146434966;
    inline constexpr int32_t SCARD_W_WRONG_CHV = -2146434965;
    inline constexpr int32_t SCARD_W_CHV_BLOCKED = -2146434964;
    inline constexpr int32_t SCARD_W_EOF = -2146434963;
    inline constexpr int32_t SCARD_W_CANCELLED_BY_USER = -2146434962;
    inline constexpr int32_t SCARD_W_CARD_NOT_AUTHENTICATED = -2146434961;
    inline constexpr int32_t SCARD_W_CACHE_ITEM_NOT_FOUND = -2146434960;
    inline constexpr int32_t SCARD_W_CACHE_ITEM_STALE = -2146434959;
    inline constexpr int32_t SCARD_W_CACHE_ITEM_TOO_BIG = -2146434958;
    inline constexpr int32_t COMADMIN_E_OBJECTERRORS = -2146368511;
    inline constexpr int32_t COMADMIN_E_OBJECTINVALID = -2146368510;
    inline constexpr int32_t COMADMIN_E_KEYMISSING = -2146368509;
    inline constexpr int32_t COMADMIN_E_ALREADYINSTALLED = -2146368508;
    inline constexpr int32_t COMADMIN_E_APP_FILE_WRITEFAIL = -2146368505;
    inline constexpr int32_t COMADMIN_E_APP_FILE_READFAIL = -2146368504;
    inline constexpr int32_t COMADMIN_E_APP_FILE_VERSION = -2146368503;
    inline constexpr int32_t COMADMIN_E_BADPATH = -2146368502;
    inline constexpr int32_t COMADMIN_E_APPLICATIONEXISTS = -2146368501;
    inline constexpr int32_t COMADMIN_E_ROLEEXISTS = -2146368500;
    inline constexpr int32_t COMADMIN_E_CANTCOPYFILE = -2146368499;
    inline constexpr int32_t COMADMIN_E_NOUSER = -2146368497;
    inline constexpr int32_t COMADMIN_E_INVALIDUSERIDS = -2146368496;
    inline constexpr int32_t COMADMIN_E_NOREGISTRYCLSID = -2146368495;
    inline constexpr int32_t COMADMIN_E_BADREGISTRYPROGID = -2146368494;
    inline constexpr int32_t COMADMIN_E_AUTHENTICATIONLEVEL = -2146368493;
    inline constexpr int32_t COMADMIN_E_USERPASSWDNOTVALID = -2146368492;
    inline constexpr int32_t COMADMIN_E_CLSIDORIIDMISMATCH = -2146368488;
    inline constexpr int32_t COMADMIN_E_REMOTEINTERFACE = -2146368487;
    inline constexpr int32_t COMADMIN_E_DLLREGISTERSERVER = -2146368486;
    inline constexpr int32_t COMADMIN_E_NOSERVERSHARE = -2146368485;
    inline constexpr int32_t COMADMIN_E_DLLLOADFAILED = -2146368483;
    inline constexpr int32_t COMADMIN_E_BADREGISTRYLIBID = -2146368482;
    inline constexpr int32_t COMADMIN_E_APPDIRNOTFOUND = -2146368481;
    inline constexpr int32_t COMADMIN_E_REGISTRARFAILED = -2146368477;
    inline constexpr int32_t COMADMIN_E_COMPFILE_DOESNOTEXIST = -2146368476;
    inline constexpr int32_t COMADMIN_E_COMPFILE_LOADDLLFAIL = -2146368475;
    inline constexpr int32_t COMADMIN_E_COMPFILE_GETCLASSOBJ = -2146368474;
    inline constexpr int32_t COMADMIN_E_COMPFILE_CLASSNOTAVAIL = -2146368473;
    inline constexpr int32_t COMADMIN_E_COMPFILE_BADTLB = -2146368472;
    inline constexpr int32_t COMADMIN_E_COMPFILE_NOTINSTALLABLE = -2146368471;
    inline constexpr int32_t COMADMIN_E_NOTCHANGEABLE = -2146368470;
    inline constexpr int32_t COMADMIN_E_NOTDELETEABLE = -2146368469;
    inline constexpr int32_t COMADMIN_E_SESSION = -2146368468;
    inline constexpr int32_t COMADMIN_E_COMP_MOVE_LOCKED = -2146368467;
    inline constexpr int32_t COMADMIN_E_COMP_MOVE_BAD_DEST = -2146368466;
    inline constexpr int32_t COMADMIN_E_REGISTERTLB = -2146368464;
    inline constexpr int32_t COMADMIN_E_SYSTEMAPP = -2146368461;
    inline constexpr int32_t COMADMIN_E_COMPFILE_NOREGISTRAR = -2146368460;
    inline constexpr int32_t COMADMIN_E_COREQCOMPINSTALLED = -2146368459;
    inline constexpr int32_t COMADMIN_E_SERVICENOTINSTALLED = -2146368458;
    inline constexpr int32_t COMADMIN_E_PROPERTYSAVEFAILED = -2146368457;
    inline constexpr int32_t COMADMIN_E_OBJECTEXISTS = -2146368456;
    inline constexpr int32_t COMADMIN_E_COMPONENTEXISTS = -2146368455;
    inline constexpr int32_t COMADMIN_E_REGFILE_CORRUPT = -2146368453;
    inline constexpr int32_t COMADMIN_E_PROPERTY_OVERFLOW = -2146368452;
    inline constexpr int32_t COMADMIN_E_NOTINREGISTRY = -2146368450;
    inline constexpr int32_t COMADMIN_E_OBJECTNOTPOOLABLE = -2146368449;
    inline constexpr int32_t COMADMIN_E_APPLID_MATCHES_CLSID = -2146368442;
    inline constexpr int32_t COMADMIN_E_ROLE_DOES_NOT_EXIST = -2146368441;
    inline constexpr int32_t COMADMIN_E_START_APP_NEEDS_COMPONENTS = -2146368440;
    inline constexpr int32_t COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM = -2146368439;
    inline constexpr int32_t COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY = -2146368438;
    inline constexpr int32_t COMADMIN_E_CAN_NOT_START_APP = -2146368437;
    inline constexpr int32_t COMADMIN_E_CAN_NOT_EXPORT_SYS_APP = -2146368436;
    inline constexpr int32_t COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT = -2146368435;
    inline constexpr int32_t COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER = -2146368434;
    inline constexpr int32_t COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE = -2146368433;
    inline constexpr int32_t COMADMIN_E_BASE_PARTITION_ONLY = -2146368432;
    inline constexpr int32_t COMADMIN_E_START_APP_DISABLED = -2146368431;
    inline constexpr int32_t COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME = -2146368425;
    inline constexpr int32_t COMADMIN_E_CAT_INVALID_PARTITION_NAME = -2146368424;
    inline constexpr int32_t COMADMIN_E_CAT_PARTITION_IN_USE = -2146368423;
    inline constexpr int32_t COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES = -2146368422;
    inline constexpr int32_t COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED = -2146368421;
    inline constexpr int32_t COMADMIN_E_AMBIGUOUS_APPLICATION_NAME = -2146368420;
    inline constexpr int32_t COMADMIN_E_AMBIGUOUS_PARTITION_NAME = -2146368419;
    inline constexpr int32_t COMADMIN_E_REGDB_NOTINITIALIZED = -2146368398;
    inline constexpr int32_t COMADMIN_E_REGDB_NOTOPEN = -2146368397;
    inline constexpr int32_t COMADMIN_E_REGDB_SYSTEMERR = -2146368396;
    inline constexpr int32_t COMADMIN_E_REGDB_ALREADYRUNNING = -2146368395;
    inline constexpr int32_t COMADMIN_E_MIG_VERSIONNOTSUPPORTED = -2146368384;
    inline constexpr int32_t COMADMIN_E_MIG_SCHEMANOTFOUND = -2146368383;
    inline constexpr int32_t COMADMIN_E_CAT_BITNESSMISMATCH = -2146368382;
    inline constexpr int32_t COMADMIN_E_CAT_UNACCEPTABLEBITNESS = -2146368381;
    inline constexpr int32_t COMADMIN_E_CAT_WRONGAPPBITNESS = -2146368380;
    inline constexpr int32_t COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED = -2146368379;
    inline constexpr int32_t COMADMIN_E_CAT_SERVERFAULT = -2146368378;
    inline constexpr int32_t COMQC_E_APPLICATION_NOT_QUEUED = -2146368000;
    inline constexpr int32_t COMQC_E_NO_QUEUEABLE_INTERFACES = -2146367999;
    inline constexpr int32_t COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE = -2146367998;
    inline constexpr int32_t COMQC_E_NO_IPERSISTSTREAM = -2146367997;
    inline constexpr int32_t COMQC_E_BAD_MESSAGE = -2146367996;
    inline constexpr int32_t COMQC_E_UNAUTHENTICATED = -2146367995;
    inline constexpr int32_t COMQC_E_UNTRUSTED_ENQUEUER = -2146367994;
    inline constexpr int32_t MSDTC_E_DUPLICATE_RESOURCE = -2146367743;
    inline constexpr int32_t COMADMIN_E_OBJECT_PARENT_MISSING = -2146367480;
    inline constexpr int32_t COMADMIN_E_OBJECT_DOES_NOT_EXIST = -2146367479;
    inline constexpr int32_t COMADMIN_E_APP_NOT_RUNNING = -2146367478;
    inline constexpr int32_t COMADMIN_E_INVALID_PARTITION = -2146367477;
    inline constexpr int32_t COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE = -2146367475;
    inline constexpr int32_t COMADMIN_E_USER_IN_SET = -2146367474;
    inline constexpr int32_t COMADMIN_E_CANTRECYCLELIBRARYAPPS = -2146367473;
    inline constexpr int32_t COMADMIN_E_CANTRECYCLESERVICEAPPS = -2146367471;
    inline constexpr int32_t COMADMIN_E_PROCESSALREADYRECYCLED = -2146367470;
    inline constexpr int32_t COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED = -2146367469;
    inline constexpr int32_t COMADMIN_E_CANTMAKEINPROCSERVICE = -2146367468;
    inline constexpr int32_t COMADMIN_E_PROGIDINUSEBYCLSID = -2146367467;
    inline constexpr int32_t COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET = -2146367466;
    inline constexpr int32_t COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED = -2146367465;
    inline constexpr int32_t COMADMIN_E_PARTITION_ACCESSDENIED = -2146367464;
    inline constexpr int32_t COMADMIN_E_PARTITION_MSI_ONLY = -2146367463;
    inline constexpr int32_t COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT = -2146367462;
    inline constexpr int32_t COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS = -2146367461;
    inline constexpr int32_t COMADMIN_E_COMP_MOVE_SOURCE = -2146367460;
    inline constexpr int32_t COMADMIN_E_COMP_MOVE_DEST = -2146367459;
    inline constexpr int32_t COMADMIN_E_COMP_MOVE_PRIVATE = -2146367458;
    inline constexpr int32_t COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET = -2146367457;
    inline constexpr int32_t COMADMIN_E_CANNOT_ALIAS_EVENTCLASS = -2146367456;
    inline constexpr int32_t COMADMIN_E_PRIVATE_ACCESSDENIED = -2146367455;
    inline constexpr int32_t COMADMIN_E_SAFERINVALID = -2146367454;
    inline constexpr int32_t COMADMIN_E_REGISTRY_ACCESSDENIED = -2146367453;
    inline constexpr int32_t COMADMIN_E_PARTITIONS_DISABLED = -2146367452;
    inline constexpr int32_t WER_S_REPORT_DEBUG = 1769472;
    inline constexpr int32_t WER_S_REPORT_UPLOADED = 1769473;
    inline constexpr int32_t WER_S_REPORT_QUEUED = 1769474;
    inline constexpr int32_t WER_S_DISABLED = 1769475;
    inline constexpr int32_t WER_S_SUSPENDED_UPLOAD = 1769476;
    inline constexpr int32_t WER_S_DISABLED_QUEUE = 1769477;
    inline constexpr int32_t WER_S_DISABLED_ARCHIVE = 1769478;
    inline constexpr int32_t WER_S_REPORT_ASYNC = 1769479;
    inline constexpr int32_t WER_S_IGNORE_ASSERT_INSTANCE = 1769480;
    inline constexpr int32_t WER_S_IGNORE_ALL_ASSERTS = 1769481;
    inline constexpr int32_t WER_S_ASSERT_CONTINUE = 1769482;
    inline constexpr int32_t WER_S_THROTTLED = 1769483;
    inline constexpr int32_t WER_S_REPORT_UPLOADED_CAB = 1769484;
    inline constexpr int32_t WER_E_CRASH_FAILURE = -2145681408;
    inline constexpr int32_t WER_E_CANCELED = -2145681407;
    inline constexpr int32_t WER_E_NETWORK_FAILURE = -2145681406;
    inline constexpr int32_t WER_E_NOT_INITIALIZED = -2145681405;
    inline constexpr int32_t WER_E_ALREADY_REPORTING = -2145681404;
    inline constexpr int32_t WER_E_DUMP_THROTTLED = -2145681403;
    inline constexpr int32_t WER_E_INSUFFICIENT_CONSENT = -2145681402;
    inline constexpr int32_t WER_E_TOO_HEAVY = -2145681401;
    inline constexpr int32_t ERROR_FLT_IO_COMPLETE = 2031617;
    inline constexpr int32_t ERROR_FLT_NO_HANDLER_DEFINED = -2145452031;
    inline constexpr int32_t ERROR_FLT_CONTEXT_ALREADY_DEFINED = -2145452030;
    inline constexpr int32_t ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST = -2145452029;
    inline constexpr int32_t ERROR_FLT_DISALLOW_FAST_IO = -2145452028;
    inline constexpr int32_t ERROR_FLT_INVALID_NAME_REQUEST = -2145452027;
    inline constexpr int32_t ERROR_FLT_NOT_SAFE_TO_POST_OPERATION = -2145452026;
    inline constexpr int32_t ERROR_FLT_NOT_INITIALIZED = -2145452025;
    inline constexpr int32_t ERROR_FLT_FILTER_NOT_READY = -2145452024;
    inline constexpr int32_t ERROR_FLT_POST_OPERATION_CLEANUP = -2145452023;
    inline constexpr int32_t ERROR_FLT_INTERNAL_ERROR = -2145452022;
    inline constexpr int32_t ERROR_FLT_DELETING_OBJECT = -2145452021;
    inline constexpr int32_t ERROR_FLT_MUST_BE_NONPAGED_POOL = -2145452020;
    inline constexpr int32_t ERROR_FLT_DUPLICATE_ENTRY = -2145452019;
    inline constexpr int32_t ERROR_FLT_CBDQ_DISABLED = -2145452018;
    inline constexpr int32_t ERROR_FLT_DO_NOT_ATTACH = -2145452017;
    inline constexpr int32_t ERROR_FLT_DO_NOT_DETACH = -2145452016;
    inline constexpr int32_t ERROR_FLT_INSTANCE_ALTITUDE_COLLISION = -2145452015;
    inline constexpr int32_t ERROR_FLT_INSTANCE_NAME_COLLISION = -2145452014;
    inline constexpr int32_t ERROR_FLT_FILTER_NOT_FOUND = -2145452013;
    inline constexpr int32_t ERROR_FLT_VOLUME_NOT_FOUND = -2145452012;
    inline constexpr int32_t ERROR_FLT_INSTANCE_NOT_FOUND = -2145452011;
    inline constexpr int32_t ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND = -2145452010;
    inline constexpr int32_t ERROR_FLT_INVALID_CONTEXT_REGISTRATION = -2145452009;
    inline constexpr int32_t ERROR_FLT_NAME_CACHE_MISS = -2145452008;
    inline constexpr int32_t ERROR_FLT_NO_DEVICE_OBJECT = -2145452007;
    inline constexpr int32_t ERROR_FLT_VOLUME_ALREADY_MOUNTED = -2145452006;
    inline constexpr int32_t ERROR_FLT_ALREADY_ENLISTED = -2145452005;
    inline constexpr int32_t ERROR_FLT_CONTEXT_ALREADY_LINKED = -2145452004;
    inline constexpr int32_t ERROR_FLT_NO_WAITER_FOR_REPLY = -2145452000;
    inline constexpr int32_t ERROR_FLT_REGISTRATION_BUSY = -2145451997;
    inline constexpr int32_t ERROR_HUNG_DISPLAY_DRIVER_THREAD = -2144993279;
    inline constexpr int32_t DWM_E_COMPOSITIONDISABLED = -2144980991;
    inline constexpr int32_t DWM_E_REMOTING_NOT_SUPPORTED = -2144980990;
    inline constexpr int32_t DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE = -2144980989;
    inline constexpr int32_t DWM_E_NOT_QUEUING_PRESENTS = -2144980988;
    inline constexpr int32_t DWM_E_ADAPTER_NOT_FOUND = -2144980987;
    inline constexpr int32_t DWM_S_GDI_REDIRECTION_SURFACE = 2502661;
    inline constexpr int32_t DWM_E_TEXTURE_TOO_LARGE = -2144980985;
    inline constexpr int32_t DWM_S_GDI_REDIRECTION_SURFACE_BLT_VIA_GDI = 2502664;
    inline constexpr int32_t ERROR_MONITOR_NO_DESCRIPTOR = 2494465;
    inline constexpr int32_t ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT = 2494466;
    inline constexpr int32_t ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM = -1071247357;
    inline constexpr int32_t ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK = -1071247356;
    inline constexpr int32_t ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED = -1071247355;
    inline constexpr int32_t ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK = -1071247354;
    inline constexpr int32_t ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK = -1071247353;
    inline constexpr int32_t ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA = -1071247352;
    inline constexpr int32_t ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK = -1071247351;
    inline constexpr int32_t ERROR_MONITOR_INVALID_MANUFACTURE_DATE = -1071247350;
    inline constexpr int32_t ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER = -1071243264;
    inline constexpr int32_t ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER = -1071243263;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER = -1071243262;
    inline constexpr int32_t ERROR_GRAPHICS_ADAPTER_WAS_RESET = -1071243261;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_DRIVER_MODEL = -1071243260;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_MODE_CHANGED = -1071243259;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_OCCLUDED = -1071243258;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_DENIED = -1071243257;
    inline constexpr int32_t ERROR_GRAPHICS_CANNOTCOLORCONVERT = -1071243256;
    inline constexpr int32_t ERROR_GRAPHICS_DRIVER_MISMATCH = -1071243255;
    inline constexpr int32_t ERROR_GRAPHICS_PARTIAL_DATA_POPULATED = 1076240394;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED = -1071243253;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_UNOCCLUDED = -1071243252;
    inline constexpr int32_t ERROR_GRAPHICS_WINDOWDC_NOT_AVAILABLE = -1071243251;
    inline constexpr int32_t ERROR_GRAPHICS_WINDOWLESS_PRESENT_DISABLED = -1071243250;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_INVALID_WINDOW = -1071243249;
    inline constexpr int32_t ERROR_GRAPHICS_PRESENT_BUFFER_NOT_BOUND = -1071243248;
    inline constexpr int32_t ERROR_GRAPHICS_VAIL_STATE_CHANGED = -1071243247;
    inline constexpr int32_t ERROR_GRAPHICS_INDIRECT_DISPLAY_ABANDON_SWAPCHAIN = -1071243246;
    inline constexpr int32_t ERROR_GRAPHICS_INDIRECT_DISPLAY_DEVICE_STOPPED = -1071243245;
    inline constexpr int32_t ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_CREATE_SUPERWETINK_MESSAGE = -1071243244;
    inline constexpr int32_t ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_DESTROY_SUPERWETINK_MESSAGE = -1071243243;
    inline constexpr int32_t ERROR_GRAPHICS_NO_VIDEO_MEMORY = -1071243008;
    inline constexpr int32_t ERROR_GRAPHICS_CANT_LOCK_MEMORY = -1071243007;
    inline constexpr int32_t ERROR_GRAPHICS_ALLOCATION_BUSY = -1071243006;
    inline constexpr int32_t ERROR_GRAPHICS_TOO_MANY_REFERENCES = -1071243005;
    inline constexpr int32_t ERROR_GRAPHICS_TRY_AGAIN_LATER = -1071243004;
    inline constexpr int32_t ERROR_GRAPHICS_TRY_AGAIN_NOW = -1071243003;
    inline constexpr int32_t ERROR_GRAPHICS_ALLOCATION_INVALID = -1071243002;
    inline constexpr int32_t ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE = -1071243001;
    inline constexpr int32_t ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED = -1071243000;
    inline constexpr int32_t ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION = -1071242999;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE = -1071242992;
    inline constexpr int32_t ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION = -1071242991;
    inline constexpr int32_t ERROR_GRAPHICS_ALLOCATION_CLOSED = -1071242990;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE = -1071242989;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE = -1071242988;
    inline constexpr int32_t ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE = -1071242987;
    inline constexpr int32_t ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST = -1071242986;
    inline constexpr int32_t ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE = -1071242752;
    inline constexpr int32_t ERROR_GRAPHICS_SKIP_ALLOCATION_PREPARATION = 1076240897;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY = -1071242496;
    inline constexpr int32_t ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED = -1071242495;
    inline constexpr int32_t ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED = -1071242494;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN = -1071242493;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE = -1071242492;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET = -1071242491;
    inline constexpr int32_t ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED = -1071242490;
    inline constexpr int32_t ERROR_GRAPHICS_MODE_NOT_PINNED = 2499335;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET = -1071242488;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET = -1071242487;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_FREQUENCY = -1071242486;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_ACTIVE_REGION = -1071242485;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_TOTAL_REGION = -1071242484;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE = -1071242480;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE = -1071242479;
    inline constexpr int32_t ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET = -1071242478;
    inline constexpr int32_t ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY = -1071242477;
    inline constexpr int32_t ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET = -1071242476;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET = -1071242475;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET = -1071242474;
    inline constexpr int32_t ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET = -1071242473;
    inline constexpr int32_t ERROR_GRAPHICS_TARGET_ALREADY_IN_SET = -1071242472;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH = -1071242471;
    inline constexpr int32_t ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY = -1071242470;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET = -1071242469;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE = -1071242468;
    inline constexpr int32_t ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET = -1071242467;
    inline constexpr int32_t ERROR_GRAPHICS_NO_PREFERRED_MODE = 2499358;
    inline constexpr int32_t ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET = -1071242465;
    inline constexpr int32_t ERROR_GRAPHICS_STALE_MODESET = -1071242464;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET = -1071242463;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE = -1071242462;
    inline constexpr int32_t ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN = -1071242461;
    inline constexpr int32_t ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE = -1071242460;
    inline constexpr int32_t ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION = -1071242459;
    inline constexpr int32_t ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES = -1071242458;
    inline constexpr int32_t ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY = -1071242457;
    inline constexpr int32_t ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE = -1071242456;
    inline constexpr int32_t ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET = -1071242455;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET = -1071242454;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR = -1071242453;
    inline constexpr int32_t ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET = -1071242452;
    inline constexpr int32_t ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET = -1071242451;
    inline constexpr int32_t ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE = -1071242450;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE = -1071242449;
    inline constexpr int32_t ERROR_GRAPHICS_RESOURCES_NOT_RELATED = -1071242448;
    inline constexpr int32_t ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE = -1071242447;
    inline constexpr int32_t ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE = -1071242446;
    inline constexpr int32_t ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET = -1071242445;
    inline constexpr int32_t ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER = -1071242444;
    inline constexpr int32_t ERROR_GRAPHICS_NO_VIDPNMGR = -1071242443;
    inline constexpr int32_t ERROR_GRAPHICS_NO_ACTIVE_VIDPN = -1071242442;
    inline constexpr int32_t ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY = -1071242441;
    inline constexpr int32_t ERROR_GRAPHICS_MONITOR_NOT_CONNECTED = -1071242440;
    inline constexpr int32_t ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY = -1071242439;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE = -1071242438;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE = -1071242437;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_STRIDE = -1071242436;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PIXELFORMAT = -1071242435;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_COLORBASIS = -1071242434;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE = -1071242433;
    inline constexpr int32_t ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY = -1071242432;
    inline constexpr int32_t ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT = -1071242431;
    inline constexpr int32_t ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = -1071242430;
    inline constexpr int32_t ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN = -1071242429;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL = -1071242428;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION = -1071242427;
    inline constexpr int32_t ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED = -1071242426;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_GAMMA_RAMP = -1071242425;
    inline constexpr int32_t ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED = -1071242424;
    inline constexpr int32_t ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED = -1071242423;
    inline constexpr int32_t ERROR_GRAPHICS_MODE_NOT_IN_MODESET = -1071242422;
    inline constexpr int32_t ERROR_GRAPHICS_DATASET_IS_EMPTY = 2499403;
    inline constexpr int32_t ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET = 2499404;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON = -1071242419;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE = -1071242418;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE = -1071242417;
    inline constexpr int32_t ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS = -1071242416;
    inline constexpr int32_t ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED = 2499409;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING = -1071242414;
    inline constexpr int32_t ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED = -1071242413;
    inline constexpr int32_t ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS = -1071242412;
    inline constexpr int32_t ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT = -1071242411;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM = -1071242410;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN = -1071242409;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT = -1071242408;
    inline constexpr int32_t ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED = -1071242407;
    inline constexpr int32_t ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION = -1071242406;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_CLIENT_TYPE = -1071242405;
    inline constexpr int32_t ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET = -1071242404;
    inline constexpr int32_t ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED = -1071242240;
    inline constexpr int32_t ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED = -1071242239;
    inline constexpr int32_t ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS = 1076241455;
    inline constexpr int32_t ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER = -1071242192;
    inline constexpr int32_t ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED = -1071242191;
    inline constexpr int32_t ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED = -1071242190;
    inline constexpr int32_t ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY = -1071242189;
    inline constexpr int32_t ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED = -1071242188;
    inline constexpr int32_t ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON = -1071242187;
    inline constexpr int32_t ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE = -1071242186;
    inline constexpr int32_t ERROR_GRAPHICS_LEADLINK_START_DEFERRED = 1076241463;
    inline constexpr int32_t ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER = -1071242184;
    inline constexpr int32_t ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY = 1076241465;
    inline constexpr int32_t ERROR_GRAPHICS_START_DEFERRED = 1076241466;
    inline constexpr int32_t ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED = -1071242181;
    inline constexpr int32_t ERROR_GRAPHICS_DEPENDABLE_CHILD_STATUS = 1076241468;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_NOT_SUPPORTED = -1071241984;
    inline constexpr int32_t ERROR_GRAPHICS_COPP_NOT_SUPPORTED = -1071241983;
    inline constexpr int32_t ERROR_GRAPHICS_UAB_NOT_SUPPORTED = -1071241982;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS = -1071241981;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST = -1071241979;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INTERNAL_ERROR = -1071241973;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INVALID_HANDLE = -1071241972;
    inline constexpr int32_t ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH = -1071241970;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED = -1071241969;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED = -1071241968;
    inline constexpr int32_t ERROR_GRAPHICS_PVP_HFS_FAILED = -1071241967;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INVALID_SRM = -1071241966;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP = -1071241965;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP = -1071241964;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA = -1071241963;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET = -1071241962;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH = -1071241961;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE = -1071241960;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS = -1071241958;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS = -1071241957;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS = -1071241956;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST = -1071241955;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR = -1071241954;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS = -1071241953;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED = -1071241952;
    inline constexpr int32_t ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST = -1071241951;
    inline constexpr int32_t ERROR_GRAPHICS_I2C_NOT_SUPPORTED = -1071241856;
    inline constexpr int32_t ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST = -1071241855;
    inline constexpr int32_t ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA = -1071241854;
    inline constexpr int32_t ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA = -1071241853;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED = -1071241852;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_INVALID_DATA = -1071241851;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE = -1071241850;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING = -1071241849;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_INTERNAL_ERROR = -1071241848;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND = -1071241847;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH = -1071241846;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM = -1071241845;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE = -1071241844;
    inline constexpr int32_t ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS = -1071241843;
    inline constexpr int32_t ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE = -1071241768;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION = -1071241767;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = -1071241766;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH = -1071241765;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION = -1071241764;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = -1071241762;
    inline constexpr int32_t ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE = -1071241761;
    inline constexpr int32_t ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED = -1071241760;
    inline constexpr int32_t ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME = -1071241759;
    inline constexpr int32_t ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP = -1071241758;
    inline constexpr int32_t ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED = -1071241757;
    inline constexpr int32_t ERROR_GRAPHICS_INVALID_POINTER = -1071241756;
    inline constexpr int32_t ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE = -1071241755;
    inline constexpr int32_t ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL = -1071241754;
    inline constexpr int32_t ERROR_GRAPHICS_INTERNAL_ERROR = -1071241753;
    inline constexpr int32_t ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS = -1071249944;
    inline constexpr int32_t NAP_E_INVALID_PACKET = -2144927743;
    inline constexpr int32_t NAP_E_MISSING_SOH = -2144927742;
    inline constexpr int32_t NAP_E_CONFLICTING_ID = -2144927741;
    inline constexpr int32_t NAP_E_NO_CACHED_SOH = -2144927740;
    inline constexpr int32_t NAP_E_STILL_BOUND = -2144927739;
    inline constexpr int32_t NAP_E_NOT_REGISTERED = -2144927738;
    inline constexpr int32_t NAP_E_NOT_INITIALIZED = -2144927737;
    inline constexpr int32_t NAP_E_MISMATCHED_ID = -2144927736;
    inline constexpr int32_t NAP_E_NOT_PENDING = -2144927735;
    inline constexpr int32_t NAP_E_ID_NOT_FOUND = -2144927734;
    inline constexpr int32_t NAP_E_MAXSIZE_TOO_SMALL = -2144927733;
    inline constexpr int32_t NAP_E_SERVICE_NOT_RUNNING = -2144927732;
    inline constexpr int32_t NAP_S_CERT_ALREADY_PRESENT = 2555917;
    inline constexpr int32_t NAP_E_ENTITY_DISABLED = -2144927730;
    inline constexpr int32_t NAP_E_NETSH_GROUPPOLICY_ERROR = -2144927729;
    inline constexpr int32_t NAP_E_TOO_MANY_CALLS = -2144927728;
    inline constexpr int32_t NAP_E_SHV_CONFIG_EXISTED = -2144927727;
    inline constexpr int32_t NAP_E_SHV_CONFIG_NOT_FOUND = -2144927726;
    inline constexpr int32_t NAP_E_SHV_TIMEOUT = -2144927725;
    inline constexpr int32_t TPM_E_ERROR_MASK = -2144862208;
    inline constexpr int32_t TPM_E_AUTHFAIL = -2144862207;
    inline constexpr int32_t TPM_E_BADINDEX = -2144862206;
    inline constexpr int32_t TPM_E_BAD_PARAMETER = -2144862205;
    inline constexpr int32_t TPM_E_AUDITFAILURE = -2144862204;
    inline constexpr int32_t TPM_E_CLEAR_DISABLED = -2144862203;
    inline constexpr int32_t TPM_E_DEACTIVATED = -2144862202;
    inline constexpr int32_t TPM_E_DISABLED = -2144862201;
    inline constexpr int32_t TPM_E_DISABLED_CMD = -2144862200;
    inline constexpr int32_t TPM_E_FAIL = -2144862199;
    inline constexpr int32_t TPM_E_BAD_ORDINAL = -2144862198;
    inline constexpr int32_t TPM_E_INSTALL_DISABLED = -2144862197;
    inline constexpr int32_t TPM_E_INVALID_KEYHANDLE = -2144862196;
    inline constexpr int32_t TPM_E_KEYNOTFOUND = -2144862195;
    inline constexpr int32_t TPM_E_INAPPROPRIATE_ENC = -2144862194;
    inline constexpr int32_t TPM_E_MIGRATEFAIL = -2144862193;
    inline constexpr int32_t TPM_E_INVALID_PCR_INFO = -2144862192;
    inline constexpr int32_t TPM_E_NOSPACE = -2144862191;
    inline constexpr int32_t TPM_E_NOSRK = -2144862190;
    inline constexpr int32_t TPM_E_NOTSEALED_BLOB = -2144862189;
    inline constexpr int32_t TPM_E_OWNER_SET = -2144862188;
    inline constexpr int32_t TPM_E_RESOURCES = -2144862187;
    inline constexpr int32_t TPM_E_SHORTRANDOM = -2144862186;
    inline constexpr int32_t TPM_E_SIZE = -2144862185;
    inline constexpr int32_t TPM_E_WRONGPCRVAL = -2144862184;
    inline constexpr int32_t TPM_E_BAD_PARAM_SIZE = -2144862183;
    inline constexpr int32_t TPM_E_SHA_THREAD = -2144862182;
    inline constexpr int32_t TPM_E_SHA_ERROR = -2144862181;
    inline constexpr int32_t TPM_E_FAILEDSELFTEST = -2144862180;
    inline constexpr int32_t TPM_E_AUTH2FAIL = -2144862179;
    inline constexpr int32_t TPM_E_BADTAG = -2144862178;
    inline constexpr int32_t TPM_E_IOERROR = -2144862177;
    inline constexpr int32_t TPM_E_ENCRYPT_ERROR = -2144862176;
    inline constexpr int32_t TPM_E_DECRYPT_ERROR = -2144862175;
    inline constexpr int32_t TPM_E_INVALID_AUTHHANDLE = -2144862174;
    inline constexpr int32_t TPM_E_NO_ENDORSEMENT = -2144862173;
    inline constexpr int32_t TPM_E_INVALID_KEYUSAGE = -2144862172;
    inline constexpr int32_t TPM_E_WRONG_ENTITYTYPE = -2144862171;
    inline constexpr int32_t TPM_E_INVALID_POSTINIT = -2144862170;
    inline constexpr int32_t TPM_E_INAPPROPRIATE_SIG = -2144862169;
    inline constexpr int32_t TPM_E_BAD_KEY_PROPERTY = -2144862168;
    inline constexpr int32_t TPM_E_BAD_MIGRATION = -2144862167;
    inline constexpr int32_t TPM_E_BAD_SCHEME = -2144862166;
    inline constexpr int32_t TPM_E_BAD_DATASIZE = -2144862165;
    inline constexpr int32_t TPM_E_BAD_MODE = -2144862164;
    inline constexpr int32_t TPM_E_BAD_PRESENCE = -2144862163;
    inline constexpr int32_t TPM_E_BAD_VERSION = -2144862162;
    inline constexpr int32_t TPM_E_NO_WRAP_TRANSPORT = -2144862161;
    inline constexpr int32_t TPM_E_AUDITFAIL_UNSUCCESSFUL = -2144862160;
    inline constexpr int32_t TPM_E_AUDITFAIL_SUCCESSFUL = -2144862159;
    inline constexpr int32_t TPM_E_NOTRESETABLE = -2144862158;
    inline constexpr int32_t TPM_E_NOTLOCAL = -2144862157;
    inline constexpr int32_t TPM_E_BAD_TYPE = -2144862156;
    inline constexpr int32_t TPM_E_INVALID_RESOURCE = -2144862155;
    inline constexpr int32_t TPM_E_NOTFIPS = -2144862154;
    inline constexpr int32_t TPM_E_INVALID_FAMILY = -2144862153;
    inline constexpr int32_t TPM_E_NO_NV_PERMISSION = -2144862152;
    inline constexpr int32_t TPM_E_REQUIRES_SIGN = -2144862151;
    inline constexpr int32_t TPM_E_KEY_NOTSUPPORTED = -2144862150;
    inline constexpr int32_t TPM_E_AUTH_CONFLICT = -2144862149;
    inline constexpr int32_t TPM_E_AREA_LOCKED = -2144862148;
    inline constexpr int32_t TPM_E_BAD_LOCALITY = -2144862147;
    inline constexpr int32_t TPM_E_READ_ONLY = -2144862146;
    inline constexpr int32_t TPM_E_PER_NOWRITE = -2144862145;
    inline constexpr int32_t TPM_E_FAMILYCOUNT = -2144862144;
    inline constexpr int32_t TPM_E_WRITE_LOCKED = -2144862143;
    inline constexpr int32_t TPM_E_BAD_ATTRIBUTES = -2144862142;
    inline constexpr int32_t TPM_E_INVALID_STRUCTURE = -2144862141;
    inline constexpr int32_t TPM_E_KEY_OWNER_CONTROL = -2144862140;
    inline constexpr int32_t TPM_E_BAD_COUNTER = -2144862139;
    inline constexpr int32_t TPM_E_NOT_FULLWRITE = -2144862138;
    inline constexpr int32_t TPM_E_CONTEXT_GAP = -2144862137;
    inline constexpr int32_t TPM_E_MAXNVWRITES = -2144862136;
    inline constexpr int32_t TPM_E_NOOPERATOR = -2144862135;
    inline constexpr int32_t TPM_E_RESOURCEMISSING = -2144862134;
    inline constexpr int32_t TPM_E_DELEGATE_LOCK = -2144862133;
    inline constexpr int32_t TPM_E_DELEGATE_FAMILY = -2144862132;
    inline constexpr int32_t TPM_E_DELEGATE_ADMIN = -2144862131;
    inline constexpr int32_t TPM_E_TRANSPORT_NOTEXCLUSIVE = -2144862130;
    inline constexpr int32_t TPM_E_OWNER_CONTROL = -2144862129;
    inline constexpr int32_t TPM_E_DAA_RESOURCES = -2144862128;
    inline constexpr int32_t TPM_E_DAA_INPUT_DATA0 = -2144862127;
    inline constexpr int32_t TPM_E_DAA_INPUT_DATA1 = -2144862126;
    inline constexpr int32_t TPM_E_DAA_ISSUER_SETTINGS = -2144862125;
    inline constexpr int32_t TPM_E_DAA_TPM_SETTINGS = -2144862124;
    inline constexpr int32_t TPM_E_DAA_STAGE = -2144862123;
    inline constexpr int32_t TPM_E_DAA_ISSUER_VALIDITY = -2144862122;
    inline constexpr int32_t TPM_E_DAA_WRONG_W = -2144862121;
    inline constexpr int32_t TPM_E_BAD_HANDLE = -2144862120;
    inline constexpr int32_t TPM_E_BAD_DELEGATE = -2144862119;
    inline constexpr int32_t TPM_E_BADCONTEXT = -2144862118;
    inline constexpr int32_t TPM_E_TOOMANYCONTEXTS = -2144862117;
    inline constexpr int32_t TPM_E_MA_TICKET_SIGNATURE = -2144862116;
    inline constexpr int32_t TPM_E_MA_DESTINATION = -2144862115;
    inline constexpr int32_t TPM_E_MA_SOURCE = -2144862114;
    inline constexpr int32_t TPM_E_MA_AUTHORITY = -2144862113;
    inline constexpr int32_t TPM_E_PERMANENTEK = -2144862111;
    inline constexpr int32_t TPM_E_BAD_SIGNATURE = -2144862110;
    inline constexpr int32_t TPM_E_NOCONTEXTSPACE = -2144862109;
    inline constexpr int32_t TPM_20_E_ASYMMETRIC = -2144862079;
    inline constexpr int32_t TPM_20_E_ATTRIBUTES = -2144862078;
    inline constexpr int32_t TPM_20_E_HASH = -2144862077;
    inline constexpr int32_t TPM_20_E_VALUE = -2144862076;
    inline constexpr int32_t TPM_20_E_HIERARCHY = -2144862075;
    inline constexpr int32_t TPM_20_E_KEY_SIZE = -2144862073;
    inline constexpr int32_t TPM_20_E_MGF = -2144862072;
    inline constexpr int32_t TPM_20_E_MODE = -2144862071;
    inline constexpr int32_t TPM_20_E_TYPE = -2144862070;
    inline constexpr int32_t TPM_20_E_HANDLE = -2144862069;
    inline constexpr int32_t TPM_20_E_KDF = -2144862068;
    inline constexpr int32_t TPM_20_E_RANGE = -2144862067;
    inline constexpr int32_t TPM_20_E_AUTH_FAIL = -2144862066;
    inline constexpr int32_t TPM_20_E_NONCE = -2144862065;
    inline constexpr int32_t TPM_20_E_PP = -2144862064;
    inline constexpr int32_t TPM_20_E_SCHEME = -2144862062;
    inline constexpr int32_t TPM_20_E_SIZE = -2144862059;
    inline constexpr int32_t TPM_20_E_SYMMETRIC = -2144862058;
    inline constexpr int32_t TPM_20_E_TAG = -2144862057;
    inline constexpr int32_t TPM_20_E_SELECTOR = -2144862056;
    inline constexpr int32_t TPM_20_E_INSUFFICIENT = -2144862054;
    inline constexpr int32_t TPM_20_E_SIGNATURE = -2144862053;
    inline constexpr int32_t TPM_20_E_KEY = -2144862052;
    inline constexpr int32_t TPM_20_E_POLICY_FAIL = -2144862051;
    inline constexpr int32_t TPM_20_E_INTEGRITY = -2144862049;
    inline constexpr int32_t TPM_20_E_TICKET = -2144862048;
    inline constexpr int32_t TPM_20_E_RESERVED_BITS = -2144862047;
    inline constexpr int32_t TPM_20_E_BAD_AUTH = -2144862046;
    inline constexpr int32_t TPM_20_E_EXPIRED = -2144862045;
    inline constexpr int32_t TPM_20_E_POLICY_CC = -2144862044;
    inline constexpr int32_t TPM_20_E_BINDING = -2144862043;
    inline constexpr int32_t TPM_20_E_CURVE = -2144862042;
    inline constexpr int32_t TPM_20_E_ECC_POINT = -2144862041;
    inline constexpr int32_t TPM_20_E_INITIALIZE = -2144861952;
    inline constexpr int32_t TPM_20_E_FAILURE = -2144861951;
    inline constexpr int32_t TPM_20_E_SEQUENCE = -2144861949;
    inline constexpr int32_t TPM_20_E_PRIVATE = -2144861941;
    inline constexpr int32_t TPM_20_E_HMAC = -2144861927;
    inline constexpr int32_t TPM_20_E_DISABLED = -2144861920;
    inline constexpr int32_t TPM_20_E_EXCLUSIVE = -2144861919;
    inline constexpr int32_t TPM_20_E_ECC_CURVE = -2144861917;
    inline constexpr int32_t TPM_20_E_AUTH_TYPE = -2144861916;
    inline constexpr int32_t TPM_20_E_AUTH_MISSING = -2144861915;
    inline constexpr int32_t TPM_20_E_POLICY = -2144861914;
    inline constexpr int32_t TPM_20_E_PCR = -2144861913;
    inline constexpr int32_t TPM_20_E_PCR_CHANGED = -2144861912;
    inline constexpr int32_t TPM_20_E_UPGRADE = -2144861907;
    inline constexpr int32_t TPM_20_E_TOO_MANY_CONTEXTS = -2144861906;
    inline constexpr int32_t TPM_20_E_AUTH_UNAVAILABLE = -2144861905;
    inline constexpr int32_t TPM_20_E_REBOOT = -2144861904;
    inline constexpr int32_t TPM_20_E_UNBALANCED = -2144861903;
    inline constexpr int32_t TPM_20_E_COMMAND_SIZE = -2144861886;
    inline constexpr int32_t TPM_20_E_COMMAND_CODE = -2144861885;
    inline constexpr int32_t TPM_20_E_AUTHSIZE = -2144861884;
    inline constexpr int32_t TPM_20_E_AUTH_CONTEXT = -2144861883;
    inline constexpr int32_t TPM_20_E_NV_RANGE = -2144861882;
    inline constexpr int32_t TPM_20_E_NV_SIZE = -2144861881;
    inline constexpr int32_t TPM_20_E_NV_LOCKED = -2144861880;
    inline constexpr int32_t TPM_20_E_NV_AUTHORIZATION = -2144861879;
    inline constexpr int32_t TPM_20_E_NV_UNINITIALIZED = -2144861878;
    inline constexpr int32_t TPM_20_E_NV_SPACE = -2144861877;
    inline constexpr int32_t TPM_20_E_NV_DEFINED = -2144861876;
    inline constexpr int32_t TPM_20_E_BAD_CONTEXT = -2144861872;
    inline constexpr int32_t TPM_20_E_CPHASH = -2144861871;
    inline constexpr int32_t TPM_20_E_PARENT = -2144861870;
    inline constexpr int32_t TPM_20_E_NEEDS_TEST = -2144861869;
    inline constexpr int32_t TPM_20_E_NO_RESULT = -2144861868;
    inline constexpr int32_t TPM_20_E_SENSITIVE = -2144861867;
    inline constexpr int32_t TPM_E_COMMAND_BLOCKED = -2144861184;
    inline constexpr int32_t TPM_E_INVALID_HANDLE = -2144861183;
    inline constexpr int32_t TPM_E_DUPLICATE_VHANDLE = -2144861182;
    inline constexpr int32_t TPM_E_EMBEDDED_COMMAND_BLOCKED = -2144861181;
    inline constexpr int32_t TPM_E_EMBEDDED_COMMAND_UNSUPPORTED = -2144861180;
    inline constexpr int32_t TPM_E_RETRY = -2144860160;
    inline constexpr int32_t TPM_E_NEEDS_SELFTEST = -2144860159;
    inline constexpr int32_t TPM_E_DOING_SELFTEST = -2144860158;
    inline constexpr int32_t TPM_E_DEFEND_LOCK_RUNNING = -2144860157;
    inline constexpr int32_t TPM_20_E_CONTEXT_GAP = -2144859903;
    inline constexpr int32_t TPM_20_E_OBJECT_MEMORY = -2144859902;
    inline constexpr int32_t TPM_20_E_SESSION_MEMORY = -2144859901;
    inline constexpr int32_t TPM_20_E_MEMORY = -2144859900;
    inline constexpr int32_t TPM_20_E_SESSION_HANDLES = -2144859899;
    inline constexpr int32_t TPM_20_E_OBJECT_HANDLES = -2144859898;
    inline constexpr int32_t TPM_20_E_LOCALITY = -2144859897;
    inline constexpr int32_t TPM_20_E_YIELDED = -2144859896;
    inline constexpr int32_t TPM_20_E_CANCELED = -2144859895;
    inline constexpr int32_t TPM_20_E_TESTING = -2144859894;
    inline constexpr int32_t TPM_20_E_NV_RATE = -2144859872;
    inline constexpr int32_t TPM_20_E_LOCKOUT = -2144859871;
    inline constexpr int32_t TPM_20_E_RETRY = -2144859870;
    inline constexpr int32_t TPM_20_E_NV_UNAVAILABLE = -2144859869;
    inline constexpr int32_t TBS_E_INTERNAL_ERROR = -2144845823;
    inline constexpr int32_t TBS_E_BAD_PARAMETER = -2144845822;
    inline constexpr int32_t TBS_E_INVALID_OUTPUT_POINTER = -2144845821;
    inline constexpr int32_t TBS_E_INVALID_CONTEXT = -2144845820;
    inline constexpr int32_t TBS_E_INSUFFICIENT_BUFFER = -2144845819;
    inline constexpr int32_t TBS_E_IOERROR = -2144845818;
    inline constexpr int32_t TBS_E_INVALID_CONTEXT_PARAM = -2144845817;
    inline constexpr int32_t TBS_E_SERVICE_NOT_RUNNING = -2144845816;
    inline constexpr int32_t TBS_E_TOO_MANY_TBS_CONTEXTS = -2144845815;
    inline constexpr int32_t TBS_E_TOO_MANY_RESOURCES = -2144845814;
    inline constexpr int32_t TBS_E_SERVICE_START_PENDING = -2144845813;
    inline constexpr int32_t TBS_E_PPI_NOT_SUPPORTED = -2144845812;
    inline constexpr int32_t TBS_E_COMMAND_CANCELED = -2144845811;
    inline constexpr int32_t TBS_E_BUFFER_TOO_LARGE = -2144845810;
    inline constexpr int32_t TBS_E_TPM_NOT_FOUND = -2144845809;
    inline constexpr int32_t TBS_E_SERVICE_DISABLED = -2144845808;
    inline constexpr int32_t TBS_E_NO_EVENT_LOG = -2144845807;
    inline constexpr int32_t TBS_E_ACCESS_DENIED = -2144845806;
    inline constexpr int32_t TBS_E_PROVISIONING_NOT_ALLOWED = -2144845805;
    inline constexpr int32_t TBS_E_PPI_FUNCTION_UNSUPPORTED = -2144845804;
    inline constexpr int32_t TBS_E_OWNERAUTH_NOT_FOUND = -2144845803;
    inline constexpr int32_t TBS_E_PROVISIONING_INCOMPLETE = -2144845802;
    inline constexpr int32_t TPMAPI_E_INVALID_STATE = -2144796416;
    inline constexpr int32_t TPMAPI_E_NOT_ENOUGH_DATA = -2144796415;
    inline constexpr int32_t TPMAPI_E_TOO_MUCH_DATA = -2144796414;
    inline constexpr int32_t TPMAPI_E_INVALID_OUTPUT_POINTER = -2144796413;
    inline constexpr int32_t TPMAPI_E_INVALID_PARAMETER = -2144796412;
    inline constexpr int32_t TPMAPI_E_OUT_OF_MEMORY = -2144796411;
    inline constexpr int32_t TPMAPI_E_BUFFER_TOO_SMALL = -2144796410;
    inline constexpr int32_t TPMAPI_E_INTERNAL_ERROR = -2144796409;
    inline constexpr int32_t TPMAPI_E_ACCESS_DENIED = -2144796408;
    inline constexpr int32_t TPMAPI_E_AUTHORIZATION_FAILED = -2144796407;
    inline constexpr int32_t TPMAPI_E_INVALID_CONTEXT_HANDLE = -2144796406;
    inline constexpr int32_t TPMAPI_E_TBS_COMMUNICATION_ERROR = -2144796405;
    inline constexpr int32_t TPMAPI_E_TPM_COMMAND_ERROR = -2144796404;
    inline constexpr int32_t TPMAPI_E_MESSAGE_TOO_LARGE = -2144796403;
    inline constexpr int32_t TPMAPI_E_INVALID_ENCODING = -2144796402;
    inline constexpr int32_t TPMAPI_E_INVALID_KEY_SIZE = -2144796401;
    inline constexpr int32_t TPMAPI_E_ENCRYPTION_FAILED = -2144796400;
    inline constexpr int32_t TPMAPI_E_INVALID_KEY_PARAMS = -2144796399;
    inline constexpr int32_t TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB = -2144796398;
    inline constexpr int32_t TPMAPI_E_INVALID_PCR_INDEX = -2144796397;
    inline constexpr int32_t TPMAPI_E_INVALID_DELEGATE_BLOB = -2144796396;
    inline constexpr int32_t TPMAPI_E_INVALID_CONTEXT_PARAMS = -2144796395;
    inline constexpr int32_t TPMAPI_E_INVALID_KEY_BLOB = -2144796394;
    inline constexpr int32_t TPMAPI_E_INVALID_PCR_DATA = -2144796393;
    inline constexpr int32_t TPMAPI_E_INVALID_OWNER_AUTH = -2144796392;
    inline constexpr int32_t TPMAPI_E_FIPS_RNG_CHECK_FAILED = -2144796391;
    inline constexpr int32_t TPMAPI_E_EMPTY_TCG_LOG = -2144796390;
    inline constexpr int32_t TPMAPI_E_INVALID_TCG_LOG_ENTRY = -2144796389;
    inline constexpr int32_t TPMAPI_E_TCG_SEPARATOR_ABSENT = -2144796388;
    inline constexpr int32_t TPMAPI_E_TCG_INVALID_DIGEST_ENTRY = -2144796387;
    inline constexpr int32_t TPMAPI_E_POLICY_DENIES_OPERATION = -2144796386;
    inline constexpr int32_t TPMAPI_E_NV_BITS_NOT_DEFINED = -2144796385;
    inline constexpr int32_t TPMAPI_E_NV_BITS_NOT_READY = -2144796384;
    inline constexpr int32_t TPMAPI_E_SEALING_KEY_NOT_AVAILABLE = -2144796383;
    inline constexpr int32_t TPMAPI_E_NO_AUTHORIZATION_CHAIN_FOUND = -2144796382;
    inline constexpr int32_t TPMAPI_E_SVN_COUNTER_NOT_AVAILABLE = -2144796381;
    inline constexpr int32_t TPMAPI_E_OWNER_AUTH_NOT_NULL = -2144796380;
    inline constexpr int32_t TPMAPI_E_ENDORSEMENT_AUTH_NOT_NULL = -2144796379;
    inline constexpr int32_t TPMAPI_E_AUTHORIZATION_REVOKED = -2144796378;
    inline constexpr int32_t TPMAPI_E_MALFORMED_AUTHORIZATION_KEY = -2144796377;
    inline constexpr int32_t TPMAPI_E_AUTHORIZING_KEY_NOT_SUPPORTED = -2144796376;
    inline constexpr int32_t TPMAPI_E_INVALID_AUTHORIZATION_SIGNATURE = -2144796375;
    inline constexpr int32_t TPMAPI_E_MALFORMED_AUTHORIZATION_POLICY = -2144796374;
    inline constexpr int32_t TPMAPI_E_MALFORMED_AUTHORIZATION_OTHER = -2144796373;
    inline constexpr int32_t TPMAPI_E_SEALING_KEY_CHANGED = -2144796372;
    inline constexpr int32_t TPMAPI_E_INVALID_TPM_VERSION = -2144796371;
    inline constexpr int32_t TPMAPI_E_INVALID_POLICYAUTH_BLOB_TYPE = -2144796370;
    inline constexpr int32_t TBSIMP_E_BUFFER_TOO_SMALL = -2144796160;
    inline constexpr int32_t TBSIMP_E_CLEANUP_FAILED = -2144796159;
    inline constexpr int32_t TBSIMP_E_INVALID_CONTEXT_HANDLE = -2144796158;
    inline constexpr int32_t TBSIMP_E_INVALID_CONTEXT_PARAM = -2144796157;
    inline constexpr int32_t TBSIMP_E_TPM_ERROR = -2144796156;
    inline constexpr int32_t TBSIMP_E_HASH_BAD_KEY = -2144796155;
    inline constexpr int32_t TBSIMP_E_DUPLICATE_VHANDLE = -2144796154;
    inline constexpr int32_t TBSIMP_E_INVALID_OUTPUT_POINTER = -2144796153;
    inline constexpr int32_t TBSIMP_E_INVALID_PARAMETER = -2144796152;
    inline constexpr int32_t TBSIMP_E_RPC_INIT_FAILED = -2144796151;
    inline constexpr int32_t TBSIMP_E_SCHEDULER_NOT_RUNNING = -2144796150;
    inline constexpr int32_t TBSIMP_E_COMMAND_CANCELED = -2144796149;
    inline constexpr int32_t TBSIMP_E_OUT_OF_MEMORY = -2144796148;
    inline constexpr int32_t TBSIMP_E_LIST_NO_MORE_ITEMS = -2144796147;
    inline constexpr int32_t TBSIMP_E_LIST_NOT_FOUND = -2144796146;
    inline constexpr int32_t TBSIMP_E_NOT_ENOUGH_SPACE = -2144796145;
    inline constexpr int32_t TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS = -2144796144;
    inline constexpr int32_t TBSIMP_E_COMMAND_FAILED = -2144796143;
    inline constexpr int32_t TBSIMP_E_UNKNOWN_ORDINAL = -2144796142;
    inline constexpr int32_t TBSIMP_E_RESOURCE_EXPIRED = -2144796141;
    inline constexpr int32_t TBSIMP_E_INVALID_RESOURCE = -2144796140;
    inline constexpr int32_t TBSIMP_E_NOTHING_TO_UNLOAD = -2144796139;
    inline constexpr int32_t TBSIMP_E_HASH_TABLE_FULL = -2144796138;
    inline constexpr int32_t TBSIMP_E_TOO_MANY_TBS_CONTEXTS = -2144796137;
    inline constexpr int32_t TBSIMP_E_TOO_MANY_RESOURCES = -2144796136;
    inline constexpr int32_t TBSIMP_E_PPI_NOT_SUPPORTED = -2144796135;
    inline constexpr int32_t TBSIMP_E_TPM_INCOMPATIBLE = -2144796134;
    inline constexpr int32_t TBSIMP_E_NO_EVENT_LOG = -2144796133;
    inline constexpr int32_t TPM_E_PPI_ACPI_FAILURE = -2144795904;
    inline constexpr int32_t TPM_E_PPI_USER_ABORT = -2144795903;
    inline constexpr int32_t TPM_E_PPI_BIOS_FAILURE = -2144795902;
    inline constexpr int32_t TPM_E_PPI_NOT_SUPPORTED = -2144795901;
    inline constexpr int32_t TPM_E_PPI_BLOCKED_IN_BIOS = -2144795900;
    inline constexpr int32_t TPM_E_PCP_ERROR_MASK = -2144795648;
    inline constexpr int32_t TPM_E_PCP_DEVICE_NOT_READY = -2144795647;
    inline constexpr int32_t TPM_E_PCP_INVALID_HANDLE = -2144795646;
    inline constexpr int32_t TPM_E_PCP_INVALID_PARAMETER = -2144795645;
    inline constexpr int32_t TPM_E_PCP_FLAG_NOT_SUPPORTED = -2144795644;
    inline constexpr int32_t TPM_E_PCP_NOT_SUPPORTED = -2144795643;
    inline constexpr int32_t TPM_E_PCP_BUFFER_TOO_SMALL = -2144795642;
    inline constexpr int32_t TPM_E_PCP_INTERNAL_ERROR = -2144795641;
    inline constexpr int32_t TPM_E_PCP_AUTHENTICATION_FAILED = -2144795640;
    inline constexpr int32_t TPM_E_PCP_AUTHENTICATION_IGNORED = -2144795639;
    inline constexpr int32_t TPM_E_PCP_POLICY_NOT_FOUND = -2144795638;
    inline constexpr int32_t TPM_E_PCP_PROFILE_NOT_FOUND = -2144795637;
    inline constexpr int32_t TPM_E_PCP_VALIDATION_FAILED = -2144795636;
    inline constexpr int32_t TPM_E_PCP_WRONG_PARENT = -2144795634;
    inline constexpr int32_t TPM_E_KEY_NOT_LOADED = -2144795633;
    inline constexpr int32_t TPM_E_NO_KEY_CERTIFICATION = -2144795632;
    inline constexpr int32_t TPM_E_KEY_NOT_FINALIZED = -2144795631;
    inline constexpr int32_t TPM_E_ATTESTATION_CHALLENGE_NOT_SET = -2144795630;
    inline constexpr int32_t TPM_E_NOT_PCR_BOUND = -2144795629;
    inline constexpr int32_t TPM_E_KEY_ALREADY_FINALIZED = -2144795628;
    inline constexpr int32_t TPM_E_KEY_USAGE_POLICY_NOT_SUPPORTED = -2144795627;
    inline constexpr int32_t TPM_E_KEY_USAGE_POLICY_INVALID = -2144795626;
    inline constexpr int32_t TPM_E_SOFT_KEY_ERROR = -2144795625;
    inline constexpr int32_t TPM_E_KEY_NOT_AUTHENTICATED = -2144795624;
    inline constexpr int32_t TPM_E_PCP_KEY_NOT_AIK = -2144795623;
    inline constexpr int32_t TPM_E_KEY_NOT_SIGNING_KEY = -2144795622;
    inline constexpr int32_t TPM_E_LOCKED_OUT = -2144795621;
    inline constexpr int32_t TPM_E_CLAIM_TYPE_NOT_SUPPORTED = -2144795620;
    inline constexpr int32_t TPM_E_VERSION_NOT_SUPPORTED = -2144795619;
    inline constexpr int32_t TPM_E_BUFFER_LENGTH_MISMATCH = -2144795618;
    inline constexpr int32_t TPM_E_PCP_IFX_RSA_KEY_CREATION_BLOCKED = -2144795617;
    inline constexpr int32_t TPM_E_PCP_TICKET_MISSING = -2144795616;
    inline constexpr int32_t TPM_E_PCP_RAW_POLICY_NOT_SUPPORTED = -2144795615;
    inline constexpr int32_t TPM_E_PCP_KEY_HANDLE_INVALIDATED = -2144795614;
    inline constexpr int32_t TPM_E_PCP_UNSUPPORTED_PSS_SALT = 1076429859;
    inline constexpr int32_t TPM_E_PCP_PLATFORM_CLAIM_MAY_BE_OUTDATED = 1076429860;
    inline constexpr int32_t TPM_E_PCP_PLATFORM_CLAIM_OUTDATED = 1076429861;
    inline constexpr int32_t TPM_E_PCP_PLATFORM_CLAIM_REBOOT = 1076429862;
    inline constexpr int32_t TPM_E_ZERO_EXHAUST_ENABLED = -2144795392;
    inline constexpr int32_t TPM_E_PROVISIONING_INCOMPLETE = -2144795136;
    inline constexpr int32_t TPM_E_INVALID_OWNER_AUTH = -2144795135;
    inline constexpr int32_t TPM_E_TOO_MUCH_DATA = -2144795134;
    inline constexpr int32_t PLA_E_DCS_NOT_FOUND = -2144337918;
    inline constexpr int32_t PLA_E_DCS_IN_USE = -2144337750;
    inline constexpr int32_t PLA_E_TOO_MANY_FOLDERS = -2144337851;
    inline constexpr int32_t PLA_E_NO_MIN_DISK = -2144337808;
    inline constexpr int32_t PLA_E_DCS_ALREADY_EXISTS = -2144337737;
    inline constexpr int32_t PLA_S_PROPERTY_IGNORED = 3145984;
    inline constexpr int32_t PLA_E_PROPERTY_CONFLICT = -2144337663;
    inline constexpr int32_t PLA_E_DCS_SINGLETON_REQUIRED = -2144337662;
    inline constexpr int32_t PLA_E_CREDENTIALS_REQUIRED = -2144337661;
    inline constexpr int32_t PLA_E_DCS_NOT_RUNNING = -2144337660;
    inline constexpr int32_t PLA_E_CONFLICT_INCL_EXCL_API = -2144337659;
    inline constexpr int32_t PLA_E_NETWORK_EXE_NOT_VALID = -2144337658;
    inline constexpr int32_t PLA_E_EXE_ALREADY_CONFIGURED = -2144337657;
    inline constexpr int32_t PLA_E_EXE_PATH_NOT_VALID = -2144337656;
    inline constexpr int32_t PLA_E_DC_ALREADY_EXISTS = -2144337655;
    inline constexpr int32_t PLA_E_DCS_START_WAIT_TIMEOUT = -2144337654;
    inline constexpr int32_t PLA_E_DC_START_WAIT_TIMEOUT = -2144337653;
    inline constexpr int32_t PLA_E_REPORT_WAIT_TIMEOUT = -2144337652;
    inline constexpr int32_t PLA_E_NO_DUPLICATES = -2144337651;
    inline constexpr int32_t PLA_E_EXE_FULL_PATH_REQUIRED = -2144337650;
    inline constexpr int32_t PLA_E_INVALID_SESSION_NAME = -2144337649;
    inline constexpr int32_t PLA_E_PLA_CHANNEL_NOT_ENABLED = -2144337648;
    inline constexpr int32_t PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED = -2144337647;
    inline constexpr int32_t PLA_E_RULES_MANAGER_FAILED = -2144337646;
    inline constexpr int32_t PLA_E_CABAPI_FAILURE = -2144337645;
    inline constexpr int32_t FVE_E_LOCKED_VOLUME = -2144272384;
    inline constexpr int32_t FVE_E_NOT_ENCRYPTED = -2144272383;
    inline constexpr int32_t FVE_E_NO_TPM_BIOS = -2144272382;
    inline constexpr int32_t FVE_E_NO_MBR_METRIC = -2144272381;
    inline constexpr int32_t FVE_E_NO_BOOTSECTOR_METRIC = -2144272380;
    inline constexpr int32_t FVE_E_NO_BOOTMGR_METRIC = -2144272379;
    inline constexpr int32_t FVE_E_WRONG_BOOTMGR = -2144272378;
    inline constexpr int32_t FVE_E_SECURE_KEY_REQUIRED = -2144272377;
    inline constexpr int32_t FVE_E_NOT_ACTIVATED = -2144272376;
    inline constexpr int32_t FVE_E_ACTION_NOT_ALLOWED = -2144272375;
    inline constexpr int32_t FVE_E_AD_SCHEMA_NOT_INSTALLED = -2144272374;
    inline constexpr int32_t FVE_E_AD_INVALID_DATATYPE = -2144272373;
    inline constexpr int32_t FVE_E_AD_INVALID_DATASIZE = -2144272372;
    inline constexpr int32_t FVE_E_AD_NO_VALUES = -2144272371;
    inline constexpr int32_t FVE_E_AD_ATTR_NOT_SET = -2144272370;
    inline constexpr int32_t FVE_E_AD_GUID_NOT_FOUND = -2144272369;
    inline constexpr int32_t FVE_E_BAD_INFORMATION = -2144272368;
    inline constexpr int32_t FVE_E_TOO_SMALL = -2144272367;
    inline constexpr int32_t FVE_E_SYSTEM_VOLUME = -2144272366;
    inline constexpr int32_t FVE_E_FAILED_WRONG_FS = -2144272365;
    inline constexpr int32_t FVE_E_BAD_PARTITION_SIZE = -2144272364;
    inline constexpr int32_t FVE_E_NOT_SUPPORTED = -2144272363;
    inline constexpr int32_t FVE_E_BAD_DATA = -2144272362;
    inline constexpr int32_t FVE_E_VOLUME_NOT_BOUND = -2144272361;
    inline constexpr int32_t FVE_E_TPM_NOT_OWNED = -2144272360;
    inline constexpr int32_t FVE_E_NOT_DATA_VOLUME = -2144272359;
    inline constexpr int32_t FVE_E_AD_INSUFFICIENT_BUFFER = -2144272358;
    inline constexpr int32_t FVE_E_CONV_READ = -2144272357;
    inline constexpr int32_t FVE_E_CONV_WRITE = -2144272356;
    inline constexpr int32_t FVE_E_KEY_REQUIRED = -2144272355;
    inline constexpr int32_t FVE_E_CLUSTERING_NOT_SUPPORTED = -2144272354;
    inline constexpr int32_t FVE_E_VOLUME_BOUND_ALREADY = -2144272353;
    inline constexpr int32_t FVE_E_OS_NOT_PROTECTED = -2144272352;
    inline constexpr int32_t FVE_E_PROTECTION_DISABLED = -2144272351;
    inline constexpr int32_t FVE_E_RECOVERY_KEY_REQUIRED = -2144272350;
    inline constexpr int32_t FVE_E_FOREIGN_VOLUME = -2144272349;
    inline constexpr int32_t FVE_E_OVERLAPPED_UPDATE = -2144272348;
    inline constexpr int32_t FVE_E_TPM_SRK_AUTH_NOT_ZERO = -2144272347;
    inline constexpr int32_t FVE_E_FAILED_SECTOR_SIZE = -2144272346;
    inline constexpr int32_t FVE_E_FAILED_AUTHENTICATION = -2144272345;
    inline constexpr int32_t FVE_E_NOT_OS_VOLUME = -2144272344;
    inline constexpr int32_t FVE_E_AUTOUNLOCK_ENABLED = -2144272343;
    inline constexpr int32_t FVE_E_WRONG_BOOTSECTOR = -2144272342;
    inline constexpr int32_t FVE_E_WRONG_SYSTEM_FS = -2144272341;
    inline constexpr int32_t FVE_E_POLICY_PASSWORD_REQUIRED = -2144272340;
    inline constexpr int32_t FVE_E_CANNOT_SET_FVEK_ENCRYPTED = -2144272339;
    inline constexpr int32_t FVE_E_CANNOT_ENCRYPT_NO_KEY = -2144272338;
    inline constexpr int32_t FVE_E_BOOTABLE_CDDVD = -2144272336;
    inline constexpr int32_t FVE_E_PROTECTOR_EXISTS = -2144272335;
    inline constexpr int32_t FVE_E_RELATIVE_PATH = -2144272334;
    inline constexpr int32_t FVE_E_PROTECTOR_NOT_FOUND = -2144272333;
    inline constexpr int32_t FVE_E_INVALID_KEY_FORMAT = -2144272332;
    inline constexpr int32_t FVE_E_INVALID_PASSWORD_FORMAT = -2144272331;
    inline constexpr int32_t FVE_E_FIPS_RNG_CHECK_FAILED = -2144272330;
    inline constexpr int32_t FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD = -2144272329;
    inline constexpr int32_t FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT = -2144272328;
    inline constexpr int32_t FVE_E_NOT_DECRYPTED = -2144272327;
    inline constexpr int32_t FVE_E_INVALID_PROTECTOR_TYPE = -2144272326;
    inline constexpr int32_t FVE_E_NO_PROTECTORS_TO_TEST = -2144272325;
    inline constexpr int32_t FVE_E_KEYFILE_NOT_FOUND = -2144272324;
    inline constexpr int32_t FVE_E_KEYFILE_INVALID = -2144272323;
    inline constexpr int32_t FVE_E_KEYFILE_NO_VMK = -2144272322;
    inline constexpr int32_t FVE_E_TPM_DISABLED = -2144272321;
    inline constexpr int32_t FVE_E_NOT_ALLOWED_IN_SAFE_MODE = -2144272320;
    inline constexpr int32_t FVE_E_TPM_INVALID_PCR = -2144272319;
    inline constexpr int32_t FVE_E_TPM_NO_VMK = -2144272318;
    inline constexpr int32_t FVE_E_PIN_INVALID = -2144272317;
    inline constexpr int32_t FVE_E_AUTH_INVALID_APPLICATION = -2144272316;
    inline constexpr int32_t FVE_E_AUTH_INVALID_CONFIG = -2144272315;
    inline constexpr int32_t FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED = -2144272314;
    inline constexpr int32_t FVE_E_FS_NOT_EXTENDED = -2144272313;
    inline constexpr int32_t FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED = -2144272312;
    inline constexpr int32_t FVE_E_NO_LICENSE = -2144272311;
    inline constexpr int32_t FVE_E_NOT_ON_STACK = -2144272310;
    inline constexpr int32_t FVE_E_FS_MOUNTED = -2144272309;
    inline constexpr int32_t FVE_E_TOKEN_NOT_IMPERSONATED = -2144272308;
    inline constexpr int32_t FVE_E_DRY_RUN_FAILED = -2144272307;
    inline constexpr int32_t FVE_E_REBOOT_REQUIRED = -2144272306;
    inline constexpr int32_t FVE_E_DEBUGGER_ENABLED = -2144272305;
    inline constexpr int32_t FVE_E_RAW_ACCESS = -2144272304;
    inline constexpr int32_t FVE_E_RAW_BLOCKED = -2144272303;
    inline constexpr int32_t FVE_E_BCD_APPLICATIONS_PATH_INCORRECT = -2144272302;
    inline constexpr int32_t FVE_E_NOT_ALLOWED_IN_VERSION = -2144272301;
    inline constexpr int32_t FVE_E_NO_AUTOUNLOCK_MASTER_KEY = -2144272300;
    inline constexpr int32_t FVE_E_MOR_FAILED = -2144272299;
    inline constexpr int32_t FVE_E_HIDDEN_VOLUME = -2144272298;
    inline constexpr int32_t FVE_E_TRANSIENT_STATE = -2144272297;
    inline constexpr int32_t FVE_E_PUBKEY_NOT_ALLOWED = -2144272296;
    inline constexpr int32_t FVE_E_VOLUME_HANDLE_OPEN = -2144272295;
    inline constexpr int32_t FVE_E_NO_FEATURE_LICENSE = -2144272294;
    inline constexpr int32_t FVE_E_INVALID_STARTUP_OPTIONS = -2144272293;
    inline constexpr int32_t FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED = -2144272292;
    inline constexpr int32_t FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED = -2144272291;
    inline constexpr int32_t FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED = -2144272290;
    inline constexpr int32_t FVE_E_POLICY_RECOVERY_KEY_REQUIRED = -2144272289;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED = -2144272288;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_PIN_REQUIRED = -2144272287;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED = -2144272286;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_KEY_REQUIRED = -2144272285;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED = -2144272284;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED = -2144272283;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED = -2144272282;
    inline constexpr int32_t FVE_E_POLICY_STARTUP_TPM_REQUIRED = -2144272281;
    inline constexpr int32_t FVE_E_POLICY_INVALID_PIN_LENGTH = -2144272280;
    inline constexpr int32_t FVE_E_KEY_PROTECTOR_NOT_SUPPORTED = -2144272279;
    inline constexpr int32_t FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED = -2144272278;
    inline constexpr int32_t FVE_E_POLICY_PASSPHRASE_REQUIRED = -2144272277;
    inline constexpr int32_t FVE_E_FIPS_PREVENTS_PASSPHRASE = -2144272276;
    inline constexpr int32_t FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED = -2144272275;
    inline constexpr int32_t FVE_E_INVALID_BITLOCKER_OID = -2144272274;
    inline constexpr int32_t FVE_E_VOLUME_TOO_SMALL = -2144272273;
    inline constexpr int32_t FVE_E_DV_NOT_SUPPORTED_ON_FS = -2144272272;
    inline constexpr int32_t FVE_E_DV_NOT_ALLOWED_BY_GP = -2144272271;
    inline constexpr int32_t FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED = -2144272270;
    inline constexpr int32_t FVE_E_POLICY_USER_CERTIFICATE_REQUIRED = -2144272269;
    inline constexpr int32_t FVE_E_POLICY_USER_CERT_MUST_BE_HW = -2144272268;
    inline constexpr int32_t FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED = -2144272267;
    inline constexpr int32_t FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED = -2144272266;
    inline constexpr int32_t FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED = -2144272265;
    inline constexpr int32_t FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED = -2144272264;
    inline constexpr int32_t FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED = -2144272263;
    inline constexpr int32_t FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH = -2144272256;
    inline constexpr int32_t FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE = -2144272255;
    inline constexpr int32_t FVE_E_RECOVERY_PARTITION = -2144272254;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON = -2144272253;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON = -2144272252;
    inline constexpr int32_t FVE_E_NON_BITLOCKER_OID = -2144272251;
    inline constexpr int32_t FVE_E_POLICY_PROHIBITS_SELFSIGNED = -2144272250;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED = -2144272249;
    inline constexpr int32_t FVE_E_CONV_RECOVERY_FAILED = -2144272248;
    inline constexpr int32_t FVE_E_VIRTUALIZED_SPACE_TOO_BIG = -2144272247;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON = -2144272240;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON = -2144272239;
    inline constexpr int32_t FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON = -2144272238;
    inline constexpr int32_t FVE_E_NON_BITLOCKER_KU = -2144272237;
    inline constexpr int32_t FVE_E_PRIVATEKEY_AUTH_FAILED = -2144272236;
    inline constexpr int32_t FVE_E_REMOVAL_OF_DRA_FAILED = -2144272235;
    inline constexpr int32_t FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME = -2144272234;
    inline constexpr int32_t FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME = -2144272233;
    inline constexpr int32_t FVE_E_FIPS_HASH_KDF_NOT_ALLOWED = -2144272232;
    inline constexpr int32_t FVE_E_ENH_PIN_INVALID = -2144272231;
    inline constexpr int32_t FVE_E_INVALID_PIN_CHARS = -2144272230;
    inline constexpr int32_t FVE_E_INVALID_DATUM_TYPE = -2144272229;
    inline constexpr int32_t FVE_E_EFI_ONLY = -2144272228;
    inline constexpr int32_t FVE_E_MULTIPLE_NKP_CERTS = -2144272227;
    inline constexpr int32_t FVE_E_REMOVAL_OF_NKP_FAILED = -2144272226;
    inline constexpr int32_t FVE_E_INVALID_NKP_CERT = -2144272225;
    inline constexpr int32_t FVE_E_NO_EXISTING_PIN = -2144272224;
    inline constexpr int32_t FVE_E_PROTECTOR_CHANGE_PIN_MISMATCH = -2144272223;
    inline constexpr int32_t FVE_E_PIN_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = -2144272222;
    inline constexpr int32_t FVE_E_PROTECTOR_CHANGE_MAX_PIN_CHANGE_ATTEMPTS_REACHED = -2144272221;
    inline constexpr int32_t FVE_E_POLICY_PASSPHRASE_REQUIRES_ASCII = -2144272220;
    inline constexpr int32_t FVE_E_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE = -2144272219;
    inline constexpr int32_t FVE_E_WIPE_NOT_ALLOWED_ON_TP_STORAGE = -2144272218;
    inline constexpr int32_t FVE_E_KEY_LENGTH_NOT_SUPPORTED_BY_EDRIVE = -2144272217;
    inline constexpr int32_t FVE_E_NO_EXISTING_PASSPHRASE = -2144272216;
    inline constexpr int32_t FVE_E_PROTECTOR_CHANGE_PASSPHRASE_MISMATCH = -2144272215;
    inline constexpr int32_t FVE_E_PASSPHRASE_TOO_LONG = -2144272214;
    inline constexpr int32_t FVE_E_NO_PASSPHRASE_WITH_TPM = -2144272213;
    inline constexpr int32_t FVE_E_NO_TPM_WITH_PASSPHRASE = -2144272212;
    inline constexpr int32_t FVE_E_NOT_ALLOWED_ON_CSV_STACK = -2144272211;
    inline constexpr int32_t FVE_E_NOT_ALLOWED_ON_CLUSTER = -2144272210;
    inline constexpr int32_t FVE_E_EDRIVE_NO_FAILOVER_TO_SW = -2144272209;
    inline constexpr int32_t FVE_E_EDRIVE_BAND_IN_USE = -2144272208;
    inline constexpr int32_t FVE_E_EDRIVE_DISALLOWED_BY_GP = -2144272207;
    inline constexpr int32_t FVE_E_EDRIVE_INCOMPATIBLE_VOLUME = -2144272206;
    inline constexpr int32_t FVE_E_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING = -2144272205;
    inline constexpr int32_t FVE_E_EDRIVE_DV_NOT_SUPPORTED = -2144272204;
    inline constexpr int32_t FVE_E_NO_PREBOOT_KEYBOARD_DETECTED = -2144272203;
    inline constexpr int32_t FVE_E_NO_PREBOOT_KEYBOARD_OR_WINRE_DETECTED = -2144272202;
    inline constexpr int32_t FVE_E_POLICY_REQUIRES_STARTUP_PIN_ON_TOUCH_DEVICE = -2144272201;
    inline constexpr int32_t FVE_E_POLICY_REQUIRES_RECOVERY_PASSWORD_ON_TOUCH_DEVICE = -2144272200;
    inline constexpr int32_t FVE_E_WIPE_CANCEL_NOT_APPLICABLE = -2144272199;
    inline constexpr int32_t FVE_E_SECUREBOOT_DISABLED = -2144272198;
    inline constexpr int32_t FVE_E_SECUREBOOT_CONFIGURATION_INVALID = -2144272197;
    inline constexpr int32_t FVE_E_EDRIVE_DRY_RUN_FAILED = -2144272196;
    inline constexpr int32_t FVE_E_SHADOW_COPY_PRESENT = -2144272195;
    inline constexpr int32_t FVE_E_POLICY_INVALID_ENHANCED_BCD_SETTINGS = -2144272194;
    inline constexpr int32_t FVE_E_EDRIVE_INCOMPATIBLE_FIRMWARE = -2144272193;
    inline constexpr int32_t FVE_E_PROTECTOR_CHANGE_MAX_PASSPHRASE_CHANGE_ATTEMPTS_REACHED = -2144272192;
    inline constexpr int32_t FVE_E_PASSPHRASE_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = -2144272191;
    inline constexpr int32_t FVE_E_LIVEID_ACCOUNT_SUSPENDED = -2144272190;
    inline constexpr int32_t FVE_E_LIVEID_ACCOUNT_BLOCKED = -2144272189;
    inline constexpr int32_t FVE_E_NOT_PROVISIONED_ON_ALL_VOLUMES = -2144272188;
    inline constexpr int32_t FVE_E_DE_FIXED_DATA_NOT_SUPPORTED = -2144272187;
    inline constexpr int32_t FVE_E_DE_HARDWARE_NOT_COMPLIANT = -2144272186;
    inline constexpr int32_t FVE_E_DE_WINRE_NOT_CONFIGURED = -2144272185;
    inline constexpr int32_t FVE_E_DE_PROTECTION_SUSPENDED = -2144272184;
    inline constexpr int32_t FVE_E_DE_OS_VOLUME_NOT_PROTECTED = -2144272183;
    inline constexpr int32_t FVE_E_DE_DEVICE_LOCKEDOUT = -2144272182;
    inline constexpr int32_t FVE_E_DE_PROTECTION_NOT_YET_ENABLED = -2144272181;
    inline constexpr int32_t FVE_E_INVALID_PIN_CHARS_DETAILED = -2144272180;
    inline constexpr int32_t FVE_E_DEVICE_LOCKOUT_COUNTER_UNAVAILABLE = -2144272179;
    inline constexpr int32_t FVE_E_DEVICELOCKOUT_COUNTER_MISMATCH = -2144272178;
    inline constexpr int32_t FVE_E_BUFFER_TOO_LARGE = -2144272177;
    inline constexpr int32_t FVE_E_NO_SUCH_CAPABILITY_ON_TARGET = -2144272176;
    inline constexpr int32_t FVE_E_DE_PREVENTED_FOR_OS = -2144272175;
    inline constexpr int32_t FVE_E_DE_VOLUME_OPTED_OUT = -2144272174;
    inline constexpr int32_t FVE_E_DE_VOLUME_NOT_SUPPORTED = -2144272173;
    inline constexpr int32_t FVE_E_EOW_NOT_SUPPORTED_IN_VERSION = -2144272172;
    inline constexpr int32_t FVE_E_ADBACKUP_NOT_ENABLED = -2144272171;
    inline constexpr int32_t FVE_E_VOLUME_EXTEND_PREVENTS_EOW_DECRYPT = -2144272170;
    inline constexpr int32_t FVE_E_NOT_DE_VOLUME = -2144272169;
    inline constexpr int32_t FVE_E_PROTECTION_CANNOT_BE_DISABLED = -2144272168;
    inline constexpr int32_t FVE_E_OSV_KSR_NOT_ALLOWED = -2144272167;
    inline constexpr int32_t FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_OS_DRIVE = -2144272166;
    inline constexpr int32_t FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_FIXED_DRIVE = -2144272165;
    inline constexpr int32_t FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_REMOVABLE_DRIVE = -2144272164;
    inline constexpr int32_t FVE_E_KEY_ROTATION_NOT_SUPPORTED = -2144272163;
    inline constexpr int32_t FVE_E_EXECUTE_REQUEST_SENT_TOO_SOON = -2144272162;
    inline constexpr int32_t FVE_E_KEY_ROTATION_NOT_ENABLED = -2144272161;
    inline constexpr int32_t FVE_E_DEVICE_NOT_JOINED = -2144272160;
    inline constexpr int32_t FVE_E_AAD_ENDPOINT_BUSY = -2144272159;
    inline constexpr int32_t FWP_E_CALLOUT_NOT_FOUND = -2144206847;
    inline constexpr int32_t FWP_E_CONDITION_NOT_FOUND = -2144206846;
    inline constexpr int32_t FWP_E_FILTER_NOT_FOUND = -2144206845;
    inline constexpr int32_t FWP_E_LAYER_NOT_FOUND = -2144206844;
    inline constexpr int32_t FWP_E_PROVIDER_NOT_FOUND = -2144206843;
    inline constexpr int32_t FWP_E_PROVIDER_CONTEXT_NOT_FOUND = -2144206842;
    inline constexpr int32_t FWP_E_SUBLAYER_NOT_FOUND = -2144206841;
    inline constexpr int32_t FWP_E_NOT_FOUND = -2144206840;
    inline constexpr int32_t FWP_E_ALREADY_EXISTS = -2144206839;
    inline constexpr int32_t FWP_E_IN_USE = -2144206838;
    inline constexpr int32_t FWP_E_DYNAMIC_SESSION_IN_PROGRESS = -2144206837;
    inline constexpr int32_t FWP_E_WRONG_SESSION = -2144206836;
    inline constexpr int32_t FWP_E_NO_TXN_IN_PROGRESS = -2144206835;
    inline constexpr int32_t FWP_E_TXN_IN_PROGRESS = -2144206834;
    inline constexpr int32_t FWP_E_TXN_ABORTED = -2144206833;
    inline constexpr int32_t FWP_E_SESSION_ABORTED = -2144206832;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_TXN = -2144206831;
    inline constexpr int32_t FWP_E_TIMEOUT = -2144206830;
    inline constexpr int32_t FWP_E_NET_EVENTS_DISABLED = -2144206829;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_LAYER = -2144206828;
    inline constexpr int32_t FWP_E_KM_CLIENTS_ONLY = -2144206827;
    inline constexpr int32_t FWP_E_LIFETIME_MISMATCH = -2144206826;
    inline constexpr int32_t FWP_E_BUILTIN_OBJECT = -2144206825;
    inline constexpr int32_t FWP_E_TOO_MANY_CALLOUTS = -2144206824;
    inline constexpr int32_t FWP_E_NOTIFICATION_DROPPED = -2144206823;
    inline constexpr int32_t FWP_E_TRAFFIC_MISMATCH = -2144206822;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_SA_STATE = -2144206821;
    inline constexpr int32_t FWP_E_NULL_POINTER = -2144206820;
    inline constexpr int32_t FWP_E_INVALID_ENUMERATOR = -2144206819;
    inline constexpr int32_t FWP_E_INVALID_FLAGS = -2144206818;
    inline constexpr int32_t FWP_E_INVALID_NET_MASK = -2144206817;
    inline constexpr int32_t FWP_E_INVALID_RANGE = -2144206816;
    inline constexpr int32_t FWP_E_INVALID_INTERVAL = -2144206815;
    inline constexpr int32_t FWP_E_ZERO_LENGTH_ARRAY = -2144206814;
    inline constexpr int32_t FWP_E_NULL_DISPLAY_NAME = -2144206813;
    inline constexpr int32_t FWP_E_INVALID_ACTION_TYPE = -2144206812;
    inline constexpr int32_t FWP_E_INVALID_WEIGHT = -2144206811;
    inline constexpr int32_t FWP_E_MATCH_TYPE_MISMATCH = -2144206810;
    inline constexpr int32_t FWP_E_TYPE_MISMATCH = -2144206809;
    inline constexpr int32_t FWP_E_OUT_OF_BOUNDS = -2144206808;
    inline constexpr int32_t FWP_E_RESERVED = -2144206807;
    inline constexpr int32_t FWP_E_DUPLICATE_CONDITION = -2144206806;
    inline constexpr int32_t FWP_E_DUPLICATE_KEYMOD = -2144206805;
    inline constexpr int32_t FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER = -2144206804;
    inline constexpr int32_t FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER = -2144206803;
    inline constexpr int32_t FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER = -2144206802;
    inline constexpr int32_t FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT = -2144206801;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_AUTH_METHOD = -2144206800;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_DH_GROUP = -2144206799;
    inline constexpr int32_t FWP_E_EM_NOT_SUPPORTED = -2144206798;
    inline constexpr int32_t FWP_E_NEVER_MATCH = -2144206797;
    inline constexpr int32_t FWP_E_PROVIDER_CONTEXT_MISMATCH = -2144206796;
    inline constexpr int32_t FWP_E_INVALID_PARAMETER = -2144206795;
    inline constexpr int32_t FWP_E_TOO_MANY_SUBLAYERS = -2144206794;
    inline constexpr int32_t FWP_E_CALLOUT_NOTIFICATION_FAILED = -2144206793;
    inline constexpr int32_t FWP_E_INVALID_AUTH_TRANSFORM = -2144206792;
    inline constexpr int32_t FWP_E_INVALID_CIPHER_TRANSFORM = -2144206791;
    inline constexpr int32_t FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM = -2144206790;
    inline constexpr int32_t FWP_E_INVALID_TRANSFORM_COMBINATION = -2144206789;
    inline constexpr int32_t FWP_E_DUPLICATE_AUTH_METHOD = -2144206788;
    inline constexpr int32_t FWP_E_INVALID_TUNNEL_ENDPOINT = -2144206787;
    inline constexpr int32_t FWP_E_L2_DRIVER_NOT_READY = -2144206786;
    inline constexpr int32_t FWP_E_KEY_DICTATOR_ALREADY_REGISTERED = -2144206785;
    inline constexpr int32_t FWP_E_KEY_DICTATION_INVALID_KEYING_MATERIAL = -2144206784;
    inline constexpr int32_t FWP_E_CONNECTIONS_DISABLED = -2144206783;
    inline constexpr int32_t FWP_E_INVALID_DNS_NAME = -2144206782;
    inline constexpr int32_t FWP_E_STILL_ON = -2144206781;
    inline constexpr int32_t FWP_E_IKEEXT_NOT_RUNNING = -2144206780;
    inline constexpr int32_t FWP_E_DROP_NOICMP = -2144206588;
    inline constexpr int32_t WS_S_ASYNC = 3997696;
    inline constexpr int32_t WS_S_END = 3997697;
    inline constexpr int32_t WS_E_INVALID_FORMAT = -2143485952;
    inline constexpr int32_t WS_E_OBJECT_FAULTED = -2143485951;
    inline constexpr int32_t WS_E_NUMERIC_OVERFLOW = -2143485950;
    inline constexpr int32_t WS_E_INVALID_OPERATION = -2143485949;
    inline constexpr int32_t WS_E_OPERATION_ABORTED = -2143485948;
    inline constexpr int32_t WS_E_ENDPOINT_ACCESS_DENIED = -2143485947;
    inline constexpr int32_t WS_E_OPERATION_TIMED_OUT = -2143485946;
    inline constexpr int32_t WS_E_OPERATION_ABANDONED = -2143485945;
    inline constexpr int32_t WS_E_QUOTA_EXCEEDED = -2143485944;
    inline constexpr int32_t WS_E_NO_TRANSLATION_AVAILABLE = -2143485943;
    inline constexpr int32_t WS_E_SECURITY_VERIFICATION_FAILURE = -2143485942;
    inline constexpr int32_t WS_E_ADDRESS_IN_USE = -2143485941;
    inline constexpr int32_t WS_E_ADDRESS_NOT_AVAILABLE = -2143485940;
    inline constexpr int32_t WS_E_ENDPOINT_NOT_FOUND = -2143485939;
    inline constexpr int32_t WS_E_ENDPOINT_NOT_AVAILABLE = -2143485938;
    inline constexpr int32_t WS_E_ENDPOINT_FAILURE = -2143485937;
    inline constexpr int32_t WS_E_ENDPOINT_UNREACHABLE = -2143485936;
    inline constexpr int32_t WS_E_ENDPOINT_ACTION_NOT_SUPPORTED = -2143485935;
    inline constexpr int32_t WS_E_ENDPOINT_TOO_BUSY = -2143485934;
    inline constexpr int32_t WS_E_ENDPOINT_FAULT_RECEIVED = -2143485933;
    inline constexpr int32_t WS_E_ENDPOINT_DISCONNECTED = -2143485932;
    inline constexpr int32_t WS_E_PROXY_FAILURE = -2143485931;
    inline constexpr int32_t WS_E_PROXY_ACCESS_DENIED = -2143485930;
    inline constexpr int32_t WS_E_NOT_SUPPORTED = -2143485929;
    inline constexpr int32_t WS_E_PROXY_REQUIRES_BASIC_AUTH = -2143485928;
    inline constexpr int32_t WS_E_PROXY_REQUIRES_DIGEST_AUTH = -2143485927;
    inline constexpr int32_t WS_E_PROXY_REQUIRES_NTLM_AUTH = -2143485926;
    inline constexpr int32_t WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH = -2143485925;
    inline constexpr int32_t WS_E_SERVER_REQUIRES_BASIC_AUTH = -2143485924;
    inline constexpr int32_t WS_E_SERVER_REQUIRES_DIGEST_AUTH = -2143485923;
    inline constexpr int32_t WS_E_SERVER_REQUIRES_NTLM_AUTH = -2143485922;
    inline constexpr int32_t WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH = -2143485921;
    inline constexpr int32_t WS_E_INVALID_ENDPOINT_URL = -2143485920;
    inline constexpr int32_t WS_E_OTHER = -2143485919;
    inline constexpr int32_t WS_E_SECURITY_TOKEN_EXPIRED = -2143485918;
    inline constexpr int32_t WS_E_SECURITY_SYSTEM_FAILURE = -2143485917;
    inline constexpr uint32_t ERROR_NDIS_INTERFACE_CLOSING = 0x80340002;
    inline constexpr uint32_t ERROR_NDIS_BAD_VERSION = 0x80340004;
    inline constexpr uint32_t ERROR_NDIS_BAD_CHARACTERISTICS = 0x80340005;
    inline constexpr uint32_t ERROR_NDIS_ADAPTER_NOT_FOUND = 0x80340006;
    inline constexpr uint32_t ERROR_NDIS_OPEN_FAILED = 0x80340007;
    inline constexpr uint32_t ERROR_NDIS_DEVICE_FAILED = 0x80340008;
    inline constexpr uint32_t ERROR_NDIS_MULTICAST_FULL = 0x80340009;
    inline constexpr uint32_t ERROR_NDIS_MULTICAST_EXISTS = 0x8034000a;
    inline constexpr uint32_t ERROR_NDIS_MULTICAST_NOT_FOUND = 0x8034000b;
    inline constexpr uint32_t ERROR_NDIS_REQUEST_ABORTED = 0x8034000c;
    inline constexpr uint32_t ERROR_NDIS_RESET_IN_PROGRESS = 0x8034000d;
    inline constexpr uint32_t ERROR_NDIS_NOT_SUPPORTED = 0x803400bb;
    inline constexpr uint32_t ERROR_NDIS_INVALID_PACKET = 0x8034000f;
    inline constexpr uint32_t ERROR_NDIS_ADAPTER_NOT_READY = 0x80340011;
    inline constexpr uint32_t ERROR_NDIS_INVALID_LENGTH = 0x80340014;
    inline constexpr uint32_t ERROR_NDIS_INVALID_DATA = 0x80340015;
    inline constexpr uint32_t ERROR_NDIS_BUFFER_TOO_SHORT = 0x80340016;
    inline constexpr uint32_t ERROR_NDIS_INVALID_OID = 0x80340017;
    inline constexpr uint32_t ERROR_NDIS_ADAPTER_REMOVED = 0x80340018;
    inline constexpr uint32_t ERROR_NDIS_UNSUPPORTED_MEDIA = 0x80340019;
    inline constexpr uint32_t ERROR_NDIS_GROUP_ADDRESS_IN_USE = 0x8034001a;
    inline constexpr uint32_t ERROR_NDIS_FILE_NOT_FOUND = 0x8034001b;
    inline constexpr uint32_t ERROR_NDIS_ERROR_READING_FILE = 0x8034001c;
    inline constexpr uint32_t ERROR_NDIS_ALREADY_MAPPED = 0x8034001d;
    inline constexpr uint32_t ERROR_NDIS_RESOURCE_CONFLICT = 0x8034001e;
    inline constexpr uint32_t ERROR_NDIS_MEDIA_DISCONNECTED = 0x8034001f;
    inline constexpr uint32_t ERROR_NDIS_INVALID_ADDRESS = 0x80340022;
    inline constexpr uint32_t ERROR_NDIS_INVALID_DEVICE_REQUEST = 0x80340010;
    inline constexpr uint32_t ERROR_NDIS_PAUSED = 0x8034002a;
    inline constexpr uint32_t ERROR_NDIS_INTERFACE_NOT_FOUND = 0x8034002b;
    inline constexpr uint32_t ERROR_NDIS_UNSUPPORTED_REVISION = 0x8034002c;
    inline constexpr uint32_t ERROR_NDIS_INVALID_PORT = 0x8034002d;
    inline constexpr uint32_t ERROR_NDIS_INVALID_PORT_STATE = 0x8034002e;
    inline constexpr uint32_t ERROR_NDIS_LOW_POWER_STATE = 0x8034002f;
    inline constexpr uint32_t ERROR_NDIS_REINIT_REQUIRED = 0x80340030;
    inline constexpr uint32_t ERROR_NDIS_NO_QUEUES = 0x80340031;
    inline constexpr uint32_t ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED = 0x80342000;
    inline constexpr uint32_t ERROR_NDIS_DOT11_MEDIA_IN_USE = 0x80342001;
    inline constexpr uint32_t ERROR_NDIS_DOT11_POWER_STATE_INVALID = 0x80342002;
    inline constexpr uint32_t ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL = 0x80342003;
    inline constexpr uint32_t ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL = 0x80342004;
    inline constexpr uint32_t ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE = 0x80342005;
    inline constexpr uint32_t ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE = 0x80342006;
    inline constexpr uint32_t ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED = 0x80342007;
    inline constexpr uint32_t ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED = 0x80342008;
    inline constexpr uint32_t ERROR_NDIS_INDICATION_REQUIRED = 0x340001;
    inline constexpr uint32_t ERROR_NDIS_OFFLOAD_POLICY = 0xc034100f;
    inline constexpr uint32_t ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED = 0xc0341012;
    inline constexpr uint32_t ERROR_NDIS_OFFLOAD_PATH_REJECTED = 0xc0341013;
    inline constexpr uint32_t ERROR_HV_INVALID_HYPERCALL_CODE = 0xc0350002;
    inline constexpr uint32_t ERROR_HV_INVALID_HYPERCALL_INPUT = 0xc0350003;
    inline constexpr uint32_t ERROR_HV_INVALID_ALIGNMENT = 0xc0350004;
    inline constexpr uint32_t ERROR_HV_INVALID_PARAMETER = 0xc0350005;
    inline constexpr uint32_t ERROR_HV_ACCESS_DENIED = 0xc0350006;
    inline constexpr uint32_t ERROR_HV_INVALID_PARTITION_STATE = 0xc0350007;
    inline constexpr uint32_t ERROR_HV_OPERATION_DENIED = 0xc0350008;
    inline constexpr uint32_t ERROR_HV_UNKNOWN_PROPERTY = 0xc0350009;
    inline constexpr uint32_t ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE = 0xc035000a;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_MEMORY = 0xc035000b;
    inline constexpr uint32_t ERROR_HV_PARTITION_TOO_DEEP = 0xc035000c;
    inline constexpr uint32_t ERROR_HV_INVALID_PARTITION_ID = 0xc035000d;
    inline constexpr uint32_t ERROR_HV_INVALID_VP_INDEX = 0xc035000e;
    inline constexpr uint32_t ERROR_HV_INVALID_PORT_ID = 0xc0350011;
    inline constexpr uint32_t ERROR_HV_INVALID_CONNECTION_ID = 0xc0350012;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_BUFFERS = 0xc0350013;
    inline constexpr uint32_t ERROR_HV_NOT_ACKNOWLEDGED = 0xc0350014;
    inline constexpr uint32_t ERROR_HV_INVALID_VP_STATE = 0xc0350015;
    inline constexpr uint32_t ERROR_HV_ACKNOWLEDGED = 0xc0350016;
    inline constexpr uint32_t ERROR_HV_INVALID_SAVE_RESTORE_STATE = 0xc0350017;
    inline constexpr uint32_t ERROR_HV_INVALID_SYNIC_STATE = 0xc0350018;
    inline constexpr uint32_t ERROR_HV_OBJECT_IN_USE = 0xc0350019;
    inline constexpr uint32_t ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO = 0xc035001a;
    inline constexpr uint32_t ERROR_HV_NO_DATA = 0xc035001b;
    inline constexpr uint32_t ERROR_HV_INACTIVE = 0xc035001c;
    inline constexpr uint32_t ERROR_HV_NO_RESOURCES = 0xc035001d;
    inline constexpr uint32_t ERROR_HV_FEATURE_UNAVAILABLE = 0xc035001e;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_BUFFER = 0xc0350033;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS = 0xc0350038;
    inline constexpr uint32_t ERROR_HV_CPUID_FEATURE_VALIDATION = 0xc035003c;
    inline constexpr uint32_t ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION = 0xc035003d;
    inline constexpr uint32_t ERROR_HV_PROCESSOR_STARTUP_TIMEOUT = 0xc035003e;
    inline constexpr uint32_t ERROR_HV_SMX_ENABLED = 0xc035003f;
    inline constexpr uint32_t ERROR_HV_INVALID_LP_INDEX = 0xc0350041;
    inline constexpr uint32_t ERROR_HV_INVALID_REGISTER_VALUE = 0xc0350050;
    inline constexpr uint32_t ERROR_HV_INVALID_VTL_STATE = 0xc0350051;
    inline constexpr uint32_t ERROR_HV_NX_NOT_DETECTED = 0xc0350055;
    inline constexpr uint32_t ERROR_HV_INVALID_DEVICE_ID = 0xc0350057;
    inline constexpr uint32_t ERROR_HV_INVALID_DEVICE_STATE = 0xc0350058;
    inline constexpr uint32_t ERROR_HV_PENDING_PAGE_REQUESTS = 0x350059;
    inline constexpr uint32_t ERROR_HV_PAGE_REQUEST_INVALID = 0xc0350060;
    inline constexpr uint32_t ERROR_HV_INVALID_CPU_GROUP_ID = 0xc035006f;
    inline constexpr uint32_t ERROR_HV_INVALID_CPU_GROUP_STATE = 0xc0350070;
    inline constexpr uint32_t ERROR_HV_OPERATION_FAILED = 0xc0350071;
    inline constexpr uint32_t ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE = 0xc0350072;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_ROOT_MEMORY = 0xc0350073;
    inline constexpr uint32_t ERROR_HV_EVENT_BUFFER_ALREADY_FREED = 0xc0350074;
    inline constexpr uint32_t ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY = 0xc0350075;
    inline constexpr uint32_t ERROR_HV_NOT_PRESENT = 0xc0351000;
    inline constexpr uint32_t ERROR_VID_DUPLICATE_HANDLER = 0xc0370001;
    inline constexpr uint32_t ERROR_VID_TOO_MANY_HANDLERS = 0xc0370002;
    inline constexpr uint32_t ERROR_VID_QUEUE_FULL = 0xc0370003;
    inline constexpr uint32_t ERROR_VID_HANDLER_NOT_PRESENT = 0xc0370004;
    inline constexpr uint32_t ERROR_VID_INVALID_OBJECT_NAME = 0xc0370005;
    inline constexpr uint32_t ERROR_VID_PARTITION_NAME_TOO_LONG = 0xc0370006;
    inline constexpr uint32_t ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG = 0xc0370007;
    inline constexpr uint32_t ERROR_VID_PARTITION_ALREADY_EXISTS = 0xc0370008;
    inline constexpr uint32_t ERROR_VID_PARTITION_DOES_NOT_EXIST = 0xc0370009;
    inline constexpr uint32_t ERROR_VID_PARTITION_NAME_NOT_FOUND = 0xc037000a;
    inline constexpr uint32_t ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS = 0xc037000b;
    inline constexpr uint32_t ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = 0xc037000c;
    inline constexpr uint32_t ERROR_VID_MB_STILL_REFERENCED = 0xc037000d;
    inline constexpr uint32_t ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED = 0xc037000e;
    inline constexpr uint32_t ERROR_VID_INVALID_NUMA_SETTINGS = 0xc037000f;
    inline constexpr uint32_t ERROR_VID_INVALID_NUMA_NODE_INDEX = 0xc0370010;
    inline constexpr uint32_t ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED = 0xc0370011;
    inline constexpr uint32_t ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE = 0xc0370012;
    inline constexpr uint32_t ERROR_VID_PAGE_RANGE_OVERFLOW = 0xc0370013;
    inline constexpr uint32_t ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE = 0xc0370014;
    inline constexpr uint32_t ERROR_VID_INVALID_GPA_RANGE_HANDLE = 0xc0370015;
    inline constexpr uint32_t ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE = 0xc0370016;
    inline constexpr uint32_t ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED = 0xc0370017;
    inline constexpr uint32_t ERROR_VID_INVALID_PPM_HANDLE = 0xc0370018;
    inline constexpr uint32_t ERROR_VID_MBPS_ARE_LOCKED = 0xc0370019;
    inline constexpr uint32_t ERROR_VID_MESSAGE_QUEUE_CLOSED = 0xc037001a;
    inline constexpr uint32_t ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED = 0xc037001b;
    inline constexpr uint32_t ERROR_VID_STOP_PENDING = 0xc037001c;
    inline constexpr uint32_t ERROR_VID_INVALID_PROCESSOR_STATE = 0xc037001d;
    inline constexpr uint32_t ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT = 0xc037001e;
    inline constexpr uint32_t ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED = 0xc037001f;
    inline constexpr uint32_t ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET = 0xc0370020;
    inline constexpr uint32_t ERROR_VID_MMIO_RANGE_DESTROYED = 0xc0370021;
    inline constexpr uint32_t ERROR_VID_INVALID_CHILD_GPA_PAGE_SET = 0xc0370022;
    inline constexpr uint32_t ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED = 0xc0370023;
    inline constexpr uint32_t ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL = 0xc0370024;
    inline constexpr uint32_t ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE = 0xc0370025;
    inline constexpr uint32_t ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT = 0xc0370026;
    inline constexpr uint32_t ERROR_VID_SAVED_STATE_CORRUPT = 0xc0370027;
    inline constexpr uint32_t ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM = 0xc0370028;
    inline constexpr uint32_t ERROR_VID_SAVED_STATE_INCOMPATIBLE = 0xc0370029;
    inline constexpr uint32_t ERROR_VID_VTL_ACCESS_DENIED = 0xc037002a;
    inline constexpr uint32_t ERROR_VMCOMPUTE_TERMINATED_DURING_START = 0xc0370100;
    inline constexpr uint32_t ERROR_VMCOMPUTE_IMAGE_MISMATCH = 0xc0370101;
    inline constexpr uint32_t ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED = 0xc0370102;
    inline constexpr uint32_t ERROR_VMCOMPUTE_OPERATION_PENDING = 0xc0370103;
    inline constexpr uint32_t ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS = 0xc0370104;
    inline constexpr uint32_t ERROR_VMCOMPUTE_INVALID_STATE = 0xc0370105;
    inline constexpr uint32_t ERROR_VMCOMPUTE_UNEXPECTED_EXIT = 0xc0370106;
    inline constexpr uint32_t ERROR_VMCOMPUTE_TERMINATED = 0xc0370107;
    inline constexpr uint32_t ERROR_VMCOMPUTE_CONNECT_FAILED = 0xc0370108;
    inline constexpr uint32_t ERROR_VMCOMPUTE_TIMEOUT = 0xc0370109;
    inline constexpr uint32_t ERROR_VMCOMPUTE_CONNECTION_CLOSED = 0xc037010a;
    inline constexpr uint32_t ERROR_VMCOMPUTE_UNKNOWN_MESSAGE = 0xc037010b;
    inline constexpr uint32_t ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION = 0xc037010c;
    inline constexpr uint32_t ERROR_VMCOMPUTE_INVALID_JSON = 0xc037010d;
    inline constexpr uint32_t ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND = 0xc037010e;
    inline constexpr uint32_t ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS = 0xc037010f;
    inline constexpr uint32_t ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED = 0xc0370110;
    inline constexpr uint32_t ERROR_VMCOMPUTE_PROTOCOL_ERROR = 0xc0370111;
    inline constexpr uint32_t ERROR_VMCOMPUTE_INVALID_LAYER = 0xc0370112;
    inline constexpr uint32_t ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED = 0xc0370113;
    inline constexpr int32_t HCS_E_TERMINATED_DURING_START = -2143878912;
    inline constexpr int32_t HCS_E_IMAGE_MISMATCH = -2143878911;
    inline constexpr int32_t HCS_E_HYPERV_NOT_INSTALLED = -2143878910;
    inline constexpr int32_t HCS_E_INVALID_STATE = -2143878907;
    inline constexpr int32_t HCS_E_UNEXPECTED_EXIT = -2143878906;
    inline constexpr int32_t HCS_E_TERMINATED = -2143878905;
    inline constexpr int32_t HCS_E_CONNECT_FAILED = -2143878904;
    inline constexpr int32_t HCS_E_CONNECTION_TIMEOUT = -2143878903;
    inline constexpr int32_t HCS_E_CONNECTION_CLOSED = -2143878902;
    inline constexpr int32_t HCS_E_UNKNOWN_MESSAGE = -2143878901;
    inline constexpr int32_t HCS_E_UNSUPPORTED_PROTOCOL_VERSION = -2143878900;
    inline constexpr int32_t HCS_E_INVALID_JSON = -2143878899;
    inline constexpr int32_t HCS_E_SYSTEM_NOT_FOUND = -2143878898;
    inline constexpr int32_t HCS_E_SYSTEM_ALREADY_EXISTS = -2143878897;
    inline constexpr int32_t HCS_E_SYSTEM_ALREADY_STOPPED = -2143878896;
    inline constexpr int32_t HCS_E_PROTOCOL_ERROR = -2143878895;
    inline constexpr int32_t HCS_E_INVALID_LAYER = -2143878894;
    inline constexpr int32_t HCS_E_WINDOWS_INSIDER_REQUIRED = -2143878893;
    inline constexpr int32_t HCS_E_SERVICE_NOT_AVAILABLE = -2143878892;
    inline constexpr int32_t HCS_E_OPERATION_NOT_STARTED = -2143878891;
    inline constexpr int32_t HCS_E_OPERATION_ALREADY_STARTED = -2143878890;
    inline constexpr int32_t HCS_E_OPERATION_PENDING = -2143878889;
    inline constexpr int32_t HCS_E_OPERATION_TIMEOUT = -2143878888;
    inline constexpr int32_t HCS_E_OPERATION_SYSTEM_CALLBACK_ALREADY_SET = -2143878887;
    inline constexpr int32_t HCS_E_OPERATION_RESULT_ALLOCATION_FAILED = -2143878886;
    inline constexpr int32_t HCS_E_ACCESS_DENIED = -2143878885;
    inline constexpr int32_t HCS_E_GUEST_CRITICAL_ERROR = -2143878884;
    inline constexpr int32_t HCS_E_PROCESS_INFO_NOT_AVAILABLE = -2143878883;
    inline constexpr int32_t HCS_E_SERVICE_DISCONNECT = -2143878882;
    inline constexpr int32_t HCS_E_PROCESS_ALREADY_STOPPED = -2143878881;
    inline constexpr uint32_t ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND = 0xc0370200;
    inline constexpr uint32_t ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED = 0x80370001;
    inline constexpr int32_t WHV_E_UNKNOWN_CAPABILITY = -2143878400;
    inline constexpr int32_t WHV_E_INSUFFICIENT_BUFFER = -2143878399;
    inline constexpr int32_t WHV_E_UNKNOWN_PROPERTY = -2143878398;
    inline constexpr int32_t WHV_E_UNSUPPORTED_HYPERVISOR_CONFIG = -2143878397;
    inline constexpr int32_t WHV_E_INVALID_PARTITION_CONFIG = -2143878396;
    inline constexpr int32_t WHV_E_GPA_RANGE_NOT_FOUND = -2143878395;
    inline constexpr int32_t WHV_E_VP_ALREADY_EXISTS = -2143878394;
    inline constexpr int32_t WHV_E_VP_DOES_NOT_EXIST = -2143878393;
    inline constexpr int32_t WHV_E_INVALID_VP_STATE = -2143878392;
    inline constexpr int32_t WHV_E_INVALID_VP_REGISTER_NAME = -2143878391;
    inline constexpr int32_t WHV_E_UNSUPPORTED_PROCESSOR_CONFIG = -2143878384;
    inline constexpr uint32_t ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND = 0xc0370400;
    inline constexpr uint32_t ERROR_VSMB_SAVED_STATE_CORRUPT = 0xc0370401;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_PARTITION_STATE_NOT_FOUND = -1070136064;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_GUEST_MEMORY_NOT_FOUND = -1070136063;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_NO_VP_FOUND_IN_PARTITION_STATE = -1070136062;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_NESTED_VIRTUALIZATION_NOT_SUPPORTED = -1070136061;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_WINDOWS_KERNEL_IMAGE_NOT_FOUND = -1070136060;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_PXE_NOT_PRESENT = -1070136059;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_PDPTE_NOT_PRESENT = -1070136058;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_PDE_NOT_PRESENT = -1070136057;
    inline constexpr int32_t VM_SAVED_STATE_DUMP_E_PTE_NOT_PRESENT = -1070136056;
    inline constexpr uint32_t ERROR_VOLMGR_INCOMPLETE_REGENERATION = 0x80380001;
    inline constexpr uint32_t ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION = 0x80380002;
    inline constexpr uint32_t ERROR_VOLMGR_DATABASE_FULL = 0xc0380001;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED = 0xc0380002;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC = 0xc0380003;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED = 0xc0380004;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME = 0xc0380005;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_DUPLICATE = 0xc0380006;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_DYNAMIC = 0xc0380007;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_ID_INVALID = 0xc0380008;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_INVALID = 0xc0380009;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAST_VOTER = 0xc038000a;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_INVALID = 0xc038000b;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS = 0xc038000c;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED = 0xc038000d;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL = 0xc038000e;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS = 0xc038000f;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS = 0xc0380010;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_MISSING = 0xc0380011;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_NOT_EMPTY = 0xc0380012;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE = 0xc0380013;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_REVECTORING_FAILED = 0xc0380014;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID = 0xc0380015;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_SET_NOT_CONTAINED = 0xc0380016;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS = 0xc0380017;
    inline constexpr uint32_t ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES = 0xc0380018;
    inline constexpr uint32_t ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED = 0xc0380019;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_ALREADY_USED = 0xc038001a;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS = 0xc038001b;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION = 0xc038001c;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = 0xc038001d;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION = 0xc038001e;
    inline constexpr uint32_t ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH = 0xc038001f;
    inline constexpr uint32_t ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED = 0xc0380020;
    inline constexpr uint32_t ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID = 0xc0380021;
    inline constexpr uint32_t ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS = 0xc0380022;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_IN_SYNC = 0xc0380023;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE = 0xc0380024;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_INDEX_INVALID = 0xc0380025;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_MISSING = 0xc0380026;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_NOT_DETACHED = 0xc0380027;
    inline constexpr uint32_t ERROR_VOLMGR_MEMBER_REGENERATING = 0xc0380028;
    inline constexpr uint32_t ERROR_VOLMGR_ALL_DISKS_FAILED = 0xc0380029;
    inline constexpr uint32_t ERROR_VOLMGR_NO_REGISTERED_USERS = 0xc038002a;
    inline constexpr uint32_t ERROR_VOLMGR_NO_SUCH_USER = 0xc038002b;
    inline constexpr uint32_t ERROR_VOLMGR_NOTIFICATION_RESET = 0xc038002c;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID = 0xc038002d;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID = 0xc038002e;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_DUPLICATE = 0xc038002f;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_ID_INVALID = 0xc0380030;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_INVALID = 0xc0380031;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_NAME_INVALID = 0xc0380032;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_OFFLINE = 0xc0380033;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_HAS_QUORUM = 0xc0380034;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_WITHOUT_QUORUM = 0xc0380035;
    inline constexpr uint32_t ERROR_VOLMGR_PARTITION_STYLE_INVALID = 0xc0380036;
    inline constexpr uint32_t ERROR_VOLMGR_PARTITION_UPDATE_FAILED = 0xc0380037;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_IN_SYNC = 0xc0380038;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_INDEX_DUPLICATE = 0xc0380039;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_INDEX_INVALID = 0xc038003a;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_LAST_ACTIVE = 0xc038003b;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_MISSING = 0xc038003c;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_REGENERATING = 0xc038003d;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_TYPE_INVALID = 0xc038003e;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_NOT_RAID5 = 0xc038003f;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_NOT_SIMPLE = 0xc0380040;
    inline constexpr uint32_t ERROR_VOLMGR_STRUCTURE_SIZE_INVALID = 0xc0380041;
    inline constexpr uint32_t ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS = 0xc0380042;
    inline constexpr uint32_t ERROR_VOLMGR_TRANSACTION_IN_PROGRESS = 0xc0380043;
    inline constexpr uint32_t ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE = 0xc0380044;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK = 0xc0380045;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_ID_INVALID = 0xc0380046;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_LENGTH_INVALID = 0xc0380047;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE = 0xc0380048;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_NOT_MIRRORED = 0xc0380049;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_NOT_RETAINED = 0xc038004a;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_OFFLINE = 0xc038004b;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_RETAINED = 0xc038004c;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID = 0xc038004d;
    inline constexpr uint32_t ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE = 0xc038004e;
    inline constexpr uint32_t ERROR_VOLMGR_BAD_BOOT_DISK = 0xc038004f;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_CONFIG_OFFLINE = 0xc0380050;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_CONFIG_ONLINE = 0xc0380051;
    inline constexpr uint32_t ERROR_VOLMGR_NOT_PRIMARY_PACK = 0xc0380052;
    inline constexpr uint32_t ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED = 0xc0380053;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID = 0xc0380054;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID = 0xc0380055;
    inline constexpr uint32_t ERROR_VOLMGR_VOLUME_MIRRORED = 0xc0380056;
    inline constexpr uint32_t ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = 0xc0380057;
    inline constexpr uint32_t ERROR_VOLMGR_NO_VALID_LOG_COPIES = 0xc0380058;
    inline constexpr uint32_t ERROR_VOLMGR_PRIMARY_PACK_PRESENT = 0xc0380059;
    inline constexpr uint32_t ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID = 0xc038005a;
    inline constexpr uint32_t ERROR_VOLMGR_MIRROR_NOT_SUPPORTED = 0xc038005b;
    inline constexpr uint32_t ERROR_VOLMGR_RAID5_NOT_SUPPORTED = 0xc038005c;
    inline constexpr uint32_t ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED = 0x80390001;
    inline constexpr uint32_t ERROR_BCD_TOO_MANY_ELEMENTS = 0xc0390002;
    inline constexpr uint32_t ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = 0x80390003;
    inline constexpr uint32_t ERROR_VHD_DRIVE_FOOTER_MISSING = 0xc03a0001;
    inline constexpr uint32_t ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH = 0xc03a0002;
    inline constexpr uint32_t ERROR_VHD_DRIVE_FOOTER_CORRUPT = 0xc03a0003;
    inline constexpr uint32_t ERROR_VHD_FORMAT_UNKNOWN = 0xc03a0004;
    inline constexpr uint32_t ERROR_VHD_FORMAT_UNSUPPORTED_VERSION = 0xc03a0005;
    inline constexpr uint32_t ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH = 0xc03a0006;
    inline constexpr uint32_t ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION = 0xc03a0007;
    inline constexpr uint32_t ERROR_VHD_SPARSE_HEADER_CORRUPT = 0xc03a0008;
    inline constexpr uint32_t ERROR_VHD_BLOCK_ALLOCATION_FAILURE = 0xc03a0009;
    inline constexpr uint32_t ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT = 0xc03a000a;
    inline constexpr uint32_t ERROR_VHD_INVALID_BLOCK_SIZE = 0xc03a000b;
    inline constexpr uint32_t ERROR_VHD_BITMAP_MISMATCH = 0xc03a000c;
    inline constexpr uint32_t ERROR_VHD_PARENT_VHD_NOT_FOUND = 0xc03a000d;
    inline constexpr uint32_t ERROR_VHD_CHILD_PARENT_ID_MISMATCH = 0xc03a000e;
    inline constexpr uint32_t ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH = 0xc03a000f;
    inline constexpr uint32_t ERROR_VHD_METADATA_READ_FAILURE = 0xc03a0010;
    inline constexpr uint32_t ERROR_VHD_METADATA_WRITE_FAILURE = 0xc03a0011;
    inline constexpr uint32_t ERROR_VHD_INVALID_SIZE = 0xc03a0012;
    inline constexpr uint32_t ERROR_VHD_INVALID_FILE_SIZE = 0xc03a0013;
    inline constexpr uint32_t ERROR_VIRTDISK_PROVIDER_NOT_FOUND = 0xc03a0014;
    inline constexpr uint32_t ERROR_VIRTDISK_NOT_VIRTUAL_DISK = 0xc03a0015;
    inline constexpr uint32_t ERROR_VHD_PARENT_VHD_ACCESS_DENIED = 0xc03a0016;
    inline constexpr uint32_t ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH = 0xc03a0017;
    inline constexpr uint32_t ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED = 0xc03a0018;
    inline constexpr uint32_t ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT = 0xc03a0019;
    inline constexpr uint32_t ERROR_VIRTUAL_DISK_LIMITATION = 0xc03a001a;
    inline constexpr uint32_t ERROR_VHD_INVALID_TYPE = 0xc03a001b;
    inline constexpr uint32_t ERROR_VHD_INVALID_STATE = 0xc03a001c;
    inline constexpr uint32_t ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE = 0xc03a001d;
    inline constexpr uint32_t ERROR_VIRTDISK_DISK_ALREADY_OWNED = 0xc03a001e;
    inline constexpr uint32_t ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE = 0xc03a001f;
    inline constexpr uint32_t ERROR_CTLOG_TRACKING_NOT_INITIALIZED = 0xc03a0020;
    inline constexpr uint32_t ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE = 0xc03a0021;
    inline constexpr uint32_t ERROR_CTLOG_VHD_CHANGED_OFFLINE = 0xc03a0022;
    inline constexpr uint32_t ERROR_CTLOG_INVALID_TRACKING_STATE = 0xc03a0023;
    inline constexpr uint32_t ERROR_CTLOG_INCONSISTENT_TRACKING_FILE = 0xc03a0024;
    inline constexpr uint32_t ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA = 0xc03a0025;
    inline constexpr uint32_t ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE = 0xc03a0026;
    inline constexpr uint32_t ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE = 0xc03a0027;
    inline constexpr uint32_t ERROR_VHD_METADATA_FULL = 0xc03a0028;
    inline constexpr uint32_t ERROR_VHD_INVALID_CHANGE_TRACKING_ID = 0xc03a0029;
    inline constexpr uint32_t ERROR_VHD_CHANGE_TRACKING_DISABLED = 0xc03a002a;
    inline constexpr uint32_t ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION = 0xc03a0030;
    inline constexpr uint32_t ERROR_QUERY_STORAGE_ERROR = 0x803a0001;
    inline constexpr int32_t HCN_E_NETWORK_NOT_FOUND = -2143617023;
    inline constexpr int32_t HCN_E_ENDPOINT_NOT_FOUND = -2143617022;
    inline constexpr int32_t HCN_E_LAYER_NOT_FOUND = -2143617021;
    inline constexpr int32_t HCN_E_SWITCH_NOT_FOUND = -2143617020;
    inline constexpr int32_t HCN_E_SUBNET_NOT_FOUND = -2143617019;
    inline constexpr int32_t HCN_E_ADAPTER_NOT_FOUND = -2143617018;
    inline constexpr int32_t HCN_E_PORT_NOT_FOUND = -2143617017;
    inline constexpr int32_t HCN_E_POLICY_NOT_FOUND = -2143617016;
    inline constexpr int32_t HCN_E_VFP_PORTSETTING_NOT_FOUND = -2143617015;
    inline constexpr int32_t HCN_E_INVALID_NETWORK = -2143617014;
    inline constexpr int32_t HCN_E_INVALID_NETWORK_TYPE = -2143617013;
    inline constexpr int32_t HCN_E_INVALID_ENDPOINT = -2143617012;
    inline constexpr int32_t HCN_E_INVALID_POLICY = -2143617011;
    inline constexpr int32_t HCN_E_INVALID_POLICY_TYPE = -2143617010;
    inline constexpr int32_t HCN_E_INVALID_REMOTE_ENDPOINT_OPERATION = -2143617009;
    inline constexpr int32_t HCN_E_NETWORK_ALREADY_EXISTS = -2143617008;
    inline constexpr int32_t HCN_E_LAYER_ALREADY_EXISTS = -2143617007;
    inline constexpr int32_t HCN_E_POLICY_ALREADY_EXISTS = -2143617006;
    inline constexpr int32_t HCN_E_PORT_ALREADY_EXISTS = -2143617005;
    inline constexpr int32_t HCN_E_ENDPOINT_ALREADY_ATTACHED = -2143617004;
    inline constexpr int32_t HCN_E_REQUEST_UNSUPPORTED = -2143617003;
    inline constexpr int32_t HCN_E_MAPPING_NOT_SUPPORTED = -2143617002;
    inline constexpr int32_t HCN_E_DEGRADED_OPERATION = -2143617001;
    inline constexpr int32_t HCN_E_SHARED_SWITCH_MODIFICATION = -2143617000;
    inline constexpr int32_t HCN_E_GUID_CONVERSION_FAILURE = -2143616999;
    inline constexpr int32_t HCN_E_REGKEY_FAILURE = -2143616998;
    inline constexpr int32_t HCN_E_INVALID_JSON = -2143616997;
    inline constexpr int32_t HCN_E_INVALID_JSON_REFERENCE = -2143616996;
    inline constexpr int32_t HCN_E_ENDPOINT_SHARING_DISABLED = -2143616995;
    inline constexpr int32_t HCN_E_INVALID_IP = -2143616994;
    inline constexpr int32_t HCN_E_SWITCH_EXTENSION_NOT_FOUND = -2143616993;
    inline constexpr int32_t HCN_E_MANAGER_STOPPED = -2143616992;
    inline constexpr int32_t GCN_E_MODULE_NOT_FOUND = -2143616991;
    inline constexpr int32_t GCN_E_NO_REQUEST_HANDLERS = -2143616990;
    inline constexpr int32_t GCN_E_REQUEST_UNSUPPORTED = -2143616989;
    inline constexpr int32_t GCN_E_RUNTIMEKEYS_FAILED = -2143616988;
    inline constexpr int32_t GCN_E_NETADAPTER_TIMEOUT = -2143616987;
    inline constexpr int32_t GCN_E_NETADAPTER_NOT_FOUND = -2143616986;
    inline constexpr int32_t GCN_E_NETCOMPARTMENT_NOT_FOUND = -2143616985;
    inline constexpr int32_t GCN_E_NETINTERFACE_NOT_FOUND = -2143616984;
    inline constexpr int32_t GCN_E_DEFAULTNAMESPACE_EXISTS = -2143616983;
    inline constexpr int32_t HCN_E_ICS_DISABLED = -2143616982;
    inline constexpr int32_t HCN_E_ENDPOINT_NAMESPACE_ALREADY_EXISTS = -2143616981;
    inline constexpr int32_t HCN_E_ENTITY_HAS_REFERENCES = -2143616980;
    inline constexpr int32_t HCN_E_INVALID_INTERNAL_PORT = -2143616979;
    inline constexpr int32_t HCN_E_NAMESPACE_ATTACH_FAILED = -2143616978;
    inline constexpr int32_t HCN_E_ADDR_INVALID_OR_RESERVED = -2143616977;
    inline constexpr int32_t HCN_E_INVALID_PREFIX = -2143616976;
    inline constexpr int32_t HCN_E_OBJECT_USED_AFTER_UNLOAD = -2143616975;
    inline constexpr int32_t HCN_E_INVALID_SUBNET = -2143616974;
    inline constexpr int32_t HCN_E_INVALID_IP_SUBNET = -2143616973;
    inline constexpr int32_t HCN_E_ENDPOINT_NOT_ATTACHED = -2143616972;
    inline constexpr int32_t HCN_E_ENDPOINT_NOT_LOCAL = -2143616971;
    inline constexpr int32_t HCN_INTERFACEPARAMETERS_ALREADY_APPLIED = -2143616970;
    inline constexpr uint32_t SDIAG_E_CANCELLED = 0x803c0100;
    inline constexpr uint32_t SDIAG_E_SCRIPT = 0x803c0101;
    inline constexpr uint32_t SDIAG_E_POWERSHELL = 0x803c0102;
    inline constexpr uint32_t SDIAG_E_MANAGEDHOST = 0x803c0103;
    inline constexpr uint32_t SDIAG_E_NOVERIFIER = 0x803c0104;
    inline constexpr uint32_t SDIAG_S_CANNOTRUN = 0x3c0105;
    inline constexpr uint32_t SDIAG_E_DISABLED = 0x803c0106;
    inline constexpr uint32_t SDIAG_E_TRUST = 0x803c0107;
    inline constexpr uint32_t SDIAG_E_CANNOTRUN = 0x803c0108;
    inline constexpr uint32_t SDIAG_E_VERSION = 0x803c0109;
    inline constexpr uint32_t SDIAG_E_RESOURCE = 0x803c010a;
    inline constexpr uint32_t SDIAG_E_ROOTCAUSE = 0x803c010b;
    inline constexpr int32_t WPN_E_CHANNEL_CLOSED = -2143420160;
    inline constexpr int32_t WPN_E_CHANNEL_REQUEST_NOT_COMPLETE = -2143420159;
    inline constexpr int32_t WPN_E_INVALID_APP = -2143420158;
    inline constexpr int32_t WPN_E_OUTSTANDING_CHANNEL_REQUEST = -2143420157;
    inline constexpr int32_t WPN_E_DUPLICATE_CHANNEL = -2143420156;
    inline constexpr int32_t WPN_E_PLATFORM_UNAVAILABLE = -2143420155;
    inline constexpr int32_t WPN_E_NOTIFICATION_POSTED = -2143420154;
    inline constexpr int32_t WPN_E_NOTIFICATION_HIDDEN = -2143420153;
    inline constexpr int32_t WPN_E_NOTIFICATION_NOT_POSTED = -2143420152;
    inline constexpr int32_t WPN_E_CLOUD_DISABLED = -2143420151;
    inline constexpr int32_t WPN_E_CLOUD_INCAPABLE = -2143420144;
    inline constexpr int32_t WPN_E_CLOUD_AUTH_UNAVAILABLE = -2143420134;
    inline constexpr int32_t WPN_E_CLOUD_SERVICE_UNAVAILABLE = -2143420133;
    inline constexpr int32_t WPN_E_FAILED_LOCK_SCREEN_UPDATE_INTIALIZATION = -2143420132;
    inline constexpr int32_t WPN_E_NOTIFICATION_DISABLED = -2143420143;
    inline constexpr int32_t WPN_E_NOTIFICATION_INCAPABLE = -2143420142;
    inline constexpr int32_t WPN_E_INTERNET_INCAPABLE = -2143420141;
    inline constexpr int32_t WPN_E_NOTIFICATION_TYPE_DISABLED = -2143420140;
    inline constexpr int32_t WPN_E_NOTIFICATION_SIZE = -2143420139;
    inline constexpr int32_t WPN_E_TAG_SIZE = -2143420138;
    inline constexpr int32_t WPN_E_ACCESS_DENIED = -2143420137;
    inline constexpr int32_t WPN_E_DUPLICATE_REGISTRATION = -2143420136;
    inline constexpr int32_t WPN_E_PUSH_NOTIFICATION_INCAPABLE = -2143420135;
    inline constexpr int32_t WPN_E_DEV_ID_SIZE = -2143420128;
    inline constexpr int32_t WPN_E_TAG_ALPHANUMERIC = -2143420118;
    inline constexpr int32_t WPN_E_INVALID_HTTP_STATUS_CODE = -2143420117;
    inline constexpr int32_t WPN_E_OUT_OF_SESSION = -2143419904;
    inline constexpr int32_t WPN_E_POWER_SAVE = -2143419903;
    inline constexpr int32_t WPN_E_IMAGE_NOT_FOUND_IN_CACHE = -2143419902;
    inline constexpr int32_t WPN_E_ALL_URL_NOT_COMPLETED = -2143419901;
    inline constexpr int32_t WPN_E_INVALID_CLOUD_IMAGE = -2143419900;
    inline constexpr int32_t WPN_E_NOTIFICATION_ID_MATCHED = -2143419899;
    inline constexpr int32_t WPN_E_CALLBACK_ALREADY_REGISTERED = -2143419898;
    inline constexpr int32_t WPN_E_TOAST_NOTIFICATION_DROPPED = -2143419897;
    inline constexpr int32_t WPN_E_STORAGE_LOCKED = -2143419896;
    inline constexpr int32_t WPN_E_GROUP_SIZE = -2143419895;
    inline constexpr int32_t WPN_E_GROUP_ALPHANUMERIC = -2143419894;
    inline constexpr int32_t WPN_E_CLOUD_DISABLED_FOR_APP = -2143419893;
    inline constexpr int32_t E_MBN_CONTEXT_NOT_ACTIVATED = -2141945343;
    inline constexpr int32_t E_MBN_BAD_SIM = -2141945342;
    inline constexpr int32_t E_MBN_DATA_CLASS_NOT_AVAILABLE = -2141945341;
    inline constexpr int32_t E_MBN_INVALID_ACCESS_STRING = -2141945340;
    inline constexpr int32_t E_MBN_MAX_ACTIVATED_CONTEXTS = -2141945339;
    inline constexpr int32_t E_MBN_PACKET_SVC_DETACHED = -2141945338;
    inline constexpr int32_t E_MBN_PROVIDER_NOT_VISIBLE = -2141945337;
    inline constexpr int32_t E_MBN_RADIO_POWER_OFF = -2141945336;
    inline constexpr int32_t E_MBN_SERVICE_NOT_ACTIVATED = -2141945335;
    inline constexpr int32_t E_MBN_SIM_NOT_INSERTED = -2141945334;
    inline constexpr int32_t E_MBN_VOICE_CALL_IN_PROGRESS = -2141945333;
    inline constexpr int32_t E_MBN_INVALID_CACHE = -2141945332;
    inline constexpr int32_t E_MBN_NOT_REGISTERED = -2141945331;
    inline constexpr int32_t E_MBN_PROVIDERS_NOT_FOUND = -2141945330;
    inline constexpr int32_t E_MBN_PIN_NOT_SUPPORTED = -2141945329;
    inline constexpr int32_t E_MBN_PIN_REQUIRED = -2141945328;
    inline constexpr int32_t E_MBN_PIN_DISABLED = -2141945327;
    inline constexpr int32_t E_MBN_FAILURE = -2141945326;
    inline constexpr int32_t E_MBN_INVALID_PROFILE = -2141945320;
    inline constexpr int32_t E_MBN_DEFAULT_PROFILE_EXIST = -2141945319;
    inline constexpr int32_t E_MBN_SMS_ENCODING_NOT_SUPPORTED = -2141945312;
    inline constexpr int32_t E_MBN_SMS_FILTER_NOT_SUPPORTED = -2141945311;
    inline constexpr int32_t E_MBN_SMS_INVALID_MEMORY_INDEX = -2141945310;
    inline constexpr int32_t E_MBN_SMS_LANG_NOT_SUPPORTED = -2141945309;
    inline constexpr int32_t E_MBN_SMS_MEMORY_FAILURE = -2141945308;
    inline constexpr int32_t E_MBN_SMS_NETWORK_TIMEOUT = -2141945307;
    inline constexpr int32_t E_MBN_SMS_UNKNOWN_SMSC_ADDRESS = -2141945306;
    inline constexpr int32_t E_MBN_SMS_FORMAT_NOT_SUPPORTED = -2141945305;
    inline constexpr int32_t E_MBN_SMS_OPERATION_NOT_ALLOWED = -2141945304;
    inline constexpr int32_t E_MBN_SMS_MEMORY_FULL = -2141945303;
    inline constexpr int32_t PEER_E_IPV6_NOT_INSTALLED = -2140995583;
    inline constexpr int32_t PEER_E_NOT_INITIALIZED = -2140995582;
    inline constexpr int32_t PEER_E_CANNOT_START_SERVICE = -2140995581;
    inline constexpr int32_t PEER_E_NOT_LICENSED = -2140995580;
    inline constexpr int32_t PEER_E_INVALID_GRAPH = -2140995568;
    inline constexpr int32_t PEER_E_DBNAME_CHANGED = -2140995567;
    inline constexpr int32_t PEER_E_DUPLICATE_GRAPH = -2140995566;
    inline constexpr int32_t PEER_E_GRAPH_NOT_READY = -2140995565;
    inline constexpr int32_t PEER_E_GRAPH_SHUTTING_DOWN = -2140995564;
    inline constexpr int32_t PEER_E_GRAPH_IN_USE = -2140995563;
    inline constexpr int32_t PEER_E_INVALID_DATABASE = -2140995562;
    inline constexpr int32_t PEER_E_TOO_MANY_ATTRIBUTES = -2140995561;
    inline constexpr int32_t PEER_E_CONNECTION_NOT_FOUND = -2140995325;
    inline constexpr int32_t PEER_E_CONNECT_SELF = -2140995322;
    inline constexpr int32_t PEER_E_ALREADY_LISTENING = -2140995321;
    inline constexpr int32_t PEER_E_NODE_NOT_FOUND = -2140995320;
    inline constexpr int32_t PEER_E_CONNECTION_FAILED = -2140995319;
    inline constexpr int32_t PEER_E_CONNECTION_NOT_AUTHENTICATED = -2140995318;
    inline constexpr int32_t PEER_E_CONNECTION_REFUSED = -2140995317;
    inline constexpr int32_t PEER_E_CLASSIFIER_TOO_LONG = -2140995071;
    inline constexpr int32_t PEER_E_TOO_MANY_IDENTITIES = -2140995070;
    inline constexpr int32_t PEER_E_NO_KEY_ACCESS = -2140995069;
    inline constexpr int32_t PEER_E_GROUPS_EXIST = -2140995068;
    inline constexpr int32_t PEER_E_RECORD_NOT_FOUND = -2140994815;
    inline constexpr int32_t PEER_E_DATABASE_ACCESSDENIED = -2140994814;
    inline constexpr int32_t PEER_E_DBINITIALIZATION_FAILED = -2140994813;
    inline constexpr int32_t PEER_E_MAX_RECORD_SIZE_EXCEEDED = -2140994812;
    inline constexpr int32_t PEER_E_DATABASE_ALREADY_PRESENT = -2140994811;
    inline constexpr int32_t PEER_E_DATABASE_NOT_PRESENT = -2140994810;
    inline constexpr int32_t PEER_E_IDENTITY_NOT_FOUND = -2140994559;
    inline constexpr int32_t PEER_E_EVENT_HANDLE_NOT_FOUND = -2140994303;
    inline constexpr int32_t PEER_E_INVALID_SEARCH = -2140994047;
    inline constexpr int32_t PEER_E_INVALID_ATTRIBUTES = -2140994046;
    inline constexpr int32_t PEER_E_INVITATION_NOT_TRUSTED = -2140993791;
    inline constexpr int32_t PEER_E_CHAIN_TOO_LONG = -2140993789;
    inline constexpr int32_t PEER_E_INVALID_TIME_PERIOD = -2140993787;
    inline constexpr int32_t PEER_E_CIRCULAR_CHAIN_DETECTED = -2140993786;
    inline constexpr int32_t PEER_E_CERT_STORE_CORRUPTED = -2140993535;
    inline constexpr int32_t PEER_E_NO_CLOUD = -2140991487;
    inline constexpr int32_t PEER_E_CLOUD_NAME_AMBIGUOUS = -2140991483;
    inline constexpr int32_t PEER_E_INVALID_RECORD = -2140987376;
    inline constexpr int32_t PEER_E_NOT_AUTHORIZED = -2140987360;
    inline constexpr int32_t PEER_E_PASSWORD_DOES_NOT_MEET_POLICY = -2140987359;
    inline constexpr int32_t PEER_E_DEFERRED_VALIDATION = -2140987344;
    inline constexpr int32_t PEER_E_INVALID_GROUP_PROPERTIES = -2140987328;
    inline constexpr int32_t PEER_E_INVALID_PEER_NAME = -2140987312;
    inline constexpr int32_t PEER_E_INVALID_CLASSIFIER = -2140987296;
    inline constexpr int32_t PEER_E_INVALID_FRIENDLY_NAME = -2140987280;
    inline constexpr int32_t PEER_E_INVALID_ROLE_PROPERTY = -2140987279;
    inline constexpr int32_t PEER_E_INVALID_CLASSIFIER_PROPERTY = -2140987278;
    inline constexpr int32_t PEER_E_INVALID_RECORD_EXPIRATION = -2140987264;
    inline constexpr int32_t PEER_E_INVALID_CREDENTIAL_INFO = -2140987263;
    inline constexpr int32_t PEER_E_INVALID_CREDENTIAL = -2140987262;
    inline constexpr int32_t PEER_E_INVALID_RECORD_SIZE = -2140987261;
    inline constexpr int32_t PEER_E_UNSUPPORTED_VERSION = -2140987248;
    inline constexpr int32_t PEER_E_GROUP_NOT_READY = -2140987247;
    inline constexpr int32_t PEER_E_GROUP_IN_USE = -2140987246;
    inline constexpr int32_t PEER_E_INVALID_GROUP = -2140987245;
    inline constexpr int32_t PEER_E_NO_MEMBERS_FOUND = -2140987244;
    inline constexpr int32_t PEER_E_NO_MEMBER_CONNECTIONS = -2140987243;
    inline constexpr int32_t PEER_E_UNABLE_TO_LISTEN = -2140987242;
    inline constexpr int32_t PEER_E_IDENTITY_DELETED = -2140987232;
    inline constexpr int32_t PEER_E_SERVICE_NOT_AVAILABLE = -2140987231;
    inline constexpr int32_t PEER_E_CONTACT_NOT_FOUND = -2140971007;
    inline constexpr int32_t PEER_S_GRAPH_DATA_CREATED = 6488065;
    inline constexpr int32_t PEER_S_NO_EVENT_DATA = 6488066;
    inline constexpr int32_t PEER_S_ALREADY_CONNECTED = 6496256;
    inline constexpr int32_t PEER_S_SUBSCRIPTION_EXISTS = 6512640;
    inline constexpr int32_t PEER_S_NO_CONNECTIVITY = 6488069;
    inline constexpr int32_t PEER_S_ALREADY_A_MEMBER = 6488070;
    inline constexpr int32_t PEER_E_CANNOT_CONVERT_PEER_NAME = -2140979199;
    inline constexpr int32_t PEER_E_INVALID_PEER_HOST_NAME = -2140979198;
    inline constexpr int32_t PEER_E_NO_MORE = -2140979197;
    inline constexpr int32_t PEER_E_PNRP_DUPLICATE_PEER_NAME = -2140979195;
    inline constexpr int32_t PEER_E_INVITE_CANCELLED = -2140966912;
    inline constexpr int32_t PEER_E_INVITE_RESPONSE_NOT_AVAILABLE = -2140966911;
    inline constexpr int32_t PEER_E_NOT_SIGNED_IN = -2140966909;
    inline constexpr int32_t PEER_E_PRIVACY_DECLINED = -2140966908;
    inline constexpr int32_t PEER_E_TIMEOUT = -2140966907;
    inline constexpr int32_t PEER_E_INVALID_ADDRESS = -2140966905;
    inline constexpr int32_t PEER_E_FW_EXCEPTION_DISABLED = -2140966904;
    inline constexpr int32_t PEER_E_FW_BLOCKED_BY_POLICY = -2140966903;
    inline constexpr int32_t PEER_E_FW_BLOCKED_BY_SHIELDS_UP = -2140966902;
    inline constexpr int32_t PEER_E_FW_DECLINED = -2140966901;
    inline constexpr int32_t UI_E_CREATE_FAILED = -2144731135;
    inline constexpr int32_t UI_E_SHUTDOWN_CALLED = -2144731134;
    inline constexpr int32_t UI_E_ILLEGAL_REENTRANCY = -2144731133;
    inline constexpr int32_t UI_E_OBJECT_SEALED = -2144731132;
    inline constexpr int32_t UI_E_VALUE_NOT_SET = -2144731131;
    inline constexpr int32_t UI_E_VALUE_NOT_DETERMINED = -2144731130;
    inline constexpr int32_t UI_E_INVALID_OUTPUT = -2144731129;
    inline constexpr int32_t UI_E_BOOLEAN_EXPECTED = -2144731128;
    inline constexpr int32_t UI_E_DIFFERENT_OWNER = -2144731127;
    inline constexpr int32_t UI_E_AMBIGUOUS_MATCH = -2144731126;
    inline constexpr int32_t UI_E_FP_OVERFLOW = -2144731125;
    inline constexpr int32_t UI_E_WRONG_THREAD = -2144731124;
    inline constexpr int32_t UI_E_STORYBOARD_ACTIVE = -2144730879;
    inline constexpr int32_t UI_E_STORYBOARD_NOT_PLAYING = -2144730878;
    inline constexpr int32_t UI_E_START_KEYFRAME_AFTER_END = -2144730877;
    inline constexpr int32_t UI_E_END_KEYFRAME_NOT_DETERMINED = -2144730876;
    inline constexpr int32_t UI_E_LOOPS_OVERLAP = -2144730875;
    inline constexpr int32_t UI_E_TRANSITION_ALREADY_USED = -2144730874;
    inline constexpr int32_t UI_E_TRANSITION_NOT_IN_STORYBOARD = -2144730873;
    inline constexpr int32_t UI_E_TRANSITION_ECLIPSED = -2144730872;
    inline constexpr int32_t UI_E_TIME_BEFORE_LAST_UPDATE = -2144730871;
    inline constexpr int32_t UI_E_TIMER_CLIENT_ALREADY_CONNECTED = -2144730870;
    inline constexpr int32_t UI_E_INVALID_DIMENSION = -2144730869;
    inline constexpr int32_t UI_E_PRIMITIVE_OUT_OF_BOUNDS = -2144730868;
    inline constexpr int32_t UI_E_WINDOW_CLOSED = -2144730623;
    inline constexpr int32_t E_BLUETOOTH_ATT_INVALID_HANDLE = -2140864511;
    inline constexpr int32_t E_BLUETOOTH_ATT_READ_NOT_PERMITTED = -2140864510;
    inline constexpr int32_t E_BLUETOOTH_ATT_WRITE_NOT_PERMITTED = -2140864509;
    inline constexpr int32_t E_BLUETOOTH_ATT_INVALID_PDU = -2140864508;
    inline constexpr int32_t E_BLUETOOTH_ATT_INSUFFICIENT_AUTHENTICATION = -2140864507;
    inline constexpr int32_t E_BLUETOOTH_ATT_REQUEST_NOT_SUPPORTED = -2140864506;
    inline constexpr int32_t E_BLUETOOTH_ATT_INVALID_OFFSET = -2140864505;
    inline constexpr int32_t E_BLUETOOTH_ATT_INSUFFICIENT_AUTHORIZATION = -2140864504;
    inline constexpr int32_t E_BLUETOOTH_ATT_PREPARE_QUEUE_FULL = -2140864503;
    inline constexpr int32_t E_BLUETOOTH_ATT_ATTRIBUTE_NOT_FOUND = -2140864502;
    inline constexpr int32_t E_BLUETOOTH_ATT_ATTRIBUTE_NOT_LONG = -2140864501;
    inline constexpr int32_t E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE = -2140864500;
    inline constexpr int32_t E_BLUETOOTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH = -2140864499;
    inline constexpr int32_t E_BLUETOOTH_ATT_UNLIKELY = -2140864498;
    inline constexpr int32_t E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION = -2140864497;
    inline constexpr int32_t E_BLUETOOTH_ATT_UNSUPPORTED_GROUP_TYPE = -2140864496;
    inline constexpr int32_t E_BLUETOOTH_ATT_INSUFFICIENT_RESOURCES = -2140864495;
    inline constexpr int32_t E_BLUETOOTH_ATT_UNKNOWN_ERROR = -2140860416;
    inline constexpr int32_t E_AUDIO_ENGINE_NODE_NOT_FOUND = -2140798975;
    inline constexpr int32_t E_HDAUDIO_EMPTY_CONNECTION_LIST = -2140798974;
    inline constexpr int32_t E_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED = -2140798973;
    inline constexpr int32_t E_HDAUDIO_NO_LOGICAL_DEVICES_CREATED = -2140798972;
    inline constexpr int32_t E_HDAUDIO_NULL_LINKED_LIST_ENTRY = -2140798971;
    inline constexpr int32_t STATEREPOSITORY_E_CONCURRENCY_LOCKING_FAILURE = -2140733439;
    inline constexpr int32_t STATEREPOSITORY_E_STATEMENT_INPROGRESS = -2140733438;
    inline constexpr int32_t STATEREPOSITORY_E_CONFIGURATION_INVALID = -2140733437;
    inline constexpr int32_t STATEREPOSITORY_E_UNKNOWN_SCHEMA_VERSION = -2140733436;
    inline constexpr int32_t STATEREPOSITORY_ERROR_DICTIONARY_CORRUPTED = -2140733435;
    inline constexpr int32_t STATEREPOSITORY_E_BLOCKED = -2140733434;
    inline constexpr int32_t STATEREPOSITORY_E_BUSY_RETRY = -2140733433;
    inline constexpr int32_t STATEREPOSITORY_E_BUSY_RECOVERY_RETRY = -2140733432;
    inline constexpr int32_t STATEREPOSITORY_E_LOCKED_RETRY = -2140733431;
    inline constexpr int32_t STATEREPOSITORY_E_LOCKED_SHAREDCACHE_RETRY = -2140733430;
    inline constexpr int32_t STATEREPOSITORY_E_TRANSACTION_REQUIRED = -2140733429;
    inline constexpr int32_t STATEREPOSITORY_E_BUSY_TIMEOUT_EXCEEDED = -2140733428;
    inline constexpr int32_t STATEREPOSITORY_E_BUSY_RECOVERY_TIMEOUT_EXCEEDED = -2140733427;
    inline constexpr int32_t STATEREPOSITORY_E_LOCKED_TIMEOUT_EXCEEDED = -2140733426;
    inline constexpr int32_t STATEREPOSITORY_E_LOCKED_SHAREDCACHE_TIMEOUT_EXCEEDED = -2140733425;
    inline constexpr int32_t STATEREPOSITORY_E_SERVICE_STOP_IN_PROGRESS = -2140733424;
    inline constexpr int32_t STATEREPOSTORY_E_NESTED_TRANSACTION_NOT_SUPPORTED = -2140733423;
    inline constexpr int32_t STATEREPOSITORY_ERROR_CACHE_CORRUPTED = -2140733422;
    inline constexpr int32_t STATEREPOSITORY_TRANSACTION_CALLER_ID_CHANGED = 6750227;
    inline constexpr int32_t STATEREPOSITORY_TRANSACTION_IN_PROGRESS = 6750228;
    inline constexpr int32_t ERROR_SPACES_POOL_WAS_DELETED = 15138817;
    inline constexpr int32_t ERROR_SPACES_FAULT_DOMAIN_TYPE_INVALID = -2132344831;
    inline constexpr int32_t ERROR_SPACES_INTERNAL_ERROR = -2132344830;
    inline constexpr int32_t ERROR_SPACES_RESILIENCY_TYPE_INVALID = -2132344829;
    inline constexpr int32_t ERROR_SPACES_DRIVE_SECTOR_SIZE_INVALID = -2132344828;
    inline constexpr int32_t ERROR_SPACES_DRIVE_REDUNDANCY_INVALID = -2132344826;
    inline constexpr int32_t ERROR_SPACES_NUMBER_OF_DATA_COPIES_INVALID = -2132344825;
    inline constexpr int32_t ERROR_SPACES_PARITY_LAYOUT_INVALID = -2132344824;
    inline constexpr int32_t ERROR_SPACES_INTERLEAVE_LENGTH_INVALID = -2132344823;
    inline constexpr int32_t ERROR_SPACES_NUMBER_OF_COLUMNS_INVALID = -2132344822;
    inline constexpr int32_t ERROR_SPACES_NOT_ENOUGH_DRIVES = -2132344821;
    inline constexpr int32_t ERROR_SPACES_EXTENDED_ERROR = -2132344820;
    inline constexpr int32_t ERROR_SPACES_PROVISIONING_TYPE_INVALID = -2132344819;
    inline constexpr int32_t ERROR_SPACES_ALLOCATION_SIZE_INVALID = -2132344818;
    inline constexpr int32_t ERROR_SPACES_ENCLOSURE_AWARE_INVALID = -2132344817;
    inline constexpr int32_t ERROR_SPACES_WRITE_CACHE_SIZE_INVALID = -2132344816;
    inline constexpr int32_t ERROR_SPACES_NUMBER_OF_GROUPS_INVALID = -2132344815;
    inline constexpr int32_t ERROR_SPACES_DRIVE_OPERATIONAL_STATE_INVALID = -2132344814;
    inline constexpr int32_t ERROR_SPACES_ENTRY_INCOMPLETE = -2132344813;
    inline constexpr int32_t ERROR_SPACES_ENTRY_INVALID = -2132344812;
    inline constexpr int32_t ERROR_VOLSNAP_BOOTFILE_NOT_VALID = -2138963967;
    inline constexpr int32_t ERROR_VOLSNAP_ACTIVATION_TIMEOUT = -2138963966;
    inline constexpr int32_t ERROR_TIERING_NOT_SUPPORTED_ON_VOLUME = -2138898431;
    inline constexpr int32_t ERROR_TIERING_VOLUME_DISMOUNT_IN_PROGRESS = -2138898430;
    inline constexpr int32_t ERROR_TIERING_STORAGE_TIER_NOT_FOUND = -2138898429;
    inline constexpr int32_t ERROR_TIERING_INVALID_FILE_ID = -2138898428;
    inline constexpr int32_t ERROR_TIERING_WRONG_CLUSTER_NODE = -2138898427;
    inline constexpr int32_t ERROR_TIERING_ALREADY_PROCESSING = -2138898426;
    inline constexpr int32_t ERROR_TIERING_CANNOT_PIN_OBJECT = -2138898425;
    inline constexpr int32_t ERROR_TIERING_FILE_IS_NOT_PINNED = -2138898424;
    inline constexpr int32_t ERROR_NOT_A_TIERED_VOLUME = -2138898423;
    inline constexpr int32_t ERROR_ATTRIBUTE_NOT_PRESENT = -2138898422;
    inline constexpr int32_t ERROR_SECCORE_INVALID_COMMAND = -1058537472;
    inline constexpr int32_t ERROR_NO_APPLICABLE_APP_LICENSES_FOUND = -1058406399;
    inline constexpr int32_t ERROR_CLIP_LICENSE_NOT_FOUND = -1058406398;
    inline constexpr int32_t ERROR_CLIP_DEVICE_LICENSE_MISSING = -1058406397;
    inline constexpr int32_t ERROR_CLIP_LICENSE_INVALID_SIGNATURE = -1058406396;
    inline constexpr int32_t ERROR_CLIP_KEYHOLDER_LICENSE_MISSING_OR_INVALID = -1058406395;
    inline constexpr int32_t ERROR_CLIP_LICENSE_EXPIRED = -1058406394;
    inline constexpr int32_t ERROR_CLIP_LICENSE_SIGNED_BY_UNKNOWN_SOURCE = -1058406393;
    inline constexpr int32_t ERROR_CLIP_LICENSE_NOT_SIGNED = -1058406392;
    inline constexpr int32_t ERROR_CLIP_LICENSE_HARDWARE_ID_OUT_OF_TOLERANCE = -1058406391;
    inline constexpr int32_t ERROR_CLIP_LICENSE_DEVICE_ID_MISMATCH = -1058406390;
    inline constexpr int32_t DXGI_STATUS_OCCLUDED = 142213121;
    inline constexpr int32_t DXGI_STATUS_CLIPPED = 142213122;
    inline constexpr int32_t DXGI_STATUS_NO_REDIRECTION = 142213124;
    inline constexpr int32_t DXGI_STATUS_NO_DESKTOP_ACCESS = 142213125;
    inline constexpr int32_t DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE = 142213126;
    inline constexpr int32_t DXGI_STATUS_MODE_CHANGED = 142213127;
    inline constexpr int32_t DXGI_STATUS_MODE_CHANGE_IN_PROGRESS = 142213128;
    inline constexpr int32_t DXGI_ERROR_INVALID_CALL = -2005270527;
    inline constexpr int32_t DXGI_ERROR_NOT_FOUND = -2005270526;
    inline constexpr int32_t DXGI_ERROR_MORE_DATA = -2005270525;
    inline constexpr int32_t DXGI_ERROR_UNSUPPORTED = -2005270524;
    inline constexpr int32_t DXGI_ERROR_DEVICE_REMOVED = -2005270523;
    inline constexpr int32_t DXGI_ERROR_DEVICE_HUNG = -2005270522;
    inline constexpr int32_t DXGI_ERROR_DEVICE_RESET = -2005270521;
    inline constexpr int32_t DXGI_ERROR_WAS_STILL_DRAWING = -2005270518;
    inline constexpr int32_t DXGI_ERROR_FRAME_STATISTICS_DISJOINT = -2005270517;
    inline constexpr int32_t DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = -2005270516;
    inline constexpr int32_t DXGI_ERROR_DRIVER_INTERNAL_ERROR = -2005270496;
    inline constexpr int32_t DXGI_ERROR_NONEXCLUSIVE = -2005270495;
    inline constexpr int32_t DXGI_ERROR_NOT_CURRENTLY_AVAILABLE = -2005270494;
    inline constexpr int32_t DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED = -2005270493;
    inline constexpr int32_t DXGI_ERROR_REMOTE_OUTOFMEMORY = -2005270492;
    inline constexpr int32_t DXGI_ERROR_ACCESS_LOST = -2005270490;
    inline constexpr int32_t DXGI_ERROR_WAIT_TIMEOUT = -2005270489;
    inline constexpr int32_t DXGI_ERROR_SESSION_DISCONNECTED = -2005270488;
    inline constexpr int32_t DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE = -2005270487;
    inline constexpr int32_t DXGI_ERROR_CANNOT_PROTECT_CONTENT = -2005270486;
    inline constexpr int32_t DXGI_ERROR_ACCESS_DENIED = -2005270485;
    inline constexpr int32_t DXGI_ERROR_NAME_ALREADY_EXISTS = -2005270484;
    inline constexpr int32_t DXGI_ERROR_SDK_COMPONENT_MISSING = -2005270483;
    inline constexpr int32_t DXGI_ERROR_NOT_CURRENT = -2005270482;
    inline constexpr int32_t DXGI_ERROR_HW_PROTECTION_OUTOFMEMORY = -2005270480;
    inline constexpr int32_t DXGI_ERROR_DYNAMIC_CODE_POLICY_VIOLATION = -2005270479;
    inline constexpr int32_t DXGI_ERROR_NON_COMPOSITED_UI = -2005270478;
    inline constexpr int32_t DXCORE_ERROR_EVENT_NOT_UNREGISTERED = -2004877311;
    inline constexpr int32_t DXGI_STATUS_UNOCCLUDED = 142213129;
    inline constexpr int32_t DXGI_STATUS_DDA_WAS_STILL_DRAWING = 142213130;
    inline constexpr int32_t DXGI_ERROR_MODE_CHANGE_IN_PROGRESS = -2005270491;
    inline constexpr int32_t DXGI_STATUS_PRESENT_REQUIRED = 142213167;
    inline constexpr int32_t DXGI_ERROR_CACHE_CORRUPT = -2005270477;
    inline constexpr int32_t DXGI_ERROR_CACHE_FULL = -2005270476;
    inline constexpr int32_t DXGI_ERROR_CACHE_HASH_COLLISION = -2005270475;
    inline constexpr int32_t DXGI_ERROR_ALREADY_EXISTS = -2005270474;
    inline constexpr int32_t DXGI_DDI_ERR_WASSTILLDRAWING = -2005204991;
    inline constexpr int32_t DXGI_DDI_ERR_UNSUPPORTED = -2005204990;
    inline constexpr int32_t DXGI_DDI_ERR_NONEXCLUSIVE = -2005204989;
    inline constexpr int32_t D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = -2005336063;
    inline constexpr int32_t D3D10_ERROR_FILE_NOT_FOUND = -2005336062;
    inline constexpr int32_t D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = -2005139455;
    inline constexpr int32_t D3D11_ERROR_FILE_NOT_FOUND = -2005139454;
    inline constexpr int32_t D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS = -2005139453;
    inline constexpr int32_t D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD = -2005139452;
    inline constexpr int32_t D3D12_ERROR_ADAPTER_NOT_FOUND = -2005008383;
    inline constexpr int32_t D3D12_ERROR_DRIVER_VERSION_MISMATCH = -2005008382;
    inline constexpr int32_t D2DERR_WRONG_STATE = -2003238911;
    inline constexpr int32_t D2DERR_NOT_INITIALIZED = -2003238910;
    inline constexpr int32_t D2DERR_UNSUPPORTED_OPERATION = -2003238909;
    inline constexpr int32_t D2DERR_SCANNER_FAILED = -2003238908;
    inline constexpr int32_t D2DERR_SCREEN_ACCESS_DENIED = -2003238907;
    inline constexpr int32_t D2DERR_DISPLAY_STATE_INVALID = -2003238906;
    inline constexpr int32_t D2DERR_ZERO_VECTOR = -2003238905;
    inline constexpr int32_t D2DERR_INTERNAL_ERROR = -2003238904;
    inline constexpr int32_t D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED = -2003238903;
    inline constexpr int32_t D2DERR_INVALID_CALL = -2003238902;
    inline constexpr int32_t D2DERR_NO_HARDWARE_DEVICE = -2003238901;
    inline constexpr int32_t D2DERR_RECREATE_TARGET = -2003238900;
    inline constexpr int32_t D2DERR_TOO_MANY_SHADER_ELEMENTS = -2003238899;
    inline constexpr int32_t D2DERR_SHADER_COMPILE_FAILED = -2003238898;
    inline constexpr int32_t D2DERR_MAX_TEXTURE_SIZE_EXCEEDED = -2003238897;
    inline constexpr int32_t D2DERR_UNSUPPORTED_VERSION = -2003238896;
    inline constexpr int32_t D2DERR_BAD_NUMBER = -2003238895;
    inline constexpr int32_t D2DERR_WRONG_FACTORY = -2003238894;
    inline constexpr int32_t D2DERR_LAYER_ALREADY_IN_USE = -2003238893;
    inline constexpr int32_t D2DERR_POP_CALL_DID_NOT_MATCH_PUSH = -2003238892;
    inline constexpr int32_t D2DERR_WRONG_RESOURCE_DOMAIN = -2003238891;
    inline constexpr int32_t D2DERR_PUSH_POP_UNBALANCED = -2003238890;
    inline constexpr int32_t D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT = -2003238889;
    inline constexpr int32_t D2DERR_INCOMPATIBLE_BRUSH_TYPES = -2003238888;
    inline constexpr int32_t D2DERR_WIN32_ERROR = -2003238887;
    inline constexpr int32_t D2DERR_TARGET_NOT_GDI_COMPATIBLE = -2003238886;
    inline constexpr int32_t D2DERR_TEXT_EFFECT_IS_WRONG_TYPE = -2003238885;
    inline constexpr int32_t D2DERR_TEXT_RENDERER_NOT_RELEASED = -2003238884;
    inline constexpr int32_t D2DERR_EXCEEDS_MAX_BITMAP_SIZE = -2003238883;
    inline constexpr int32_t D2DERR_INVALID_GRAPH_CONFIGURATION = -2003238882;
    inline constexpr int32_t D2DERR_INVALID_INTERNAL_GRAPH_CONFIGURATION = -2003238881;
    inline constexpr int32_t D2DERR_CYCLIC_GRAPH = -2003238880;
    inline constexpr int32_t D2DERR_BITMAP_CANNOT_DRAW = -2003238879;
    inline constexpr int32_t D2DERR_OUTSTANDING_BITMAP_REFERENCES = -2003238878;
    inline constexpr int32_t D2DERR_ORIGINAL_TARGET_NOT_BOUND = -2003238877;
    inline constexpr int32_t D2DERR_INVALID_TARGET = -2003238876;
    inline constexpr int32_t D2DERR_BITMAP_BOUND_AS_TARGET = -2003238875;
    inline constexpr int32_t D2DERR_INSUFFICIENT_DEVICE_CAPABILITIES = -2003238874;
    inline constexpr int32_t D2DERR_INTERMEDIATE_TOO_LARGE = -2003238873;
    inline constexpr int32_t D2DERR_EFFECT_IS_NOT_REGISTERED = -2003238872;
    inline constexpr int32_t D2DERR_INVALID_PROPERTY = -2003238871;
    inline constexpr int32_t D2DERR_NO_SUBPROPERTIES = -2003238870;
    inline constexpr int32_t D2DERR_PRINT_JOB_CLOSED = -2003238869;
    inline constexpr int32_t D2DERR_PRINT_FORMAT_NOT_SUPPORTED = -2003238868;
    inline constexpr int32_t D2DERR_TOO_MANY_TRANSFORM_INPUTS = -2003238867;
    inline constexpr int32_t D2DERR_INVALID_GLYPH_IMAGE = -2003238866;
    inline constexpr int32_t DWRITE_E_FILEFORMAT = -2003283968;
    inline constexpr int32_t DWRITE_E_UNEXPECTED = -2003283967;
    inline constexpr int32_t DWRITE_E_NOFONT = -2003283966;
    inline constexpr int32_t DWRITE_E_FILENOTFOUND = -2003283965;
    inline constexpr int32_t DWRITE_E_FILEACCESS = -2003283964;
    inline constexpr int32_t DWRITE_E_FONTCOLLECTIONOBSOLETE = -2003283963;
    inline constexpr int32_t DWRITE_E_ALREADYREGISTERED = -2003283962;
    inline constexpr int32_t DWRITE_E_CACHEFORMAT = -2003283961;
    inline constexpr int32_t DWRITE_E_CACHEVERSION = -2003283960;
    inline constexpr int32_t DWRITE_E_UNSUPPORTEDOPERATION = -2003283959;
    inline constexpr int32_t DWRITE_E_TEXTRENDERERINCOMPATIBLE = -2003283958;
    inline constexpr int32_t DWRITE_E_FLOWDIRECTIONCONFLICTS = -2003283957;
    inline constexpr int32_t DWRITE_E_NOCOLOR = -2003283956;
    inline constexpr int32_t DWRITE_E_REMOTEFONT = -2003283955;
    inline constexpr int32_t DWRITE_E_DOWNLOADCANCELLED = -2003283954;
    inline constexpr int32_t DWRITE_E_DOWNLOADFAILED = -2003283953;
    inline constexpr int32_t DWRITE_E_TOOMANYDOWNLOADS = -2003283952;
    inline constexpr int32_t WINCODEC_ERR_WRONGSTATE = -2003292412;
    inline constexpr int32_t WINCODEC_ERR_VALUEOUTOFRANGE = -2003292411;
    inline constexpr int32_t WINCODEC_ERR_UNKNOWNIMAGEFORMAT = -2003292409;
    inline constexpr int32_t WINCODEC_ERR_UNSUPPORTEDVERSION = -2003292405;
    inline constexpr int32_t WINCODEC_ERR_NOTINITIALIZED = -2003292404;
    inline constexpr int32_t WINCODEC_ERR_ALREADYLOCKED = -2003292403;
    inline constexpr int32_t WINCODEC_ERR_PROPERTYNOTFOUND = -2003292352;
    inline constexpr int32_t WINCODEC_ERR_PROPERTYNOTSUPPORTED = -2003292351;
    inline constexpr int32_t WINCODEC_ERR_PROPERTYSIZE = -2003292350;
    inline constexpr int32_t WINCODEC_ERR_CODECPRESENT = -2003292349;
    inline constexpr int32_t WINCODEC_ERR_CODECNOTHUMBNAIL = -2003292348;
    inline constexpr int32_t WINCODEC_ERR_PALETTEUNAVAILABLE = -2003292347;
    inline constexpr int32_t WINCODEC_ERR_CODECTOOMANYSCANLINES = -2003292346;
    inline constexpr int32_t WINCODEC_ERR_INTERNALERROR = -2003292344;
    inline constexpr int32_t WINCODEC_ERR_SOURCERECTDOESNOTMATCHDIMENSIONS = -2003292343;
    inline constexpr int32_t WINCODEC_ERR_COMPONENTNOTFOUND = -2003292336;
    inline constexpr int32_t WINCODEC_ERR_IMAGESIZEOUTOFRANGE = -2003292335;
    inline constexpr int32_t WINCODEC_ERR_TOOMUCHMETADATA = -2003292334;
    inline constexpr int32_t WINCODEC_ERR_BADIMAGE = -2003292320;
    inline constexpr int32_t WINCODEC_ERR_BADHEADER = -2003292319;
    inline constexpr int32_t WINCODEC_ERR_FRAMEMISSING = -2003292318;
    inline constexpr int32_t WINCODEC_ERR_BADMETADATAHEADER = -2003292317;
    inline constexpr int32_t WINCODEC_ERR_BADSTREAMDATA = -2003292304;
    inline constexpr int32_t WINCODEC_ERR_STREAMWRITE = -2003292303;
    inline constexpr int32_t WINCODEC_ERR_STREAMREAD = -2003292302;
    inline constexpr int32_t WINCODEC_ERR_STREAMNOTAVAILABLE = -2003292301;
    inline constexpr int32_t WINCODEC_ERR_UNSUPPORTEDPIXELFORMAT = -2003292288;
    inline constexpr int32_t WINCODEC_ERR_UNSUPPORTEDOPERATION = -2003292287;
    inline constexpr int32_t WINCODEC_ERR_INVALIDREGISTRATION = -2003292278;
    inline constexpr int32_t WINCODEC_ERR_COMPONENTINITIALIZEFAILURE = -2003292277;
    inline constexpr int32_t WINCODEC_ERR_INSUFFICIENTBUFFER = -2003292276;
    inline constexpr int32_t WINCODEC_ERR_DUPLICATEMETADATAPRESENT = -2003292275;
    inline constexpr int32_t WINCODEC_ERR_PROPERTYUNEXPECTEDTYPE = -2003292274;
    inline constexpr int32_t WINCODEC_ERR_UNEXPECTEDSIZE = -2003292273;
    inline constexpr int32_t WINCODEC_ERR_INVALIDQUERYREQUEST = -2003292272;
    inline constexpr int32_t WINCODEC_ERR_UNEXPECTEDMETADATATYPE = -2003292271;
    inline constexpr int32_t WINCODEC_ERR_REQUESTONLYVALIDATMETADATAROOT = -2003292270;
    inline constexpr int32_t WINCODEC_ERR_INVALIDQUERYCHARACTER = -2003292269;
    inline constexpr int32_t WINCODEC_ERR_WIN32ERROR = -2003292268;
    inline constexpr int32_t WINCODEC_ERR_INVALIDPROGRESSIVELEVEL = -2003292267;
    inline constexpr int32_t WINCODEC_ERR_INVALIDJPEGSCANINDEX = -2003292266;
    inline constexpr int32_t MILERR_OBJECTBUSY = -2003304447;
    inline constexpr int32_t MILERR_INSUFFICIENTBUFFER = -2003304446;
    inline constexpr int32_t MILERR_WIN32ERROR = -2003304445;
    inline constexpr int32_t MILERR_SCANNER_FAILED = -2003304444;
    inline constexpr int32_t MILERR_SCREENACCESSDENIED = -2003304443;
    inline constexpr int32_t MILERR_DISPLAYSTATEINVALID = -2003304442;
    inline constexpr int32_t MILERR_NONINVERTIBLEMATRIX = -2003304441;
    inline constexpr int32_t MILERR_ZEROVECTOR = -2003304440;
    inline constexpr int32_t MILERR_TERMINATED = -2003304439;
    inline constexpr int32_t MILERR_BADNUMBER = -2003304438;
    inline constexpr int32_t MILERR_INTERNALERROR = -2003304320;
    inline constexpr int32_t MILERR_DISPLAYFORMATNOTSUPPORTED = -2003304316;
    inline constexpr int32_t MILERR_INVALIDCALL = -2003304315;
    inline constexpr int32_t MILERR_ALREADYLOCKED = -2003304314;
    inline constexpr int32_t MILERR_NOTLOCKED = -2003304313;
    inline constexpr int32_t MILERR_DEVICECANNOTRENDERTEXT = -2003304312;
    inline constexpr int32_t MILERR_GLYPHBITMAPMISSED = -2003304311;
    inline constexpr int32_t MILERR_MALFORMEDGLYPHCACHE = -2003304310;
    inline constexpr int32_t MILERR_GENERIC_IGNORE = -2003304309;
    inline constexpr int32_t MILERR_MALFORMED_GUIDELINE_DATA = -2003304308;
    inline constexpr int32_t MILERR_NO_HARDWARE_DEVICE = -2003304307;
    inline constexpr int32_t MILERR_NEED_RECREATE_AND_PRESENT = -2003304306;
    inline constexpr int32_t MILERR_ALREADY_INITIALIZED = -2003304305;
    inline constexpr int32_t MILERR_MISMATCHED_SIZE = -2003304304;
    inline constexpr int32_t MILERR_NO_REDIRECTION_SURFACE_AVAILABLE = -2003304303;
    inline constexpr int32_t MILERR_REMOTING_NOT_SUPPORTED = -2003304302;
    inline constexpr int32_t MILERR_QUEUED_PRESENT_NOT_SUPPORTED = -2003304301;
    inline constexpr int32_t MILERR_NOT_QUEUING_PRESENTS = -2003304300;
    inline constexpr int32_t MILERR_NO_REDIRECTION_SURFACE_RETRY_LATER = -2003304299;
    inline constexpr int32_t MILERR_TOOMANYSHADERELEMNTS = -2003304298;
    inline constexpr int32_t MILERR_MROW_READLOCK_FAILED = -2003304297;
    inline constexpr int32_t MILERR_MROW_UPDATE_FAILED = -2003304296;
    inline constexpr int32_t MILERR_SHADER_COMPILE_FAILED = -2003304295;
    inline constexpr int32_t MILERR_MAX_TEXTURE_SIZE_EXCEEDED = -2003304294;
    inline constexpr int32_t MILERR_QPC_TIME_WENT_BACKWARD = -2003304293;
    inline constexpr int32_t MILERR_DXGI_ENUMERATION_OUT_OF_SYNC = -2003304291;
    inline constexpr int32_t MILERR_ADAPTER_NOT_FOUND = -2003304290;
    inline constexpr int32_t MILERR_COLORSPACE_NOT_SUPPORTED = -2003304289;
    inline constexpr int32_t MILERR_PREFILTER_NOT_SUPPORTED = -2003304288;
    inline constexpr int32_t MILERR_DISPLAYID_ACCESS_DENIED = -2003304287;
    inline constexpr int32_t UCEERR_INVALIDPACKETHEADER = -2003303424;
    inline constexpr int32_t UCEERR_UNKNOWNPACKET = -2003303423;
    inline constexpr int32_t UCEERR_ILLEGALPACKET = -2003303422;
    inline constexpr int32_t UCEERR_MALFORMEDPACKET = -2003303421;
    inline constexpr int32_t UCEERR_ILLEGALHANDLE = -2003303420;
    inline constexpr int32_t UCEERR_HANDLELOOKUPFAILED = -2003303419;
    inline constexpr int32_t UCEERR_RENDERTHREADFAILURE = -2003303418;
    inline constexpr int32_t UCEERR_CTXSTACKFRSTTARGETNULL = -2003303417;
    inline constexpr int32_t UCEERR_CONNECTIONIDLOOKUPFAILED = -2003303416;
    inline constexpr int32_t UCEERR_BLOCKSFULL = -2003303415;
    inline constexpr int32_t UCEERR_MEMORYFAILURE = -2003303414;
    inline constexpr int32_t UCEERR_PACKETRECORDOUTOFRANGE = -2003303413;
    inline constexpr int32_t UCEERR_ILLEGALRECORDTYPE = -2003303412;
    inline constexpr int32_t UCEERR_OUTOFHANDLES = -2003303411;
    inline constexpr int32_t UCEERR_UNCHANGABLE_UPDATE_ATTEMPTED = -2003303410;
    inline constexpr int32_t UCEERR_NO_MULTIPLE_WORKER_THREADS = -2003303409;
    inline constexpr int32_t UCEERR_REMOTINGNOTSUPPORTED = -2003303408;
    inline constexpr int32_t UCEERR_MISSINGENDCOMMAND = -2003303407;
    inline constexpr int32_t UCEERR_MISSINGBEGINCOMMAND = -2003303406;
    inline constexpr int32_t UCEERR_CHANNELSYNCTIMEDOUT = -2003303405;
    inline constexpr int32_t UCEERR_CHANNELSYNCABANDONED = -2003303404;
    inline constexpr int32_t UCEERR_UNSUPPORTEDTRANSPORTVERSION = -2003303403;
    inline constexpr int32_t UCEERR_TRANSPORTUNAVAILABLE = -2003303402;
    inline constexpr int32_t UCEERR_FEEDBACK_UNSUPPORTED = -2003303401;
    inline constexpr int32_t UCEERR_COMMANDTRANSPORTDENIED = -2003303400;
    inline constexpr int32_t UCEERR_GRAPHICSSTREAMUNAVAILABLE = -2003303399;
    inline constexpr int32_t UCEERR_GRAPHICSSTREAMALREADYOPEN = -2003303392;
    inline constexpr int32_t UCEERR_TRANSPORTDISCONNECTED = -2003303391;
    inline constexpr int32_t UCEERR_TRANSPORTOVERLOADED = -2003303390;
    inline constexpr int32_t UCEERR_PARTITION_ZOMBIED = -2003303389;
    inline constexpr int32_t MILAVERR_NOCLOCK = -2003303168;
    inline constexpr int32_t MILAVERR_NOMEDIATYPE = -2003303167;
    inline constexpr int32_t MILAVERR_NOVIDEOMIXER = -2003303166;
    inline constexpr int32_t MILAVERR_NOVIDEOPRESENTER = -2003303165;
    inline constexpr int32_t MILAVERR_NOREADYFRAMES = -2003303164;
    inline constexpr int32_t MILAVERR_MODULENOTLOADED = -2003303163;
    inline constexpr int32_t MILAVERR_WMPFACTORYNOTREGISTERED = -2003303162;
    inline constexpr int32_t MILAVERR_INVALIDWMPVERSION = -2003303161;
    inline constexpr int32_t MILAVERR_INSUFFICIENTVIDEORESOURCES = -2003303160;
    inline constexpr int32_t MILAVERR_VIDEOACCELERATIONNOTAVAILABLE = -2003303159;
    inline constexpr int32_t MILAVERR_REQUESTEDTEXTURETOOBIG = -2003303158;
    inline constexpr int32_t MILAVERR_SEEKFAILED = -2003303157;
    inline constexpr int32_t MILAVERR_UNEXPECTEDWMPFAILURE = -2003303156;
    inline constexpr int32_t MILAVERR_MEDIAPLAYERCLOSED = -2003303155;
    inline constexpr int32_t MILAVERR_UNKNOWNHARDWAREERROR = -2003303154;
    inline constexpr int32_t MILEFFECTSERR_UNKNOWNPROPERTY = -2003302898;
    inline constexpr int32_t MILEFFECTSERR_EFFECTNOTPARTOFGROUP = -2003302897;
    inline constexpr int32_t MILEFFECTSERR_NOINPUTSOURCEATTACHED = -2003302896;
    inline constexpr int32_t MILEFFECTSERR_CONNECTORNOTCONNECTED = -2003302895;
    inline constexpr int32_t MILEFFECTSERR_CONNECTORNOTASSOCIATEDWITHEFFECT = -2003302894;
    inline constexpr int32_t MILEFFECTSERR_RESERVED = -2003302893;
    inline constexpr int32_t MILEFFECTSERR_CYCLEDETECTED = -2003302892;
    inline constexpr int32_t MILEFFECTSERR_EFFECTINMORETHANONEGRAPH = -2003302891;
    inline constexpr int32_t MILEFFECTSERR_EFFECTALREADYINAGRAPH = -2003302890;
    inline constexpr int32_t MILEFFECTSERR_EFFECTHASNOCHILDREN = -2003302889;
    inline constexpr int32_t MILEFFECTSERR_ALREADYATTACHEDTOLISTENER = -2003302888;
    inline constexpr int32_t MILEFFECTSERR_NOTAFFINETRANSFORM = -2003302887;
    inline constexpr int32_t MILEFFECTSERR_EMPTYBOUNDS = -2003302886;
    inline constexpr int32_t MILEFFECTSERR_OUTPUTSIZETOOLARGE = -2003302885;
    inline constexpr int32_t DWMERR_STATE_TRANSITION_FAILED = -2003302656;
    inline constexpr int32_t DWMERR_THEME_FAILED = -2003302655;
    inline constexpr int32_t DWMERR_CATASTROPHIC_FAILURE = -2003302654;
    inline constexpr int32_t DCOMPOSITION_ERROR_WINDOW_ALREADY_COMPOSED = -2003302400;
    inline constexpr int32_t DCOMPOSITION_ERROR_SURFACE_BEING_RENDERED = -2003302399;
    inline constexpr int32_t DCOMPOSITION_ERROR_SURFACE_NOT_BEING_RENDERED = -2003302398;
    inline constexpr int32_t ONL_E_INVALID_AUTHENTICATION_TARGET = -2138701823;
    inline constexpr int32_t ONL_E_ACCESS_DENIED_BY_TOU = -2138701822;
    inline constexpr int32_t ONL_E_INVALID_APPLICATION = -2138701821;
    inline constexpr int32_t ONL_E_PASSWORD_UPDATE_REQUIRED = -2138701820;
    inline constexpr int32_t ONL_E_ACCOUNT_UPDATE_REQUIRED = -2138701819;
    inline constexpr int32_t ONL_E_FORCESIGNIN = -2138701818;
    inline constexpr int32_t ONL_E_ACCOUNT_LOCKED = -2138701817;
    inline constexpr int32_t ONL_E_PARENTAL_CONSENT_REQUIRED = -2138701816;
    inline constexpr int32_t ONL_E_EMAIL_VERIFICATION_REQUIRED = -2138701815;
    inline constexpr int32_t ONL_E_ACCOUNT_SUSPENDED_COMPROIMISE = -2138701814;
    inline constexpr int32_t ONL_E_ACCOUNT_SUSPENDED_ABUSE = -2138701813;
    inline constexpr int32_t ONL_E_ACTION_REQUIRED = -2138701812;
    inline constexpr int32_t ONL_CONNECTION_COUNT_LIMIT = -2138701811;
    inline constexpr int32_t ONL_E_CONNECTED_ACCOUNT_CAN_NOT_SIGNOUT = -2138701810;
    inline constexpr int32_t ONL_E_USER_AUTHENTICATION_REQUIRED = -2138701809;
    inline constexpr int32_t ONL_E_REQUEST_THROTTLED = -2138701808;
    inline constexpr int32_t FA_E_MAX_PERSISTED_ITEMS_REACHED = -2144927200;
    inline constexpr int32_t FA_E_HOMEGROUP_NOT_AVAILABLE = -2144927198;
    inline constexpr int32_t E_MONITOR_RESOLUTION_TOO_LOW = -2144927152;
    inline constexpr int32_t E_ELEVATED_ACTIVATION_NOT_SUPPORTED = -2144927151;
    inline constexpr int32_t E_UAC_DISABLED = -2144927150;
    inline constexpr int32_t E_FULL_ADMIN_NOT_SUPPORTED = -2144927149;
    inline constexpr int32_t E_APPLICATION_NOT_REGISTERED = -2144927148;
    inline constexpr int32_t E_MULTIPLE_EXTENSIONS_FOR_APPLICATION = -2144927147;
    inline constexpr int32_t E_MULTIPLE_PACKAGES_FOR_FAMILY = -2144927146;
    inline constexpr int32_t E_APPLICATION_MANAGER_NOT_RUNNING = -2144927145;
    inline constexpr int32_t S_STORE_LAUNCHED_FOR_REMEDIATION = 2556504;
    inline constexpr int32_t S_APPLICATION_ACTIVATION_ERROR_HANDLED_BY_DIALOG = 2556505;
    inline constexpr int32_t E_APPLICATION_ACTIVATION_TIMED_OUT = -2144927142;
    inline constexpr int32_t E_APPLICATION_ACTIVATION_EXEC_FAILURE = -2144927141;
    inline constexpr int32_t E_APPLICATION_TEMPORARY_LICENSE_ERROR = -2144927140;
    inline constexpr int32_t E_APPLICATION_TRIAL_LICENSE_EXPIRED = -2144927139;
    inline constexpr int32_t E_SKYDRIVE_ROOT_TARGET_FILE_SYSTEM_NOT_SUPPORTED = -2144927136;
    inline constexpr int32_t E_SKYDRIVE_ROOT_TARGET_OVERLAP = -2144927135;
    inline constexpr int32_t E_SKYDRIVE_ROOT_TARGET_CANNOT_INDEX = -2144927134;
    inline constexpr int32_t E_SKYDRIVE_FILE_NOT_UPLOADED = -2144927133;
    inline constexpr int32_t E_SKYDRIVE_UPDATE_AVAILABILITY_FAIL = -2144927132;
    inline constexpr int32_t E_SKYDRIVE_ROOT_TARGET_VOLUME_ROOT_NOT_SUPPORTED = -2144927131;
    inline constexpr int32_t E_SYNCENGINE_FILE_SIZE_OVER_LIMIT = -2013089791;
    inline constexpr int32_t E_SYNCENGINE_FILE_SIZE_EXCEEDS_REMAINING_QUOTA = -2013089790;
    inline constexpr int32_t E_SYNCENGINE_UNSUPPORTED_FILE_NAME = -2013089789;
    inline constexpr int32_t E_SYNCENGINE_FOLDER_ITEM_COUNT_LIMIT_EXCEEDED = -2013089788;
    inline constexpr int32_t E_SYNCENGINE_FILE_SYNC_PARTNER_ERROR = -2013089787;
    inline constexpr int32_t E_SYNCENGINE_SYNC_PAUSED_BY_SERVICE = -2013089786;
    inline constexpr int32_t E_SYNCENGINE_FILE_IDENTIFIER_UNKNOWN = -2013085694;
    inline constexpr int32_t E_SYNCENGINE_SERVICE_AUTHENTICATION_FAILED = -2013085693;
    inline constexpr int32_t E_SYNCENGINE_UNKNOWN_SERVICE_ERROR = -2013085692;
    inline constexpr int32_t E_SYNCENGINE_SERVICE_RETURNED_UNEXPECTED_SIZE = -2013085691;
    inline constexpr int32_t E_SYNCENGINE_REQUEST_BLOCKED_BY_SERVICE = -2013085690;
    inline constexpr int32_t E_SYNCENGINE_REQUEST_BLOCKED_DUE_TO_CLIENT_ERROR = -2013085689;
    inline constexpr int32_t E_SYNCENGINE_FOLDER_INACCESSIBLE = -2013081599;
    inline constexpr int32_t E_SYNCENGINE_UNSUPPORTED_FOLDER_NAME = -2013081598;
    inline constexpr int32_t E_SYNCENGINE_UNSUPPORTED_MARKET = -2013081597;
    inline constexpr int32_t E_SYNCENGINE_PATH_LENGTH_LIMIT_EXCEEDED = -2013081596;
    inline constexpr int32_t E_SYNCENGINE_REMOTE_PATH_LENGTH_LIMIT_EXCEEDED = -2013081595;
    inline constexpr int32_t E_SYNCENGINE_CLIENT_UPDATE_NEEDED = -2013081594;
    inline constexpr int32_t E_SYNCENGINE_PROXY_AUTHENTICATION_REQUIRED = -2013081593;
    inline constexpr int32_t E_SYNCENGINE_STORAGE_SERVICE_PROVISIONING_FAILED = -2013081592;
    inline constexpr int32_t E_SYNCENGINE_UNSUPPORTED_REPARSE_POINT = -2013081591;
    inline constexpr int32_t E_SYNCENGINE_STORAGE_SERVICE_BLOCKED = -2013081590;
    inline constexpr int32_t E_SYNCENGINE_FOLDER_IN_REDIRECTION = -2013081589;
    inline constexpr int32_t EAS_E_POLICY_NOT_MANAGED_BY_OS = -2141913087;
    inline constexpr int32_t EAS_E_POLICY_COMPLIANT_WITH_ACTIONS = -2141913086;
    inline constexpr int32_t EAS_E_REQUESTED_POLICY_NOT_ENFORCEABLE = -2141913085;
    inline constexpr int32_t EAS_E_CURRENT_USER_HAS_BLANK_PASSWORD = -2141913084;
    inline constexpr int32_t EAS_E_REQUESTED_POLICY_PASSWORD_EXPIRATION_INCOMPATIBLE = -2141913083;
    inline constexpr int32_t EAS_E_USER_CANNOT_CHANGE_PASSWORD = -2141913082;
    inline constexpr int32_t EAS_E_ADMINS_HAVE_BLANK_PASSWORD = -2141913081;
    inline constexpr int32_t EAS_E_ADMINS_CANNOT_CHANGE_PASSWORD = -2141913080;
    inline constexpr int32_t EAS_E_LOCAL_CONTROLLED_USERS_CANNOT_CHANGE_PASSWORD = -2141913079;
    inline constexpr int32_t EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CONNECTED_ADMINS = -2141913078;
    inline constexpr int32_t EAS_E_CONNECTED_ADMINS_NEED_TO_CHANGE_PASSWORD = -2141913077;
    inline constexpr int32_t EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CURRENT_CONNECTED_USER = -2141913076;
    inline constexpr int32_t EAS_E_CURRENT_CONNECTED_USER_NEED_TO_CHANGE_PASSWORD = -2141913075;
    inline constexpr int32_t WEB_E_UNSUPPORTED_FORMAT = -2089484287;
    inline constexpr int32_t WEB_E_INVALID_XML = -2089484286;
    inline constexpr int32_t WEB_E_MISSING_REQUIRED_ELEMENT = -2089484285;
    inline constexpr int32_t WEB_E_MISSING_REQUIRED_ATTRIBUTE = -2089484284;
    inline constexpr int32_t WEB_E_UNEXPECTED_CONTENT = -2089484283;
    inline constexpr int32_t WEB_E_RESOURCE_TOO_LARGE = -2089484282;
    inline constexpr int32_t WEB_E_INVALID_JSON_STRING = -2089484281;
    inline constexpr int32_t WEB_E_INVALID_JSON_NUMBER = -2089484280;
    inline constexpr int32_t WEB_E_JSON_VALUE_NOT_FOUND = -2089484279;
    inline constexpr int32_t HTTP_E_STATUS_UNEXPECTED = -2145845247;
    inline constexpr int32_t HTTP_E_STATUS_UNEXPECTED_REDIRECTION = -2145845245;
    inline constexpr int32_t HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR = -2145845244;
    inline constexpr int32_t HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR = -2145845243;
    inline constexpr int32_t HTTP_E_STATUS_AMBIGUOUS = -2145844948;
    inline constexpr int32_t HTTP_E_STATUS_MOVED = -2145844947;
    inline constexpr int32_t HTTP_E_STATUS_REDIRECT = -2145844946;
    inline constexpr int32_t HTTP_E_STATUS_REDIRECT_METHOD = -2145844945;
    inline constexpr int32_t HTTP_E_STATUS_NOT_MODIFIED = -2145844944;
    inline constexpr int32_t HTTP_E_STATUS_USE_PROXY = -2145844943;
    inline constexpr int32_t HTTP_E_STATUS_REDIRECT_KEEP_VERB = -2145844941;
    inline constexpr int32_t HTTP_E_STATUS_BAD_REQUEST = -2145844848;
    inline constexpr int32_t HTTP_E_STATUS_DENIED = -2145844847;
    inline constexpr int32_t HTTP_E_STATUS_PAYMENT_REQ = -2145844846;
    inline constexpr int32_t HTTP_E_STATUS_FORBIDDEN = -2145844845;
    inline constexpr int32_t HTTP_E_STATUS_NOT_FOUND = -2145844844;
    inline constexpr int32_t HTTP_E_STATUS_BAD_METHOD = -2145844843;
    inline constexpr int32_t HTTP_E_STATUS_NONE_ACCEPTABLE = -2145844842;
    inline constexpr int32_t HTTP_E_STATUS_PROXY_AUTH_REQ = -2145844841;
    inline constexpr int32_t HTTP_E_STATUS_REQUEST_TIMEOUT = -2145844840;
    inline constexpr int32_t HTTP_E_STATUS_CONFLICT = -2145844839;
    inline constexpr int32_t HTTP_E_STATUS_GONE = -2145844838;
    inline constexpr int32_t HTTP_E_STATUS_LENGTH_REQUIRED = -2145844837;
    inline constexpr int32_t HTTP_E_STATUS_PRECOND_FAILED = -2145844836;
    inline constexpr int32_t HTTP_E_STATUS_REQUEST_TOO_LARGE = -2145844835;
    inline constexpr int32_t HTTP_E_STATUS_URI_TOO_LONG = -2145844834;
    inline constexpr int32_t HTTP_E_STATUS_UNSUPPORTED_MEDIA = -2145844833;
    inline constexpr int32_t HTTP_E_STATUS_RANGE_NOT_SATISFIABLE = -2145844832;
    inline constexpr int32_t HTTP_E_STATUS_EXPECTATION_FAILED = -2145844831;
    inline constexpr int32_t HTTP_E_STATUS_SERVER_ERROR = -2145844748;
    inline constexpr int32_t HTTP_E_STATUS_NOT_SUPPORTED = -2145844747;
    inline constexpr int32_t HTTP_E_STATUS_BAD_GATEWAY = -2145844746;
    inline constexpr int32_t HTTP_E_STATUS_SERVICE_UNAVAIL = -2145844745;
    inline constexpr int32_t HTTP_E_STATUS_GATEWAY_TIMEOUT = -2145844744;
    inline constexpr int32_t HTTP_E_STATUS_VERSION_NOT_SUP = -2145844743;
    inline constexpr int32_t E_INVALID_PROTOCOL_OPERATION = -2089418751;
    inline constexpr int32_t E_INVALID_PROTOCOL_FORMAT = -2089418750;
    inline constexpr int32_t E_PROTOCOL_EXTENSIONS_NOT_SUPPORTED = -2089418749;
    inline constexpr int32_t E_SUBPROTOCOL_NOT_SUPPORTED = -2089418748;
    inline constexpr int32_t E_PROTOCOL_VERSION_NOT_SUPPORTED = -2089418747;
    inline constexpr int32_t INPUT_E_OUT_OF_ORDER = -2143289344;
    inline constexpr int32_t INPUT_E_REENTRANCY = -2143289343;
    inline constexpr int32_t INPUT_E_MULTIMODAL = -2143289342;
    inline constexpr int32_t INPUT_E_PACKET = -2143289341;
    inline constexpr int32_t INPUT_E_FRAME = -2143289340;
    inline constexpr int32_t INPUT_E_HISTORY = -2143289339;
    inline constexpr int32_t INPUT_E_DEVICE_INFO = -2143289338;
    inline constexpr int32_t INPUT_E_TRANSFORM = -2143289337;
    inline constexpr int32_t INPUT_E_DEVICE_PROPERTY = -2143289336;
    inline constexpr int32_t INET_E_INVALID_URL = -2146697214;
    inline constexpr int32_t INET_E_NO_SESSION = -2146697213;
    inline constexpr int32_t INET_E_CANNOT_CONNECT = -2146697212;
    inline constexpr int32_t INET_E_RESOURCE_NOT_FOUND = -2146697211;
    inline constexpr int32_t INET_E_OBJECT_NOT_FOUND = -2146697210;
    inline constexpr int32_t INET_E_DATA_NOT_AVAILABLE = -2146697209;
    inline constexpr int32_t INET_E_DOWNLOAD_FAILURE = -2146697208;
    inline constexpr int32_t INET_E_AUTHENTICATION_REQUIRED = -2146697207;
    inline constexpr int32_t INET_E_NO_VALID_MEDIA = -2146697206;
    inline constexpr int32_t INET_E_CONNECTION_TIMEOUT = -2146697205;
    inline constexpr int32_t INET_E_INVALID_REQUEST = -2146697204;
    inline constexpr int32_t INET_E_UNKNOWN_PROTOCOL = -2146697203;
    inline constexpr int32_t INET_E_SECURITY_PROBLEM = -2146697202;
    inline constexpr int32_t INET_E_CANNOT_LOAD_DATA = -2146697201;
    inline constexpr int32_t INET_E_CANNOT_INSTANTIATE_OBJECT = -2146697200;
    inline constexpr int32_t INET_E_INVALID_CERTIFICATE = -2146697191;
    inline constexpr int32_t INET_E_REDIRECT_FAILED = -2146697196;
    inline constexpr int32_t INET_E_REDIRECT_TO_DIR = -2146697195;
    inline constexpr int32_t ERROR_DBG_CREATE_PROCESS_FAILURE_LOCKDOWN = -2135949311;
    inline constexpr int32_t ERROR_DBG_ATTACH_PROCESS_FAILURE_LOCKDOWN = -2135949310;
    inline constexpr int32_t ERROR_DBG_CONNECT_SERVER_FAILURE_LOCKDOWN = -2135949309;
    inline constexpr int32_t ERROR_DBG_START_SERVER_FAILURE_LOCKDOWN = -2135949308;
    inline constexpr int32_t ERROR_IO_PREEMPTED = -1996423167;
    inline constexpr int32_t JSCRIPT_E_CANTEXECUTE = -1996357631;
    inline constexpr int32_t WEP_E_NOT_PROVISIONED_ON_ALL_VOLUMES = -2013200383;
    inline constexpr int32_t WEP_E_FIXED_DATA_NOT_SUPPORTED = -2013200382;
    inline constexpr int32_t WEP_E_HARDWARE_NOT_COMPLIANT = -2013200381;
    inline constexpr int32_t WEP_E_LOCK_NOT_CONFIGURED = -2013200380;
    inline constexpr int32_t WEP_E_PROTECTION_SUSPENDED = -2013200379;
    inline constexpr int32_t WEP_E_NO_LICENSE = -2013200378;
    inline constexpr int32_t WEP_E_OS_NOT_PROTECTED = -2013200377;
    inline constexpr int32_t WEP_E_UNEXPECTED_FAIL = -2013200376;
    inline constexpr int32_t WEP_E_BUFFER_TOO_LARGE = -2013200375;
    inline constexpr int32_t ERROR_SVHDX_ERROR_STORED = -1067712512;
    inline constexpr int32_t ERROR_SVHDX_ERROR_NOT_AVAILABLE = -1067647232;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_AVAILABLE = -1067647231;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_CAPACITY_DATA_CHANGED = -1067647230;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_PREEMPTED = -1067647229;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_RELEASED = -1067647228;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_REGISTRATIONS_PREEMPTED = -1067647227;
    inline constexpr int32_t ERROR_SVHDX_UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED = -1067647226;
    inline constexpr int32_t ERROR_SVHDX_RESERVATION_CONFLICT = -1067647225;
    inline constexpr int32_t ERROR_SVHDX_WRONG_FILE_TYPE = -1067647224;
    inline constexpr int32_t ERROR_SVHDX_VERSION_MISMATCH = -1067647223;
    inline constexpr int32_t ERROR_VHD_SHARED = -1067647222;
    inline constexpr int32_t ERROR_SVHDX_NO_INITIATOR = -1067647221;
    inline constexpr int32_t ERROR_VHDSET_BACKING_STORAGE_NOT_FOUND = -1067647220;
    inline constexpr int32_t ERROR_SMB_NO_PREAUTH_INTEGRITY_HASH_OVERLAP = -1067646976;
    inline constexpr int32_t ERROR_SMB_BAD_CLUSTER_DIALECT = -1067646975;
    inline constexpr int32_t WININET_E_OUT_OF_HANDLES = -2147012895;
    inline constexpr int32_t WININET_E_TIMEOUT = -2147012894;
    inline constexpr int32_t WININET_E_EXTENDED_ERROR = -2147012893;
    inline constexpr int32_t WININET_E_INTERNAL_ERROR = -2147012892;
    inline constexpr int32_t WININET_E_INVALID_URL = -2147012891;
    inline constexpr int32_t WININET_E_UNRECOGNIZED_SCHEME = -2147012890;
    inline constexpr int32_t WININET_E_NAME_NOT_RESOLVED = -2147012889;
    inline constexpr int32_t WININET_E_PROTOCOL_NOT_FOUND = -2147012888;
    inline constexpr int32_t WININET_E_INVALID_OPTION = -2147012887;
    inline constexpr int32_t WININET_E_BAD_OPTION_LENGTH = -2147012886;
    inline constexpr int32_t WININET_E_OPTION_NOT_SETTABLE = -2147012885;
    inline constexpr int32_t WININET_E_SHUTDOWN = -2147012884;
    inline constexpr int32_t WININET_E_INCORRECT_USER_NAME = -2147012883;
    inline constexpr int32_t WININET_E_INCORRECT_PASSWORD = -2147012882;
    inline constexpr int32_t WININET_E_LOGIN_FAILURE = -2147012881;
    inline constexpr int32_t WININET_E_INVALID_OPERATION = -2147012880;
    inline constexpr int32_t WININET_E_OPERATION_CANCELLED = -2147012879;
    inline constexpr int32_t WININET_E_INCORRECT_HANDLE_TYPE = -2147012878;
    inline constexpr int32_t WININET_E_INCORRECT_HANDLE_STATE = -2147012877;
    inline constexpr int32_t WININET_E_NOT_PROXY_REQUEST = -2147012876;
    inline constexpr int32_t WININET_E_REGISTRY_VALUE_NOT_FOUND = -2147012875;
    inline constexpr int32_t WININET_E_BAD_REGISTRY_PARAMETER = -2147012874;
    inline constexpr int32_t WININET_E_NO_DIRECT_ACCESS = -2147012873;
    inline constexpr int32_t WININET_E_NO_CONTEXT = -2147012872;
    inline constexpr int32_t WININET_E_NO_CALLBACK = -2147012871;
    inline constexpr int32_t WININET_E_REQUEST_PENDING = -2147012870;
    inline constexpr int32_t WININET_E_INCORRECT_FORMAT = -2147012869;
    inline constexpr int32_t WININET_E_ITEM_NOT_FOUND = -2147012868;
    inline constexpr int32_t WININET_E_CANNOT_CONNECT = -2147012867;
    inline constexpr int32_t WININET_E_CONNECTION_ABORTED = -2147012866;
    inline constexpr int32_t WININET_E_CONNECTION_RESET = -2147012865;
    inline constexpr int32_t WININET_E_FORCE_RETRY = -2147012864;
    inline constexpr int32_t WININET_E_INVALID_PROXY_REQUEST = -2147012863;
    inline constexpr int32_t WININET_E_NEED_UI = -2147012862;
    inline constexpr int32_t WININET_E_HANDLE_EXISTS = -2147012860;
    inline constexpr int32_t WININET_E_SEC_CERT_DATE_INVALID = -2147012859;
    inline constexpr int32_t WININET_E_SEC_CERT_CN_INVALID = -2147012858;
    inline constexpr int32_t WININET_E_HTTP_TO_HTTPS_ON_REDIR = -2147012857;
    inline constexpr int32_t WININET_E_HTTPS_TO_HTTP_ON_REDIR = -2147012856;
    inline constexpr int32_t WININET_E_MIXED_SECURITY = -2147012855;
    inline constexpr int32_t WININET_E_CHG_POST_IS_NON_SECURE = -2147012854;
    inline constexpr int32_t WININET_E_POST_IS_NON_SECURE = -2147012853;
    inline constexpr int32_t WININET_E_CLIENT_AUTH_CERT_NEEDED = -2147012852;
    inline constexpr int32_t WININET_E_INVALID_CA = -2147012851;
    inline constexpr int32_t WININET_E_CLIENT_AUTH_NOT_SETUP = -2147012850;
    inline constexpr int32_t WININET_E_ASYNC_THREAD_FAILED = -2147012849;
    inline constexpr int32_t WININET_E_REDIRECT_SCHEME_CHANGE = -2147012848;
    inline constexpr int32_t WININET_E_DIALOG_PENDING = -2147012847;
    inline constexpr int32_t WININET_E_RETRY_DIALOG = -2147012846;
    inline constexpr int32_t WININET_E_NO_NEW_CONTAINERS = -2147012845;
    inline constexpr int32_t WININET_E_HTTPS_HTTP_SUBMIT_REDIR = -2147012844;
    inline constexpr int32_t WININET_E_SEC_CERT_ERRORS = -2147012841;
    inline constexpr int32_t WININET_E_SEC_CERT_REV_FAILED = -2147012839;
    inline constexpr int32_t WININET_E_HEADER_NOT_FOUND = -2147012746;
    inline constexpr int32_t WININET_E_DOWNLEVEL_SERVER = -2147012745;
    inline constexpr int32_t WININET_E_INVALID_SERVER_RESPONSE = -2147012744;
    inline constexpr int32_t WININET_E_INVALID_HEADER = -2147012743;
    inline constexpr int32_t WININET_E_INVALID_QUERY_REQUEST = -2147012742;
    inline constexpr int32_t WININET_E_HEADER_ALREADY_EXISTS = -2147012741;
    inline constexpr int32_t WININET_E_REDIRECT_FAILED = -2147012740;
    inline constexpr int32_t WININET_E_SECURITY_CHANNEL_ERROR = -2147012739;
    inline constexpr int32_t WININET_E_UNABLE_TO_CACHE_FILE = -2147012738;
    inline constexpr int32_t WININET_E_TCPIP_NOT_INSTALLED = -2147012737;
    inline constexpr int32_t WININET_E_DISCONNECTED = -2147012733;
    inline constexpr int32_t WININET_E_SERVER_UNREACHABLE = -2147012732;
    inline constexpr int32_t WININET_E_PROXY_SERVER_UNREACHABLE = -2147012731;
    inline constexpr int32_t WININET_E_BAD_AUTO_PROXY_SCRIPT = -2147012730;
    inline constexpr int32_t WININET_E_UNABLE_TO_DOWNLOAD_SCRIPT = -2147012729;
    inline constexpr int32_t WININET_E_SEC_INVALID_CERT = -2147012727;
    inline constexpr int32_t WININET_E_SEC_CERT_REVOKED = -2147012726;
    inline constexpr int32_t WININET_E_FAILED_DUETOSECURITYCHECK = -2147012725;
    inline constexpr int32_t WININET_E_NOT_INITIALIZED = -2147012724;
    inline constexpr int32_t WININET_E_LOGIN_FAILURE_DISPLAY_ENTITY_BODY = -2147012722;
    inline constexpr int32_t WININET_E_DECODING_FAILED = -2147012721;
    inline constexpr int32_t WININET_E_NOT_REDIRECTED = -2147012736;
    inline constexpr int32_t WININET_E_COOKIE_NEEDS_CONFIRMATION = -2147012735;
    inline constexpr int32_t WININET_E_COOKIE_DECLINED = -2147012734;
    inline constexpr int32_t WININET_E_REDIRECT_NEEDS_CONFIRMATION = -2147012728;
    inline constexpr int32_t SQLITE_E_ERROR = -2018574335;
    inline constexpr int32_t SQLITE_E_INTERNAL = -2018574334;
    inline constexpr int32_t SQLITE_E_PERM = -2018574333;
    inline constexpr int32_t SQLITE_E_ABORT = -2018574332;
    inline constexpr int32_t SQLITE_E_BUSY = -2018574331;
    inline constexpr int32_t SQLITE_E_LOCKED = -2018574330;
    inline constexpr int32_t SQLITE_E_NOMEM = -2018574329;
    inline constexpr int32_t SQLITE_E_READONLY = -2018574328;
    inline constexpr int32_t SQLITE_E_INTERRUPT = -2018574327;
    inline constexpr int32_t SQLITE_E_IOERR = -2018574326;
    inline constexpr int32_t SQLITE_E_CORRUPT = -2018574325;
    inline constexpr int32_t SQLITE_E_NOTFOUND = -2018574324;
    inline constexpr int32_t SQLITE_E_FULL = -2018574323;
    inline constexpr int32_t SQLITE_E_CANTOPEN = -2018574322;
    inline constexpr int32_t SQLITE_E_PROTOCOL = -2018574321;
    inline constexpr int32_t SQLITE_E_EMPTY = -2018574320;
    inline constexpr int32_t SQLITE_E_SCHEMA = -2018574319;
    inline constexpr int32_t SQLITE_E_TOOBIG = -2018574318;
    inline constexpr int32_t SQLITE_E_CONSTRAINT = -2018574317;
    inline constexpr int32_t SQLITE_E_MISMATCH = -2018574316;
    inline constexpr int32_t SQLITE_E_MISUSE = -2018574315;
    inline constexpr int32_t SQLITE_E_NOLFS = -2018574314;
    inline constexpr int32_t SQLITE_E_AUTH = -2018574313;
    inline constexpr int32_t SQLITE_E_FORMAT = -2018574312;
    inline constexpr int32_t SQLITE_E_RANGE = -2018574311;
    inline constexpr int32_t SQLITE_E_NOTADB = -2018574310;
    inline constexpr int32_t SQLITE_E_NOTICE = -2018574309;
    inline constexpr int32_t SQLITE_E_WARNING = -2018574308;
    inline constexpr int32_t SQLITE_E_ROW = -2018574236;
    inline constexpr int32_t SQLITE_E_DONE = -2018574235;
    inline constexpr int32_t SQLITE_E_IOERR_READ = -2018574070;
    inline constexpr int32_t SQLITE_E_IOERR_SHORT_READ = -2018573814;
    inline constexpr int32_t SQLITE_E_IOERR_WRITE = -2018573558;
    inline constexpr int32_t SQLITE_E_IOERR_FSYNC = -2018573302;
    inline constexpr int32_t SQLITE_E_IOERR_DIR_FSYNC = -2018573046;
    inline constexpr int32_t SQLITE_E_IOERR_TRUNCATE = -2018572790;
    inline constexpr int32_t SQLITE_E_IOERR_FSTAT = -2018572534;
    inline constexpr int32_t SQLITE_E_IOERR_UNLOCK = -2018572278;
    inline constexpr int32_t SQLITE_E_IOERR_RDLOCK = -2018572022;
    inline constexpr int32_t SQLITE_E_IOERR_DELETE = -2018571766;
    inline constexpr int32_t SQLITE_E_IOERR_BLOCKED = -2018571510;
    inline constexpr int32_t SQLITE_E_IOERR_NOMEM = -2018571254;
    inline constexpr int32_t SQLITE_E_IOERR_ACCESS = -2018570998;
    inline constexpr int32_t SQLITE_E_IOERR_CHECKRESERVEDLOCK = -2018570742;
    inline constexpr int32_t SQLITE_E_IOERR_LOCK = -2018570486;
    inline constexpr int32_t SQLITE_E_IOERR_CLOSE = -2018570230;
    inline constexpr int32_t SQLITE_E_IOERR_DIR_CLOSE = -2018569974;
    inline constexpr int32_t SQLITE_E_IOERR_SHMOPEN = -2018569718;
    inline constexpr int32_t SQLITE_E_IOERR_SHMSIZE = -2018569462;
    inline constexpr int32_t SQLITE_E_IOERR_SHMLOCK = -2018569206;
    inline constexpr int32_t SQLITE_E_IOERR_SHMMAP = -2018568950;
    inline constexpr int32_t SQLITE_E_IOERR_SEEK = -2018568694;
    inline constexpr int32_t SQLITE_E_IOERR_DELETE_NOENT = -2018568438;
    inline constexpr int32_t SQLITE_E_IOERR_MMAP = -2018568182;
    inline constexpr int32_t SQLITE_E_IOERR_GETTEMPPATH = -2018567926;
    inline constexpr int32_t SQLITE_E_IOERR_CONVPATH = -2018567670;
    inline constexpr int32_t SQLITE_E_IOERR_VNODE = -2018567678;
    inline constexpr int32_t SQLITE_E_IOERR_AUTH = -2018567677;
    inline constexpr int32_t SQLITE_E_LOCKED_SHAREDCACHE = -2018574074;
    inline constexpr int32_t SQLITE_E_BUSY_RECOVERY = -2018574075;
    inline constexpr int32_t SQLITE_E_BUSY_SNAPSHOT = -2018573819;
    inline constexpr int32_t SQLITE_E_CANTOPEN_NOTEMPDIR = -2018574066;
    inline constexpr int32_t SQLITE_E_CANTOPEN_ISDIR = -2018573810;
    inline constexpr int32_t SQLITE_E_CANTOPEN_FULLPATH = -2018573554;
    inline constexpr int32_t SQLITE_E_CANTOPEN_CONVPATH = -2018573298;
    inline constexpr int32_t SQLITE_E_CORRUPT_VTAB = -2018574069;
    inline constexpr int32_t SQLITE_E_READONLY_RECOVERY = -2018574072;
    inline constexpr int32_t SQLITE_E_READONLY_CANTLOCK = -2018573816;
    inline constexpr int32_t SQLITE_E_READONLY_ROLLBACK = -2018573560;
    inline constexpr int32_t SQLITE_E_READONLY_DBMOVED = -2018573304;
    inline constexpr int32_t SQLITE_E_ABORT_ROLLBACK = -2018573820;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_CHECK = -2018574061;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_COMMITHOOK = -2018573805;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_FOREIGNKEY = -2018573549;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_FUNCTION = -2018573293;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_NOTNULL = -2018573037;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_PRIMARYKEY = -2018572781;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_TRIGGER = -2018572525;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_UNIQUE = -2018572269;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_VTAB = -2018572013;
    inline constexpr int32_t SQLITE_E_CONSTRAINT_ROWID = -2018571757;
    inline constexpr int32_t SQLITE_E_NOTICE_RECOVER_WAL = -2018574053;
    inline constexpr int32_t SQLITE_E_NOTICE_RECOVER_ROLLBACK = -2018573797;
    inline constexpr int32_t SQLITE_E_WARNING_AUTOINDEX = -2018574052;
    inline constexpr int32_t UTC_E_TOGGLE_TRACE_STARTED = -2017128447;
    inline constexpr int32_t UTC_E_ALTERNATIVE_TRACE_CANNOT_PREEMPT = -2017128446;
    inline constexpr int32_t UTC_E_AOT_NOT_RUNNING = -2017128445;
    inline constexpr int32_t UTC_E_SCRIPT_TYPE_INVALID = -2017128444;
    inline constexpr int32_t UTC_E_SCENARIODEF_NOT_FOUND = -2017128443;
    inline constexpr int32_t UTC_E_TRACEPROFILE_NOT_FOUND = -2017128442;
    inline constexpr int32_t UTC_E_FORWARDER_ALREADY_ENABLED = -2017128441;
    inline constexpr int32_t UTC_E_FORWARDER_ALREADY_DISABLED = -2017128440;
    inline constexpr int32_t UTC_E_EVENTLOG_ENTRY_MALFORMED = -2017128439;
    inline constexpr int32_t UTC_E_DIAGRULES_SCHEMAVERSION_MISMATCH = -2017128438;
    inline constexpr int32_t UTC_E_SCRIPT_TERMINATED = -2017128437;
    inline constexpr int32_t UTC_E_INVALID_CUSTOM_FILTER = -2017128436;
    inline constexpr int32_t UTC_E_TRACE_NOT_RUNNING = -2017128435;
    inline constexpr int32_t UTC_E_REESCALATED_TOO_QUICKLY = -2017128434;
    inline constexpr int32_t UTC_E_ESCALATION_ALREADY_RUNNING = -2017128433;
    inline constexpr int32_t UTC_E_PERFTRACK_ALREADY_TRACING = -2017128432;
    inline constexpr int32_t UTC_E_REACHED_MAX_ESCALATIONS = -2017128431;
    inline constexpr int32_t UTC_E_FORWARDER_PRODUCER_MISMATCH = -2017128430;
    inline constexpr int32_t UTC_E_INTENTIONAL_SCRIPT_FAILURE = -2017128429;
    inline constexpr int32_t UTC_E_SQM_INIT_FAILED = -2017128428;
    inline constexpr int32_t UTC_E_NO_WER_LOGGER_SUPPORTED = -2017128427;
    inline constexpr int32_t UTC_E_TRACERS_DONT_EXIST = -2017128426;
    inline constexpr int32_t UTC_E_WINRT_INIT_FAILED = -2017128425;
    inline constexpr int32_t UTC_E_SCENARIODEF_SCHEMAVERSION_MISMATCH = -2017128424;
    inline constexpr int32_t UTC_E_INVALID_FILTER = -2017128423;
    inline constexpr int32_t UTC_E_EXE_TERMINATED = -2017128422;
    inline constexpr int32_t UTC_E_ESCALATION_NOT_AUTHORIZED = -2017128421;
    inline constexpr int32_t UTC_E_SETUP_NOT_AUTHORIZED = -2017128420;
    inline constexpr int32_t UTC_E_CHILD_PROCESS_FAILED = -2017128419;
    inline constexpr int32_t UTC_E_COMMAND_LINE_NOT_AUTHORIZED = -2017128418;
    inline constexpr int32_t UTC_E_CANNOT_LOAD_SCENARIO_EDITOR_XML = -2017128417;
    inline constexpr int32_t UTC_E_ESCALATION_TIMED_OUT = -2017128416;
    inline constexpr int32_t UTC_E_SETUP_TIMED_OUT = -2017128415;
    inline constexpr int32_t UTC_E_TRIGGER_MISMATCH = -2017128414;
    inline constexpr int32_t UTC_E_TRIGGER_NOT_FOUND = -2017128413;
    inline constexpr int32_t UTC_E_SIF_NOT_SUPPORTED = -2017128412;
    inline constexpr int32_t UTC_E_DELAY_TERMINATED = -2017128411;
    inline constexpr int32_t UTC_E_DEVICE_TICKET_ERROR = -2017128410;
    inline constexpr int32_t UTC_E_TRACE_BUFFER_LIMIT_EXCEEDED = -2017128409;
    inline constexpr int32_t UTC_E_API_RESULT_UNAVAILABLE = -2017128408;
    inline constexpr int32_t UTC_E_RPC_TIMEOUT = -2017128407;
    inline constexpr int32_t UTC_E_RPC_WAIT_FAILED = -2017128406;
    inline constexpr int32_t UTC_E_API_BUSY = -2017128405;
    inline constexpr int32_t UTC_E_TRACE_MIN_DURATION_REQUIREMENT_NOT_MET = -2017128404;
    inline constexpr int32_t UTC_E_EXCLUSIVITY_NOT_AVAILABLE = -2017128403;
    inline constexpr int32_t UTC_E_GETFILE_FILE_PATH_NOT_APPROVED = -2017128402;
    inline constexpr int32_t UTC_E_ESCALATION_DIRECTORY_ALREADY_EXISTS = -2017128401;
    inline constexpr int32_t UTC_E_TIME_TRIGGER_ON_START_INVALID = -2017128400;
    inline constexpr int32_t UTC_E_TIME_TRIGGER_ONLY_VALID_ON_SINGLE_TRANSITION = -2017128399;
    inline constexpr int32_t UTC_E_TIME_TRIGGER_INVALID_TIME_RANGE = -2017128398;
    inline constexpr int32_t UTC_E_MULTIPLE_TIME_TRIGGER_ON_SINGLE_STATE = -2017128397;
    inline constexpr int32_t UTC_E_BINARY_MISSING = -2017128396;
    inline constexpr int32_t UTC_E_FAILED_TO_RESOLVE_CONTAINER_ID = -2017128394;
    inline constexpr int32_t UTC_E_UNABLE_TO_RESOLVE_SESSION = -2017128393;
    inline constexpr int32_t UTC_E_THROTTLED = -2017128392;
    inline constexpr int32_t UTC_E_UNAPPROVED_SCRIPT = -2017128391;
    inline constexpr int32_t UTC_E_SCRIPT_MISSING = -2017128390;
    inline constexpr int32_t UTC_E_SCENARIO_THROTTLED = -2017128389;
    inline constexpr int32_t UTC_E_API_NOT_SUPPORTED = -2017128388;
    inline constexpr int32_t UTC_E_GETFILE_EXTERNAL_PATH_NOT_APPROVED = -2017128387;
    inline constexpr int32_t UTC_E_TRY_GET_SCENARIO_TIMEOUT_EXCEEDED = -2017128386;
    inline constexpr int32_t UTC_E_CERT_REV_FAILED = -2017128385;
    inline constexpr int32_t UTC_E_FAILED_TO_START_NDISCAP = -2017128384;
    inline constexpr int32_t UTC_E_KERNELDUMP_LIMIT_REACHED = -2017128383;
    inline constexpr int32_t UTC_E_MISSING_AGGREGATE_EVENT_TAG = -2017128382;
    inline constexpr int32_t UTC_E_INVALID_AGGREGATION_STRUCT = -2017128381;
    inline constexpr int32_t UTC_E_ACTION_NOT_SUPPORTED_IN_DESTINATION = -2017128380;
    inline constexpr int32_t UTC_E_FILTER_MISSING_ATTRIBUTE = -2017128379;
    inline constexpr int32_t UTC_E_FILTER_INVALID_TYPE = -2017128378;
    inline constexpr int32_t UTC_E_FILTER_VARIABLE_NOT_FOUND = -2017128377;
    inline constexpr int32_t UTC_E_FILTER_FUNCTION_RESTRICTED = -2017128376;
    inline constexpr int32_t UTC_E_FILTER_VERSION_MISMATCH = -2017128375;
    inline constexpr int32_t UTC_E_FILTER_INVALID_FUNCTION = -2017128368;
    inline constexpr int32_t UTC_E_FILTER_INVALID_FUNCTION_PARAMS = -2017128367;
    inline constexpr int32_t UTC_E_FILTER_INVALID_COMMAND = -2017128366;
    inline constexpr int32_t UTC_E_FILTER_ILLEGAL_EVAL = -2017128365;
    inline constexpr int32_t UTC_E_TTTRACER_RETURNED_ERROR = -2017128364;
    inline constexpr int32_t UTC_E_AGENT_DIAGNOSTICS_TOO_LARGE = -2017128363;
    inline constexpr int32_t UTC_E_FAILED_TO_RECEIVE_AGENT_DIAGNOSTICS = -2017128362;
    inline constexpr int32_t UTC_E_SCENARIO_HAS_NO_ACTIONS = -2017128361;
    inline constexpr int32_t UTC_E_TTTRACER_STORAGE_FULL = -2017128360;
    inline constexpr int32_t UTC_E_INSUFFICIENT_SPACE_TO_START_TRACE = -2017128359;
    inline constexpr int32_t UTC_E_ESCALATION_CANCELLED_AT_SHUTDOWN = -2017128358;
    inline constexpr int32_t UTC_E_GETFILEINFOACTION_FILE_NOT_APPROVED = -2017128357;
    inline constexpr int32_t UTC_E_SETREGKEYACTION_TYPE_NOT_APPROVED = -2017128356;
    inline constexpr int32_t WINML_ERR_INVALID_DEVICE = -2003828735;
    inline constexpr int32_t WINML_ERR_INVALID_BINDING = -2003828734;
    inline constexpr int32_t WINML_ERR_VALUE_NOTFOUND = -2003828733;
    inline constexpr int32_t WINML_ERR_SIZE_MISMATCH = -2003828732;
    inline constexpr int32_t ERROR_QUIC_HANDSHAKE_FAILURE = -2143223808;
    inline constexpr int32_t ERROR_QUIC_VER_NEG_FAILURE = -2143223807;
    inline constexpr int32_t DS_S_SUCCESS = 0;
    inline constexpr int32_t DNS_ERROR_RCODE_NO_ERROR = 0;
    inline constexpr int32_t DNS_ERROR_RCODE_LAST = 9018;
    inline constexpr int32_t DNS_STATUS_PACKET_UNSECURE = 9505;
    inline constexpr int32_t DNS_ERROR_NO_MEMORY = 14;
    inline constexpr int32_t DNS_ERROR_INVALID_NAME = 123;
    inline constexpr int32_t DNS_ERROR_INVALID_DATA = 13;
    inline constexpr int32_t SEC_E_NO_SPM = -2146893052;
    inline constexpr int32_t SEC_E_NOT_SUPPORTED = -2146893054;
    inline constexpr int32_t SCARD_S_SUCCESS = 0;
    inline constexpr int32_t PWM_IOCTL_ID_CONTROLLER_GET_INFO = 0;
    inline constexpr int32_t PWM_IOCTL_ID_CONTROLLER_GET_ACTUAL_PERIOD = 1;
    inline constexpr int32_t PWM_IOCTL_ID_CONTROLLER_SET_DESIRED_PERIOD = 2;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 100;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 101;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_GET_POLARITY = 102;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_SET_POLARITY = 103;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_START = 104;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_STOP = 105;
    inline constexpr int32_t PWM_IOCTL_ID_PIN_IS_STARTED = 106;
#pragma endregion methods

}
#endif
