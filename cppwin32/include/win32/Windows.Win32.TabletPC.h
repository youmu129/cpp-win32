// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_TabletPC_H
#define WIN32_Windows_Win32_TabletPC_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.TabletPC.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::TabletPC
{
#pragma region methods
    inline int32_t CreateRecognizer(::win32::guid* pCLSID, Windows::Win32::TabletPC::HRECOGNIZER__** phrec)
    {
        auto win32_impl_result = WIN32_IMPL_CreateRecognizer(pCLSID, phrec);
        return win32_impl_result;
    }
    inline int32_t DestroyRecognizer(Windows::Win32::TabletPC::HRECOGNIZER__* hrec)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyRecognizer(hrec);
        return win32_impl_result;
    }
    inline int32_t GetRecoAttributes(Windows::Win32::TabletPC::HRECOGNIZER__* hrec, Windows::Win32::TabletPC::RECO_ATTRS* pRecoAttrs)
    {
        auto win32_impl_result = WIN32_IMPL_GetRecoAttributes(hrec, pRecoAttrs);
        return win32_impl_result;
    }
    inline int32_t CreateContext(Windows::Win32::TabletPC::HRECOGNIZER__* hrec, Windows::Win32::TabletPC::HRECOCONTEXT__** phrc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateContext(hrec, phrc);
        return win32_impl_result;
    }
    inline int32_t DestroyContext(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyContext(hrc);
        return win32_impl_result;
    }
    inline int32_t GetResultPropertyList(Windows::Win32::TabletPC::HRECOGNIZER__* hrec, uint32_t* pPropertyCount, ::win32::guid* pPropertyGuid)
    {
        auto win32_impl_result = WIN32_IMPL_GetResultPropertyList(hrec, pPropertyCount, pPropertyGuid);
        return win32_impl_result;
    }
    inline int32_t GetUnicodeRanges(Windows::Win32::TabletPC::HRECOGNIZER__* hrec, uint32_t* pcRanges, Windows::Win32::TabletPC::CHARACTER_RANGE* pcr)
    {
        auto win32_impl_result = WIN32_IMPL_GetUnicodeRanges(hrec, pcRanges, pcr);
        return win32_impl_result;
    }
    inline int32_t AddStroke(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, Windows::Win32::TabletPC::PACKET_DESCRIPTION* pPacketDesc, uint32_t cbPacket, uint8_t* pPacket, Windows::Win32::Gdi::XFORM* pXForm)
    {
        auto win32_impl_result = WIN32_IMPL_AddStroke(hrc, pPacketDesc, cbPacket, pPacket, pXForm);
        return win32_impl_result;
    }
    inline int32_t GetBestResultString(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t* pcSize, uint16_t* pwcBestResult)
    {
        auto win32_impl_result = WIN32_IMPL_GetBestResultString(hrc, pcSize, pwcBestResult);
        return win32_impl_result;
    }
    inline int32_t SetGuide(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, Windows::Win32::TabletPC::RECO_GUIDE* pGuide, uint32_t iIndex)
    {
        auto win32_impl_result = WIN32_IMPL_SetGuide(hrc, pGuide, iIndex);
        return win32_impl_result;
    }
    inline int32_t AdviseInkChange(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, Windows::Win32::SystemServices::BOOL bNewStroke)
    {
        auto win32_impl_result = WIN32_IMPL_AdviseInkChange(hrc, bNewStroke);
        return win32_impl_result;
    }
    inline int32_t EndInkInput(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc)
    {
        auto win32_impl_result = WIN32_IMPL_EndInkInput(hrc);
        return win32_impl_result;
    }
    inline int32_t Process(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, int32_t* pbPartialProcessing)
    {
        auto win32_impl_result = WIN32_IMPL_Process(hrc, pbPartialProcessing);
        return win32_impl_result;
    }
    inline int32_t SetFactoid(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t cwcFactoid, uint16_t* pwcFactoid)
    {
        auto win32_impl_result = WIN32_IMPL_SetFactoid(hrc, cwcFactoid, pwcFactoid);
        return win32_impl_result;
    }
    inline int32_t SetFlags(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetFlags(hrc, dwFlags);
        return win32_impl_result;
    }
    inline int32_t GetLatticePtr(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, Windows::Win32::TabletPC::RECO_LATTICE** ppLattice)
    {
        auto win32_impl_result = WIN32_IMPL_GetLatticePtr(hrc, ppLattice);
        return win32_impl_result;
    }
    inline int32_t SetTextContext(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t cwcBefore, uint16_t* pwcBefore, uint32_t cwcAfter, uint16_t* pwcAfter)
    {
        auto win32_impl_result = WIN32_IMPL_SetTextContext(hrc, cwcBefore, pwcBefore, cwcAfter, pwcAfter);
        return win32_impl_result;
    }
    inline int32_t SetEnabledUnicodeRanges(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t cRanges, Windows::Win32::TabletPC::CHARACTER_RANGE* pcr)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnabledUnicodeRanges(hrc, cRanges, pcr);
        return win32_impl_result;
    }
    inline int32_t IsStringSupported(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t wcString, uint16_t* pwcString)
    {
        auto win32_impl_result = WIN32_IMPL_IsStringSupported(hrc, wcString, pwcString);
        return win32_impl_result;
    }
    inline int32_t SetWordList(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, Windows::Win32::TabletPC::HRECOWORDLIST__* hwl)
    {
        auto win32_impl_result = WIN32_IMPL_SetWordList(hrc, hwl);
        return win32_impl_result;
    }
    inline int32_t GetRightSeparator(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t* pcSize, uint16_t* pwcRightSeparator)
    {
        auto win32_impl_result = WIN32_IMPL_GetRightSeparator(hrc, pcSize, pwcRightSeparator);
        return win32_impl_result;
    }
    inline int32_t GetLeftSeparator(Windows::Win32::TabletPC::HRECOCONTEXT__* hrc, uint32_t* pcSize, uint16_t* pwcLeftSeparator)
    {
        auto win32_impl_result = WIN32_IMPL_GetLeftSeparator(hrc, pcSize, pwcLeftSeparator);
        return win32_impl_result;
    }
    inline int32_t DestroyWordList(Windows::Win32::TabletPC::HRECOWORDLIST__* hwl)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyWordList(hwl);
        return win32_impl_result;
    }
    inline int32_t AddWordsToWordList(Windows::Win32::TabletPC::HRECOWORDLIST__* hwl, uint16_t* pwcWords)
    {
        auto win32_impl_result = WIN32_IMPL_AddWordsToWordList(hwl, pwcWords);
        return win32_impl_result;
    }
    inline int32_t MakeWordList(Windows::Win32::TabletPC::HRECOGNIZER__* hrec, uint16_t* pBuffer, Windows::Win32::TabletPC::HRECOWORDLIST__** phwl)
    {
        auto win32_impl_result = WIN32_IMPL_MakeWordList(hrec, pBuffer, phwl);
        return win32_impl_result;
    }
    inline int32_t GetAllRecognizers(::win32::guid** recognizerClsids, uint32_t* count)
    {
        auto win32_impl_result = WIN32_IMPL_GetAllRecognizers(recognizerClsids, count);
        return win32_impl_result;
    }
    inline int32_t LoadCachedAttributes(::win32::guid clsid, Windows::Win32::TabletPC::RECO_ATTRS* pRecoAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_LoadCachedAttributes(clsid, pRecoAttributes);
        return win32_impl_result;
    }

    inline constexpr wchar_t const* MICROSOFT_URL_EXPERIENCE_PROPERTY = L"Microsoft TIP URL Experience";
    inline constexpr wchar_t const* MICROSOFT_TIP_NO_INSERT_BUTTON_PROPERTY = L"Microsoft TIP No Insert Option";
    inline constexpr wchar_t const* MICROSOFT_TIP_COMBOBOXLIST_PROPERTY = L"Microsoft TIP ComboBox List Window Identifier";
    inline constexpr wchar_t const* MICROSOFT_TIP_OPENING_MSG = L"TabletInputPanelOpening";
    inline constexpr int32_t InkMinTransparencyValue = 0;
    inline constexpr int32_t InkMaxTransparencyValue = 255;
    inline constexpr int32_t InkCollectorClipInkToMargin = 0;
    inline constexpr int32_t InkCollectorDefaultMargin = -2147483648;
#pragma endregion methods

}
#endif
