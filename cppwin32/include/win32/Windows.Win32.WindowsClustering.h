// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsClustering_H
#define WIN32_Windows_Win32_WindowsClustering_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.WindowsClustering.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::WindowsClustering
{
#pragma region methods
    inline uint32_t GetNodeClusterState(uint16_t* lpszNodeName, uint32_t* pdwClusterState)
    {
        auto win32_impl_result = WIN32_IMPL_GetNodeClusterState(lpszNodeName, pdwClusterState);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* OpenCluster(uint16_t* lpszClusterName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenCluster(lpszClusterName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* OpenClusterEx(uint16_t* lpszClusterName, uint32_t DesiredAccess, uint32_t* GrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterEx(lpszClusterName, DesiredAccess, GrantedAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseCluster(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster)
    {
        auto win32_impl_result = WIN32_IMPL_CloseCluster(hCluster);
        return win32_impl_result;
    }
    inline uint32_t SetClusterName(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNewClusterName)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterName(hCluster, lpszNewClusterName);
        return win32_impl_result;
    }
    inline uint32_t GetClusterInformation(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszClusterName, uint32_t* lpcchClusterName, Windows::Win32::WindowsClustering::CLUSTERVERSIONINFO* lpClusterInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterInformation(hCluster, lpszClusterName, lpcchClusterName, lpClusterInfo);
        return win32_impl_result;
    }
    inline uint32_t GetClusterQuorumResource(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceName, uint32_t* lpcchResourceName, uint16_t* lpszDeviceName, uint32_t* lpcchDeviceName, uint32_t* lpdwMaxQuorumLogSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterQuorumResource(hCluster, lpszResourceName, lpcchResourceName, lpszDeviceName, lpcchDeviceName, lpdwMaxQuorumLogSize);
        return win32_impl_result;
    }
    inline uint32_t SetClusterQuorumResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpszDeviceName, uint32_t dwMaxQuoLogSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterQuorumResource(hResource, lpszDeviceName, dwMaxQuoLogSize);
        return win32_impl_result;
    }
    inline uint32_t BackupClusterDatabase(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszPathName)
    {
        auto win32_impl_result = WIN32_IMPL_BackupClusterDatabase(hCluster, lpszPathName);
        return win32_impl_result;
    }
    inline uint32_t RestoreClusterDatabase(uint16_t* lpszPathName, Windows::Win32::SystemServices::BOOL bForce, uint16_t* lpszQuorumDriveLetter)
    {
        auto win32_impl_result = WIN32_IMPL_RestoreClusterDatabase(lpszPathName, bForce, lpszQuorumDriveLetter);
        return win32_impl_result;
    }
    inline uint32_t SetClusterNetworkPriorityOrder(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t NetworkCount, Windows::Win32::WindowsClustering::_HNETWORK** NetworkList)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterNetworkPriorityOrder(hCluster, NetworkCount, NetworkList);
        return win32_impl_result;
    }
    inline uint32_t SetClusterServiceAccountPassword(uint16_t* lpszClusterName, uint16_t* lpszNewPassword, uint32_t dwFlags, Windows::Win32::WindowsClustering::CLUSTER_SET_PASSWORD_STATUS* lpReturnStatusBuffer, uint32_t* lpcbReturnStatusBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterServiceAccountPassword(lpszClusterName, lpszNewPassword, dwFlags, lpReturnStatusBuffer, lpcbReturnStatusBufferSize);
        return win32_impl_result;
    }
    inline uint32_t ClusterControl(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterControl(hCluster, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterUpgradeFunctionalLevel(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::BOOL perform, Windows::Win32::WindowsClustering::PCLUSTER_UPGRADE_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterUpgradeFunctionalLevel(hCluster, perform, pfnProgressCallback, pvCallbackArg);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCHANGE* CreateClusterNotifyPortV2(Windows::Win32::WindowsClustering::_HCHANGE* hChange, Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::NOTIFY_FILTER_AND_TYPE* Filters, uint32_t dwFilterCount, size_t dwNotifyKey)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterNotifyPortV2(hChange, hCluster, Filters, dwFilterCount, dwNotifyKey);
        return win32_impl_result;
    }
    inline uint32_t RegisterClusterNotifyV2(Windows::Win32::WindowsClustering::_HCHANGE* hChange, Windows::Win32::WindowsClustering::NOTIFY_FILTER_AND_TYPE Filter, Windows::Win32::SystemServices::HANDLE hObject, size_t dwNotifyKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterClusterNotifyV2(hChange, Filter, hObject, dwNotifyKey);
        return win32_impl_result;
    }
    inline uint32_t GetNotifyEventHandle(Windows::Win32::WindowsClustering::_HCHANGE* hChange, intptr_t* lphTargetEvent)
    {
        auto win32_impl_result = WIN32_IMPL_GetNotifyEventHandle(hChange, lphTargetEvent);
        return win32_impl_result;
    }
    inline uint32_t GetClusterNotifyV2(Windows::Win32::WindowsClustering::_HCHANGE* hChange, size_t* lpdwNotifyKey, Windows::Win32::WindowsClustering::NOTIFY_FILTER_AND_TYPE* pFilterAndType, uint8_t* buffer, uint32_t* lpbBufferSize, uint16_t* lpszObjectId, uint32_t* lpcchObjectId, uint16_t* lpszParentId, uint32_t* lpcchParentId, uint16_t* lpszName, uint32_t* lpcchName, uint16_t* lpszType, uint32_t* lpcchType, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNotifyV2(hChange, lpdwNotifyKey, pFilterAndType, buffer, lpbBufferSize, lpszObjectId, lpcchObjectId, lpszParentId, lpcchParentId, lpszName, lpcchName, lpszType, lpcchType, dwMilliseconds);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCHANGE* CreateClusterNotifyPort(Windows::Win32::WindowsClustering::_HCHANGE* hChange, Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t dwFilter, size_t dwNotifyKey)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterNotifyPort(hChange, hCluster, dwFilter, dwNotifyKey);
        return win32_impl_result;
    }
    inline uint32_t RegisterClusterNotify(Windows::Win32::WindowsClustering::_HCHANGE* hChange, uint32_t dwFilterType, Windows::Win32::SystemServices::HANDLE hObject, size_t dwNotifyKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterClusterNotify(hChange, dwFilterType, hObject, dwNotifyKey);
        return win32_impl_result;
    }
    inline uint32_t GetClusterNotify(Windows::Win32::WindowsClustering::_HCHANGE* hChange, size_t* lpdwNotifyKey, uint32_t* lpdwFilterType, uint16_t* lpszName, uint32_t* lpcchName, uint32_t dwMilliseconds)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNotify(hChange, lpdwNotifyKey, lpdwFilterType, lpszName, lpcchName, dwMilliseconds);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterNotifyPort(Windows::Win32::WindowsClustering::_HCHANGE* hChange)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterNotifyPort(hChange);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSENUM* ClusterOpenEnum(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterOpenEnum(hCluster, dwType);
        return win32_impl_result;
    }
    inline uint32_t ClusterGetEnumCount(Windows::Win32::WindowsClustering::_HCLUSENUM* hEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGetEnumCount(hEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterEnum(Windows::Win32::WindowsClustering::_HCLUSENUM* hEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterEnum(hEnum, dwIndex, lpdwType, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterCloseEnum(Windows::Win32::WindowsClustering::_HCLUSENUM* hEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterCloseEnum(hEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSENUMEX* ClusterOpenEnumEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t dwType, void* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterOpenEnumEx(hCluster, dwType, pOptions);
        return win32_impl_result;
    }
    inline uint32_t ClusterGetEnumCountEx(Windows::Win32::WindowsClustering::_HCLUSENUMEX* hClusterEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGetEnumCountEx(hClusterEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterEnumEx(Windows::Win32::WindowsClustering::_HCLUSENUMEX* hClusterEnum, uint32_t dwIndex, Windows::Win32::WindowsClustering::CLUSTER_ENUM_ITEM* pItem, uint32_t* cbItem)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterEnumEx(hClusterEnum, dwIndex, pItem, cbItem);
        return win32_impl_result;
    }
    inline uint32_t ClusterCloseEnumEx(Windows::Win32::WindowsClustering::_HCLUSENUMEX* hClusterEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterCloseEnumEx(hClusterEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPSET* CreateClusterGroupSet(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* groupSetName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterGroupSet(hCluster, groupSetName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPSET* OpenClusterGroupSet(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszGroupSetName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterGroupSet(hCluster, lpszGroupSetName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterGroupSet(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterGroupSet(hGroupSet);
        return win32_impl_result;
    }
    inline uint32_t DeleteClusterGroupSet(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteClusterGroupSet(hGroupSet);
        return win32_impl_result;
    }
    inline uint32_t ClusterAddGroupToGroupSet(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet, Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterAddGroupToGroupSet(hGroupSet, hGroup);
        return win32_impl_result;
    }
    inline uint32_t ClusterAddGroupToGroupSetWithDomains(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet, Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t faultDomain, uint32_t updateDomain)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterAddGroupToGroupSetWithDomains(hGroupSet, hGroup, faultDomain, updateDomain);
        return win32_impl_result;
    }
    inline uint32_t ClusterRemoveGroupFromGroupSet(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRemoveGroupFromGroupSet(hGroup);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupSetControl(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t cbInBufferSize, void* lpOutBuffer, uint32_t cbOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupSetControl(hGroupSet, hHostNode, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t AddClusterGroupDependency(Windows::Win32::WindowsClustering::_HGROUP* hDependentGroup, Windows::Win32::WindowsClustering::_HGROUP* hProviderGroup)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterGroupDependency(hDependentGroup, hProviderGroup);
        return win32_impl_result;
    }
    inline uint32_t SetGroupDependencyExpression(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint16_t* lpszDependencyExpression)
    {
        auto win32_impl_result = WIN32_IMPL_SetGroupDependencyExpression(hGroup, lpszDependencyExpression);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterGroupDependency(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HGROUP* hDependsOn)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterGroupDependency(hGroup, hDependsOn);
        return win32_impl_result;
    }
    inline uint32_t AddClusterGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUPSET* hDependentGroupSet, Windows::Win32::WindowsClustering::_HGROUPSET* hProviderGroupSet)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterGroupSetDependency(hDependentGroupSet, hProviderGroupSet);
        return win32_impl_result;
    }
    inline uint32_t SetClusterGroupSetDependencyExpression(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet, uint16_t* lpszDependencyExprssion)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterGroupSetDependencyExpression(hGroupSet, lpszDependencyExprssion);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUPSET* hGroupSet, Windows::Win32::WindowsClustering::_HGROUPSET* hDependsOn)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterGroupSetDependency(hGroupSet, hDependsOn);
        return win32_impl_result;
    }
    inline uint32_t AddClusterGroupToGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUP* hDependentGroup, Windows::Win32::WindowsClustering::_HGROUPSET* hProviderGroupSet)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterGroupToGroupSetDependency(hDependentGroup, hProviderGroupSet);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterGroupToGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HGROUPSET* hDependsOn)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterGroupToGroupSetDependency(hGroup, hDependsOn);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPSETENUM* ClusterGroupSetOpenEnum(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupSetOpenEnum(hCluster);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupSetGetEnumCount(Windows::Win32::WindowsClustering::_HGROUPSETENUM* hGroupSetEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupSetGetEnumCount(hGroupSetEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupSetEnum(Windows::Win32::WindowsClustering::_HGROUPSETENUM* hGroupSetEnum, uint32_t dwIndex, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupSetEnum(hGroupSetEnum, dwIndex, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupSetCloseEnum(Windows::Win32::WindowsClustering::_HGROUPSETENUM* hGroupSetEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupSetCloseEnum(hGroupSetEnum);
        return win32_impl_result;
    }
    inline uint32_t AddCrossClusterGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUPSET* hDependentGroupSet, uint16_t* lpRemoteClusterName, uint16_t* lpRemoteGroupSetName)
    {
        auto win32_impl_result = WIN32_IMPL_AddCrossClusterGroupSetDependency(hDependentGroupSet, lpRemoteClusterName, lpRemoteGroupSetName);
        return win32_impl_result;
    }
    inline uint32_t RemoveCrossClusterGroupSetDependency(Windows::Win32::WindowsClustering::_HGROUPSET* hDependentGroupSet, uint16_t* lpRemoteClusterName, uint16_t* lpRemoteGroupSetName)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveCrossClusterGroupSetDependency(hDependentGroupSet, lpRemoteClusterName, lpRemoteGroupSetName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPSET* CreateClusterAvailabilitySet(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpAvailabilitySetName, Windows::Win32::WindowsClustering::CLUSTER_AVAILABILITY_SET_CONFIG* pAvailabilitySetConfig)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterAvailabilitySet(hCluster, lpAvailabilitySetName, pAvailabilitySetConfig);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeReplacement(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeNameCurrent, uint16_t* lpszNodeNameNew)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeReplacement(hCluster, lpszNodeNameCurrent, lpszNodeNameNew);
        return win32_impl_result;
    }
    inline uint32_t ClusterCreateAffinityRule(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* ruleName, Windows::Win32::WindowsClustering::CLUS_AFFINITY_RULE_TYPE ruleType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterCreateAffinityRule(hCluster, ruleName, ruleType);
        return win32_impl_result;
    }
    inline uint32_t ClusterRemoveAffinityRule(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* ruleName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRemoveAffinityRule(hCluster, ruleName);
        return win32_impl_result;
    }
    inline uint32_t ClusterAddGroupToAffinityRule(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* ruleName, Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterAddGroupToAffinityRule(hCluster, ruleName, hGroup);
        return win32_impl_result;
    }
    inline uint32_t ClusterRemoveGroupFromAffinityRule(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* ruleName, Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRemoveGroupFromAffinityRule(hCluster, ruleName, hGroup);
        return win32_impl_result;
    }
    inline uint32_t ClusterAffinityRuleControl(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* affinityRuleName, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t cbInBufferSize, void* lpOutBuffer, uint32_t cbOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterAffinityRuleControl(hCluster, affinityRuleName, hHostNode, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODE* OpenClusterNode(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNode(hCluster, lpszNodeName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODE* OpenClusterNodeEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName, uint32_t dwDesiredAccess, uint32_t* lpdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNodeEx(hCluster, lpszNodeName, dwDesiredAccess, lpdwGrantedAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODE* OpenClusterNodeById(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t nodeId)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNodeById(hCluster, nodeId);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterNode(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterNode(hNode);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_NODE_STATE GetClusterNodeState(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNodeState(hNode);
        return win32_impl_result;
    }
    inline uint32_t GetClusterNodeId(Windows::Win32::WindowsClustering::_HNODE* hNode, uint16_t* lpszNodeId, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNodeId(hNode, lpszNodeId, lpcchName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* GetClusterFromNode(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterFromNode(hNode);
        return win32_impl_result;
    }
    inline uint32_t PauseClusterNode(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_PauseClusterNode(hNode);
        return win32_impl_result;
    }
    inline uint32_t ResumeClusterNode(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_ResumeClusterNode(hNode);
        return win32_impl_result;
    }
    inline uint32_t EvictClusterNode(Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_EvictClusterNode(hNode);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETINTERFACEENUM* ClusterNetInterfaceOpenEnum(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName, uint16_t* lpszNetworkName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetInterfaceOpenEnum(hCluster, lpszNodeName, lpszNetworkName);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetInterfaceEnum(Windows::Win32::WindowsClustering::_HNETINTERFACEENUM* hNetInterfaceEnum, uint32_t dwIndex, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetInterfaceEnum(hNetInterfaceEnum, dwIndex, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetInterfaceCloseEnum(Windows::Win32::WindowsClustering::_HNETINTERFACEENUM* hNetInterfaceEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetInterfaceCloseEnum(hNetInterfaceEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODEENUM* ClusterNodeOpenEnum(Windows::Win32::WindowsClustering::_HNODE* hNode, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeOpenEnum(hNode, dwType);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODEENUMEX* ClusterNodeOpenEnumEx(Windows::Win32::WindowsClustering::_HNODE* hNode, uint32_t dwType, void* pOptions)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeOpenEnumEx(hNode, dwType, pOptions);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeGetEnumCountEx(Windows::Win32::WindowsClustering::_HNODEENUMEX* hNodeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeGetEnumCountEx(hNodeEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeEnumEx(Windows::Win32::WindowsClustering::_HNODEENUMEX* hNodeEnum, uint32_t dwIndex, Windows::Win32::WindowsClustering::CLUSTER_ENUM_ITEM* pItem, uint32_t* cbItem)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeEnumEx(hNodeEnum, dwIndex, pItem, cbItem);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeCloseEnumEx(Windows::Win32::WindowsClustering::_HNODEENUMEX* hNodeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeCloseEnumEx(hNodeEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeGetEnumCount(Windows::Win32::WindowsClustering::_HNODEENUM* hNodeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeGetEnumCount(hNodeEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeCloseEnum(Windows::Win32::WindowsClustering::_HNODEENUM* hNodeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeCloseEnum(hNodeEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeEnum(Windows::Win32::WindowsClustering::_HNODEENUM* hNodeEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeEnum(hNodeEnum, dwIndex, lpdwType, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t EvictClusterNodeEx(Windows::Win32::WindowsClustering::_HNODE* hNode, uint32_t dwTimeOut, int32_t* phrCleanupStatus)
    {
        auto win32_impl_result = WIN32_IMPL_EvictClusterNodeEx(hNode, dwTimeOut, phrCleanupStatus);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterResourceTypeKey(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszTypeName, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterResourceTypeKey(hCluster, lpszTypeName, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUP* CreateClusterGroup(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszGroupName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterGroup(hCluster, lpszGroupName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUP* OpenClusterGroup(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszGroupName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterGroup(hCluster, lpszGroupName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUP* OpenClusterGroupEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszGroupName, uint32_t dwDesiredAccess, uint32_t* lpdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterGroupEx(hCluster, lpszGroupName, dwDesiredAccess, lpdwGrantedAccess);
        return win32_impl_result;
    }
    inline uint32_t PauseClusterNodeEx(Windows::Win32::WindowsClustering::_HNODE* hNode, Windows::Win32::SystemServices::BOOL bDrainNode, uint32_t dwPauseFlags, Windows::Win32::WindowsClustering::_HNODE* hNodeDrainTarget)
    {
        auto win32_impl_result = WIN32_IMPL_PauseClusterNodeEx(hNode, bDrainNode, dwPauseFlags, hNodeDrainTarget);
        return win32_impl_result;
    }
    inline uint32_t ResumeClusterNodeEx(Windows::Win32::WindowsClustering::_HNODE* hNode, Windows::Win32::WindowsClustering::CLUSTER_NODE_RESUME_FAILBACK_TYPE eResumeFailbackType, uint32_t dwResumeFlagsReserved)
    {
        auto win32_impl_result = WIN32_IMPL_ResumeClusterNodeEx(hNode, eResumeFailbackType, dwResumeFlagsReserved);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUP* CreateClusterGroupEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszGroupName, Windows::Win32::WindowsClustering::CLUSTER_CREATE_GROUP_INFO* pGroupInfo)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterGroupEx(hCluster, lpszGroupName, pGroupInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPENUMEX* ClusterGroupOpenEnumEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszProperties, uint32_t cbProperties, uint16_t* lpszRoProperties, uint32_t cbRoProperties, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupOpenEnumEx(hCluster, lpszProperties, cbProperties, lpszRoProperties, cbRoProperties, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupGetEnumCountEx(Windows::Win32::WindowsClustering::_HGROUPENUMEX* hGroupEnumEx)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupGetEnumCountEx(hGroupEnumEx);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupEnumEx(Windows::Win32::WindowsClustering::_HGROUPENUMEX* hGroupEnumEx, uint32_t dwIndex, Windows::Win32::WindowsClustering::CLUSTER_GROUP_ENUM_ITEM* pItem, uint32_t* cbItem)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupEnumEx(hGroupEnumEx, dwIndex, pItem, cbItem);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupCloseEnumEx(Windows::Win32::WindowsClustering::_HGROUPENUMEX* hGroupEnumEx)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupCloseEnumEx(hGroupEnumEx);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESENUMEX* ClusterResourceOpenEnumEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszProperties, uint32_t cbProperties, uint16_t* lpszRoProperties, uint32_t cbRoProperties, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceOpenEnumEx(hCluster, lpszProperties, cbProperties, lpszRoProperties, cbRoProperties, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceGetEnumCountEx(Windows::Win32::WindowsClustering::_HRESENUMEX* hResourceEnumEx)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceGetEnumCountEx(hResourceEnumEx);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceEnumEx(Windows::Win32::WindowsClustering::_HRESENUMEX* hResourceEnumEx, uint32_t dwIndex, Windows::Win32::WindowsClustering::CLUSTER_RESOURCE_ENUM_ITEM* pItem, uint32_t* cbItem)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceEnumEx(hResourceEnumEx, dwIndex, pItem, cbItem);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceCloseEnumEx(Windows::Win32::WindowsClustering::_HRESENUMEX* hResourceEnumEx)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceCloseEnumEx(hResourceEnumEx);
        return win32_impl_result;
    }
    inline uint32_t OnlineClusterGroupEx(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HNODE* hDestinationNode, uint32_t dwOnlineFlags, uint8_t* lpInBuffer, uint32_t cbInBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_OnlineClusterGroupEx(hGroup, hDestinationNode, dwOnlineFlags, lpInBuffer, cbInBufferSize);
        return win32_impl_result;
    }
    inline uint32_t OfflineClusterGroupEx(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t dwOfflineFlags, uint8_t* lpInBuffer, uint32_t cbInBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineClusterGroupEx(hGroup, dwOfflineFlags, lpInBuffer, cbInBufferSize);
        return win32_impl_result;
    }
    inline uint32_t OnlineClusterResourceEx(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint32_t dwOnlineFlags, uint8_t* lpInBuffer, uint32_t cbInBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_OnlineClusterResourceEx(hResource, dwOnlineFlags, lpInBuffer, cbInBufferSize);
        return win32_impl_result;
    }
    inline uint32_t OfflineClusterResourceEx(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint32_t dwOfflineFlags, uint8_t* lpInBuffer, uint32_t cbInBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineClusterResourceEx(hResource, dwOfflineFlags, lpInBuffer, cbInBufferSize);
        return win32_impl_result;
    }
    inline uint32_t MoveClusterGroupEx(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HNODE* hDestinationNode, uint32_t dwMoveFlags, uint8_t* lpInBuffer, uint32_t cbInBufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_MoveClusterGroupEx(hGroup, hDestinationNode, dwMoveFlags, lpInBuffer, cbInBufferSize);
        return win32_impl_result;
    }
    inline uint32_t CancelClusterGroupOperation(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t dwCancelFlags_RESERVED)
    {
        auto win32_impl_result = WIN32_IMPL_CancelClusterGroupOperation(hGroup, dwCancelFlags_RESERVED);
        return win32_impl_result;
    }
    inline uint32_t RestartClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RestartClusterResource(hResource, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterGroup(hGroup);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* GetClusterFromGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterFromGroup(hGroup);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_GROUP_STATE GetClusterGroupState(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint16_t* lpszNodeName, uint32_t* lpcchNodeName)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterGroupState(hGroup, lpszNodeName, lpcchNodeName);
        return win32_impl_result;
    }
    inline uint32_t SetClusterGroupName(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint16_t* lpszGroupName)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterGroupName(hGroup, lpszGroupName);
        return win32_impl_result;
    }
    inline uint32_t SetClusterGroupNodeList(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t NodeCount, Windows::Win32::WindowsClustering::_HNODE** NodeList)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterGroupNodeList(hGroup, NodeCount, NodeList);
        return win32_impl_result;
    }
    inline uint32_t OnlineClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HNODE* hDestinationNode)
    {
        auto win32_impl_result = WIN32_IMPL_OnlineClusterGroup(hGroup, hDestinationNode);
        return win32_impl_result;
    }
    inline uint32_t MoveClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HNODE* hDestinationNode)
    {
        auto win32_impl_result = WIN32_IMPL_MoveClusterGroup(hGroup, hDestinationNode);
        return win32_impl_result;
    }
    inline uint32_t OfflineClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineClusterGroup(hGroup);
        return win32_impl_result;
    }
    inline uint32_t DeleteClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteClusterGroup(hGroup);
        return win32_impl_result;
    }
    inline uint32_t DestroyClusterGroup(Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyClusterGroup(hGroup);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUPENUM* ClusterGroupOpenEnum(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupOpenEnum(hGroup, dwType);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupGetEnumCount(Windows::Win32::WindowsClustering::_HGROUPENUM* hGroupEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupGetEnumCount(hGroupEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupEnum(Windows::Win32::WindowsClustering::_HGROUPENUM* hGroupEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszResourceName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupEnum(hGroupEnum, dwIndex, lpdwType, lpszResourceName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupCloseEnum(Windows::Win32::WindowsClustering::_HGROUPENUM* hGroupEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupCloseEnum(hGroupEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* CreateClusterResource(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint16_t* lpszResourceName, uint16_t* lpszResourceType, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterResource(hGroup, lpszResourceName, lpszResourceType, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* OpenClusterResource(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterResource(hCluster, lpszResourceName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* OpenClusterResourceEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceName, uint32_t dwDesiredAccess, uint32_t* lpdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterResourceEx(hCluster, lpszResourceName, dwDesiredAccess, lpdwGrantedAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterResource(hResource);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* GetClusterFromResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterFromResource(hResource);
        return win32_impl_result;
    }
    inline uint32_t DeleteClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteClusterResource(hResource);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_RESOURCE_STATE GetClusterResourceState(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpszNodeName, uint32_t* lpcchNodeName, uint16_t* lpszGroupName, uint32_t* lpcchGroupName)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterResourceState(hResource, lpszNodeName, lpcchNodeName, lpszGroupName, lpcchGroupName);
        return win32_impl_result;
    }
    inline uint32_t SetClusterResourceName(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpszResourceName)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterResourceName(hResource, lpszResourceName);
        return win32_impl_result;
    }
    inline uint32_t FailClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_FailClusterResource(hResource);
        return win32_impl_result;
    }
    inline uint32_t OnlineClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_OnlineClusterResource(hResource);
        return win32_impl_result;
    }
    inline uint32_t OfflineClusterResource(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_OfflineClusterResource(hResource);
        return win32_impl_result;
    }
    inline uint32_t ChangeClusterResourceGroup(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HGROUP* hGroup)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeClusterResourceGroup(hResource, hGroup);
        return win32_impl_result;
    }
    inline uint32_t ChangeClusterResourceGroupEx(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint64_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_ChangeClusterResourceGroupEx(hResource, hGroup, Flags);
        return win32_impl_result;
    }
    inline uint32_t AddClusterResourceNode(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterResourceNode(hResource, hNode);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterResourceNode(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HNODE* hNode)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterResourceNode(hResource, hNode);
        return win32_impl_result;
    }
    inline uint32_t AddClusterResourceDependency(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HRESOURCE* hDependsOn)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterResourceDependency(hResource, hDependsOn);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterResourceDependency(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HRESOURCE* hDependsOn)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterResourceDependency(hResource, hDependsOn);
        return win32_impl_result;
    }
    inline uint32_t SetClusterResourceDependencyExpression(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpszDependencyExpression)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterResourceDependencyExpression(hResource, lpszDependencyExpression);
        return win32_impl_result;
    }
    inline uint32_t GetClusterResourceDependencyExpression(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpszDependencyExpression, uint32_t* lpcchDependencyExpression)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterResourceDependencyExpression(hResource, lpszDependencyExpression, lpcchDependencyExpression);
        return win32_impl_result;
    }
    inline uint32_t AddResourceToClusterSharedVolumes(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_AddResourceToClusterSharedVolumes(hResource);
        return win32_impl_result;
    }
    inline uint32_t RemoveResourceFromClusterSharedVolumes(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveResourceFromClusterSharedVolumes(hResource);
        return win32_impl_result;
    }
    inline uint32_t IsFileOnClusterSharedVolume(uint16_t* lpszPathName, int32_t* pbFileIsOnSharedVolume)
    {
        auto win32_impl_result = WIN32_IMPL_IsFileOnClusterSharedVolume(lpszPathName, pbFileIsOnSharedVolume);
        return win32_impl_result;
    }
    inline uint32_t ClusterSharedVolumeSetSnapshotState(::win32::guid guidSnapshotSet, uint16_t* lpszVolumeName, Windows::Win32::WindowsClustering::CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE state)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterSharedVolumeSetSnapshotState(guidSnapshotSet, lpszVolumeName, state);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CanResourceBeDependent(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HRESOURCE* hResourceDependent)
    {
        auto win32_impl_result = WIN32_IMPL_CanResourceBeDependent(hResource, hResourceDependent);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceControl(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t cbInBufferSize, void* lpOutBuffer, uint32_t cbOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceControl(hResource, hHostNode, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceControlAsUser(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t cbInBufferSize, void* lpOutBuffer, uint32_t cbOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceControlAsUser(hResource, hHostNode, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceTypeControl(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceTypeName, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeControl(hCluster, lpszResourceTypeName, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceTypeControlAsUser(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceTypeName, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeControlAsUser(hCluster, lpszResourceTypeName, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterGroupControl(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGroupControl(hGroup, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline uint32_t ClusterNodeControl(Windows::Win32::WindowsClustering::_HNODE* hNode, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNodeControl(hNode, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetClusterResourceNetworkName(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* lpBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterResourceNetworkName(hResource, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESENUM* ClusterResourceOpenEnum(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceOpenEnum(hResource, dwType);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceGetEnumCount(Windows::Win32::WindowsClustering::_HRESENUM* hResEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceGetEnumCount(hResEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceEnum(Windows::Win32::WindowsClustering::_HRESENUM* hResEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceEnum(hResEnum, dwIndex, lpdwType, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceCloseEnum(Windows::Win32::WindowsClustering::_HRESENUM* hResEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceCloseEnum(hResEnum);
        return win32_impl_result;
    }
    inline uint32_t CreateClusterResourceType(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceTypeName, uint16_t* lpszDisplayName, uint16_t* lpszResourceTypeDll, uint32_t dwLooksAlivePollInterval, uint32_t dwIsAlivePollInterval)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterResourceType(hCluster, lpszResourceTypeName, lpszDisplayName, lpszResourceTypeDll, dwLooksAlivePollInterval, dwIsAlivePollInterval);
        return win32_impl_result;
    }
    inline uint32_t DeleteClusterResourceType(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceTypeName)
    {
        auto win32_impl_result = WIN32_IMPL_DeleteClusterResourceType(hCluster, lpszResourceTypeName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESTYPEENUM* ClusterResourceTypeOpenEnum(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszResourceTypeName, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeOpenEnum(hCluster, lpszResourceTypeName, dwType);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceTypeGetEnumCount(Windows::Win32::WindowsClustering::_HRESTYPEENUM* hResTypeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeGetEnumCount(hResTypeEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceTypeEnum(Windows::Win32::WindowsClustering::_HRESTYPEENUM* hResTypeEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeEnum(hResTypeEnum, dwIndex, lpdwType, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterResourceTypeCloseEnum(Windows::Win32::WindowsClustering::_HRESTYPEENUM* hResTypeEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterResourceTypeCloseEnum(hResTypeEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETWORK* OpenClusterNetwork(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNetworkName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNetwork(hCluster, lpszNetworkName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETWORK* OpenClusterNetworkEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNetworkName, uint32_t dwDesiredAccess, uint32_t* lpdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNetworkEx(hCluster, lpszNetworkName, dwDesiredAccess, lpdwGrantedAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterNetwork(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterNetwork(hNetwork);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* GetClusterFromNetwork(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterFromNetwork(hNetwork);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETWORKENUM* ClusterNetworkOpenEnum(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork, uint32_t dwType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetworkOpenEnum(hNetwork, dwType);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetworkGetEnumCount(Windows::Win32::WindowsClustering::_HNETWORKENUM* hNetworkEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetworkGetEnumCount(hNetworkEnum);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetworkEnum(Windows::Win32::WindowsClustering::_HNETWORKENUM* hNetworkEnum, uint32_t dwIndex, uint32_t* lpdwType, uint16_t* lpszName, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetworkEnum(hNetworkEnum, dwIndex, lpdwType, lpszName, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetworkCloseEnum(Windows::Win32::WindowsClustering::_HNETWORKENUM* hNetworkEnum)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetworkCloseEnum(hNetworkEnum);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_NETWORK_STATE GetClusterNetworkState(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetworkState(hNetwork);
        return win32_impl_result;
    }
    inline uint32_t SetClusterNetworkName(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork, uint16_t* lpszName)
    {
        auto win32_impl_result = WIN32_IMPL_SetClusterNetworkName(hNetwork, lpszName);
        return win32_impl_result;
    }
    inline uint32_t GetClusterNetworkId(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork, uint16_t* lpszNetworkId, uint32_t* lpcchName)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetworkId(hNetwork, lpszNetworkId, lpcchName);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetworkControl(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetworkControl(hNetwork, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETINTERFACE* OpenClusterNetInterface(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszInterfaceName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNetInterface(hCluster, lpszInterfaceName);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNETINTERFACE* OpenClusterNetInterfaceEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszInterfaceName, uint32_t dwDesiredAccess, uint32_t* lpdwGrantedAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterNetInterfaceEx(hCluster, lpszInterfaceName, dwDesiredAccess, lpdwGrantedAccess);
        return win32_impl_result;
    }
    inline uint32_t GetClusterNetInterface(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName, uint16_t* lpszNetworkName, uint16_t* lpszInterfaceName, uint32_t* lpcchInterfaceName)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetInterface(hCluster, lpszNodeName, lpszNetworkName, lpszInterfaceName, lpcchInterfaceName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseClusterNetInterface(Windows::Win32::WindowsClustering::_HNETINTERFACE* hNetInterface)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterNetInterface(hNetInterface);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* GetClusterFromNetInterface(Windows::Win32::WindowsClustering::_HNETINTERFACE* hNetInterface)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterFromNetInterface(hNetInterface);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_NETINTERFACE_STATE GetClusterNetInterfaceState(Windows::Win32::WindowsClustering::_HNETINTERFACE* hNetInterface)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetInterfaceState(hNetInterface);
        return win32_impl_result;
    }
    inline uint32_t ClusterNetInterfaceControl(Windows::Win32::WindowsClustering::_HNETINTERFACE* hNetInterface, Windows::Win32::WindowsClustering::_HNODE* hHostNode, uint32_t dwControlCode, void* lpInBuffer, uint32_t nInBufferSize, void* lpOutBuffer, uint32_t nOutBufferSize, uint32_t* lpBytesReturned)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterNetInterfaceControl(hNetInterface, hHostNode, dwControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterKey(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterKey(hCluster, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterGroupKey(Windows::Win32::WindowsClustering::_HGROUP* hGroup, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterGroupKey(hGroup, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterResourceKey(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterResourceKey(hResource, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterNodeKey(Windows::Win32::WindowsClustering::_HNODE* hNode, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNodeKey(hNode, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterNetworkKey(Windows::Win32::WindowsClustering::_HNETWORK* hNetwork, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetworkKey(hNetwork, samDesired);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HKEY GetClusterNetInterfaceKey(Windows::Win32::WindowsClustering::_HNETINTERFACE* hNetInterface, uint32_t samDesired)
    {
        auto win32_impl_result = WIN32_IMPL_GetClusterNetInterfaceKey(hNetInterface, samDesired);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCreateKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszSubKey, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t* lpdwDisposition)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCreateKey(hKey, lpszSubKey, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);
        return win32_impl_result;
    }
    inline int32_t ClusterRegOpenKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszSubKey, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegOpenKey(hKey, lpszSubKey, samDesired, phkResult);
        return win32_impl_result;
    }
    inline int32_t ClusterRegDeleteKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegDeleteKey(hKey, lpszSubKey);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseKey(Windows::Win32::WindowsProgramming::HKEY hKey)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseKey(hKey);
        return win32_impl_result;
    }
    inline int32_t ClusterRegEnumKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, uint16_t* lpszName, uint32_t* lpcchName, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegEnumKey(hKey, dwIndex, lpszName, lpcchName, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline uint32_t ClusterRegSetValue(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszValueName, uint32_t dwType, uint8_t* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegSetValue(hKey, lpszValueName, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline uint32_t ClusterRegDeleteValue(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszValueName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegDeleteValue(hKey, lpszValueName);
        return win32_impl_result;
    }
    inline int32_t ClusterRegQueryValue(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpszValueName, uint32_t* lpdwValueType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegQueryValue(hKey, lpszValueName, lpdwValueType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline uint32_t ClusterRegEnumValue(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, uint16_t* lpszValueName, uint32_t* lpcchValueName, uint32_t* lpdwType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegEnumValue(hKey, dwIndex, lpszValueName, lpcchValueName, lpdwType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline int32_t ClusterRegQueryInfoKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t* lpcSubKeys, uint32_t* lpcchMaxSubKeyLen, uint32_t* lpcValues, uint32_t* lpcchMaxValueNameLen, uint32_t* lpcbMaxValueLen, uint32_t* lpcbSecurityDescriptor, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegQueryInfoKey(hKey, lpcSubKeys, lpcchMaxSubKeyLen, lpcValues, lpcchMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline int32_t ClusterRegGetKeySecurity(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t RequestedInformation, void* pSecurityDescriptor, uint32_t* lpcbSecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegGetKeySecurity(hKey, RequestedInformation, pSecurityDescriptor, lpcbSecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t ClusterRegSetKeySecurity(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t SecurityInformation, void* pSecurityDescriptor)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegSetKeySecurity(hKey, SecurityInformation, pSecurityDescriptor);
        return win32_impl_result;
    }
    inline int32_t ClusterRegSyncDatabase(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegSyncDatabase(hCluster, flags);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCreateBatch(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsClustering::_HREGBATCH** pHREGBATCH)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCreateBatch(hKey, pHREGBATCH);
        return win32_impl_result;
    }
    inline int32_t ClusterRegBatchAddCommand(Windows::Win32::WindowsClustering::_HREGBATCH* hRegBatch, Windows::Win32::WindowsClustering::CLUSTER_REG_COMMAND dwCommand, uint16_t* wzName, uint32_t dwOptions, void* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegBatchAddCommand(hRegBatch, dwCommand, wzName, dwOptions, lpData, cbData);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseBatch(Windows::Win32::WindowsClustering::_HREGBATCH* hRegBatch, Windows::Win32::SystemServices::BOOL bCommit, int32_t* failedCommandNumber)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseBatch(hRegBatch, bCommit, failedCommandNumber);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseBatchEx(Windows::Win32::WindowsClustering::_HREGBATCH* hRegBatch, uint32_t flags, int32_t* failedCommandNumber)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseBatchEx(hRegBatch, flags, failedCommandNumber);
        return win32_impl_result;
    }
    inline int32_t ClusterRegBatchReadCommand(Windows::Win32::WindowsClustering::_HREGBATCHNOTIFICATION* hBatchNotification, Windows::Win32::WindowsClustering::CLUSTER_BATCH_COMMAND* pBatchCommand)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegBatchReadCommand(hBatchNotification, pBatchCommand);
        return win32_impl_result;
    }
    inline int32_t ClusterRegBatchCloseNotification(Windows::Win32::WindowsClustering::_HREGBATCHNOTIFICATION* hBatchNotification)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegBatchCloseNotification(hBatchNotification);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCreateBatchNotifyPort(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsClustering::_HREGBATCHPORT** phBatchNotifyPort)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCreateBatchNotifyPort(hKey, phBatchNotifyPort);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseBatchNotifyPort(Windows::Win32::WindowsClustering::_HREGBATCHPORT* hBatchNotifyPort)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseBatchNotifyPort(hBatchNotifyPort);
        return win32_impl_result;
    }
    inline int32_t ClusterRegGetBatchNotification(Windows::Win32::WindowsClustering::_HREGBATCHPORT* hBatchNotify, Windows::Win32::WindowsClustering::_HREGBATCHNOTIFICATION** phBatchNotification)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegGetBatchNotification(hBatchNotify, phBatchNotification);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCreateReadBatch(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsClustering::_HREGREADBATCH** phRegReadBatch)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCreateReadBatch(hKey, phRegReadBatch);
        return win32_impl_result;
    }
    inline int32_t ClusterRegReadBatchAddCommand(Windows::Win32::WindowsClustering::_HREGREADBATCH* hRegReadBatch, uint16_t* wzSubkeyName, uint16_t* wzValueName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegReadBatchAddCommand(hRegReadBatch, wzSubkeyName, wzValueName);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseReadBatch(Windows::Win32::WindowsClustering::_HREGREADBATCH* hRegReadBatch, Windows::Win32::WindowsClustering::_HREGREADBATCHREPLY** phRegReadBatchReply)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseReadBatch(hRegReadBatch, phRegReadBatchReply);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseReadBatchEx(Windows::Win32::WindowsClustering::_HREGREADBATCH* hRegReadBatch, uint32_t flags, Windows::Win32::WindowsClustering::_HREGREADBATCHREPLY** phRegReadBatchReply)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseReadBatchEx(hRegReadBatch, flags, phRegReadBatchReply);
        return win32_impl_result;
    }
    inline int32_t ClusterRegReadBatchReplyNextCommand(Windows::Win32::WindowsClustering::_HREGREADBATCHREPLY* hRegReadBatchReply, Windows::Win32::WindowsClustering::CLUSTER_READ_BATCH_COMMAND* pBatchCommand)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegReadBatchReplyNextCommand(hRegReadBatchReply, pBatchCommand);
        return win32_impl_result;
    }
    inline int32_t ClusterRegCloseReadBatchReply(Windows::Win32::WindowsClustering::_HREGREADBATCHREPLY* hRegReadBatchReply)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterRegCloseReadBatchReply(hRegReadBatchReply);
        return win32_impl_result;
    }
    inline uint32_t ClusterSetAccountAccess(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* szAccountSID, uint32_t dwAccess, uint32_t dwControlType)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterSetAccountAccess(hCluster, szAccountSID, dwAccess, dwControlType);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSTER* CreateCluster(Windows::Win32::WindowsClustering::CREATE_CLUSTER_CONFIG* pConfig, Windows::Win32::WindowsClustering::PCLUSTER_SETUP_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg)
    {
        auto win32_impl_result = WIN32_IMPL_CreateCluster(pConfig, pfnProgressCallback, pvCallbackArg);
        return win32_impl_result;
    }
    inline uint32_t CreateClusterNameAccount(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CREATE_CLUSTER_NAME_ACCOUNT* pConfig, Windows::Win32::WindowsClustering::PCLUSTER_SETUP_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg)
    {
        auto win32_impl_result = WIN32_IMPL_CreateClusterNameAccount(hCluster, pConfig, pfnProgressCallback, pvCallbackArg);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterNameAccount(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::BOOL bDeleteComputerObjects)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterNameAccount(hCluster, bDeleteComputerObjects);
        return win32_impl_result;
    }
    inline uint32_t DetermineCNOResTypeFromNodelist(uint32_t cNodes, uint16_t** ppszNodeNames, Windows::Win32::WindowsClustering::CLUSTER_MGMT_POINT_RESTYPE* pCNOResType)
    {
        auto win32_impl_result = WIN32_IMPL_DetermineCNOResTypeFromNodelist(cNodes, ppszNodeNames, pCNOResType);
        return win32_impl_result;
    }
    inline uint32_t DetermineCNOResTypeFromCluster(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CLUSTER_MGMT_POINT_RESTYPE* pCNOResType)
    {
        auto win32_impl_result = WIN32_IMPL_DetermineCNOResTypeFromCluster(hCluster, pCNOResType);
        return win32_impl_result;
    }
    inline uint32_t DetermineClusterCloudTypeFromNodelist(uint32_t cNodes, uint16_t** ppszNodeNames, Windows::Win32::WindowsClustering::CLUSTER_CLOUD_TYPE* pCloudType)
    {
        auto win32_impl_result = WIN32_IMPL_DetermineClusterCloudTypeFromNodelist(cNodes, ppszNodeNames, pCloudType);
        return win32_impl_result;
    }
    inline uint32_t DetermineClusterCloudTypeFromCluster(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CLUSTER_CLOUD_TYPE* pCloudType)
    {
        auto win32_impl_result = WIN32_IMPL_DetermineClusterCloudTypeFromCluster(hCluster, pCloudType);
        return win32_impl_result;
    }
    inline uint32_t GetNodeCloudTypeDW(uint16_t* ppszNodeName, uint32_t* NodeCloudType)
    {
        auto win32_impl_result = WIN32_IMPL_GetNodeCloudTypeDW(ppszNodeName, NodeCloudType);
        return win32_impl_result;
    }
    inline uint32_t RegisterClusterResourceTypeNotifyV2(Windows::Win32::WindowsClustering::_HCHANGE* hChange, Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, int64_t Flags, uint16_t* resTypeName, size_t dwNotifyKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterClusterResourceTypeNotifyV2(hChange, hCluster, Flags, resTypeName, dwNotifyKey);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HNODE* AddClusterNode(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName, Windows::Win32::WindowsClustering::PCLUSTER_SETUP_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterNode(hCluster, lpszNodeName, pfnProgressCallback, pvCallbackArg);
        return win32_impl_result;
    }
    inline uint32_t AddClusterStorageNode(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszNodeName, Windows::Win32::WindowsClustering::PCLUSTER_SETUP_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg, uint16_t* lpszClusterStorageNodeDescription, uint16_t* lpszClusterStorageNodeLocation)
    {
        auto win32_impl_result = WIN32_IMPL_AddClusterStorageNode(hCluster, lpszNodeName, pfnProgressCallback, pvCallbackArg, lpszClusterStorageNodeDescription, lpszClusterStorageNodeLocation);
        return win32_impl_result;
    }
    inline uint32_t RemoveClusterStorageNode(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* lpszClusterStorageEnclosureName, uint32_t dwTimeout, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RemoveClusterStorageNode(hCluster, lpszClusterStorageEnclosureName, dwTimeout, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t DestroyCluster(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::PCLUSTER_SETUP_PROGRESS_CALLBACK* pfnProgressCallback, void* pvCallbackArg, Windows::Win32::SystemServices::BOOL fdeleteVirtualComputerObjects)
    {
        auto win32_impl_result = WIN32_IMPL_DestroyCluster(hCluster, pfnProgressCallback, pvCallbackArg, fdeleteVirtualComputerObjects);
        return win32_impl_result;
    }
    inline uint32_t InitializeClusterHealthFault(Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT* clusterHealthFault)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeClusterHealthFault(clusterHealthFault);
        return win32_impl_result;
    }
    inline uint32_t InitializeClusterHealthFaultArray(Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT_ARRAY* clusterHealthFaultArray)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeClusterHealthFaultArray(clusterHealthFaultArray);
        return win32_impl_result;
    }
    inline uint32_t FreeClusterHealthFault(Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT* clusterHealthFault)
    {
        auto win32_impl_result = WIN32_IMPL_FreeClusterHealthFault(clusterHealthFault);
        return win32_impl_result;
    }
    inline uint32_t FreeClusterHealthFaultArray(Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT_ARRAY* clusterHealthFaultArray)
    {
        auto win32_impl_result = WIN32_IMPL_FreeClusterHealthFaultArray(clusterHealthFaultArray);
        return win32_impl_result;
    }
    inline uint32_t ClusGetClusterHealthFaults(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT_ARRAY* objects, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ClusGetClusterHealthFaults(hCluster, objects, flags);
        return win32_impl_result;
    }
    inline uint32_t ClusRemoveClusterHealthFault(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, uint16_t* id, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ClusRemoveClusterHealthFault(hCluster, id, flags);
        return win32_impl_result;
    }
    inline uint32_t ClusAddClusterHealthFault(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CLUSTER_HEALTH_FAULT* failure, uint32_t param2)
    {
        auto win32_impl_result = WIN32_IMPL_ClusAddClusterHealthFault(hCluster, failure, param2);
        return win32_impl_result;
    }
    inline uint32_t ResUtilStartResourceService(uint16_t* pszServiceName, Windows::Win32::Security::SC_HANDLE__** phServiceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilStartResourceService(pszServiceName, phServiceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilVerifyResourceService(uint16_t* pszServiceName)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilVerifyResourceService(pszServiceName);
        return win32_impl_result;
    }
    inline uint32_t ResUtilStopResourceService(uint16_t* pszServiceName)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilStopResourceService(pszServiceName);
        return win32_impl_result;
    }
    inline uint32_t ResUtilVerifyService(Windows::Win32::Security::SC_HANDLE__* hServiceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilVerifyService(hServiceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilStopService(Windows::Win32::Security::SC_HANDLE__* hServiceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilStopService(hServiceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilCreateDirectoryTree(uint16_t* pszPath)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilCreateDirectoryTree(pszPath);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilIsPathValid(uint16_t* pszPath)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilIsPathValid(pszPath);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumProperties(Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, uint16_t* pszOutProperties, uint32_t cbOutPropertiesSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumProperties(pPropertyTable, pszOutProperties, cbOutPropertiesSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumPrivateProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszOutProperties, uint32_t cbOutPropertiesSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumPrivateProperties(hkeyClusterKey, pszOutProperties, cbOutPropertiesSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pOutPropertyList, uint32_t cbOutPropertyListSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetProperties(hkeyClusterKey, pPropertyTable, pOutPropertyList, cbOutPropertyListSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetAllProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pOutPropertyList, uint32_t cbOutPropertyListSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetAllProperties(hkeyClusterKey, pPropertyTable, pOutPropertyList, cbOutPropertyListSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetPrivateProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, void* pOutPropertyList, uint32_t cbOutPropertyListSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetPrivateProperties(hkeyClusterKey, pOutPropertyList, cbOutPropertyListSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetPropertySize(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTableItem, uint32_t* pcbOutPropertyListSize, uint32_t* pnPropertyCount)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetPropertySize(hkeyClusterKey, pPropertyTableItem, pcbOutPropertyListSize, pnPropertyCount);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetProperty(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTableItem, void** pOutPropertyItem, uint32_t* pcbOutPropertyItemSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetProperty(hkeyClusterKey, pPropertyTableItem, pOutPropertyItem, pcbOutPropertyItemSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilVerifyPropertyTable(Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* Reserved, Windows::Win32::SystemServices::BOOL bAllowUnknownProperties, void* pInPropertyList, uint32_t cbInPropertyListSize, uint8_t* pOutParams)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilVerifyPropertyTable(pPropertyTable, Reserved, bAllowUnknownProperties, pInPropertyList, cbInPropertyListSize, pOutParams);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetPropertyTable(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* Reserved, Windows::Win32::SystemServices::BOOL bAllowUnknownProperties, void* pInPropertyList, uint32_t cbInPropertyListSize, uint8_t* pOutParams)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetPropertyTable(hkeyClusterKey, pPropertyTable, Reserved, bAllowUnknownProperties, pInPropertyList, cbInPropertyListSize, pOutParams);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetPropertyTableEx(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* Reserved, Windows::Win32::SystemServices::BOOL bAllowUnknownProperties, void* pInPropertyList, uint32_t cbInPropertyListSize, Windows::Win32::SystemServices::BOOL bForceWrite, uint8_t* pOutParams)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetPropertyTableEx(hkeyClusterKey, pPropertyTable, Reserved, bAllowUnknownProperties, pInPropertyList, cbInPropertyListSize, bForceWrite, pOutParams);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetPropertyParameterBlock(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* Reserved, uint8_t* pInParams, void* pInPropertyList, uint32_t cbInPropertyListSize, uint8_t* pOutParams)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetPropertyParameterBlock(hkeyClusterKey, pPropertyTable, Reserved, pInParams, pInPropertyList, cbInPropertyListSize, pOutParams);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetPropertyParameterBlockEx(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* Reserved, uint8_t* pInParams, void* pInPropertyList, uint32_t cbInPropertyListSize, Windows::Win32::SystemServices::BOOL bForceWrite, uint8_t* pOutParams)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetPropertyParameterBlockEx(hkeyClusterKey, pPropertyTable, Reserved, pInParams, pInPropertyList, cbInPropertyListSize, bForceWrite, pOutParams);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetUnknownProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pInPropertyList, uint32_t cbInPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetUnknownProperties(hkeyClusterKey, pPropertyTable, pInPropertyList, cbInPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetPropertiesToParameterBlock(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, uint8_t* pOutParams, Windows::Win32::SystemServices::BOOL bCheckForRequiredProperties, uint16_t** pszNameOfPropInError)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetPropertiesToParameterBlock(hkeyClusterKey, pPropertyTable, pOutParams, bCheckForRequiredProperties, pszNameOfPropInError);
        return win32_impl_result;
    }
    inline uint32_t ResUtilPropertyListFromParameterBlock(Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pOutPropertyList, uint32_t* pcbOutPropertyListSize, uint8_t* pInParams, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilPropertyListFromParameterBlock(pPropertyTable, pOutPropertyList, pcbOutPropertyListSize, pInParams, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilDupParameterBlock(uint8_t* pOutParams, uint8_t* pInParams, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilDupParameterBlock(pOutParams, pInParams, pPropertyTable);
        return win32_impl_result;
    }
    inline void ResUtilFreeParameterBlock(uint8_t* pOutParams, uint8_t* pInParams, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable)
    {
        WIN32_IMPL_ResUtilFreeParameterBlock(pOutParams, pInParams, pPropertyTable);
    }
    inline uint32_t ResUtilAddUnknownProperties(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pOutPropertyList, uint32_t pcbOutPropertyListSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilAddUnknownProperties(hkeyClusterKey, pPropertyTable, pOutPropertyList, pcbOutPropertyListSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetPrivatePropertyList(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, void* pInPropertyList, uint32_t cbInPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetPrivatePropertyList(hkeyClusterKey, pInPropertyList, cbInPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilVerifyPrivatePropertyList(void* pInPropertyList, uint32_t cbInPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilVerifyPrivatePropertyList(pInPropertyList, cbInPropertyListSize);
        return win32_impl_result;
    }
    inline uint16_t* ResUtilDupString(uint16_t* pszInString)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilDupString(pszInString);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetBinaryValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint8_t** ppbOutValue, uint32_t* pcbOutValueSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetBinaryValue(hkeyClusterKey, pszValueName, ppbOutValue, pcbOutValueSize);
        return win32_impl_result;
    }
    inline uint16_t* ResUtilGetSzValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetSzValue(hkeyClusterKey, pszValueName);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetDwordValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint32_t* pdwOutValue, uint32_t dwDefaultValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetDwordValue(hkeyClusterKey, pszValueName, pdwOutValue, dwDefaultValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetQwordValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint64_t* pqwOutValue, uint64_t qwDefaultValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetQwordValue(hkeyClusterKey, pszValueName, pqwOutValue, qwDefaultValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetBinaryValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint8_t* pbNewValue, uint32_t cbNewValueSize, uint8_t** ppbOutValue, uint32_t* pcbOutValueSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetBinaryValue(hkeyClusterKey, pszValueName, pbNewValue, cbNewValueSize, ppbOutValue, pcbOutValueSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetSzValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint16_t* pszNewValue, uint16_t** ppszOutString)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetSzValue(hkeyClusterKey, pszValueName, pszNewValue, ppszOutString);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetExpandSzValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint16_t* pszNewValue, uint16_t** ppszOutString)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetExpandSzValue(hkeyClusterKey, pszValueName, pszNewValue, ppszOutString);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetMultiSzValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint16_t* pszNewValue, uint32_t cbNewValueSize, uint16_t** ppszOutValue, uint32_t* pcbOutValueSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetMultiSzValue(hkeyClusterKey, pszValueName, pszNewValue, cbNewValueSize, ppszOutValue, pcbOutValueSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetDwordValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint32_t dwNewValue, uint32_t* pdwOutValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetDwordValue(hkeyClusterKey, pszValueName, dwNewValue, pdwOutValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetQwordValue(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* pszValueName, uint64_t qwNewValue, uint64_t* pqwOutValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetQwordValue(hkeyClusterKey, pszValueName, qwNewValue, pqwOutValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetValueEx(Windows::Win32::WindowsProgramming::HKEY hkeyClusterKey, uint16_t* valueName, uint32_t valueType, uint8_t* valueData, uint32_t valueSize, uint32_t flags)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetValueEx(hkeyClusterKey, valueName, valueType, valueData, valueSize, flags);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetBinaryProperty(uint8_t** ppbOutValue, uint32_t* pcbOutValueSize, Windows::Win32::WindowsClustering::CLUSPROP_BINARY* pValueStruct, uint8_t* pbOldValue, uint32_t cbOldValueSize, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetBinaryProperty(ppbOutValue, pcbOutValueSize, pValueStruct, pbOldValue, cbOldValueSize, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetSzProperty(uint16_t** ppszOutValue, Windows::Win32::WindowsClustering::CLUSPROP_SZ* pValueStruct, uint16_t* pszOldValue, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetSzProperty(ppszOutValue, pValueStruct, pszOldValue, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetMultiSzProperty(uint16_t** ppszOutValue, uint32_t* pcbOutValueSize, Windows::Win32::WindowsClustering::CLUSPROP_SZ* pValueStruct, uint16_t* pszOldValue, uint32_t cbOldValueSize, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetMultiSzProperty(ppszOutValue, pcbOutValueSize, pValueStruct, pszOldValue, cbOldValueSize, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetDwordProperty(uint32_t* pdwOutValue, Windows::Win32::WindowsClustering::CLUSPROP_DWORD* pValueStruct, uint32_t dwOldValue, uint32_t dwMinimum, uint32_t dwMaximum, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetDwordProperty(pdwOutValue, pValueStruct, dwOldValue, dwMinimum, dwMaximum, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetLongProperty(int32_t* plOutValue, Windows::Win32::WindowsClustering::CLUSPROP_LONG* pValueStruct, int32_t lOldValue, int32_t lMinimum, int32_t lMaximum, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetLongProperty(plOutValue, pValueStruct, lOldValue, lMinimum, lMaximum, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetFileTimeProperty(Windows::Win32::WindowsProgramming::FILETIME* pftOutValue, Windows::Win32::WindowsClustering::CLUSPROP_FILETIME* pValueStruct, Windows::Win32::WindowsProgramming::FILETIME ftOldValue, Windows::Win32::WindowsProgramming::FILETIME ftMinimum, Windows::Win32::WindowsProgramming::FILETIME ftMaximum, uint8_t** ppPropertyList, uint32_t* pcbPropertyListSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetFileTimeProperty(pftOutValue, pValueStruct, ftOldValue, ftMinimum, ftMaximum, ppPropertyList, pcbPropertyListSize);
        return win32_impl_result;
    }
    inline void* ResUtilGetEnvironmentWithNetName(Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetEnvironmentWithNetName(hResource);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFreeEnvironment(void* lpEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFreeEnvironment(lpEnvironment);
        return win32_impl_result;
    }
    inline uint16_t* ResUtilExpandEnvironmentStrings(uint16_t* pszSrc)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilExpandEnvironmentStrings(pszSrc);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetResourceServiceEnvironment(uint16_t* pszServiceName, Windows::Win32::WindowsClustering::_HRESOURCE* hResource, Windows::Win32::WindowsClustering::PLOG_EVENT_ROUTINE* pfnLogEvent, intptr_t hResourceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetResourceServiceEnvironment(pszServiceName, hResource, pfnLogEvent, hResourceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilRemoveResourceServiceEnvironment(uint16_t* pszServiceName, Windows::Win32::WindowsClustering::PLOG_EVENT_ROUTINE* pfnLogEvent, intptr_t hResourceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilRemoveResourceServiceEnvironment(pszServiceName, pfnLogEvent, hResourceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetResourceServiceStartParameters(uint16_t* pszServiceName, Windows::Win32::Security::SC_HANDLE__* schSCMHandle, Windows::Win32::Security::SC_HANDLE__** phService, Windows::Win32::WindowsClustering::PLOG_EVENT_ROUTINE* pfnLogEvent, intptr_t hResourceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetResourceServiceStartParameters(pszServiceName, schSCMHandle, phService, pfnLogEvent, hResourceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindSzProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint16_t** pszPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindSzProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pszPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindExpandSzProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint16_t** pszPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindExpandSzProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pszPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindExpandedSzProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint16_t** pszPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindExpandedSzProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pszPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindDwordProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint32_t* pdwPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindDwordProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pdwPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindBinaryProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint8_t** pbPropertyValue, uint32_t* pcbPropertyValueSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindBinaryProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pbPropertyValue, pcbPropertyValueSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindMultiSzProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint16_t** pszPropertyValue, uint32_t* pcbPropertyValueSize)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindMultiSzProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pszPropertyValue, pcbPropertyValueSize);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindLongProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, int32_t* plPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindLongProperty(pPropertyList, cbPropertyListSize, pszPropertyName, plPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindULargeIntegerProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, uint64_t* plPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindULargeIntegerProperty(pPropertyList, cbPropertyListSize, pszPropertyName, plPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindFileTimeProperty(void* pPropertyList, uint32_t cbPropertyListSize, uint16_t* pszPropertyName, Windows::Win32::WindowsProgramming::FILETIME* pftPropertyValue)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindFileTimeProperty(pPropertyList, cbPropertyListSize, pszPropertyName, pftPropertyValue);
        return win32_impl_result;
    }
    inline uint32_t ClusWorkerCreate(Windows::Win32::WindowsClustering::CLUS_WORKER* lpWorker, Windows::Win32::WindowsClustering::PWORKER_START_ROUTINE* lpStartAddress, void* lpParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ClusWorkerCreate(lpWorker, lpStartAddress, lpParameter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClusWorkerCheckTerminate(Windows::Win32::WindowsClustering::CLUS_WORKER* lpWorker)
    {
        auto win32_impl_result = WIN32_IMPL_ClusWorkerCheckTerminate(lpWorker);
        return win32_impl_result;
    }
    inline void ClusWorkerTerminate(Windows::Win32::WindowsClustering::CLUS_WORKER* lpWorker)
    {
        WIN32_IMPL_ClusWorkerTerminate(lpWorker);
    }
    inline uint32_t ClusWorkerTerminateEx(Windows::Win32::WindowsClustering::CLUS_WORKER* ClusWorker, uint32_t TimeoutInMilliseconds, Windows::Win32::SystemServices::BOOL WaitOnly)
    {
        auto win32_impl_result = WIN32_IMPL_ClusWorkerTerminateEx(ClusWorker, TimeoutInMilliseconds, WaitOnly);
        return win32_impl_result;
    }
    inline uint32_t ClusWorkersTerminate(Windows::Win32::WindowsClustering::CLUS_WORKER** ClusWorkers, size_t ClusWorkersCount, uint32_t TimeoutInMilliseconds, Windows::Win32::SystemServices::BOOL WaitOnly)
    {
        auto win32_impl_result = WIN32_IMPL_ClusWorkersTerminate(ClusWorkers, ClusWorkersCount, TimeoutInMilliseconds, WaitOnly);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilResourcesEqual(Windows::Win32::WindowsClustering::_HRESOURCE* hSelf, Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilResourcesEqual(hSelf, hResource);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilResourceTypesEqual(uint16_t* lpszResourceTypeName, Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilResourceTypesEqual(lpszResourceTypeName, hResource);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilIsResourceClassEqual(Windows::Win32::WindowsClustering::CLUS_RESOURCE_CLASS_INFO* prci, Windows::Win32::WindowsClustering::_HRESOURCE* hResource)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilIsResourceClassEqual(prci, hResource);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumResources(Windows::Win32::WindowsClustering::_HRESOURCE* hSelf, uint16_t* lpszResTypeName, Windows::Win32::WindowsClustering::LPRESOURCE_CALLBACK* pResCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumResources(hSelf, lpszResTypeName, pResCallBack, pParameter);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumResourcesEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HRESOURCE* hSelf, uint16_t* lpszResTypeName, Windows::Win32::WindowsClustering::LPRESOURCE_CALLBACK_EX* pResCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumResourcesEx(hCluster, hSelf, lpszResTypeName, pResCallBack, pParameter);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependency(Windows::Win32::SystemServices::HANDLE hSelf, uint16_t* lpszResourceType)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependency(hSelf, lpszResourceType);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependencyByName(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::HANDLE hSelf, uint16_t* lpszResourceType, Windows::Win32::SystemServices::BOOL bRecurse)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependencyByName(hCluster, hSelf, lpszResourceType, bRecurse);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependencyByClass(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::HANDLE hSelf, Windows::Win32::WindowsClustering::CLUS_RESOURCE_CLASS_INFO* prci, Windows::Win32::SystemServices::BOOL bRecurse)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependencyByClass(hCluster, hSelf, prci, bRecurse);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceNameDependency(uint16_t* lpszResourceName, uint16_t* lpszResourceType)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceNameDependency(lpszResourceName, lpszResourceType);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetResourceDependentIPAddressProps(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* pszAddress, uint32_t* pcchAddress, uint16_t* pszSubnetMask, uint32_t* pcchSubnetMask, uint16_t* pszNetwork, uint32_t* pcchNetwork)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependentIPAddressProps(hResource, pszAddress, pcchAddress, pszSubnetMask, pcchSubnetMask, pszNetwork, pcchNetwork);
        return win32_impl_result;
    }
    inline uint32_t ResUtilFindDependentDiskResourceDriveLetter(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* pszDriveLetter, uint32_t* pcchDriveLetter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilFindDependentDiskResourceDriveLetter(hCluster, hResource, pszDriveLetter, pcchDriveLetter);
        return win32_impl_result;
    }
    inline uint32_t ResUtilTerminateServiceProcessFromResDll(uint32_t dwServicePid, Windows::Win32::SystemServices::BOOL bOffline, uint32_t* pdwResourceState, Windows::Win32::WindowsClustering::PLOG_EVENT_ROUTINE* pfnLogEvent, intptr_t hResourceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilTerminateServiceProcessFromResDll(dwServicePid, bOffline, pdwResourceState, pfnLogEvent, hResourceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetPropertyFormats(Windows::Win32::WindowsClustering::RESUTIL_PROPERTY_ITEM* pPropertyTable, void* pOutPropertyFormatList, uint32_t cbPropertyFormatListSize, uint32_t* pcbBytesReturned, uint32_t* pcbRequired)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetPropertyFormats(pPropertyTable, pOutPropertyFormatList, cbPropertyFormatListSize, pcbBytesReturned, pcbRequired);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetCoreClusterResources(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HRESOURCE** phClusterNameResource, Windows::Win32::WindowsClustering::_HRESOURCE** phClusterIPAddressResource, Windows::Win32::WindowsClustering::_HRESOURCE** phClusterQuorumResource)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetCoreClusterResources(hCluster, phClusterNameResource, phClusterIPAddressResource, phClusterQuorumResource);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetResourceName(Windows::Win32::WindowsClustering::_HRESOURCE* hResource, uint16_t* pszResourceName, uint32_t* pcchResourceNameInOut)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceName(hResource, pszResourceName, pcchResourceNameInOut);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::CLUSTER_ROLE_STATE ResUtilGetClusterRoleState(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::CLUSTER_ROLE eClusterRole)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetClusterRoleState(hCluster, eClusterRole);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClusterIsPathOnSharedVolume(uint16_t* lpszPathName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterIsPathOnSharedVolume(lpszPathName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClusterGetVolumePathName(uint16_t* lpszFileName, uint16_t* lpszVolumePathName, uint32_t cchBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGetVolumePathName(lpszFileName, lpszVolumePathName, cchBufferLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ClusterGetVolumeNameForVolumeMountPoint(uint16_t* lpszVolumeMountPoint, uint16_t* lpszVolumeName, uint32_t cchBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterGetVolumeNameForVolumeMountPoint(lpszVolumeMountPoint, lpszVolumeName, cchBufferLength);
        return win32_impl_result;
    }
    inline uint32_t ClusterPrepareSharedVolumeForBackup(uint16_t* lpszFileName, uint16_t* lpszVolumePathName, uint32_t* lpcchVolumePathName, uint16_t* lpszVolumeName, uint32_t* lpcchVolumeName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterPrepareSharedVolumeForBackup(lpszFileName, lpszVolumePathName, lpcchVolumePathName, lpszVolumeName, lpcchVolumeName);
        return win32_impl_result;
    }
    inline uint32_t ClusterClearBackupStateForSharedVolume(uint16_t* lpszVolumePathName)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterClearBackupStateForSharedVolume(lpszVolumePathName);
        return win32_impl_result;
    }
    inline uint32_t ResUtilSetResourceServiceStartParametersEx(uint16_t* pszServiceName, Windows::Win32::Security::SC_HANDLE__* schSCMHandle, Windows::Win32::Security::SC_HANDLE__** phService, uint32_t dwDesiredAccess, Windows::Win32::WindowsClustering::PLOG_EVENT_ROUTINE* pfnLogEvent, intptr_t hResourceHandle)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilSetResourceServiceStartParametersEx(pszServiceName, schSCMHandle, phService, dwDesiredAccess, pfnLogEvent, hResourceHandle);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumResourcesEx2(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HRESOURCE* hSelf, uint16_t* lpszResTypeName, Windows::Win32::WindowsClustering::LPRESOURCE_CALLBACK_EX* pResCallBack, void* pParameter, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumResourcesEx2(hCluster, hSelf, lpszResTypeName, pResCallBack, pParameter, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependencyEx(Windows::Win32::SystemServices::HANDLE hSelf, uint16_t* lpszResourceType, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependencyEx(hSelf, lpszResourceType, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependencyByNameEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::HANDLE hSelf, uint16_t* lpszResourceType, Windows::Win32::SystemServices::BOOL bRecurse, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependencyByNameEx(hCluster, hSelf, lpszResourceType, bRecurse, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceDependencyByClassEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::SystemServices::HANDLE hSelf, Windows::Win32::WindowsClustering::CLUS_RESOURCE_CLASS_INFO* prci, Windows::Win32::SystemServices::BOOL bRecurse, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceDependencyByClassEx(hCluster, hSelf, prci, bRecurse, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HRESOURCE* ResUtilGetResourceNameDependencyEx(uint16_t* lpszResourceName, uint16_t* lpszResourceType, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetResourceNameDependencyEx(lpszResourceName, lpszResourceType, dwDesiredAccess);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetCoreClusterResourcesEx(Windows::Win32::WindowsClustering::_HCLUSTER* hClusterIn, Windows::Win32::WindowsClustering::_HRESOURCE** phClusterNameResourceOut, Windows::Win32::WindowsClustering::_HRESOURCE** phClusterQuorumResourceOut, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetCoreClusterResourcesEx(hClusterIn, phClusterNameResourceOut, phClusterQuorumResourceOut, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSCRYPTPROVIDER* OpenClusterCryptProvider(uint16_t* lpszResource, int8_t* lpszProvider, uint32_t dwType, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterCryptProvider(lpszResource, lpszProvider, dwType, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HCLUSCRYPTPROVIDER* OpenClusterCryptProviderEx(uint16_t* lpszResource, uint16_t* lpszKeyname, int8_t* lpszProvider, uint32_t dwType, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_OpenClusterCryptProviderEx(lpszResource, lpszKeyname, lpszProvider, dwType, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t CloseClusterCryptProvider(Windows::Win32::WindowsClustering::_HCLUSCRYPTPROVIDER* hClusCryptProvider)
    {
        auto win32_impl_result = WIN32_IMPL_CloseClusterCryptProvider(hClusCryptProvider);
        return win32_impl_result;
    }
    inline uint32_t ClusterEncrypt(Windows::Win32::WindowsClustering::_HCLUSCRYPTPROVIDER* hClusCryptProvider, uint8_t* pData, uint32_t cbData, uint8_t** ppData, uint32_t* pcbData)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterEncrypt(hClusCryptProvider, pData, cbData, ppData, pcbData);
        return win32_impl_result;
    }
    inline uint32_t ClusterDecrypt(Windows::Win32::WindowsClustering::_HCLUSCRYPTPROVIDER* hClusCryptProvider, uint8_t* pCryptInput, uint32_t cbCryptInput, uint8_t** ppCryptOutput, uint32_t* pcbCryptOutput)
    {
        auto win32_impl_result = WIN32_IMPL_ClusterDecrypt(hClusCryptProvider, pCryptInput, cbCryptInput, ppCryptOutput, pcbCryptOutput);
        return win32_impl_result;
    }
    inline uint32_t FreeClusterCrypt(void* pCryptInfo)
    {
        auto win32_impl_result = WIN32_IMPL_FreeClusterCrypt(pCryptInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilPaxosComparer(Windows::Win32::WindowsClustering::PaxosTagCStruct* left, Windows::Win32::WindowsClustering::PaxosTagCStruct* right)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilPaxosComparer(left, right);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ResUtilLeftPaxosIsLessThanRight(Windows::Win32::WindowsClustering::PaxosTagCStruct* left, Windows::Win32::WindowsClustering::PaxosTagCStruct* right)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilLeftPaxosIsLessThanRight(left, right);
        return win32_impl_result;
    }
    inline uint32_t ResUtilsDeleteKeyTree(Windows::Win32::WindowsProgramming::HKEY key, uint16_t* keyName, Windows::Win32::SystemServices::BOOL treatNoKeyAsError)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilsDeleteKeyTree(key, keyName, treatNoKeyAsError);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGroupsEqual(Windows::Win32::WindowsClustering::_HGROUP* hSelf, Windows::Win32::WindowsClustering::_HGROUP* hGroup, int32_t* pEqual)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGroupsEqual(hSelf, hGroup, pEqual);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumGroups(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HGROUP* hSelf, Windows::Win32::WindowsClustering::LPGROUP_CALLBACK_EX* pResCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumGroups(hCluster, hSelf, pResCallBack, pParameter);
        return win32_impl_result;
    }
    inline uint32_t ResUtilEnumGroupsEx(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::_HGROUP* hSelf, Windows::Win32::WindowsClustering::CLUSGROUP_TYPE groupType, Windows::Win32::WindowsClustering::LPGROUP_CALLBACK_EX* pResCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilEnumGroupsEx(hCluster, hSelf, groupType, pResCallBack, pParameter);
        return win32_impl_result;
    }
    inline uint32_t ResUtilDupGroup(Windows::Win32::WindowsClustering::_HGROUP* group, Windows::Win32::WindowsClustering::_HGROUP** copy)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilDupGroup(group, copy);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetClusterGroupType(Windows::Win32::WindowsClustering::_HGROUP* hGroup, Windows::Win32::WindowsClustering::CLUSGROUP_TYPE* groupType)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetClusterGroupType(hGroup, groupType);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsClustering::_HGROUP* ResUtilGetCoreGroup(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetCoreGroup(hCluster);
        return win32_impl_result;
    }
    inline uint32_t ResUtilResourceDepEnum(Windows::Win32::WindowsClustering::_HRESOURCE* hSelf, uint32_t enumType, Windows::Win32::WindowsClustering::LPRESOURCE_CALLBACK_EX* pResCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilResourceDepEnum(hSelf, enumType, pResCallBack, pParameter);
        return win32_impl_result;
    }
    inline uint32_t ResUtilDupResource(Windows::Win32::WindowsClustering::_HRESOURCE* group, Windows::Win32::WindowsClustering::_HRESOURCE** copy)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilDupResource(group, copy);
        return win32_impl_result;
    }
    inline uint32_t ResUtilGetClusterId(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, ::win32::guid* guid)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilGetClusterId(hCluster, guid);
        return win32_impl_result;
    }
    inline uint32_t ResUtilNodeEnum(Windows::Win32::WindowsClustering::_HCLUSTER* hCluster, Windows::Win32::WindowsClustering::LPNODE_CALLBACK* pNodeCallBack, void* pParameter)
    {
        auto win32_impl_result = WIN32_IMPL_ResUtilNodeEnum(hCluster, pNodeCallBack, pParameter);
        return win32_impl_result;
    }
    inline uint32_t RegisterAppInstance(Windows::Win32::SystemServices::HANDLE ProcessHandle, ::win32::guid* AppInstanceId, Windows::Win32::SystemServices::BOOL ChildrenInheritAppInstance)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterAppInstance(ProcessHandle, AppInstanceId, ChildrenInheritAppInstance);
        return win32_impl_result;
    }
    inline uint32_t RegisterAppInstanceVersion(::win32::guid* AppInstanceId, uint64_t InstanceVersionHigh, uint64_t InstanceVersionLow)
    {
        auto win32_impl_result = WIN32_IMPL_RegisterAppInstanceVersion(AppInstanceId, InstanceVersionHigh, InstanceVersionLow);
        return win32_impl_result;
    }
    inline uint32_t QueryAppInstanceVersion(::win32::guid* AppInstanceId, uint64_t* InstanceVersionHigh, uint64_t* InstanceVersionLow, int32_t* VersionStatus)
    {
        auto win32_impl_result = WIN32_IMPL_QueryAppInstanceVersion(AppInstanceId, InstanceVersionHigh, InstanceVersionLow, VersionStatus);
        return win32_impl_result;
    }
    inline uint32_t ResetAllAppInstanceVersions()
    {
        auto win32_impl_result = WIN32_IMPL_ResetAllAppInstanceVersions();
        return win32_impl_result;
    }
    inline uint32_t SetAppInstanceCsvFlags(Windows::Win32::SystemServices::HANDLE ProcessHandle, uint32_t Mask, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_SetAppInstanceCsvFlags(ProcessHandle, Mask, Flags);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
