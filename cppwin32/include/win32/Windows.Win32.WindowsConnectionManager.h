// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsConnectionManager_H
#define WIN32_Windows_Win32_WindowsConnectionManager_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.WindowsConnectionManager.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::WindowsConnectionManager
{
#pragma region methods
    inline uint32_t WcmQueryProperty(::win32::guid* pInterface, uint16_t* strProfileName, Windows::Win32::WindowsConnectionManager::WCM_PROPERTY Property, void* pReserved, uint32_t* pdwDataSize, uint8_t** ppData)
    {
        auto win32_impl_result = WIN32_IMPL_WcmQueryProperty(pInterface, strProfileName, Property, pReserved, pdwDataSize, ppData);
        return win32_impl_result;
    }
    inline uint32_t WcmSetProperty(::win32::guid* pInterface, uint16_t* strProfileName, Windows::Win32::WindowsConnectionManager::WCM_PROPERTY Property, void* pReserved, uint32_t dwDataSize, uint8_t* pbData)
    {
        auto win32_impl_result = WIN32_IMPL_WcmSetProperty(pInterface, strProfileName, Property, pReserved, dwDataSize, pbData);
        return win32_impl_result;
    }
    inline uint32_t WcmGetProfileList(void* pReserved, Windows::Win32::WindowsConnectionManager::WCM_PROFILE_INFO_LIST** ppProfileList)
    {
        auto win32_impl_result = WIN32_IMPL_WcmGetProfileList(pReserved, ppProfileList);
        return win32_impl_result;
    }
    inline uint32_t WcmSetProfileList(Windows::Win32::WindowsConnectionManager::WCM_PROFILE_INFO_LIST* pProfileList, uint32_t dwPosition, Windows::Win32::SystemServices::BOOL fIgnoreUnknownProfiles, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_WcmSetProfileList(pProfileList, dwPosition, fIgnoreUnknownProfiles, pReserved);
        return win32_impl_result;
    }
    inline void WcmFreeMemory(void* pMemory)
    {
        WIN32_IMPL_WcmFreeMemory(pMemory);
    }

#pragma endregion methods

}
#endif
