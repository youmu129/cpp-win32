// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsProgramming_H
#define WIN32_Windows_Win32_WindowsProgramming_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.WindowsProgramming.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::WindowsProgramming
{
#pragma region methods
    inline uint32_t I_NetLogonControl2(uint16_t* ServerName, uint32_t FunctionCode, uint32_t QueryLevel, uint8_t* Data, uint8_t** Buffer)
    {
        auto win32_impl_result = WIN32_IMPL_I_NetLogonControl2(ServerName, FunctionCode, QueryLevel, Data, Buffer);
        return win32_impl_result;
    }
    inline void RtlRaiseException(Windows::Win32::Debug::EXCEPTION_RECORD* ExceptionRecord)
    {
        WIN32_IMPL_RtlRaiseException(ExceptionRecord);
    }
    inline uint32_t InstallPerfDllW(uint16_t* szComputerName, uint16_t* lpIniFile, size_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_InstallPerfDllW(szComputerName, lpIniFile, dwFlags);
        return win32_impl_result;
    }
    inline uint32_t InstallPerfDllA(int8_t* szComputerName, int8_t* lpIniFile, size_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_InstallPerfDllA(szComputerName, lpIniFile, dwFlags);
        return win32_impl_result;
    }
    inline void DisableProcessWindowsGhosting()
    {
        WIN32_IMPL_DisableProcessWindowsGhosting();
    }
    inline int32_t CompareFileTime(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime1, Windows::Win32::WindowsProgramming::FILETIME* lpFileTime2)
    {
        auto win32_impl_result = WIN32_IMPL_CompareFileTime(lpFileTime1, lpFileTime2);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FileTimeToLocalFileTime(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime, Windows::Win32::WindowsProgramming::FILETIME* lpLocalFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_FileTimeToLocalFileTime(lpFileTime, lpLocalFileTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetFileTime(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::WindowsProgramming::FILETIME* lpCreationTime, Windows::Win32::WindowsProgramming::FILETIME* lpLastAccessTime, Windows::Win32::WindowsProgramming::FILETIME* lpLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_GetFileTime(hFile, lpCreationTime, lpLastAccessTime, lpLastWriteTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LocalFileTimeToFileTime(Windows::Win32::WindowsProgramming::FILETIME* lpLocalFileTime, Windows::Win32::WindowsProgramming::FILETIME* lpFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_LocalFileTimeToFileTime(lpLocalFileTime, lpFileTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFileTime(Windows::Win32::SystemServices::HANDLE hFile, Windows::Win32::WindowsProgramming::FILETIME* lpCreationTime, Windows::Win32::WindowsProgramming::FILETIME* lpLastAccessTime, Windows::Win32::WindowsProgramming::FILETIME* lpLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_SetFileTime(hFile, lpCreationTime, lpLastAccessTime, lpLastWriteTime);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWow64DirectoryA(int8_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWow64DirectoryA(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWow64DirectoryW(uint16_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWow64DirectoryW(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWow64Directory2A(int8_t* lpBuffer, uint32_t uSize, uint16_t ImageFileMachineType)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWow64Directory2A(lpBuffer, uSize, ImageFileMachineType);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWow64Directory2W(uint16_t* lpBuffer, uint32_t uSize, uint16_t ImageFileMachineType)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWow64Directory2W(lpBuffer, uSize, ImageFileMachineType);
        return win32_impl_result;
    }
    inline int32_t IsWow64GuestMachineSupported(uint16_t WowGuestMachine, int32_t* MachineIsSupported)
    {
        auto win32_impl_result = WIN32_IMPL_IsWow64GuestMachineSupported(WowGuestMachine, MachineIsSupported);
        return win32_impl_result;
    }
    inline uint8_t* NdrSimpleStructMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrSimpleStructMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrComplexStructMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexStructMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrConformantArrayMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrConformantArrayMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrComplexArrayMarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexArrayMarshall(pStubMsg, pMemory, pFormat);
        return win32_impl_result;
    }
    inline uint8_t* NdrSimpleStructUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrSimpleStructUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrComplexStructUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexStructUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrComplexArrayUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrComplexArrayUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline uint8_t* NdrUserMarshalUnmarshall(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t** ppMemory, uint8_t* pFormat, uint8_t fMustAlloc)
    {
        auto win32_impl_result = WIN32_IMPL_NdrUserMarshalUnmarshall(pStubMsg, ppMemory, pFormat, fMustAlloc);
        return win32_impl_result;
    }
    inline void NdrSimpleStructBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrSimpleStructBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrComplexStructBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrComplexStructBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrConformantArrayBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrConformantArrayBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline void NdrComplexArrayBufferSize(Windows::Win32::Rpc::MIDL_STUB_MESSAGE* pStubMsg, uint8_t* pMemory, uint8_t* pFormat)
    {
        WIN32_IMPL_NdrComplexArrayBufferSize(pStubMsg, pMemory, pFormat);
    }
    inline uint8_t GetUserNameExA(Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT NameFormat, int8_t* lpNameBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserNameExA(NameFormat, lpNameBuffer, nSize);
        return win32_impl_result;
    }
    inline uint8_t GetUserNameExW(Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT NameFormat, uint16_t* lpNameBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserNameExW(NameFormat, lpNameBuffer, nSize);
        return win32_impl_result;
    }
    inline uint8_t GetComputerObjectNameA(Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT NameFormat, int8_t* lpNameBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerObjectNameA(NameFormat, lpNameBuffer, nSize);
        return win32_impl_result;
    }
    inline uint8_t GetComputerObjectNameW(Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT NameFormat, uint16_t* lpNameBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerObjectNameW(NameFormat, lpNameBuffer, nSize);
        return win32_impl_result;
    }
    inline uint8_t TranslateNameA(int8_t* lpAccountName, Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT AccountNameFormat, Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT DesiredNameFormat, int8_t* lpTranslatedName, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateNameA(lpAccountName, AccountNameFormat, DesiredNameFormat, lpTranslatedName, nSize);
        return win32_impl_result;
    }
    inline uint8_t TranslateNameW(uint16_t* lpAccountName, Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT AccountNameFormat, Windows::Win32::WindowsProgramming::EXTENDED_NAME_FORMAT DesiredNameFormat, uint16_t* lpTranslatedName, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateNameW(lpAccountName, AccountNameFormat, DesiredNameFormat, lpTranslatedName, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsApiSetImplemented(int8_t* Contract)
    {
        auto win32_impl_result = WIN32_IMPL_IsApiSetImplemented(Contract);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetEnvironmentStringsW(uint16_t* NewEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnvironmentStringsW(NewEnvironment);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE GetStdHandle(Windows::Win32::WindowsProgramming::STD_HANDLE_TYPE nStdHandle)
    {
        auto win32_impl_result = WIN32_IMPL_GetStdHandle(nStdHandle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetStdHandle(Windows::Win32::WindowsProgramming::STD_HANDLE_TYPE nStdHandle, Windows::Win32::SystemServices::HANDLE hHandle)
    {
        auto win32_impl_result = WIN32_IMPL_SetStdHandle(nStdHandle, hHandle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetStdHandleEx(Windows::Win32::WindowsProgramming::STD_HANDLE_TYPE nStdHandle, Windows::Win32::SystemServices::HANDLE hHandle, intptr_t* phPrevValue)
    {
        auto win32_impl_result = WIN32_IMPL_SetStdHandleEx(nStdHandle, hHandle, phPrevValue);
        return win32_impl_result;
    }
    inline uint32_t ExpandEnvironmentStringsA(int8_t* lpSrc, int8_t* lpDst, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_ExpandEnvironmentStringsA(lpSrc, lpDst, nSize);
        return win32_impl_result;
    }
    inline uint32_t ExpandEnvironmentStringsW(uint16_t* lpSrc, uint16_t* lpDst, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_ExpandEnvironmentStringsW(lpSrc, lpDst, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCurrentDirectoryA(int8_t* lpPathName)
    {
        auto win32_impl_result = WIN32_IMPL_SetCurrentDirectoryA(lpPathName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetCurrentDirectoryW(uint16_t* lpPathName)
    {
        auto win32_impl_result = WIN32_IMPL_SetCurrentDirectoryW(lpPathName);
        return win32_impl_result;
    }
    inline uint32_t GetCurrentDirectoryA(uint32_t nBufferLength, int8_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentDirectoryA(nBufferLength, lpBuffer);
        return win32_impl_result;
    }
    inline uint32_t GetCurrentDirectoryW(uint32_t nBufferLength, uint16_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentDirectoryW(nBufferLength, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseHandle(Windows::Win32::SystemServices::HANDLE hObject)
    {
        auto win32_impl_result = WIN32_IMPL_CloseHandle(hObject);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DuplicateHandle(Windows::Win32::SystemServices::HANDLE hSourceProcessHandle, Windows::Win32::SystemServices::HANDLE hSourceHandle, Windows::Win32::SystemServices::HANDLE hTargetProcessHandle, intptr_t* lpTargetHandle, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, Windows::Win32::WindowsProgramming::DUPLICATE_HANDLE_OPTIONS dwOptions)
    {
        auto win32_impl_result = WIN32_IMPL_DuplicateHandle(hSourceProcessHandle, hSourceHandle, hTargetProcessHandle, lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CompareObjectHandles(Windows::Win32::SystemServices::HANDLE hFirstObjectHandle, Windows::Win32::SystemServices::HANDLE hSecondObjectHandle)
    {
        auto win32_impl_result = WIN32_IMPL_CompareObjectHandles(hFirstObjectHandle, hSecondObjectHandle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetHandleInformation(Windows::Win32::SystemServices::HANDLE hObject, uint32_t* lpdwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_GetHandleInformation(hObject, lpdwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetHandleInformation(Windows::Win32::SystemServices::HANDLE hObject, uint32_t dwMask, Windows::Win32::WindowsProgramming::HANDLE_FLAG_OPTIONS dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_SetHandleInformation(hObject, dwMask, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryPerformanceCounter(Windows::Win32::SystemServices::LARGE_INTEGER* lpPerformanceCount)
    {
        auto win32_impl_result = WIN32_IMPL_QueryPerformanceCounter(lpPerformanceCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL QueryPerformanceFrequency(Windows::Win32::SystemServices::LARGE_INTEGER* lpFrequency)
    {
        auto win32_impl_result = WIN32_IMPL_QueryPerformanceFrequency(lpFrequency);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessDynamicEHContinuationTargets(Windows::Win32::SystemServices::HANDLE Process, uint16_t NumberOfTargets, Windows::Win32::SystemServices::PROCESS_DYNAMIC_EH_CONTINUATION_TARGET* Targets)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessDynamicEHContinuationTargets(Process, NumberOfTargets, Targets);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsProcessorFeaturePresent(uint32_t ProcessorFeature)
    {
        auto win32_impl_result = WIN32_IMPL_IsProcessorFeaturePresent(ProcessorFeature);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemTimes(Windows::Win32::WindowsProgramming::FILETIME* lpIdleTime, Windows::Win32::WindowsProgramming::FILETIME* lpKernelTime, Windows::Win32::WindowsProgramming::FILETIME* lpUserTime)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemTimes(lpIdleTime, lpKernelTime, lpUserTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemCpuSetInformation(Windows::Win32::SystemServices::SYSTEM_CPU_SET_INFORMATION* Information, uint32_t BufferLength, uint32_t* ReturnedLength, Windows::Win32::SystemServices::HANDLE Process, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemCpuSetInformation(Information, BufferLength, ReturnedLength, Process, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetProcessDefaultCpuSets(Windows::Win32::SystemServices::HANDLE Process, uint32_t* CpuSetIds, uint32_t CpuSetIdCount, uint32_t* RequiredIdCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessDefaultCpuSets(Process, CpuSetIds, CpuSetIdCount, RequiredIdCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessDefaultCpuSets(Windows::Win32::SystemServices::HANDLE Process, uint32_t* CpuSetIds, uint32_t CpuSetIdCount)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessDefaultCpuSets(Process, CpuSetIds, CpuSetIdCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetThreadSelectedCpuSets(Windows::Win32::SystemServices::HANDLE Thread, uint32_t* CpuSetIds, uint32_t CpuSetIdCount, uint32_t* RequiredIdCount)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadSelectedCpuSets(Thread, CpuSetIds, CpuSetIdCount, RequiredIdCount);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadSelectedCpuSets(Windows::Win32::SystemServices::HANDLE Thread, uint32_t* CpuSetIds, uint32_t CpuSetIdCount)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadSelectedCpuSets(Thread, CpuSetIds, CpuSetIdCount);
        return win32_impl_result;
    }
    inline void GetSystemInfo(Windows::Win32::WindowsProgramming::SYSTEM_INFO* lpSystemInfo)
    {
        WIN32_IMPL_GetSystemInfo(lpSystemInfo);
    }
    inline void GetSystemTime(Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime)
    {
        WIN32_IMPL_GetSystemTime(lpSystemTime);
    }
    inline void GetSystemTimeAsFileTime(Windows::Win32::WindowsProgramming::FILETIME* lpSystemTimeAsFileTime)
    {
        WIN32_IMPL_GetSystemTimeAsFileTime(lpSystemTimeAsFileTime);
    }
    inline void GetLocalTime(Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime)
    {
        WIN32_IMPL_GetLocalTime(lpSystemTime);
    }
    inline Windows::Win32::SystemServices::BOOL IsUserCetAvailableInEnvironment(uint32_t UserCetEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_IsUserCetAvailableInEnvironment(UserCetEnvironment);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemLeapSecondInformation(int32_t* Enabled, uint32_t* Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemLeapSecondInformation(Enabled, Flags);
        return win32_impl_result;
    }
    inline uint32_t GetVersion()
    {
        auto win32_impl_result = WIN32_IMPL_GetVersion();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetLocalTime(Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_SetLocalTime(lpSystemTime);
        return win32_impl_result;
    }
    inline uint32_t GetTickCount()
    {
        auto win32_impl_result = WIN32_IMPL_GetTickCount();
        return win32_impl_result;
    }
    inline uint64_t GetTickCount64()
    {
        auto win32_impl_result = WIN32_IMPL_GetTickCount64();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemTimeAdjustment(uint32_t* lpTimeAdjustment, uint32_t* lpTimeIncrement, int32_t* lpTimeAdjustmentDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemTimeAdjustment(lpTimeAdjustment, lpTimeIncrement, lpTimeAdjustmentDisabled);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemTimeAdjustmentPrecise(uint64_t* lpTimeAdjustment, uint64_t* lpTimeIncrement, int32_t* lpTimeAdjustmentDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemTimeAdjustmentPrecise(lpTimeAdjustment, lpTimeIncrement, lpTimeAdjustmentDisabled);
        return win32_impl_result;
    }
    inline uint32_t GetSystemDirectoryA(int8_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemDirectoryA(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemDirectoryW(uint16_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemDirectoryW(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetWindowsDirectoryA(int8_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowsDirectoryA(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetWindowsDirectoryW(uint16_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowsDirectoryW(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWindowsDirectoryA(int8_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWindowsDirectoryA(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemWindowsDirectoryW(uint16_t* lpBuffer, uint32_t uSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemWindowsDirectoryW(lpBuffer, uSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetComputerNameExA(Windows::Win32::WindowsProgramming::COMPUTER_NAME_FORMAT NameType, int8_t* lpBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerNameExA(NameType, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetComputerNameExW(Windows::Win32::WindowsProgramming::COMPUTER_NAME_FORMAT NameType, uint16_t* lpBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerNameExW(NameType, lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetComputerNameExW(Windows::Win32::WindowsProgramming::COMPUTER_NAME_FORMAT NameType, uint16_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_SetComputerNameExW(NameType, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetSystemTime(Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemTime(lpSystemTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetVersionExA(Windows::Win32::WindowsProgramming::OSVERSIONINFOA* lpVersionInformation)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionExA(lpVersionInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetVersionExW(Windows::Win32::WindowsProgramming::OSVERSIONINFOW* lpVersionInformation)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionExW(lpVersionInformation);
        return win32_impl_result;
    }
    inline void GetNativeSystemInfo(Windows::Win32::WindowsProgramming::SYSTEM_INFO* lpSystemInfo)
    {
        WIN32_IMPL_GetNativeSystemInfo(lpSystemInfo);
    }
    inline void GetSystemTimePreciseAsFileTime(Windows::Win32::WindowsProgramming::FILETIME* lpSystemTimeAsFileTime)
    {
        WIN32_IMPL_GetSystemTimePreciseAsFileTime(lpSystemTimeAsFileTime);
    }
    inline Windows::Win32::SystemServices::BOOL GetProductInfo(uint32_t dwOSMajorVersion, uint32_t dwOSMinorVersion, uint32_t dwSpMajorVersion, uint32_t dwSpMinorVersion, uint32_t* pdwReturnedProductType)
    {
        auto win32_impl_result = WIN32_IMPL_GetProductInfo(dwOSMajorVersion, dwOSMinorVersion, dwSpMajorVersion, dwSpMinorVersion, pdwReturnedProductType);
        return win32_impl_result;
    }
    inline uint64_t VerSetConditionMask(uint64_t ConditionMask, uint32_t TypeMask, uint8_t Condition)
    {
        auto win32_impl_result = WIN32_IMPL_VerSetConditionMask(ConditionMask, TypeMask, Condition);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOsSafeBootMode(uint32_t* Flags)
    {
        auto win32_impl_result = WIN32_IMPL_GetOsSafeBootMode(Flags);
        return win32_impl_result;
    }
    inline uint32_t EnumSystemFirmwareTables(uint32_t FirmwareTableProviderSignature, void* pFirmwareTableEnumBuffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_EnumSystemFirmwareTables(FirmwareTableProviderSignature, pFirmwareTableEnumBuffer, BufferSize);
        return win32_impl_result;
    }
    inline uint32_t GetSystemFirmwareTable(uint32_t FirmwareTableProviderSignature, uint32_t FirmwareTableID, void* pFirmwareTableBuffer, uint32_t BufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemFirmwareTable(FirmwareTableProviderSignature, FirmwareTableID, pFirmwareTableBuffer, BufferSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DnsHostnameToComputerNameExW(uint16_t* Hostname, uint16_t* ComputerName, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_DnsHostnameToComputerNameExW(Hostname, ComputerName, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetComputerNameEx2W(Windows::Win32::WindowsProgramming::COMPUTER_NAME_FORMAT NameType, uint32_t Flags, uint16_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_SetComputerNameEx2W(NameType, Flags, lpBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetSystemTimeAdjustment(uint32_t dwTimeAdjustment, Windows::Win32::SystemServices::BOOL bTimeAdjustmentDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemTimeAdjustment(dwTimeAdjustment, bTimeAdjustmentDisabled);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetSystemTimeAdjustmentPrecise(uint64_t dwTimeAdjustment, Windows::Win32::SystemServices::BOOL bTimeAdjustmentDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_SetSystemTimeAdjustmentPrecise(dwTimeAdjustment, bTimeAdjustmentDisabled);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetOsManufacturingMode(int32_t* pbEnabled)
    {
        auto win32_impl_result = WIN32_IMPL_GetOsManufacturingMode(pbEnabled);
        return win32_impl_result;
    }
    inline int32_t GetIntegratedDisplaySize(double* sizeInInches)
    {
        auto win32_impl_result = WIN32_IMPL_GetIntegratedDisplaySize(sizeInInches);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetComputerNameA(int8_t* lpComputerName)
    {
        auto win32_impl_result = WIN32_IMPL_SetComputerNameA(lpComputerName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetComputerNameW(uint16_t* lpComputerName)
    {
        auto win32_impl_result = WIN32_IMPL_SetComputerNameW(lpComputerName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetComputerNameExA(Windows::Win32::WindowsProgramming::COMPUTER_NAME_FORMAT NameType, int8_t* lpBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_SetComputerNameExA(NameType, lpBuffer);
        return win32_impl_result;
    }
    inline void QueryInterruptTimePrecise(uint64_t* lpInterruptTimePrecise)
    {
        WIN32_IMPL_QueryInterruptTimePrecise(lpInterruptTimePrecise);
    }
    inline void QueryUnbiasedInterruptTimePrecise(uint64_t* lpUnbiasedInterruptTimePrecise)
    {
        WIN32_IMPL_QueryUnbiasedInterruptTimePrecise(lpUnbiasedInterruptTimePrecise);
    }
    inline void QueryInterruptTime(uint64_t* lpInterruptTime)
    {
        WIN32_IMPL_QueryInterruptTime(lpInterruptTime);
    }
    inline Windows::Win32::SystemServices::BOOL QueryUnbiasedInterruptTime(uint64_t* UnbiasedTime)
    {
        auto win32_impl_result = WIN32_IMPL_QueryUnbiasedInterruptTime(UnbiasedTime);
        return win32_impl_result;
    }
    inline int32_t QueryAuxiliaryCounterFrequency(uint64_t* lpAuxiliaryCounterFrequency)
    {
        auto win32_impl_result = WIN32_IMPL_QueryAuxiliaryCounterFrequency(lpAuxiliaryCounterFrequency);
        return win32_impl_result;
    }
    inline int32_t ConvertAuxiliaryCounterToPerformanceCounter(uint64_t ullAuxiliaryCounterValue, uint64_t* lpPerformanceCounterValue, uint64_t* lpConversionError)
    {
        auto win32_impl_result = WIN32_IMPL_ConvertAuxiliaryCounterToPerformanceCounter(ullAuxiliaryCounterValue, lpPerformanceCounterValue, lpConversionError);
        return win32_impl_result;
    }
    inline int32_t ConvertPerformanceCounterToAuxiliaryCounter(uint64_t ullPerformanceCounterValue, uint64_t* lpAuxiliaryCounterValue, uint64_t* lpConversionError)
    {
        auto win32_impl_result = WIN32_IMPL_ConvertPerformanceCounterToAuxiliaryCounter(ullPerformanceCounterValue, lpAuxiliaryCounterValue, lpConversionError);
        return win32_impl_result;
    }
    inline size_t GlobalCompact(uint32_t dwMinFree)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalCompact(dwMinFree);
        return win32_impl_result;
    }
    inline void GlobalFix(intptr_t hMem)
    {
        WIN32_IMPL_GlobalFix(hMem);
    }
    inline void GlobalUnfix(intptr_t hMem)
    {
        WIN32_IMPL_GlobalUnfix(hMem);
    }
    inline void* GlobalWire(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalWire(hMem);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GlobalUnWire(intptr_t hMem)
    {
        auto win32_impl_result = WIN32_IMPL_GlobalUnWire(hMem);
        return win32_impl_result;
    }
    inline size_t LocalShrink(intptr_t hMem, uint32_t cbNewSize)
    {
        auto win32_impl_result = WIN32_IMPL_LocalShrink(hMem, cbNewSize);
        return win32_impl_result;
    }
    inline size_t LocalCompact(uint32_t uMinFree)
    {
        auto win32_impl_result = WIN32_IMPL_LocalCompact(uMinFree);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetEnvironmentStringsA(int8_t* NewEnvironment)
    {
        auto win32_impl_result = WIN32_IMPL_SetEnvironmentStringsA(NewEnvironment);
        return win32_impl_result;
    }
    inline uint32_t SetHandleCount(uint32_t uNumber)
    {
        auto win32_impl_result = WIN32_IMPL_SetHandleCount(uNumber);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL RequestDeviceWakeup(Windows::Win32::SystemServices::HANDLE hDevice)
    {
        auto win32_impl_result = WIN32_IMPL_RequestDeviceWakeup(hDevice);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CancelDeviceWakeupRequest(Windows::Win32::SystemServices::HANDLE hDevice)
    {
        auto win32_impl_result = WIN32_IMPL_CancelDeviceWakeupRequest(hDevice);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetMessageWaitingIndicator(Windows::Win32::SystemServices::HANDLE hMsgIndicator, uint32_t ulMsgCount)
    {
        auto win32_impl_result = WIN32_IMPL_SetMessageWaitingIndicator(hMsgIndicator, ulMsgCount);
        return win32_impl_result;
    }
    inline int32_t MulDiv(int32_t nNumber, int32_t nNumerator, int32_t nDenominator)
    {
        auto win32_impl_result = WIN32_IMPL_MulDiv(nNumber, nNumerator, nDenominator);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetSystemRegistryQuota(uint32_t* pdwQuotaAllowed, uint32_t* pdwQuotaUsed)
    {
        auto win32_impl_result = WIN32_IMPL_GetSystemRegistryQuota(pdwQuotaAllowed, pdwQuotaUsed);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FileTimeToDosDateTime(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime, uint16_t* lpFatDate, uint16_t* lpFatTime)
    {
        auto win32_impl_result = WIN32_IMPL_FileTimeToDosDateTime(lpFileTime, lpFatDate, lpFatTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DosDateTimeToFileTime(uint16_t wFatDate, uint16_t wFatTime, Windows::Win32::WindowsProgramming::FILETIME* lpFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_DosDateTimeToFileTime(wFatDate, wFatTime, lpFileTime);
        return win32_impl_result;
    }
    inline int32_t _lopen(int8_t* lpPathName, int32_t iReadWrite)
    {
        auto win32_impl_result = WIN32_IMPL__lopen(lpPathName, iReadWrite);
        return win32_impl_result;
    }
    inline int32_t _lcreat(int8_t* lpPathName, int32_t iAttribute)
    {
        auto win32_impl_result = WIN32_IMPL__lcreat(lpPathName, iAttribute);
        return win32_impl_result;
    }
    inline uint32_t _lread(int32_t hFile, void* lpBuffer, uint32_t uBytes)
    {
        auto win32_impl_result = WIN32_IMPL__lread(hFile, lpBuffer, uBytes);
        return win32_impl_result;
    }
    inline uint32_t _lwrite(int32_t hFile, int8_t* lpBuffer, uint32_t uBytes)
    {
        auto win32_impl_result = WIN32_IMPL__lwrite(hFile, lpBuffer, uBytes);
        return win32_impl_result;
    }
    inline int32_t _hread(int32_t hFile, void* lpBuffer, int32_t lBytes)
    {
        auto win32_impl_result = WIN32_IMPL__hread(hFile, lpBuffer, lBytes);
        return win32_impl_result;
    }
    inline int32_t _hwrite(int32_t hFile, int8_t* lpBuffer, int32_t lBytes)
    {
        auto win32_impl_result = WIN32_IMPL__hwrite(hFile, lpBuffer, lBytes);
        return win32_impl_result;
    }
    inline int32_t _lclose(int32_t hFile)
    {
        auto win32_impl_result = WIN32_IMPL__lclose(hFile);
        return win32_impl_result;
    }
    inline int32_t _llseek(int32_t hFile, int32_t lOffset, int32_t iOrigin)
    {
        auto win32_impl_result = WIN32_IMPL__llseek(hFile, lOffset, iOrigin);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenMutexA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenMutexA(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenSemaphoreA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenSemaphoreA(dwDesiredAccess, bInheritHandle, lpName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateWaitableTimerA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpTimerAttributes, Windows::Win32::SystemServices::BOOL bManualReset, int8_t* lpTimerName)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWaitableTimerA(lpTimerAttributes, bManualReset, lpTimerName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE OpenWaitableTimerA(uint32_t dwDesiredAccess, Windows::Win32::SystemServices::BOOL bInheritHandle, int8_t* lpTimerName)
    {
        auto win32_impl_result = WIN32_IMPL_OpenWaitableTimerA(dwDesiredAccess, bInheritHandle, lpTimerName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE CreateWaitableTimerExA(Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpTimerAttributes, int8_t* lpTimerName, uint32_t dwFlags, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWaitableTimerExA(lpTimerAttributes, lpTimerName, dwFlags, dwDesiredAccess);
        return win32_impl_result;
    }
    inline void GetStartupInfoA(Windows::Win32::SystemServices::STARTUPINFOA* lpStartupInfo)
    {
        WIN32_IMPL_GetStartupInfoA(lpStartupInfo);
    }
    inline uint32_t GetFirmwareEnvironmentVariableA(int8_t* lpName, int8_t* lpGuid, void* pBuffer, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetFirmwareEnvironmentVariableA(lpName, lpGuid, pBuffer, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetFirmwareEnvironmentVariableW(uint16_t* lpName, uint16_t* lpGuid, void* pBuffer, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetFirmwareEnvironmentVariableW(lpName, lpGuid, pBuffer, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetFirmwareEnvironmentVariableExA(int8_t* lpName, int8_t* lpGuid, void* pBuffer, uint32_t nSize, uint32_t* pdwAttribubutes)
    {
        auto win32_impl_result = WIN32_IMPL_GetFirmwareEnvironmentVariableExA(lpName, lpGuid, pBuffer, nSize, pdwAttribubutes);
        return win32_impl_result;
    }
    inline uint32_t GetFirmwareEnvironmentVariableExW(uint16_t* lpName, uint16_t* lpGuid, void* pBuffer, uint32_t nSize, uint32_t* pdwAttribubutes)
    {
        auto win32_impl_result = WIN32_IMPL_GetFirmwareEnvironmentVariableExW(lpName, lpGuid, pBuffer, nSize, pdwAttribubutes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFirmwareEnvironmentVariableA(int8_t* lpName, int8_t* lpGuid, void* pValue, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetFirmwareEnvironmentVariableA(lpName, lpGuid, pValue, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFirmwareEnvironmentVariableW(uint16_t* lpName, uint16_t* lpGuid, void* pValue, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_SetFirmwareEnvironmentVariableW(lpName, lpGuid, pValue, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFirmwareEnvironmentVariableExA(int8_t* lpName, int8_t* lpGuid, void* pValue, uint32_t nSize, uint32_t dwAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_SetFirmwareEnvironmentVariableExA(lpName, lpGuid, pValue, nSize, dwAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetFirmwareEnvironmentVariableExW(uint16_t* lpName, uint16_t* lpGuid, void* pValue, uint32_t nSize, uint32_t dwAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_SetFirmwareEnvironmentVariableExW(lpName, lpGuid, pValue, nSize, dwAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetFirmwareType(Windows::Win32::WindowsProgramming::FIRMWARE_TYPE* FirmwareType)
    {
        auto win32_impl_result = WIN32_IMPL_GetFirmwareType(FirmwareType);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsNativeVhdBoot(int32_t* NativeVhdBoot)
    {
        auto win32_impl_result = WIN32_IMPL_IsNativeVhdBoot(NativeVhdBoot);
        return win32_impl_result;
    }
    inline uint32_t GetProfileIntA(int8_t* lpAppName, int8_t* lpKeyName, int32_t nDefault)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileIntA(lpAppName, lpKeyName, nDefault);
        return win32_impl_result;
    }
    inline uint32_t GetProfileIntW(uint16_t* lpAppName, uint16_t* lpKeyName, int32_t nDefault)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileIntW(lpAppName, lpKeyName, nDefault);
        return win32_impl_result;
    }
    inline uint32_t GetProfileStringA(int8_t* lpAppName, int8_t* lpKeyName, int8_t* lpDefault, int8_t* lpReturnedString, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileStringA(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetProfileStringW(uint16_t* lpAppName, uint16_t* lpKeyName, uint16_t* lpDefault, uint16_t* lpReturnedString, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileStringW(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteProfileStringA(int8_t* lpAppName, int8_t* lpKeyName, int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_WriteProfileStringA(lpAppName, lpKeyName, lpString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteProfileStringW(uint16_t* lpAppName, uint16_t* lpKeyName, uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_WriteProfileStringW(lpAppName, lpKeyName, lpString);
        return win32_impl_result;
    }
    inline uint32_t GetProfileSectionA(int8_t* lpAppName, int8_t* lpReturnedString, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileSectionA(lpAppName, lpReturnedString, nSize);
        return win32_impl_result;
    }
    inline uint32_t GetProfileSectionW(uint16_t* lpAppName, uint16_t* lpReturnedString, uint32_t nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetProfileSectionW(lpAppName, lpReturnedString, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteProfileSectionA(int8_t* lpAppName, int8_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_WriteProfileSectionA(lpAppName, lpString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WriteProfileSectionW(uint16_t* lpAppName, uint16_t* lpString)
    {
        auto win32_impl_result = WIN32_IMPL_WriteProfileSectionW(lpAppName, lpString);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileIntA(int8_t* lpAppName, int8_t* lpKeyName, int32_t nDefault, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileIntA(lpAppName, lpKeyName, nDefault, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileIntW(uint16_t* lpAppName, uint16_t* lpKeyName, int32_t nDefault, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileIntW(lpAppName, lpKeyName, nDefault, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileStringA(int8_t* lpAppName, int8_t* lpKeyName, int8_t* lpDefault, int8_t* lpReturnedString, uint32_t nSize, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileStringA(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileStringW(uint16_t* lpAppName, uint16_t* lpKeyName, uint16_t* lpDefault, uint16_t* lpReturnedString, uint32_t nSize, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileStringW(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileStringA(int8_t* lpAppName, int8_t* lpKeyName, int8_t* lpString, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileStringA(lpAppName, lpKeyName, lpString, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileStringW(uint16_t* lpAppName, uint16_t* lpKeyName, uint16_t* lpString, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileStringW(lpAppName, lpKeyName, lpString, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileSectionA(int8_t* lpAppName, int8_t* lpReturnedString, uint32_t nSize, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileSectionA(lpAppName, lpReturnedString, nSize, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileSectionW(uint16_t* lpAppName, uint16_t* lpReturnedString, uint32_t nSize, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileSectionW(lpAppName, lpReturnedString, nSize, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileSectionA(int8_t* lpAppName, int8_t* lpString, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileSectionA(lpAppName, lpString, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileSectionW(uint16_t* lpAppName, uint16_t* lpString, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileSectionW(lpAppName, lpString, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileSectionNamesA(int8_t* lpszReturnBuffer, uint32_t nSize, int8_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileSectionNamesA(lpszReturnBuffer, nSize, lpFileName);
        return win32_impl_result;
    }
    inline uint32_t GetPrivateProfileSectionNamesW(uint16_t* lpszReturnBuffer, uint32_t nSize, uint16_t* lpFileName)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileSectionNamesW(lpszReturnBuffer, nSize, lpFileName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrivateProfileStructA(int8_t* lpszSection, int8_t* lpszKey, void* lpStruct, uint32_t uSizeStruct, int8_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileStructA(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetPrivateProfileStructW(uint16_t* lpszSection, uint16_t* lpszKey, void* lpStruct, uint32_t uSizeStruct, uint16_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_GetPrivateProfileStructW(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileStructA(int8_t* lpszSection, int8_t* lpszKey, void* lpStruct, uint32_t uSizeStruct, int8_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileStructA(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WritePrivateProfileStructW(uint16_t* lpszSection, uint16_t* lpszKey, void* lpStruct, uint32_t uSizeStruct, uint16_t* szFile)
    {
        auto win32_impl_result = WIN32_IMPL_WritePrivateProfileStructW(lpszSection, lpszKey, lpStruct, uSizeStruct, szFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadHugeReadPtr(void* lp, size_t ucb)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadHugeReadPtr(lp, ucb);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsBadHugeWritePtr(void* lp, size_t ucb)
    {
        auto win32_impl_result = WIN32_IMPL_IsBadHugeWritePtr(lp, ucb);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetComputerNameA(int8_t* lpBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerNameA(lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetComputerNameW(uint16_t* lpBuffer, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_GetComputerNameW(lpBuffer, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DnsHostnameToComputerNameA(int8_t* Hostname, int8_t* ComputerName, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_DnsHostnameToComputerNameA(Hostname, ComputerName, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL DnsHostnameToComputerNameW(uint16_t* Hostname, uint16_t* ComputerName, uint32_t* nSize)
    {
        auto win32_impl_result = WIN32_IMPL_DnsHostnameToComputerNameW(Hostname, ComputerName, nSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUserNameA(int8_t* lpBuffer, uint32_t* pcbBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserNameA(lpBuffer, pcbBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUserNameW(uint16_t* lpBuffer, uint32_t* pcbBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserNameW(lpBuffer, pcbBuffer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsTokenUntrusted(Windows::Win32::SystemServices::HANDLE TokenHandle)
    {
        auto win32_impl_result = WIN32_IMPL_IsTokenUntrusted(TokenHandle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::HANDLE SetTimerQueueTimer(Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::WAITORTIMERCALLBACK* Callback, void* Parameter, uint32_t DueTime, uint32_t Period, Windows::Win32::SystemServices::BOOL PreferIo)
    {
        auto win32_impl_result = WIN32_IMPL_SetTimerQueueTimer(TimerQueue, Callback, Parameter, DueTime, Period, PreferIo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CancelTimerQueueTimer(Windows::Win32::SystemServices::HANDLE TimerQueue, Windows::Win32::SystemServices::HANDLE Timer)
    {
        auto win32_impl_result = WIN32_IMPL_CancelTimerQueueTimer(TimerQueue, Timer);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentHwProfileA(Windows::Win32::WindowsProgramming::HW_PROFILE_INFOA* lpHwProfileInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentHwProfileA(lpHwProfileInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetCurrentHwProfileW(Windows::Win32::WindowsProgramming::HW_PROFILE_INFOW* lpHwProfileInfo)
    {
        auto win32_impl_result = WIN32_IMPL_GetCurrentHwProfileW(lpHwProfileInfo);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VerifyVersionInfoA(Windows::Win32::WindowsProgramming::OSVERSIONINFOEXA* lpVersionInformation, uint32_t dwTypeMask, uint64_t dwlConditionMask)
    {
        auto win32_impl_result = WIN32_IMPL_VerifyVersionInfoA(lpVersionInformation, dwTypeMask, dwlConditionMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL VerifyVersionInfoW(Windows::Win32::WindowsProgramming::OSVERSIONINFOEXW* lpVersionInformation, uint32_t dwTypeMask, uint64_t dwlConditionMask)
    {
        auto win32_impl_result = WIN32_IMPL_VerifyVersionInfoW(lpVersionInformation, dwTypeMask, dwlConditionMask);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SystemTimeToTzSpecificLocalTime(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* lpTimeZoneInformation, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpUniversalTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpLocalTime)
    {
        auto win32_impl_result = WIN32_IMPL_SystemTimeToTzSpecificLocalTime(lpTimeZoneInformation, lpUniversalTime, lpLocalTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TzSpecificLocalTimeToSystemTime(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* lpTimeZoneInformation, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpLocalTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpUniversalTime)
    {
        auto win32_impl_result = WIN32_IMPL_TzSpecificLocalTimeToSystemTime(lpTimeZoneInformation, lpLocalTime, lpUniversalTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FileTimeToSystemTime(Windows::Win32::WindowsProgramming::FILETIME* lpFileTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_FileTimeToSystemTime(lpFileTime, lpSystemTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SystemTimeToFileTime(Windows::Win32::WindowsProgramming::SYSTEMTIME* lpSystemTime, Windows::Win32::WindowsProgramming::FILETIME* lpFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_SystemTimeToFileTime(lpSystemTime, lpFileTime);
        return win32_impl_result;
    }
    inline uint32_t GetTimeZoneInformation(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* lpTimeZoneInformation)
    {
        auto win32_impl_result = WIN32_IMPL_GetTimeZoneInformation(lpTimeZoneInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetTimeZoneInformation(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* lpTimeZoneInformation)
    {
        auto win32_impl_result = WIN32_IMPL_SetTimeZoneInformation(lpTimeZoneInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetDynamicTimeZoneInformation(Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation)
    {
        auto win32_impl_result = WIN32_IMPL_SetDynamicTimeZoneInformation(lpTimeZoneInformation);
        return win32_impl_result;
    }
    inline uint32_t GetDynamicTimeZoneInformation(Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* pTimeZoneInformation)
    {
        auto win32_impl_result = WIN32_IMPL_GetDynamicTimeZoneInformation(pTimeZoneInformation);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetTimeZoneInformationForYear(uint16_t wYear, Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* pdtzi, Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* ptzi)
    {
        auto win32_impl_result = WIN32_IMPL_GetTimeZoneInformationForYear(wYear, pdtzi, ptzi);
        return win32_impl_result;
    }
    inline uint32_t EnumDynamicTimeZoneInformation(uint32_t dwIndex, Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDynamicTimeZoneInformation(dwIndex, lpTimeZoneInformation);
        return win32_impl_result;
    }
    inline uint32_t GetDynamicTimeZoneInformationEffectiveYears(Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, uint32_t* FirstYear, uint32_t* LastYear)
    {
        auto win32_impl_result = WIN32_IMPL_GetDynamicTimeZoneInformationEffectiveYears(lpTimeZoneInformation, FirstYear, LastYear);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SystemTimeToTzSpecificLocalTimeEx(Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpUniversalTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpLocalTime)
    {
        auto win32_impl_result = WIN32_IMPL_SystemTimeToTzSpecificLocalTimeEx(lpTimeZoneInformation, lpUniversalTime, lpLocalTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL TzSpecificLocalTimeToSystemTimeEx(Windows::Win32::WindowsProgramming::DYNAMIC_TIME_ZONE_INFORMATION* lpTimeZoneInformation, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpLocalTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* lpUniversalTime)
    {
        auto win32_impl_result = WIN32_IMPL_TzSpecificLocalTimeToSystemTimeEx(lpTimeZoneInformation, lpLocalTime, lpUniversalTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LocalFileTimeToLocalSystemTime(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* timeZoneInformation, Windows::Win32::WindowsProgramming::FILETIME* localFileTime, Windows::Win32::WindowsProgramming::SYSTEMTIME* localSystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_LocalFileTimeToLocalSystemTime(timeZoneInformation, localFileTime, localSystemTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL LocalSystemTimeToLocalFileTime(Windows::Win32::WindowsProgramming::TIME_ZONE_INFORMATION* timeZoneInformation, Windows::Win32::WindowsProgramming::SYSTEMTIME* localSystemTime, Windows::Win32::WindowsProgramming::FILETIME* localFileTime)
    {
        auto win32_impl_result = WIN32_IMPL_LocalSystemTimeToLocalFileTime(timeZoneInformation, localSystemTime, localFileTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CreateJobSet(uint32_t NumJob, Windows::Win32::SystemServices::JOB_SET_ARRAY* UserJobSet, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_CreateJobSet(NumJob, UserJobSet, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ReplacePartitionUnit(uint16_t* TargetPartition, uint16_t* SparePartition, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_ReplacePartitionUnit(TargetPartition, SparePartition, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL InitializeContext2(void* Buffer, uint32_t ContextFlags, Windows::Win32::Debug::CONTEXT** Context, uint32_t* ContextLength, uint64_t XStateCompactionMask)
    {
        auto win32_impl_result = WIN32_IMPL_InitializeContext2(Buffer, ContextFlags, Context, ContextLength, XStateCompactionMask);
        return win32_impl_result;
    }
    inline uint32_t RaiseCustomSystemEventTrigger(Windows::Win32::SystemServices::CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG* CustomSystemEventTriggerConfig)
    {
        auto win32_impl_result = WIN32_IMPL_RaiseCustomSystemEventTrigger(CustomSystemEventTriggerConfig);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCloseKey(Windows::Win32::WindowsProgramming::HKEY hKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegCloseKey(hKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOverridePredefKey(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsProgramming::HKEY hNewHKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegOverridePredefKey(hKey, hNewHKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenUserClassesRoot(Windows::Win32::SystemServices::HANDLE hToken, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenUserClassesRoot(hToken, dwOptions, samDesired, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenCurrentUser(uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenCurrentUser(samDesired, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDisablePredefinedCache()
    {
        auto win32_impl_result = WIN32_IMPL_RegDisablePredefinedCache();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDisablePredefinedCacheEx()
    {
        auto win32_impl_result = WIN32_IMPL_RegDisablePredefinedCacheEx();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegConnectRegistryA(int8_t* lpMachineName, Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegConnectRegistryA(lpMachineName, hKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegConnectRegistryW(uint16_t* lpMachineName, Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegConnectRegistryW(lpMachineName, hKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegConnectRegistryExA(int8_t* lpMachineName, Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t Flags, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegConnectRegistryExA(lpMachineName, hKey, Flags, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegConnectRegistryExW(uint16_t* lpMachineName, Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t Flags, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegConnectRegistryExW(lpMachineName, hKey, Flags, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyA(hKey, lpSubKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyW(hKey, lpSubKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t Reserved, int8_t* lpClass, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t* lpdwDisposition)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyExA(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t Reserved, uint16_t* lpClass, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t* lpdwDisposition)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyExW(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyTransactedA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t Reserved, int8_t* lpClass, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t* lpdwDisposition, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParemeter)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyTransactedA(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition, hTransaction, pExtendedParemeter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCreateKeyTransactedW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t Reserved, uint16_t* lpClass, uint32_t dwOptions, uint32_t samDesired, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t* lpdwDisposition, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParemeter)
    {
        auto win32_impl_result = WIN32_IMPL_RegCreateKeyTransactedW(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition, hTransaction, pExtendedParemeter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyA(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyW(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t samDesired, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyExA(hKey, lpSubKey, samDesired, Reserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t samDesired, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyExW(hKey, lpSubKey, samDesired, Reserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyTransactedA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t samDesired, uint32_t Reserved, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParameter)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyTransactedA(hKey, lpSubKey, samDesired, Reserved, hTransaction, pExtendedParameter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyTransactedW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t samDesired, uint32_t Reserved, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParameter)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyTransactedW(hKey, lpSubKey, samDesired, Reserved, hTransaction, pExtendedParameter);
        return win32_impl_result;
    }
    inline int32_t RegDisableReflectionKey(Windows::Win32::WindowsProgramming::HKEY hBase)
    {
        auto win32_impl_result = WIN32_IMPL_RegDisableReflectionKey(hBase);
        return win32_impl_result;
    }
    inline int32_t RegEnableReflectionKey(Windows::Win32::WindowsProgramming::HKEY hBase)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnableReflectionKey(hBase);
        return win32_impl_result;
    }
    inline int32_t RegQueryReflectionKey(Windows::Win32::WindowsProgramming::HKEY hBase, int32_t* bIsReflectionDisabled)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryReflectionKey(hBase, bIsReflectionDisabled);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteValueA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpValueName)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteValueA(hKey, lpValueName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpValueName)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteValueW(hKey, lpValueName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, int8_t* lpName, uint32_t cchName)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumKeyA(hKey, dwIndex, lpName, cchName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, uint16_t* lpName, uint32_t cchName)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumKeyW(hKey, dwIndex, lpName, cchName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumKeyExA(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, int8_t* lpName, uint32_t* lpcchName, uint32_t* lpReserved, int8_t* lpClass, uint32_t* lpcchClass, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumKeyExA(hKey, dwIndex, lpName, lpcchName, lpReserved, lpClass, lpcchClass, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumKeyExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, uint16_t* lpName, uint32_t* lpcchName, uint32_t* lpReserved, uint16_t* lpClass, uint32_t* lpcchClass, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumKeyExW(hKey, dwIndex, lpName, lpcchName, lpReserved, lpClass, lpcchClass, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumValueA(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, int8_t* lpValueName, uint32_t* lpcchValueName, uint32_t* lpReserved, uint32_t* lpType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumValueA(hKey, dwIndex, lpValueName, lpcchValueName, lpReserved, lpType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegEnumValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint32_t dwIndex, uint16_t* lpValueName, uint32_t* lpcchValueName, uint32_t* lpReserved, uint32_t* lpType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegEnumValueW(hKey, dwIndex, lpValueName, lpcchValueName, lpReserved, lpType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegFlushKey(Windows::Win32::WindowsProgramming::HKEY hKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegFlushKey(hKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, int8_t* lpFile)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadKeyA(hKey, lpSubKey, lpFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint16_t* lpFile)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadKeyW(hKey, lpSubKey, lpFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegNotifyChangeKeyValue(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::SystemServices::BOOL bWatchSubtree, uint32_t dwNotifyFilter, Windows::Win32::SystemServices::HANDLE hEvent, Windows::Win32::SystemServices::BOOL fAsynchronous)
    {
        auto win32_impl_result = WIN32_IMPL_RegNotifyChangeKeyValue(hKey, bWatchSubtree, dwNotifyFilter, hEvent, fAsynchronous);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyA(hKey, lpSubKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyW(hKey, lpSubKey, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t ulOptions, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyExA(hKey, lpSubKey, ulOptions, samDesired, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t ulOptions, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyExW(hKey, lpSubKey, ulOptions, samDesired, phkResult);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyTransactedA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t ulOptions, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParemeter)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyTransactedA(hKey, lpSubKey, ulOptions, samDesired, phkResult, hTransaction, pExtendedParemeter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegOpenKeyTransactedW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t ulOptions, uint32_t samDesired, Windows::Win32::WindowsProgramming::HKEY* phkResult, Windows::Win32::SystemServices::HANDLE hTransaction, void* pExtendedParemeter)
    {
        auto win32_impl_result = WIN32_IMPL_RegOpenKeyTransactedW(hKey, lpSubKey, ulOptions, samDesired, phkResult, hTransaction, pExtendedParemeter);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryInfoKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpClass, uint32_t* lpcchClass, uint32_t* lpReserved, uint32_t* lpcSubKeys, uint32_t* lpcbMaxSubKeyLen, uint32_t* lpcbMaxClassLen, uint32_t* lpcValues, uint32_t* lpcbMaxValueNameLen, uint32_t* lpcbMaxValueLen, uint32_t* lpcbSecurityDescriptor, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryInfoKeyA(hKey, lpClass, lpcchClass, lpReserved, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryInfoKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpClass, uint32_t* lpcchClass, uint32_t* lpReserved, uint32_t* lpcSubKeys, uint32_t* lpcbMaxSubKeyLen, uint32_t* lpcbMaxClassLen, uint32_t* lpcValues, uint32_t* lpcbMaxValueNameLen, uint32_t* lpcbMaxValueLen, uint32_t* lpcbSecurityDescriptor, Windows::Win32::WindowsProgramming::FILETIME* lpftLastWriteTime)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryInfoKeyW(hKey, lpClass, lpcchClass, lpReserved, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryValueA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, int8_t* lpData, int32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryValueA(hKey, lpSubKey, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint16_t* lpData, int32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryValueW(hKey, lpSubKey, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryMultipleValuesA(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsProgramming::VALENTA* val_list, uint32_t num_vals, int8_t* lpValueBuf, uint32_t* ldwTotsize)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryMultipleValuesA(hKey, val_list, num_vals, lpValueBuf, ldwTotsize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryMultipleValuesW(Windows::Win32::WindowsProgramming::HKEY hKey, Windows::Win32::WindowsProgramming::VALENTW* val_list, uint32_t num_vals, uint16_t* lpValueBuf, uint32_t* ldwTotsize)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryMultipleValuesW(hKey, val_list, num_vals, lpValueBuf, ldwTotsize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryValueExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpValueName, uint32_t* lpReserved, uint32_t* lpType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryValueExA(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegQueryValueExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpValueName, uint32_t* lpReserved, uint32_t* lpType, uint8_t* lpData, uint32_t* lpcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegQueryValueExW(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegReplaceKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, int8_t* lpNewFile, int8_t* lpOldFile)
    {
        auto win32_impl_result = WIN32_IMPL_RegReplaceKeyA(hKey, lpSubKey, lpNewFile, lpOldFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegReplaceKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint16_t* lpNewFile, uint16_t* lpOldFile)
    {
        auto win32_impl_result = WIN32_IMPL_RegReplaceKeyW(hKey, lpSubKey, lpNewFile, lpOldFile);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegRestoreKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegRestoreKeyA(hKey, lpFile, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegRestoreKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegRestoreKeyW(hKey, lpFile, dwFlags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegRenameKey(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKeyName, uint16_t* lpNewKeyName)
    {
        auto win32_impl_result = WIN32_IMPL_RegRenameKey(hKey, lpSubKeyName, lpNewKeyName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSaveKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveKeyA(hKey, lpFile, lpSecurityAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSaveKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveKeyW(hKey, lpFile, lpSecurityAttributes);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetValueA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, uint32_t dwType, int8_t* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetValueA(hKey, lpSubKey, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint32_t dwType, uint16_t* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetValueW(hKey, lpSubKey, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetValueExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpValueName, uint32_t Reserved, uint32_t dwType, uint8_t* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetValueExA(hKey, lpValueName, Reserved, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetValueExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpValueName, uint32_t Reserved, uint32_t dwType, uint8_t* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetValueExW(hKey, lpValueName, Reserved, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegUnLoadKeyA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegUnLoadKeyA(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegUnLoadKeyW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegUnLoadKeyW(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyValueA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, int8_t* lpValueName)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyValueA(hKey, lpSubKey, lpValueName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteKeyValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint16_t* lpValueName)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteKeyValueW(hKey, lpSubKey, lpValueName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetKeyValueA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey, int8_t* lpValueName, uint32_t dwType, void* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetKeyValueA(hKey, lpSubKey, lpValueName, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSetKeyValueW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey, uint16_t* lpValueName, uint32_t dwType, void* lpData, uint32_t cbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegSetKeyValueW(hKey, lpSubKey, lpValueName, dwType, lpData, cbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteTreeA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteTreeA(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegDeleteTreeW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpSubKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegDeleteTreeW(hKey, lpSubKey);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCopyTreeA(Windows::Win32::WindowsProgramming::HKEY hKeySrc, int8_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY hKeyDest)
    {
        auto win32_impl_result = WIN32_IMPL_RegCopyTreeA(hKeySrc, lpSubKey, hKeyDest);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegGetValueA(Windows::Win32::WindowsProgramming::HKEY hkey, int8_t* lpSubKey, int8_t* lpValue, uint32_t dwFlags, uint32_t* pdwType, void* pvData, uint32_t* pcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegGetValueA(hkey, lpSubKey, lpValue, dwFlags, pdwType, pvData, pcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegGetValueW(Windows::Win32::WindowsProgramming::HKEY hkey, uint16_t* lpSubKey, uint16_t* lpValue, uint32_t dwFlags, uint32_t* pdwType, void* pvData, uint32_t* pcbData)
    {
        auto win32_impl_result = WIN32_IMPL_RegGetValueW(hkey, lpSubKey, lpValue, dwFlags, pdwType, pvData, pcbData);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegCopyTreeW(Windows::Win32::WindowsProgramming::HKEY hKeySrc, uint16_t* lpSubKey, Windows::Win32::WindowsProgramming::HKEY hKeyDest)
    {
        auto win32_impl_result = WIN32_IMPL_RegCopyTreeW(hKeySrc, lpSubKey, hKeyDest);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadMUIStringA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* pszValue, int8_t* pszOutBuf, uint32_t cbOutBuf, uint32_t* pcbData, uint32_t Flags, int8_t* pszDirectory)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadMUIStringA(hKey, pszValue, pszOutBuf, cbOutBuf, pcbData, Flags, pszDirectory);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadMUIStringW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* pszValue, uint16_t* pszOutBuf, uint32_t cbOutBuf, uint32_t* pcbData, uint32_t Flags, uint16_t* pszDirectory)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadMUIStringW(hKey, pszValue, pszOutBuf, cbOutBuf, pcbData, Flags, pszDirectory);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadAppKeyA(int8_t* lpFile, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t samDesired, uint32_t dwOptions, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadAppKeyA(lpFile, phkResult, samDesired, dwOptions, Reserved);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegLoadAppKeyW(uint16_t* lpFile, Windows::Win32::WindowsProgramming::HKEY* phkResult, uint32_t samDesired, uint32_t dwOptions, uint32_t Reserved)
    {
        auto win32_impl_result = WIN32_IMPL_RegLoadAppKeyW(lpFile, phkResult, samDesired, dwOptions, Reserved);
        return win32_impl_result;
    }
    inline uint32_t CheckForHiberboot(uint8_t* pHiberboot, uint8_t bClearFlag)
    {
        auto win32_impl_result = WIN32_IMPL_CheckForHiberboot(pHiberboot, bClearFlag);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSaveKeyExA(Windows::Win32::WindowsProgramming::HKEY hKey, int8_t* lpFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveKeyExA(hKey, lpFile, lpSecurityAttributes, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS RegSaveKeyExW(Windows::Win32::WindowsProgramming::HKEY hKey, uint16_t* lpFile, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpSecurityAttributes, uint32_t Flags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveKeyExW(hKey, lpFile, lpSecurityAttributes, Flags);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtClose(Windows::Win32::SystemServices::HANDLE Handle)
    {
        auto win32_impl_result = WIN32_IMPL_NtClose(Handle);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtCreateFile(intptr_t* FileHandle, uint32_t DesiredAccess, Windows::Win32::WindowsProgramming::OBJECT_ATTRIBUTES* ObjectAttributes, Windows::Win32::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, Windows::Win32::SystemServices::LARGE_INTEGER* AllocationSize, uint32_t FileAttributes, uint32_t ShareAccess, uint32_t CreateDisposition, uint32_t CreateOptions, void* EaBuffer, uint32_t EaLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtCreateFile(FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, AllocationSize, FileAttributes, ShareAccess, CreateDisposition, CreateOptions, EaBuffer, EaLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtOpenFile(intptr_t* FileHandle, uint32_t DesiredAccess, Windows::Win32::WindowsProgramming::OBJECT_ATTRIBUTES* ObjectAttributes, Windows::Win32::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t ShareAccess, uint32_t OpenOptions)
    {
        auto win32_impl_result = WIN32_IMPL_NtOpenFile(FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, ShareAccess, OpenOptions);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtRenameKey(Windows::Win32::SystemServices::HANDLE KeyHandle, Windows::Win32::Security::UNICODE_STRING* NewName)
    {
        auto win32_impl_result = WIN32_IMPL_NtRenameKey(KeyHandle, NewName);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtNotifyChangeMultipleKeys(Windows::Win32::SystemServices::HANDLE MasterKeyHandle, uint32_t Count, Windows::Win32::WindowsProgramming::OBJECT_ATTRIBUTES* SubordinateObjects, Windows::Win32::SystemServices::HANDLE Event, Windows::Win32::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, Windows::Win32::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t CompletionFilter, uint8_t WatchTree, void* Buffer, uint32_t BufferSize, uint8_t Asynchronous)
    {
        auto win32_impl_result = WIN32_IMPL_NtNotifyChangeMultipleKeys(MasterKeyHandle, Count, SubordinateObjects, Event, ApcRoutine, ApcContext, IoStatusBlock, CompletionFilter, WatchTree, Buffer, BufferSize, Asynchronous);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQueryMultipleValueKey(Windows::Win32::SystemServices::HANDLE KeyHandle, Windows::Win32::WindowsProgramming::KEY_VALUE_ENTRY* ValueEntries, uint32_t EntryCount, void* ValueBuffer, uint32_t* BufferLength, uint32_t* RequiredBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtQueryMultipleValueKey(KeyHandle, ValueEntries, EntryCount, ValueBuffer, BufferLength, RequiredBufferLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtSetInformationKey(Windows::Win32::SystemServices::HANDLE KeyHandle, Windows::Win32::WindowsProgramming::KEY_SET_INFORMATION_CLASS KeySetInformationClass, void* KeySetInformation, uint32_t KeySetInformationLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtSetInformationKey(KeyHandle, KeySetInformationClass, KeySetInformation, KeySetInformationLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtDeviceIoControlFile(Windows::Win32::SystemServices::HANDLE FileHandle, Windows::Win32::SystemServices::HANDLE Event, Windows::Win32::WindowsProgramming::PIO_APC_ROUTINE* ApcRoutine, void* ApcContext, Windows::Win32::WindowsProgramming::IO_STATUS_BLOCK* IoStatusBlock, uint32_t IoControlCode, void* InputBuffer, uint32_t InputBufferLength, void* OutputBuffer, uint32_t OutputBufferLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtDeviceIoControlFile(FileHandle, Event, ApcRoutine, ApcContext, IoStatusBlock, IoControlCode, InputBuffer, InputBufferLength, OutputBuffer, OutputBufferLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtWaitForSingleObject(Windows::Win32::SystemServices::HANDLE Handle, uint8_t Alertable, Windows::Win32::SystemServices::LARGE_INTEGER* Timeout)
    {
        auto win32_impl_result = WIN32_IMPL_NtWaitForSingleObject(Handle, Alertable, Timeout);
        return win32_impl_result;
    }
    inline uint8_t RtlIsNameLegalDOS8Dot3(Windows::Win32::Security::UNICODE_STRING* Name, Windows::Win32::WindowsProgramming::STRING* OemName, uint8_t* NameContainsSpaces)
    {
        auto win32_impl_result = WIN32_IMPL_RtlIsNameLegalDOS8Dot3(Name, OemName, NameContainsSpaces);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQueryObject(Windows::Win32::SystemServices::HANDLE Handle, Windows::Win32::WindowsProgramming::OBJECT_INFORMATION_CLASS ObjectInformationClass, void* ObjectInformation, uint32_t ObjectInformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtQueryObject(Handle, ObjectInformationClass, ObjectInformation, ObjectInformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQuerySystemInformation(Windows::Win32::WindowsProgramming::SYSTEM_INFORMATION_CLASS SystemInformationClass, void* SystemInformation, uint32_t SystemInformationLength, uint32_t* ReturnLength)
    {
        auto win32_impl_result = WIN32_IMPL_NtQuerySystemInformation(SystemInformationClass, SystemInformation, SystemInformationLength, ReturnLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS NtQuerySystemTime(Windows::Win32::SystemServices::LARGE_INTEGER* SystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_NtQuerySystemTime(SystemTime);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlLocalTimeToSystemTime(Windows::Win32::SystemServices::LARGE_INTEGER* LocalTime, Windows::Win32::SystemServices::LARGE_INTEGER* SystemTime)
    {
        auto win32_impl_result = WIN32_IMPL_RtlLocalTimeToSystemTime(LocalTime, SystemTime);
        return win32_impl_result;
    }
    inline uint8_t RtlTimeToSecondsSince1970(Windows::Win32::SystemServices::LARGE_INTEGER* Time, uint32_t* ElapsedSeconds)
    {
        auto win32_impl_result = WIN32_IMPL_RtlTimeToSecondsSince1970(Time, ElapsedSeconds);
        return win32_impl_result;
    }
    inline void RtlFreeAnsiString(Windows::Win32::WindowsProgramming::STRING* AnsiString)
    {
        WIN32_IMPL_RtlFreeAnsiString(AnsiString);
    }
    inline void RtlFreeUnicodeString(Windows::Win32::Security::UNICODE_STRING* UnicodeString)
    {
        WIN32_IMPL_RtlFreeUnicodeString(UnicodeString);
    }
    inline void RtlFreeOemString(Windows::Win32::WindowsProgramming::STRING* OemString)
    {
        WIN32_IMPL_RtlFreeOemString(OemString);
    }
    inline void RtlInitString(Windows::Win32::WindowsProgramming::STRING* DestinationString, int8_t* SourceString)
    {
        WIN32_IMPL_RtlInitString(DestinationString, SourceString);
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlInitStringEx(Windows::Win32::WindowsProgramming::STRING* DestinationString, int8_t* SourceString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInitStringEx(DestinationString, SourceString);
        return win32_impl_result;
    }
    inline void RtlInitAnsiString(Windows::Win32::WindowsProgramming::STRING* DestinationString, int8_t* SourceString)
    {
        WIN32_IMPL_RtlInitAnsiString(DestinationString, SourceString);
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlInitAnsiStringEx(Windows::Win32::WindowsProgramming::STRING* DestinationString, int8_t* SourceString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlInitAnsiStringEx(DestinationString, SourceString);
        return win32_impl_result;
    }
    inline void RtlInitUnicodeString(Windows::Win32::Security::UNICODE_STRING* DestinationString, uint16_t* SourceString)
    {
        WIN32_IMPL_RtlInitUnicodeString(DestinationString, SourceString);
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlAnsiStringToUnicodeString(Windows::Win32::Security::UNICODE_STRING* DestinationString, Windows::Win32::WindowsProgramming::STRING* SourceString, uint8_t AllocateDestinationString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlAnsiStringToUnicodeString(DestinationString, SourceString, AllocateDestinationString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlUnicodeStringToAnsiString(Windows::Win32::WindowsProgramming::STRING* DestinationString, Windows::Win32::Security::UNICODE_STRING* SourceString, uint8_t AllocateDestinationString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlUnicodeStringToAnsiString(DestinationString, SourceString, AllocateDestinationString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlUnicodeStringToOemString(Windows::Win32::WindowsProgramming::STRING* DestinationString, Windows::Win32::Security::UNICODE_STRING* SourceString, uint8_t AllocateDestinationString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlUnicodeStringToOemString(DestinationString, SourceString, AllocateDestinationString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlUnicodeToMultiByteSize(uint32_t* BytesInMultiByteString, uint16_t* UnicodeString, uint32_t BytesInUnicodeString)
    {
        auto win32_impl_result = WIN32_IMPL_RtlUnicodeToMultiByteSize(BytesInMultiByteString, UnicodeString, BytesInUnicodeString);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::NTSTATUS RtlCharToInteger(int8_t* String, uint32_t Base, uint32_t* Value)
    {
        auto win32_impl_result = WIN32_IMPL_RtlCharToInteger(String, Base, Value);
        return win32_impl_result;
    }
    inline uint32_t RtlUniform(uint32_t* Seed)
    {
        auto win32_impl_result = WIN32_IMPL_RtlUniform(Seed);
        return win32_impl_result;
    }
    inline void* FCICreate(Windows::Win32::WindowsProgramming::ERF* perf, Windows::Win32::WindowsProgramming::PFNFCIFILEPLACED* pfnfcifp, Windows::Win32::WindowsProgramming::PFNFCIALLOC* pfna, Windows::Win32::WindowsProgramming::PFNFCIFREE* pfnf, Windows::Win32::WindowsProgramming::PFNFCIOPEN* pfnopen, Windows::Win32::WindowsProgramming::PFNFCIREAD* pfnread, Windows::Win32::WindowsProgramming::PFNFCIWRITE* pfnwrite, Windows::Win32::WindowsProgramming::PFNFCICLOSE* pfnclose, Windows::Win32::WindowsProgramming::PFNFCISEEK* pfnseek, Windows::Win32::WindowsProgramming::PFNFCIDELETE* pfndelete, Windows::Win32::WindowsProgramming::PFNFCIGETTEMPFILE* pfnfcigtf, Windows::Win32::WindowsProgramming::CCAB* pccab, void* pv)
    {
        auto win32_impl_result = WIN32_IMPL_FCICreate(perf, pfnfcifp, pfna, pfnf, pfnopen, pfnread, pfnwrite, pfnclose, pfnseek, pfndelete, pfnfcigtf, pccab, pv);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FCIAddFile(void* hfci, int8_t* pszSourceFile, int8_t* pszFileName, Windows::Win32::SystemServices::BOOL fExecute, Windows::Win32::WindowsProgramming::PFNFCIGETNEXTCABINET* pfnfcignc, Windows::Win32::WindowsProgramming::PFNFCISTATUS* pfnfcis, Windows::Win32::WindowsProgramming::PFNFCIGETOPENINFO* pfnfcigoi, uint16_t typeCompress)
    {
        auto win32_impl_result = WIN32_IMPL_FCIAddFile(hfci, pszSourceFile, pszFileName, fExecute, pfnfcignc, pfnfcis, pfnfcigoi, typeCompress);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FCIFlushCabinet(void* hfci, Windows::Win32::SystemServices::BOOL fGetNextCab, Windows::Win32::WindowsProgramming::PFNFCIGETNEXTCABINET* pfnfcignc, Windows::Win32::WindowsProgramming::PFNFCISTATUS* pfnfcis)
    {
        auto win32_impl_result = WIN32_IMPL_FCIFlushCabinet(hfci, fGetNextCab, pfnfcignc, pfnfcis);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FCIFlushFolder(void* hfci, Windows::Win32::WindowsProgramming::PFNFCIGETNEXTCABINET* pfnfcignc, Windows::Win32::WindowsProgramming::PFNFCISTATUS* pfnfcis)
    {
        auto win32_impl_result = WIN32_IMPL_FCIFlushFolder(hfci, pfnfcignc, pfnfcis);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FCIDestroy(void* hfci)
    {
        auto win32_impl_result = WIN32_IMPL_FCIDestroy(hfci);
        return win32_impl_result;
    }
    inline void* FDICreate(Windows::Win32::WindowsProgramming::PFNALLOC* pfnalloc, Windows::Win32::WindowsProgramming::PFNFREE* pfnfree, Windows::Win32::WindowsProgramming::PFNOPEN* pfnopen, Windows::Win32::WindowsProgramming::PFNREAD* pfnread, Windows::Win32::WindowsProgramming::PFNWRITE* pfnwrite, Windows::Win32::WindowsProgramming::PFNCLOSE* pfnclose, Windows::Win32::WindowsProgramming::PFNSEEK* pfnseek, int32_t cpuType, Windows::Win32::WindowsProgramming::ERF* perf)
    {
        auto win32_impl_result = WIN32_IMPL_FDICreate(pfnalloc, pfnfree, pfnopen, pfnread, pfnwrite, pfnclose, pfnseek, cpuType, perf);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FDIIsCabinet(void* hfdi, intptr_t hf, Windows::Win32::WindowsProgramming::FDICABINETINFO* pfdici)
    {
        auto win32_impl_result = WIN32_IMPL_FDIIsCabinet(hfdi, hf, pfdici);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FDICopy(void* hfdi, int8_t* pszCabinet, int8_t* pszCabPath, int32_t flags, Windows::Win32::WindowsProgramming::PFNFDINOTIFY* pfnfdin, Windows::Win32::WindowsProgramming::PFNFDIDECRYPT* pfnfdid, void* pvUser)
    {
        auto win32_impl_result = WIN32_IMPL_FDICopy(hfdi, pszCabinet, pszCabPath, flags, pfnfdin, pfnfdid, pvUser);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FDIDestroy(void* hfdi)
    {
        auto win32_impl_result = WIN32_IMPL_FDIDestroy(hfdi);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL FDITruncateCabinet(void* hfdi, int8_t* pszCabinetName, uint16_t iFolderToDelete)
    {
        auto win32_impl_result = WIN32_IMPL_FDITruncateCabinet(hfdi, pszCabinetName, iFolderToDelete);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::FEATURE_ENABLED_STATE GetFeatureEnabledState(uint32_t featureId, Windows::Win32::WindowsProgramming::FEATURE_CHANGE_TIME changeTime)
    {
        auto win32_impl_result = WIN32_IMPL_GetFeatureEnabledState(featureId, changeTime);
        return win32_impl_result;
    }
    inline void RecordFeatureUsage(uint32_t featureId, uint32_t kind, uint32_t addend, int8_t* originName)
    {
        WIN32_IMPL_RecordFeatureUsage(featureId, kind, addend, originName);
    }
    inline void RecordFeatureError(uint32_t featureId, Windows::Win32::WindowsProgramming::FEATURE_ERROR* error)
    {
        WIN32_IMPL_RecordFeatureError(featureId, error);
    }
    inline void SubscribeFeatureStateChangeNotification(Windows::Win32::WindowsProgramming::FEATURE_STATE_CHANGE_SUBSCRIPTION__** subscription, Windows::Win32::WindowsProgramming::PFEATURE_STATE_CHANGE_CALLBACK* callback, void* context)
    {
        WIN32_IMPL_SubscribeFeatureStateChangeNotification(subscription, callback, context);
    }
    inline void UnsubscribeFeatureStateChangeNotification(Windows::Win32::WindowsProgramming::FEATURE_STATE_CHANGE_SUBSCRIPTION__* subscription)
    {
        WIN32_IMPL_UnsubscribeFeatureStateChangeNotification(subscription);
    }
    inline uint32_t GetFeatureVariant(uint32_t featureId, Windows::Win32::WindowsProgramming::FEATURE_CHANGE_TIME changeTime, uint32_t* payloadId, int32_t* hasNotification)
    {
        auto win32_impl_result = WIN32_IMPL_GetFeatureVariant(featureId, changeTime, payloadId, hasNotification);
        return win32_impl_result;
    }
    inline int32_t FhServiceOpenPipe(Windows::Win32::SystemServices::BOOL StartServiceIfStopped, Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__** Pipe)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceOpenPipe(StartServiceIfStopped, Pipe);
        return win32_impl_result;
    }
    inline int32_t FhServiceClosePipe(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceClosePipe(Pipe);
        return win32_impl_result;
    }
    inline int32_t FhServiceStartBackup(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe, Windows::Win32::SystemServices::BOOL LowPriorityIo)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceStartBackup(Pipe, LowPriorityIo);
        return win32_impl_result;
    }
    inline int32_t FhServiceStopBackup(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe, Windows::Win32::SystemServices::BOOL StopTracking)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceStopBackup(Pipe, StopTracking);
        return win32_impl_result;
    }
    inline int32_t FhServiceReloadConfiguration(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceReloadConfiguration(Pipe);
        return win32_impl_result;
    }
    inline int32_t FhServiceBlockBackup(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceBlockBackup(Pipe);
        return win32_impl_result;
    }
    inline int32_t FhServiceUnblockBackup(Windows::Win32::WindowsProgramming::FH_SERVICE_PIPE_HANDLE__* Pipe)
    {
        auto win32_impl_result = WIN32_IMPL_FhServiceUnblockBackup(Pipe);
        return win32_impl_result;
    }
    inline Windows::Win32::Gdi::HDC DCIOpenProvider()
    {
        auto win32_impl_result = WIN32_IMPL_DCIOpenProvider();
        return win32_impl_result;
    }
    inline void DCICloseProvider(Windows::Win32::Gdi::HDC hdc)
    {
        WIN32_IMPL_DCICloseProvider(hdc);
    }
    inline int32_t DCICreatePrimary(Windows::Win32::Gdi::HDC hdc, Windows::Win32::WindowsProgramming::DCISURFACEINFO** lplpSurface)
    {
        auto win32_impl_result = WIN32_IMPL_DCICreatePrimary(hdc, lplpSurface);
        return win32_impl_result;
    }
    inline int32_t DCICreateOffscreen(Windows::Win32::Gdi::HDC hdc, uint32_t dwCompression, uint32_t dwRedMask, uint32_t dwGreenMask, uint32_t dwBlueMask, uint32_t dwWidth, uint32_t dwHeight, uint32_t dwDCICaps, uint32_t dwBitCount, Windows::Win32::WindowsProgramming::DCIOFFSCREEN** lplpSurface)
    {
        auto win32_impl_result = WIN32_IMPL_DCICreateOffscreen(hdc, dwCompression, dwRedMask, dwGreenMask, dwBlueMask, dwWidth, dwHeight, dwDCICaps, dwBitCount, lplpSurface);
        return win32_impl_result;
    }
    inline int32_t DCICreateOverlay(Windows::Win32::Gdi::HDC hdc, void* lpOffscreenSurf, Windows::Win32::WindowsProgramming::DCIOVERLAY** lplpSurface)
    {
        auto win32_impl_result = WIN32_IMPL_DCICreateOverlay(hdc, lpOffscreenSurf, lplpSurface);
        return win32_impl_result;
    }
    inline int32_t DCIEnum(Windows::Win32::Gdi::HDC hdc, Windows::Win32::DisplayDevices::RECT* lprDst, Windows::Win32::DisplayDevices::RECT* lprSrc, void* lpFnCallback, void* lpContext)
    {
        auto win32_impl_result = WIN32_IMPL_DCIEnum(hdc, lprDst, lprSrc, lpFnCallback, lpContext);
        return win32_impl_result;
    }
    inline int32_t DCISetSrcDestClip(Windows::Win32::WindowsProgramming::DCIOFFSCREEN* pdci, Windows::Win32::DisplayDevices::RECT* srcrc, Windows::Win32::DisplayDevices::RECT* destrc, Windows::Win32::Gdi::RGNDATA* prd)
    {
        auto win32_impl_result = WIN32_IMPL_DCISetSrcDestClip(pdci, srcrc, destrc, prd);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsProgramming::HWINWATCH__* WinWatchOpen(Windows::Win32::WindowsAndMessaging::HWND hwnd)
    {
        auto win32_impl_result = WIN32_IMPL_WinWatchOpen(hwnd);
        return win32_impl_result;
    }
    inline void WinWatchClose(Windows::Win32::WindowsProgramming::HWINWATCH__* hWW)
    {
        WIN32_IMPL_WinWatchClose(hWW);
    }
    inline uint32_t WinWatchGetClipList(Windows::Win32::WindowsProgramming::HWINWATCH__* hWW, Windows::Win32::DisplayDevices::RECT* prc, uint32_t size, Windows::Win32::Gdi::RGNDATA* prd)
    {
        auto win32_impl_result = WIN32_IMPL_WinWatchGetClipList(hWW, prc, size, prd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WinWatchDidStatusChange(Windows::Win32::WindowsProgramming::HWINWATCH__* hWW)
    {
        auto win32_impl_result = WIN32_IMPL_WinWatchDidStatusChange(hWW);
        return win32_impl_result;
    }
    inline uint32_t GetWindowRegionData(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint32_t size, Windows::Win32::Gdi::RGNDATA* prd)
    {
        auto win32_impl_result = WIN32_IMPL_GetWindowRegionData(hwnd, size, prd);
        return win32_impl_result;
    }
    inline uint32_t GetDCRegionData(Windows::Win32::Gdi::HDC hdc, uint32_t size, Windows::Win32::Gdi::RGNDATA* prd)
    {
        auto win32_impl_result = WIN32_IMPL_GetDCRegionData(hdc, size, prd);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WinWatchNotify(Windows::Win32::WindowsProgramming::HWINWATCH__* hWW, Windows::Win32::WindowsProgramming::WINWATCHNOTIFYPROC* NotifyCallback, Windows::Win32::WindowsAndMessaging::LPARAM NotifyParam)
    {
        auto win32_impl_result = WIN32_IMPL_WinWatchNotify(hWW, NotifyCallback, NotifyParam);
        return win32_impl_result;
    }
    inline void DCIEndAccess(Windows::Win32::WindowsProgramming::DCISURFACEINFO* pdci)
    {
        WIN32_IMPL_DCIEndAccess(pdci);
    }
    inline int32_t DCIBeginAccess(Windows::Win32::WindowsProgramming::DCISURFACEINFO* pdci, int32_t x, int32_t y, int32_t dx, int32_t dy)
    {
        auto win32_impl_result = WIN32_IMPL_DCIBeginAccess(pdci, x, y, dx, dy);
        return win32_impl_result;
    }
    inline void DCIDestroy(Windows::Win32::WindowsProgramming::DCISURFACEINFO* pdci)
    {
        WIN32_IMPL_DCIDestroy(pdci);
    }
    inline int32_t DCIDraw(Windows::Win32::WindowsProgramming::DCIOFFSCREEN* pdci)
    {
        auto win32_impl_result = WIN32_IMPL_DCIDraw(pdci);
        return win32_impl_result;
    }
    inline int32_t DCISetClipList(Windows::Win32::WindowsProgramming::DCIOFFSCREEN* pdci, Windows::Win32::Gdi::RGNDATA* prd)
    {
        auto win32_impl_result = WIN32_IMPL_DCISetClipList(pdci, prd);
        return win32_impl_result;
    }
    inline int32_t DCISetDestination(Windows::Win32::WindowsProgramming::DCIOFFSCREEN* pdci, Windows::Win32::DisplayDevices::RECT* dst, Windows::Win32::DisplayDevices::RECT* src)
    {
        auto win32_impl_result = WIN32_IMPL_DCISetDestination(pdci, dst, src);
        return win32_impl_result;
    }
    inline uint32_t GdiEntry13()
    {
        auto win32_impl_result = WIN32_IMPL_GdiEntry13();
        return win32_impl_result;
    }
    inline int32_t RunSetupCommandA(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* szCmdName, int8_t* szInfSection, int8_t* szDir, int8_t* lpszTitle, Windows::Win32::SystemServices::HANDLE* phEXE, uint32_t dwFlags, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_RunSetupCommandA(hWnd, szCmdName, szInfSection, szDir, lpszTitle, phEXE, dwFlags, pvReserved);
        return win32_impl_result;
    }
    inline int32_t RunSetupCommandW(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* szCmdName, uint16_t* szInfSection, uint16_t* szDir, uint16_t* lpszTitle, Windows::Win32::SystemServices::HANDLE* phEXE, uint32_t dwFlags, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_RunSetupCommandW(hWnd, szCmdName, szInfSection, szDir, lpszTitle, phEXE, dwFlags, pvReserved);
        return win32_impl_result;
    }
    inline uint32_t NeedRebootInit()
    {
        auto win32_impl_result = WIN32_IMPL_NeedRebootInit();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL NeedReboot(uint32_t dwRebootCheck)
    {
        auto win32_impl_result = WIN32_IMPL_NeedReboot(dwRebootCheck);
        return win32_impl_result;
    }
    inline int32_t RebootCheckOnInstallA(Windows::Win32::WindowsAndMessaging::HWND hwnd, int8_t* pszINF, int8_t* pszSec, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_RebootCheckOnInstallA(hwnd, pszINF, pszSec, dwReserved);
        return win32_impl_result;
    }
    inline int32_t RebootCheckOnInstallW(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* pszINF, uint16_t* pszSec, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_RebootCheckOnInstallW(hwnd, pszINF, pszSec, dwReserved);
        return win32_impl_result;
    }
    inline int32_t TranslateInfStringA(int8_t* pszInfFilename, int8_t* pszInstallSection, int8_t* pszTranslateSection, int8_t* pszTranslateKey, int8_t* pszBuffer, uint32_t cchBuffer, uint32_t* pdwRequiredSize, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateInfStringA(pszInfFilename, pszInstallSection, pszTranslateSection, pszTranslateKey, pszBuffer, cchBuffer, pdwRequiredSize, pvReserved);
        return win32_impl_result;
    }
    inline int32_t TranslateInfStringW(uint16_t* pszInfFilename, uint16_t* pszInstallSection, uint16_t* pszTranslateSection, uint16_t* pszTranslateKey, uint16_t* pszBuffer, uint32_t cchBuffer, uint32_t* pdwRequiredSize, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateInfStringW(pszInfFilename, pszInstallSection, pszTranslateSection, pszTranslateKey, pszBuffer, cchBuffer, pdwRequiredSize, pvReserved);
        return win32_impl_result;
    }
    inline int32_t RegInstallA(intptr_t hmod, int8_t* pszSection, Windows::Win32::WindowsProgramming::STRTABLEA* pstTable)
    {
        auto win32_impl_result = WIN32_IMPL_RegInstallA(hmod, pszSection, pstTable);
        return win32_impl_result;
    }
    inline int32_t RegInstallW(intptr_t hmod, uint16_t* pszSection, Windows::Win32::WindowsProgramming::STRTABLEW* pstTable)
    {
        auto win32_impl_result = WIN32_IMPL_RegInstallW(hmod, pszSection, pstTable);
        return win32_impl_result;
    }
    inline int32_t LaunchINFSectionExW(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_LaunchINFSectionExW(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t ExecuteCabA(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::WindowsProgramming::_CabInfoA* pCab, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_ExecuteCabA(hwnd, pCab, pReserved);
        return win32_impl_result;
    }
    inline int32_t ExecuteCabW(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::WindowsProgramming::_CabInfoW* pCab, void* pReserved)
    {
        auto win32_impl_result = WIN32_IMPL_ExecuteCabW(hwnd, pCab, pReserved);
        return win32_impl_result;
    }
    inline int32_t AdvInstallFileA(Windows::Win32::WindowsAndMessaging::HWND hwnd, int8_t* lpszSourceDir, int8_t* lpszSourceFile, int8_t* lpszDestDir, int8_t* lpszDestFile, uint32_t dwFlags, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_AdvInstallFileA(hwnd, lpszSourceDir, lpszSourceFile, lpszDestDir, lpszDestFile, dwFlags, dwReserved);
        return win32_impl_result;
    }
    inline int32_t AdvInstallFileW(Windows::Win32::WindowsAndMessaging::HWND hwnd, uint16_t* lpszSourceDir, uint16_t* lpszSourceFile, uint16_t* lpszDestDir, uint16_t* lpszDestFile, uint32_t dwFlags, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_AdvInstallFileW(hwnd, lpszSourceDir, lpszSourceFile, lpszDestDir, lpszDestFile, dwFlags, dwReserved);
        return win32_impl_result;
    }
    inline int32_t RegSaveRestoreA(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pszTitleString, Windows::Win32::WindowsProgramming::HKEY hkBckupKey, int8_t* pcszRootKey, int8_t* pcszSubKey, int8_t* pcszValueName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveRestoreA(hWnd, pszTitleString, hkBckupKey, pcszRootKey, pcszSubKey, pcszValueName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t RegSaveRestoreW(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszTitleString, Windows::Win32::WindowsProgramming::HKEY hkBckupKey, uint16_t* pcszRootKey, uint16_t* pcszSubKey, uint16_t* pcszValueName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveRestoreW(hWnd, pszTitleString, hkBckupKey, pcszRootKey, pcszSubKey, pcszValueName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t RegSaveRestoreOnINFA(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pszTitle, int8_t* pszINF, int8_t* pszSection, Windows::Win32::WindowsProgramming::HKEY hHKLMBackKey, Windows::Win32::WindowsProgramming::HKEY hHKCUBackKey, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveRestoreOnINFA(hWnd, pszTitle, pszINF, pszSection, hHKLMBackKey, hHKCUBackKey, dwFlags);
        return win32_impl_result;
    }
    inline int32_t RegSaveRestoreOnINFW(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszTitle, uint16_t* pszINF, uint16_t* pszSection, Windows::Win32::WindowsProgramming::HKEY hHKLMBackKey, Windows::Win32::WindowsProgramming::HKEY hHKCUBackKey, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_RegSaveRestoreOnINFW(hWnd, pszTitle, pszINF, pszSection, hHKLMBackKey, hHKCUBackKey, dwFlags);
        return win32_impl_result;
    }
    inline int32_t RegRestoreAllA(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pszTitleString, Windows::Win32::WindowsProgramming::HKEY hkBckupKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegRestoreAllA(hWnd, pszTitleString, hkBckupKey);
        return win32_impl_result;
    }
    inline int32_t RegRestoreAllW(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszTitleString, Windows::Win32::WindowsProgramming::HKEY hkBckupKey)
    {
        auto win32_impl_result = WIN32_IMPL_RegRestoreAllW(hWnd, pszTitleString, hkBckupKey);
        return win32_impl_result;
    }
    inline int32_t FileSaveRestoreW(Windows::Win32::WindowsAndMessaging::HWND hDlg, uint16_t* lpFileList, uint16_t* lpDir, uint16_t* lpBaseName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_FileSaveRestoreW(hDlg, lpFileList, lpDir, lpBaseName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t FileSaveRestoreOnINFA(Windows::Win32::WindowsAndMessaging::HWND hWnd, int8_t* pszTitle, int8_t* pszINF, int8_t* pszSection, int8_t* pszBackupDir, int8_t* pszBaseBackupFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_FileSaveRestoreOnINFA(hWnd, pszTitle, pszINF, pszSection, pszBackupDir, pszBaseBackupFile, dwFlags);
        return win32_impl_result;
    }
    inline int32_t FileSaveRestoreOnINFW(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pszTitle, uint16_t* pszINF, uint16_t* pszSection, uint16_t* pszBackupDir, uint16_t* pszBaseBackupFile, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_FileSaveRestoreOnINFW(hWnd, pszTitle, pszINF, pszSection, pszBackupDir, pszBaseBackupFile, dwFlags);
        return win32_impl_result;
    }
    inline int32_t AddDelBackupEntryA(int8_t* lpcszFileList, int8_t* lpcszBackupDir, int8_t* lpcszBaseName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_AddDelBackupEntryA(lpcszFileList, lpcszBackupDir, lpcszBaseName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t AddDelBackupEntryW(uint16_t* lpcszFileList, uint16_t* lpcszBackupDir, uint16_t* lpcszBaseName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_AddDelBackupEntryW(lpcszFileList, lpcszBackupDir, lpcszBaseName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t FileSaveMarkNotExistA(int8_t* lpFileList, int8_t* lpDir, int8_t* lpBaseName)
    {
        auto win32_impl_result = WIN32_IMPL_FileSaveMarkNotExistA(lpFileList, lpDir, lpBaseName);
        return win32_impl_result;
    }
    inline int32_t FileSaveMarkNotExistW(uint16_t* lpFileList, uint16_t* lpDir, uint16_t* lpBaseName)
    {
        auto win32_impl_result = WIN32_IMPL_FileSaveMarkNotExistW(lpFileList, lpDir, lpBaseName);
        return win32_impl_result;
    }
    inline int32_t GetVersionFromFileA(int8_t* lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, Windows::Win32::SystemServices::BOOL bVersion)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionFromFileA(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        return win32_impl_result;
    }
    inline int32_t GetVersionFromFileW(uint16_t* lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, Windows::Win32::SystemServices::BOOL bVersion)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionFromFileW(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        return win32_impl_result;
    }
    inline int32_t GetVersionFromFileExA(int8_t* lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, Windows::Win32::SystemServices::BOOL bVersion)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionFromFileExA(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        return win32_impl_result;
    }
    inline int32_t GetVersionFromFileExW(uint16_t* lpszFilename, uint32_t* pdwMSVer, uint32_t* pdwLSVer, Windows::Win32::SystemServices::BOOL bVersion)
    {
        auto win32_impl_result = WIN32_IMPL_GetVersionFromFileExW(lpszFilename, pdwMSVer, pdwLSVer, bVersion);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IsNTAdmin(uint32_t dwReserved, uint32_t* lpdwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_IsNTAdmin(dwReserved, lpdwReserved);
        return win32_impl_result;
    }
    inline int32_t DelNodeA(int8_t* pszFileOrDirName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DelNodeA(pszFileOrDirName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t DelNodeW(uint16_t* pszFileOrDirName, uint32_t dwFlags)
    {
        auto win32_impl_result = WIN32_IMPL_DelNodeW(pszFileOrDirName, dwFlags);
        return win32_impl_result;
    }
    inline int32_t DelNodeRunDLL32W(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_DelNodeRunDLL32W(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t OpenINFEngineA(int8_t* pszInfFilename, int8_t* pszInstallSection, uint32_t dwFlags, void** phInf, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_OpenINFEngineA(pszInfFilename, pszInstallSection, dwFlags, phInf, pvReserved);
        return win32_impl_result;
    }
    inline int32_t OpenINFEngineW(uint16_t* pszInfFilename, uint16_t* pszInstallSection, uint32_t dwFlags, void** phInf, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_OpenINFEngineW(pszInfFilename, pszInstallSection, dwFlags, phInf, pvReserved);
        return win32_impl_result;
    }
    inline int32_t TranslateInfStringExA(void* hInf, int8_t* pszInfFilename, int8_t* pszTranslateSection, int8_t* pszTranslateKey, int8_t* pszBuffer, uint32_t dwBufferSize, uint32_t* pdwRequiredSize, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateInfStringExA(hInf, pszInfFilename, pszTranslateSection, pszTranslateKey, pszBuffer, dwBufferSize, pdwRequiredSize, pvReserved);
        return win32_impl_result;
    }
    inline int32_t TranslateInfStringExW(void* hInf, uint16_t* pszInfFilename, uint16_t* pszTranslateSection, uint16_t* pszTranslateKey, uint16_t* pszBuffer, uint32_t dwBufferSize, uint32_t* pdwRequiredSize, void* pvReserved)
    {
        auto win32_impl_result = WIN32_IMPL_TranslateInfStringExW(hInf, pszInfFilename, pszTranslateSection, pszTranslateKey, pszBuffer, dwBufferSize, pdwRequiredSize, pvReserved);
        return win32_impl_result;
    }
    inline int32_t CloseINFEngine(void* hInf)
    {
        auto win32_impl_result = WIN32_IMPL_CloseINFEngine(hInf);
        return win32_impl_result;
    }
    inline int32_t ExtractFilesA(int8_t* pszCabName, int8_t* pszExpandDir, uint32_t dwFlags, int8_t* pszFileList, void* lpReserved, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_ExtractFilesA(pszCabName, pszExpandDir, dwFlags, pszFileList, lpReserved, dwReserved);
        return win32_impl_result;
    }
    inline int32_t ExtractFilesW(uint16_t* pszCabName, uint16_t* pszExpandDir, uint32_t dwFlags, uint16_t* pszFileList, void* lpReserved, uint32_t dwReserved)
    {
        auto win32_impl_result = WIN32_IMPL_ExtractFilesW(pszCabName, pszExpandDir, dwFlags, pszFileList, lpReserved, dwReserved);
        return win32_impl_result;
    }
    inline int32_t LaunchINFSectionW(Windows::Win32::WindowsAndMessaging::HWND hwndOwner, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszParams, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_LaunchINFSectionW(hwndOwner, hInstance, pszParams, nShow);
        return win32_impl_result;
    }
    inline int32_t UserInstStubWrapperA(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, int8_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_UserInstStubWrapperA(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t UserInstStubWrapperW(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_UserInstStubWrapperW(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t UserUnInstStubWrapperA(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, int8_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_UserUnInstStubWrapperA(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t UserUnInstStubWrapperW(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::SystemServices::HINSTANCE hInstance, uint16_t* pszParms, int32_t nShow)
    {
        auto win32_impl_result = WIN32_IMPL_UserUnInstStubWrapperW(hwnd, hInstance, pszParms, nShow);
        return win32_impl_result;
    }
    inline int32_t SetPerUserSecValuesA(Windows::Win32::WindowsProgramming::PERUSERSECTIONA* pPerUser)
    {
        auto win32_impl_result = WIN32_IMPL_SetPerUserSecValuesA(pPerUser);
        return win32_impl_result;
    }
    inline int32_t SetPerUserSecValuesW(Windows::Win32::WindowsProgramming::PERUSERSECTIONW* pPerUser)
    {
        auto win32_impl_result = WIN32_IMPL_SetPerUserSecValuesW(pPerUser);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT SendIMEMessageExA(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsAndMessaging::LPARAM param1)
    {
        auto win32_impl_result = WIN32_IMPL_SendIMEMessageExA(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LRESULT SendIMEMessageExW(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsAndMessaging::LPARAM param1)
    {
        auto win32_impl_result = WIN32_IMPL_SendIMEMessageExW(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPGetIMEA(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsProgramming::IMEPROA* param1)
    {
        auto win32_impl_result = WIN32_IMPL_IMPGetIMEA(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPGetIMEW(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsProgramming::IMEPROW* param1)
    {
        auto win32_impl_result = WIN32_IMPL_IMPGetIMEW(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPQueryIMEA(Windows::Win32::WindowsProgramming::IMEPROA* param0)
    {
        auto win32_impl_result = WIN32_IMPL_IMPQueryIMEA(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPQueryIMEW(Windows::Win32::WindowsProgramming::IMEPROW* param0)
    {
        auto win32_impl_result = WIN32_IMPL_IMPQueryIMEW(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPSetIMEA(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsProgramming::IMEPROA* param1)
    {
        auto win32_impl_result = WIN32_IMPL_IMPSetIMEA(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL IMPSetIMEW(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::WindowsProgramming::IMEPROW* param1)
    {
        auto win32_impl_result = WIN32_IMPL_IMPSetIMEW(param0, param1);
        return win32_impl_result;
    }
    inline uint32_t WINNLSGetIMEHotkey(Windows::Win32::WindowsAndMessaging::HWND param0)
    {
        auto win32_impl_result = WIN32_IMPL_WINNLSGetIMEHotkey(param0);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WINNLSEnableIME(Windows::Win32::WindowsAndMessaging::HWND param0, Windows::Win32::SystemServices::BOOL param1)
    {
        auto win32_impl_result = WIN32_IMPL_WINNLSEnableIME(param0, param1);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL WINNLSGetEnableStatus(Windows::Win32::WindowsAndMessaging::HWND param0)
    {
        auto win32_impl_result = WIN32_IMPL_WINNLSGetEnableStatus(param0);
        return win32_impl_result;
    }
    inline int32_t IsProcessInWDAGContainer(void* Reserved, int32_t* isProcessInWDAGContainer)
    {
        auto win32_impl_result = WIN32_IMPL_IsProcessInWDAGContainer(Reserved, isProcessInWDAGContainer);
        return win32_impl_result;
    }
    inline int32_t IsProcessInIsolatedContainer(int32_t* isProcessInIsolatedContainer)
    {
        auto win32_impl_result = WIN32_IMPL_IsProcessInIsolatedContainer(isProcessInIsolatedContainer);
        return win32_impl_result;
    }
    inline int32_t WscRegisterForChanges(void* Reserved, intptr_t* phCallbackRegistration, Windows::Win32::SystemServices::LPTHREAD_START_ROUTINE* lpCallbackAddress, void* pContext)
    {
        auto win32_impl_result = WIN32_IMPL_WscRegisterForChanges(Reserved, phCallbackRegistration, lpCallbackAddress, pContext);
        return win32_impl_result;
    }
    inline int32_t WscUnRegisterChanges(Windows::Win32::SystemServices::HANDLE hRegistrationHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WscUnRegisterChanges(hRegistrationHandle);
        return win32_impl_result;
    }
    inline int32_t WscRegisterForUserNotifications()
    {
        auto win32_impl_result = WIN32_IMPL_WscRegisterForUserNotifications();
        return win32_impl_result;
    }
    inline int32_t WscGetSecurityProviderHealth(uint32_t Providers, Windows::Win32::WindowsProgramming::WSC_SECURITY_PROVIDER_HEALTH* pHealth)
    {
        auto win32_impl_result = WIN32_IMPL_WscGetSecurityProviderHealth(Providers, pHealth);
        return win32_impl_result;
    }
    inline int32_t WscQueryAntiMalwareUri()
    {
        auto win32_impl_result = WIN32_IMPL_WscQueryAntiMalwareUri();
        return win32_impl_result;
    }
    inline int32_t WscGetAntiMalwareUri(uint16_t** ppszUri)
    {
        auto win32_impl_result = WIN32_IMPL_WscGetAntiMalwareUri(ppszUri);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL ApphelpCheckShellObject(::win32::guid* ObjectCLSID, Windows::Win32::SystemServices::BOOL bShimIfNecessary, uint64_t* pullFlags)
    {
        auto win32_impl_result = WIN32_IMPL_ApphelpCheckShellObject(ObjectCLSID, bShimIfNecessary, pullFlags);
        return win32_impl_result;
    }
    inline int32_t WldpGetLockdownPolicy(Windows::Win32::WindowsProgramming::WLDP_HOST_INFORMATION* hostInformation, uint32_t* lockdownState, uint32_t lockdownFlags)
    {
        auto win32_impl_result = WIN32_IMPL_WldpGetLockdownPolicy(hostInformation, lockdownState, lockdownFlags);
        return win32_impl_result;
    }
    inline int32_t WldpIsClassInApprovedList(::win32::guid* classID, Windows::Win32::WindowsProgramming::WLDP_HOST_INFORMATION* hostInformation, int32_t* isApproved, uint32_t optionalFlags)
    {
        auto win32_impl_result = WIN32_IMPL_WldpIsClassInApprovedList(classID, hostInformation, isApproved, optionalFlags);
        return win32_impl_result;
    }
    inline int32_t WldpSetDynamicCodeTrust(Windows::Win32::SystemServices::HANDLE fileHandle)
    {
        auto win32_impl_result = WIN32_IMPL_WldpSetDynamicCodeTrust(fileHandle);
        return win32_impl_result;
    }
    inline int32_t WldpIsDynamicCodePolicyEnabled(int32_t* isEnabled)
    {
        auto win32_impl_result = WIN32_IMPL_WldpIsDynamicCodePolicyEnabled(isEnabled);
        return win32_impl_result;
    }
    inline int32_t WldpQueryDynamicCodeTrust(Windows::Win32::SystemServices::HANDLE fileHandle, void* baseImage, uint32_t imageSize)
    {
        auto win32_impl_result = WIN32_IMPL_WldpQueryDynamicCodeTrust(fileHandle, baseImage, imageSize);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CeipIsOptedIn()
    {
        auto win32_impl_result = WIN32_IMPL_CeipIsOptedIn();
        return win32_impl_result;
    }
    inline int32_t CreateXmlReader(::win32::guid* riid, void** ppvObject, Windows::Win32::Com::IMalloc* pMalloc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlReader(riid, ppvObject, pMalloc);
        return win32_impl_result;
    }
    inline int32_t CreateXmlReaderInputWithEncodingCodePage(Windows::Win32::Com::IUnknown* pInputStream, Windows::Win32::Com::IMalloc* pMalloc, uint32_t nEncodingCodePage, Windows::Win32::SystemServices::BOOL fEncodingHint, uint16_t* pwszBaseUri, Windows::Win32::Com::IUnknown** ppInput)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlReaderInputWithEncodingCodePage(pInputStream, pMalloc, nEncodingCodePage, fEncodingHint, pwszBaseUri, ppInput);
        return win32_impl_result;
    }
    inline int32_t CreateXmlReaderInputWithEncodingName(Windows::Win32::Com::IUnknown* pInputStream, Windows::Win32::Com::IMalloc* pMalloc, uint16_t* pwszEncodingName, Windows::Win32::SystemServices::BOOL fEncodingHint, uint16_t* pwszBaseUri, Windows::Win32::Com::IUnknown** ppInput)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlReaderInputWithEncodingName(pInputStream, pMalloc, pwszEncodingName, fEncodingHint, pwszBaseUri, ppInput);
        return win32_impl_result;
    }
    inline int32_t CreateXmlWriter(::win32::guid* riid, void** ppvObject, Windows::Win32::Com::IMalloc* pMalloc)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlWriter(riid, ppvObject, pMalloc);
        return win32_impl_result;
    }
    inline int32_t CreateXmlWriterOutputWithEncodingCodePage(Windows::Win32::Com::IUnknown* pOutputStream, Windows::Win32::Com::IMalloc* pMalloc, uint32_t nEncodingCodePage, Windows::Win32::Com::IUnknown** ppOutput)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlWriterOutputWithEncodingCodePage(pOutputStream, pMalloc, nEncodingCodePage, ppOutput);
        return win32_impl_result;
    }
    inline int32_t CreateXmlWriterOutputWithEncodingName(Windows::Win32::Com::IUnknown* pOutputStream, Windows::Win32::Com::IMalloc* pMalloc, uint16_t* pwszEncodingName, Windows::Win32::Com::IUnknown** ppOutput)
    {
        auto win32_impl_result = WIN32_IMPL_CreateXmlWriterOutputWithEncodingName(pOutputStream, pMalloc, pwszEncodingName, ppOutput);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQuery(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQuery(ObjectType, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQueryEx(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, uint32_t cExtendedParameterCount, Windows::Win32::WindowsProgramming::DEV_QUERY_PARAMETER* pExtendedParameters, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQueryEx(ObjectType, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, cExtendedParameterCount, pExtendedParameters, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQueryFromId(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszObjectId, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQueryFromId(ObjectType, pszObjectId, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQueryFromIdEx(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszObjectId, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, uint32_t cExtendedParameterCount, Windows::Win32::WindowsProgramming::DEV_QUERY_PARAMETER* pExtendedParameters, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQueryFromIdEx(ObjectType, pszObjectId, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, cExtendedParameterCount, pExtendedParameters, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQueryFromIds(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszzObjectIds, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQueryFromIds(ObjectType, pszzObjectIds, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline int32_t DevCreateObjectQueryFromIdsEx(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszzObjectIds, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, uint32_t cExtendedParameterCount, Windows::Win32::WindowsProgramming::DEV_QUERY_PARAMETER* pExtendedParameters, Windows::Win32::WindowsProgramming::PDEV_QUERY_RESULT_CALLBACK* pCallback, void* pContext, Windows::Win32::WindowsProgramming::HDEVQUERY__** phDevQuery)
    {
        auto win32_impl_result = WIN32_IMPL_DevCreateObjectQueryFromIdsEx(ObjectType, pszzObjectIds, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, cExtendedParameterCount, pExtendedParameters, pCallback, pContext, phDevQuery);
        return win32_impl_result;
    }
    inline void DevCloseObjectQuery(Windows::Win32::WindowsProgramming::HDEVQUERY__* hDevQuery)
    {
        WIN32_IMPL_DevCloseObjectQuery(hDevQuery);
    }
    inline int32_t DevGetObjects(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, uint32_t* pcObjectCount, Windows::Win32::WindowsProgramming::DEV_OBJECT** ppObjects)
    {
        auto win32_impl_result = WIN32_IMPL_DevGetObjects(ObjectType, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, pcObjectCount, ppObjects);
        return win32_impl_result;
    }
    inline int32_t DevGetObjectsEx(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cFilterExpressionCount, Windows::Win32::WindowsProgramming::DEVPROP_FILTER_EXPRESSION* pFilter, uint32_t cExtendedParameterCount, Windows::Win32::WindowsProgramming::DEV_QUERY_PARAMETER* pExtendedParameters, uint32_t* pcObjectCount, Windows::Win32::WindowsProgramming::DEV_OBJECT** ppObjects)
    {
        auto win32_impl_result = WIN32_IMPL_DevGetObjectsEx(ObjectType, QueryFlags, cRequestedProperties, pRequestedProperties, cFilterExpressionCount, pFilter, cExtendedParameterCount, pExtendedParameters, pcObjectCount, ppObjects);
        return win32_impl_result;
    }
    inline void DevFreeObjects(uint32_t cObjectCount, Windows::Win32::WindowsProgramming::DEV_OBJECT* pObjects)
    {
        WIN32_IMPL_DevFreeObjects(cObjectCount, pObjects);
    }
    inline int32_t DevGetObjectProperties(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszObjectId, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t* pcPropertyCount, Windows::Win32::SystemServices::DEVPROPERTY** ppProperties)
    {
        auto win32_impl_result = WIN32_IMPL_DevGetObjectProperties(ObjectType, pszObjectId, QueryFlags, cRequestedProperties, pRequestedProperties, pcPropertyCount, ppProperties);
        return win32_impl_result;
    }
    inline int32_t DevGetObjectPropertiesEx(Windows::Win32::WindowsProgramming::DEV_OBJECT_TYPE ObjectType, uint16_t* pszObjectId, uint32_t QueryFlags, uint32_t cRequestedProperties, Windows::Win32::SystemServices::DEVPROPCOMPKEY* pRequestedProperties, uint32_t cExtendedParameterCount, Windows::Win32::WindowsProgramming::DEV_QUERY_PARAMETER* pExtendedParameters, uint32_t* pcPropertyCount, Windows::Win32::SystemServices::DEVPROPERTY** ppProperties)
    {
        auto win32_impl_result = WIN32_IMPL_DevGetObjectPropertiesEx(ObjectType, pszObjectId, QueryFlags, cRequestedProperties, pRequestedProperties, cExtendedParameterCount, pExtendedParameters, pcPropertyCount, ppProperties);
        return win32_impl_result;
    }
    inline void DevFreeObjectProperties(uint32_t cPropertyCount, Windows::Win32::SystemServices::DEVPROPERTY* pProperties)
    {
        WIN32_IMPL_DevFreeObjectProperties(cPropertyCount, pProperties);
    }
    inline Windows::Win32::SystemServices::DEVPROPERTY* DevFindProperty(Windows::Win32::SystemServices::DEVPROPKEY* pKey, Windows::Win32::SystemServices::DEVPROPSTORE Store, uint16_t* pszLocaleName, uint32_t cProperties, Windows::Win32::SystemServices::DEVPROPERTY* pProperties)
    {
        auto win32_impl_result = WIN32_IMPL_DevFindProperty(pKey, Store, pszLocaleName, cProperties, pProperties);
        return win32_impl_result;
    }
    inline uint32_t PfCreateInterface(uint32_t dwName, Windows::Win32::WindowsProgramming::_PfForwardAction inAction, Windows::Win32::WindowsProgramming::_PfForwardAction outAction, Windows::Win32::SystemServices::BOOL bUseLog, Windows::Win32::SystemServices::BOOL bMustBeUnique, void** ppInterface)
    {
        auto win32_impl_result = WIN32_IMPL_PfCreateInterface(dwName, inAction, outAction, bUseLog, bMustBeUnique, ppInterface);
        return win32_impl_result;
    }
    inline uint32_t PfDeleteInterface(void* pInterface)
    {
        auto win32_impl_result = WIN32_IMPL_PfDeleteInterface(pInterface);
        return win32_impl_result;
    }
    inline uint32_t PfAddFiltersToInterface(void* ih, uint32_t cInFilters, Windows::Win32::WindowsProgramming::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, Windows::Win32::WindowsProgramming::PF_FILTER_DESCRIPTOR* pfiltOut, void** pfHandle)
    {
        auto win32_impl_result = WIN32_IMPL_PfAddFiltersToInterface(ih, cInFilters, pfiltIn, cOutFilters, pfiltOut, pfHandle);
        return win32_impl_result;
    }
    inline uint32_t PfRemoveFiltersFromInterface(void* ih, uint32_t cInFilters, Windows::Win32::WindowsProgramming::PF_FILTER_DESCRIPTOR* pfiltIn, uint32_t cOutFilters, Windows::Win32::WindowsProgramming::PF_FILTER_DESCRIPTOR* pfiltOut)
    {
        auto win32_impl_result = WIN32_IMPL_PfRemoveFiltersFromInterface(ih, cInFilters, pfiltIn, cOutFilters, pfiltOut);
        return win32_impl_result;
    }
    inline uint32_t PfRemoveFilterHandles(void* pInterface, uint32_t cFilters, void** pvHandles)
    {
        auto win32_impl_result = WIN32_IMPL_PfRemoveFilterHandles(pInterface, cFilters, pvHandles);
        return win32_impl_result;
    }
    inline uint32_t PfUnBindInterface(void* pInterface)
    {
        auto win32_impl_result = WIN32_IMPL_PfUnBindInterface(pInterface);
        return win32_impl_result;
    }
    inline uint32_t PfBindInterfaceToIndex(void* pInterface, uint32_t dwIndex, Windows::Win32::WindowsProgramming::_PfAddresType pfatLinkType, uint8_t* LinkIPAddress)
    {
        auto win32_impl_result = WIN32_IMPL_PfBindInterfaceToIndex(pInterface, dwIndex, pfatLinkType, LinkIPAddress);
        return win32_impl_result;
    }
    inline uint32_t PfBindInterfaceToIPAddress(void* pInterface, Windows::Win32::WindowsProgramming::_PfAddresType pfatType, uint8_t* IPAddress)
    {
        auto win32_impl_result = WIN32_IMPL_PfBindInterfaceToIPAddress(pInterface, pfatType, IPAddress);
        return win32_impl_result;
    }
    inline uint32_t PfRebindFilters(void* pInterface, Windows::Win32::WindowsProgramming::PF_LATEBIND_INFO* pLateBindInfo)
    {
        auto win32_impl_result = WIN32_IMPL_PfRebindFilters(pInterface, pLateBindInfo);
        return win32_impl_result;
    }
    inline uint32_t PfAddGlobalFilterToInterface(void* pInterface, Windows::Win32::WindowsProgramming::_GlobalFilter gfFilter)
    {
        auto win32_impl_result = WIN32_IMPL_PfAddGlobalFilterToInterface(pInterface, gfFilter);
        return win32_impl_result;
    }
    inline uint32_t PfRemoveGlobalFilterFromInterface(void* pInterface, Windows::Win32::WindowsProgramming::_GlobalFilter gfFilter)
    {
        auto win32_impl_result = WIN32_IMPL_PfRemoveGlobalFilterFromInterface(pInterface, gfFilter);
        return win32_impl_result;
    }
    inline uint32_t PfMakeLog(Windows::Win32::SystemServices::HANDLE hEvent)
    {
        auto win32_impl_result = WIN32_IMPL_PfMakeLog(hEvent);
        return win32_impl_result;
    }
    inline uint32_t PfSetLogBuffer(uint8_t* pbBuffer, uint32_t dwSize, uint32_t dwThreshold, uint32_t dwEntries, uint32_t* pdwLoggedEntries, uint32_t* pdwLostEntries, uint32_t* pdwSizeUsed)
    {
        auto win32_impl_result = WIN32_IMPL_PfSetLogBuffer(pbBuffer, dwSize, dwThreshold, dwEntries, pdwLoggedEntries, pdwLostEntries, pdwSizeUsed);
        return win32_impl_result;
    }
    inline uint32_t PfDeleteLog()
    {
        auto win32_impl_result = WIN32_IMPL_PfDeleteLog();
        return win32_impl_result;
    }
    inline uint32_t PfGetInterfaceStatistics(void* pInterface, Windows::Win32::WindowsProgramming::PF_INTERFACE_STATS* ppfStats, uint32_t* pdwBufferSize, Windows::Win32::SystemServices::BOOL fResetCounters)
    {
        auto win32_impl_result = WIN32_IMPL_PfGetInterfaceStatistics(pInterface, ppfStats, pdwBufferSize, fResetCounters);
        return win32_impl_result;
    }
    inline uint32_t PfTestPacket(void* pInInterface, void* pOutInterface, uint32_t cBytes, uint8_t* pbPacket, Windows::Win32::WindowsProgramming::_PfForwardAction* ppAction)
    {
        auto win32_impl_result = WIN32_IMPL_PfTestPacket(pInInterface, pOutInterface, cBytes, pbPacket, ppAction);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::LSTATUS GetRegistryValueWithFallbackW(Windows::Win32::WindowsProgramming::HKEY hkeyPrimary, uint16_t* pwszPrimarySubKey, Windows::Win32::WindowsProgramming::HKEY hkeyFallback, uint16_t* pwszFallbackSubKey, uint16_t* pwszValue, uint32_t dwFlags, uint32_t* pdwType, void* pvData, uint32_t cbDataIn, uint32_t* pcbDataOut)
    {
        auto win32_impl_result = WIN32_IMPL_GetRegistryValueWithFallbackW(hkeyPrimary, pwszPrimarySubKey, hkeyFallback, pwszFallbackSubKey, pwszValue, dwFlags, pdwType, pvData, cbDataIn, pcbDataOut);
        return win32_impl_result;
    }
    inline int32_t CoInstall(Windows::Win32::Com::IBindCtx* pbc, uint32_t dwFlags, Windows::Win32::SystemServices::uCLSSPEC* pClassSpec, Windows::Win32::Com::QUERYCONTEXT* pQuery, uint16_t* pszCodeBase)
    {
        auto win32_impl_result = WIN32_IMPL_CoInstall(pbc, dwFlags, pClassSpec, pQuery, pszCodeBase);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
