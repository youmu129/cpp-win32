// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsStationsAndDesktops_H
#define WIN32_Windows_Win32_WindowsStationsAndDesktops_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.WindowsStationsAndDesktops.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::WindowsStationsAndDesktops
{
#pragma region methods
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK CreateDesktopA(int8_t* lpszDesktop, int8_t* lpszDevice, Windows::Win32::Xps::DEVMODEA* pDevmode, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDesktopA(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK CreateDesktopW(uint16_t* lpszDesktop, uint16_t* lpszDevice, Windows::Win32::DisplayDevices::DEVMODEW* pDevmode, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDesktopW(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK CreateDesktopExA(int8_t* lpszDesktop, int8_t* lpszDevice, Windows::Win32::Xps::DEVMODEA* pDevmode, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa, uint32_t ulHeapSize, void* pvoid)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDesktopExA(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa, ulHeapSize, pvoid);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK CreateDesktopExW(uint16_t* lpszDesktop, uint16_t* lpszDevice, Windows::Win32::DisplayDevices::DEVMODEW* pDevmode, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa, uint32_t ulHeapSize, void* pvoid)
    {
        auto win32_impl_result = WIN32_IMPL_CreateDesktopExW(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa, ulHeapSize, pvoid);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK OpenDesktopA(int8_t* lpszDesktop, uint32_t dwFlags, Windows::Win32::SystemServices::BOOL fInherit, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenDesktopA(lpszDesktop, dwFlags, fInherit, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK OpenDesktopW(uint16_t* lpszDesktop, uint32_t dwFlags, Windows::Win32::SystemServices::BOOL fInherit, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenDesktopW(lpszDesktop, dwFlags, fInherit, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK OpenInputDesktop(uint32_t dwFlags, Windows::Win32::SystemServices::BOOL fInherit, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenInputDesktop(dwFlags, fInherit, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDesktopsA(intptr_t hwinsta, Windows::Win32::MenusAndResources::DESKTOPENUMPROCA* lpEnumFunc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDesktopsA(hwinsta, lpEnumFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDesktopsW(intptr_t hwinsta, Windows::Win32::MenusAndResources::DESKTOPENUMPROCW* lpEnumFunc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDesktopsW(hwinsta, lpEnumFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumDesktopWindows(Windows::Win32::WindowsStationsAndDesktops::HDESK hDesktop, Windows::Win32::MenusAndResources::WNDENUMPROC* lpfn, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumDesktopWindows(hDesktop, lpfn, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SwitchDesktop(Windows::Win32::WindowsStationsAndDesktops::HDESK hDesktop)
    {
        auto win32_impl_result = WIN32_IMPL_SwitchDesktop(hDesktop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetThreadDesktop(Windows::Win32::WindowsStationsAndDesktops::HDESK hDesktop)
    {
        auto win32_impl_result = WIN32_IMPL_SetThreadDesktop(hDesktop);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseDesktop(Windows::Win32::WindowsStationsAndDesktops::HDESK hDesktop)
    {
        auto win32_impl_result = WIN32_IMPL_CloseDesktop(hDesktop);
        return win32_impl_result;
    }
    inline Windows::Win32::WindowsStationsAndDesktops::HDESK GetThreadDesktop(uint32_t dwThreadId)
    {
        auto win32_impl_result = WIN32_IMPL_GetThreadDesktop(dwThreadId);
        return win32_impl_result;
    }
    inline intptr_t CreateWindowStationA(int8_t* lpwinsta, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWindowStationA(lpwinsta, dwFlags, dwDesiredAccess, lpsa);
        return win32_impl_result;
    }
    inline intptr_t CreateWindowStationW(uint16_t* lpwinsta, uint32_t dwFlags, uint32_t dwDesiredAccess, Windows::Win32::SystemServices::SECURITY_ATTRIBUTES* lpsa)
    {
        auto win32_impl_result = WIN32_IMPL_CreateWindowStationW(lpwinsta, dwFlags, dwDesiredAccess, lpsa);
        return win32_impl_result;
    }
    inline intptr_t OpenWindowStationA(int8_t* lpszWinSta, Windows::Win32::SystemServices::BOOL fInherit, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenWindowStationA(lpszWinSta, fInherit, dwDesiredAccess);
        return win32_impl_result;
    }
    inline intptr_t OpenWindowStationW(uint16_t* lpszWinSta, Windows::Win32::SystemServices::BOOL fInherit, uint32_t dwDesiredAccess)
    {
        auto win32_impl_result = WIN32_IMPL_OpenWindowStationW(lpszWinSta, fInherit, dwDesiredAccess);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumWindowStationsA(Windows::Win32::MenusAndResources::WINSTAENUMPROCA* lpEnumFunc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumWindowStationsA(lpEnumFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL EnumWindowStationsW(Windows::Win32::MenusAndResources::WINSTAENUMPROCW* lpEnumFunc, Windows::Win32::WindowsAndMessaging::LPARAM lParam)
    {
        auto win32_impl_result = WIN32_IMPL_EnumWindowStationsW(lpEnumFunc, lParam);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL CloseWindowStation(intptr_t hWinSta)
    {
        auto win32_impl_result = WIN32_IMPL_CloseWindowStation(hWinSta);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetProcessWindowStation(intptr_t hWinSta)
    {
        auto win32_impl_result = WIN32_IMPL_SetProcessWindowStation(hWinSta);
        return win32_impl_result;
    }
    inline intptr_t GetProcessWindowStation()
    {
        auto win32_impl_result = WIN32_IMPL_GetProcessWindowStation();
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUserObjectInformationA(Windows::Win32::SystemServices::HANDLE hObj, int32_t nIndex, void* pvInfo, uint32_t nLength, uint32_t* lpnLengthNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserObjectInformationA(hObj, nIndex, pvInfo, nLength, lpnLengthNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL GetUserObjectInformationW(Windows::Win32::SystemServices::HANDLE hObj, int32_t nIndex, void* pvInfo, uint32_t nLength, uint32_t* lpnLengthNeeded)
    {
        auto win32_impl_result = WIN32_IMPL_GetUserObjectInformationW(hObj, nIndex, pvInfo, nLength, lpnLengthNeeded);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetUserObjectInformationA(Windows::Win32::SystemServices::HANDLE hObj, int32_t nIndex, void* pvInfo, uint32_t nLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetUserObjectInformationA(hObj, nIndex, pvInfo, nLength);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL SetUserObjectInformationW(Windows::Win32::SystemServices::HANDLE hObj, int32_t nIndex, void* pvInfo, uint32_t nLength)
    {
        auto win32_impl_result = WIN32_IMPL_SetUserObjectInformationW(hObj, nIndex, pvInfo, nLength);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
