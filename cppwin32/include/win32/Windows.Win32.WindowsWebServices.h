// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsWebServices_H
#define WIN32_Windows_Win32_WindowsWebServices_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.WindowsWebServices.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::WindowsWebServices
{
#pragma region methods
    inline int32_t WsStartReaderCanonicalization(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_WRITE_CALLBACK* writeCallback, void* writeCallbackState, Windows::Win32::WindowsWebServices::WS_XML_CANONICALIZATION_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsStartReaderCanonicalization(reader, writeCallback, writeCallbackState, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsEndReaderCanonicalization(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsEndReaderCanonicalization(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsStartWriterCanonicalization(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_WRITE_CALLBACK* writeCallback, void* writeCallbackState, Windows::Win32::WindowsWebServices::WS_XML_CANONICALIZATION_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsStartWriterCanonicalization(writer, writeCallback, writeCallbackState, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsEndWriterCanonicalization(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsEndWriterCanonicalization(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateXmlBuffer(Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_XML_BUFFER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_XML_BUFFER** buffer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateXmlBuffer(heap, properties, propertyCount, buffer, error);
        return win32_impl_result;
    }
    inline int32_t WsRemoveNode(Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* nodePosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRemoveNode(nodePosition, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateReader(Windows::Win32::WindowsWebServices::WS_XML_READER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_XML_READER** reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateReader(properties, propertyCount, reader, error);
        return win32_impl_result;
    }
    inline int32_t WsSetInput(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_READER_ENCODING* encoding, Windows::Win32::WindowsWebServices::WS_XML_READER_INPUT* input, Windows::Win32::WindowsWebServices::WS_XML_READER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetInput(reader, encoding, input, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsSetInputToBuffer(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_BUFFER* buffer, Windows::Win32::WindowsWebServices::WS_XML_READER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetInputToBuffer(reader, buffer, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline void WsFreeReader(Windows::Win32::WindowsWebServices::WS_XML_READER* reader)
    {
        WIN32_IMPL_WsFreeReader(reader);
    }
    inline int32_t WsGetReaderProperty(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_READER_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetReaderProperty(reader, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsGetReaderNode(Windows::Win32::WindowsWebServices::WS_XML_READER* xmlReader, Windows::Win32::WindowsWebServices::WS_XML_NODE** node, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetReaderNode(xmlReader, node, error);
        return win32_impl_result;
    }
    inline int32_t WsFillReader(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, uint32_t minSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFillReader(reader, minSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsReadStartElement(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadStartElement(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsReadToStartElement(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, int32_t* found, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadToStartElement(reader, localName, ns, found, error);
        return win32_impl_result;
    }
    inline int32_t WsReadStartAttribute(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, uint32_t attributeIndex, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadStartAttribute(reader, attributeIndex, error);
        return win32_impl_result;
    }
    inline int32_t WsReadEndAttribute(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadEndAttribute(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsReadNode(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadNode(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsSkipNode(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSkipNode(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsReadEndElement(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadEndElement(reader, error);
        return win32_impl_result;
    }
    inline int32_t WsFindAttribute(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::SystemServices::BOOL required, uint32_t* attributeIndex, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFindAttribute(reader, localName, ns, required, attributeIndex, error);
        return win32_impl_result;
    }
    inline int32_t WsReadValue(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_VALUE_TYPE valueType, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadValue(reader, valueType, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsReadChars(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, uint16_t* chars, uint32_t maxCharCount, uint32_t* actualCharCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadChars(reader, chars, maxCharCount, actualCharCount, error);
        return win32_impl_result;
    }
    inline int32_t WsReadCharsUtf8(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, uint8_t* bytes, uint32_t maxByteCount, uint32_t* actualByteCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadCharsUtf8(reader, bytes, maxByteCount, actualByteCount, error);
        return win32_impl_result;
    }
    inline int32_t WsReadBytes(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, void* bytes, uint32_t maxByteCount, uint32_t* actualByteCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadBytes(reader, bytes, maxByteCount, actualByteCount, error);
        return win32_impl_result;
    }
    inline int32_t WsReadArray(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::WindowsWebServices::WS_VALUE_TYPE valueType, void* array, uint32_t arraySize, uint32_t itemOffset, uint32_t itemCount, uint32_t* actualItemCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadArray(reader, localName, ns, valueType, array, arraySize, itemOffset, itemCount, actualItemCount, error);
        return win32_impl_result;
    }
    inline int32_t WsGetReaderPosition(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* nodePosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetReaderPosition(reader, nodePosition, error);
        return win32_impl_result;
    }
    inline int32_t WsSetReaderPosition(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* nodePosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetReaderPosition(reader, nodePosition, error);
        return win32_impl_result;
    }
    inline int32_t WsMoveReader(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_MOVE_TO moveTo, int32_t* found, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsMoveReader(reader, moveTo, found, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateWriter(Windows::Win32::WindowsWebServices::WS_XML_WRITER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_XML_WRITER** writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateWriter(properties, propertyCount, writer, error);
        return win32_impl_result;
    }
    inline void WsFreeWriter(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer)
    {
        WIN32_IMPL_WsFreeWriter(writer);
    }
    inline int32_t WsSetOutput(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_WRITER_ENCODING* encoding, Windows::Win32::WindowsWebServices::WS_XML_WRITER_OUTPUT* output, Windows::Win32::WindowsWebServices::WS_XML_WRITER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetOutput(writer, encoding, output, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsSetOutputToBuffer(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_BUFFER* buffer, Windows::Win32::WindowsWebServices::WS_XML_WRITER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetOutputToBuffer(writer, buffer, properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsGetWriterProperty(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_WRITER_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetWriterProperty(writer, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsFlushWriter(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, uint32_t minSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFlushWriter(writer, minSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteStartElement(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteStartElement(writer, prefix, localName, ns, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEndStartElement(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEndStartElement(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteXmlnsAttribute(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::SystemServices::BOOL singleQuote, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteXmlnsAttribute(writer, prefix, ns, singleQuote, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteStartAttribute(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::SystemServices::BOOL singleQuote, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteStartAttribute(writer, prefix, localName, ns, singleQuote, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEndAttribute(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEndAttribute(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteValue(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_VALUE_TYPE valueType, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteValue(writer, valueType, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteXmlBuffer(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_BUFFER* xmlBuffer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteXmlBuffer(writer, xmlBuffer, error);
        return win32_impl_result;
    }
    inline int32_t WsReadXmlBuffer(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_XML_BUFFER** xmlBuffer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadXmlBuffer(reader, heap, xmlBuffer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteXmlBufferToBytes(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_BUFFER* xmlBuffer, Windows::Win32::WindowsWebServices::WS_XML_WRITER_ENCODING* encoding, Windows::Win32::WindowsWebServices::WS_XML_WRITER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void** bytes, uint32_t* byteCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteXmlBufferToBytes(writer, xmlBuffer, encoding, properties, propertyCount, heap, bytes, byteCount, error);
        return win32_impl_result;
    }
    inline int32_t WsReadXmlBufferFromBytes(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_READER_ENCODING* encoding, Windows::Win32::WindowsWebServices::WS_XML_READER_PROPERTY* properties, uint32_t propertyCount, void* bytes, uint32_t byteCount, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_XML_BUFFER** xmlBuffer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadXmlBufferFromBytes(reader, encoding, properties, propertyCount, bytes, byteCount, heap, xmlBuffer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteArray(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::WindowsWebServices::WS_VALUE_TYPE valueType, void* array, uint32_t arraySize, uint32_t itemOffset, uint32_t itemCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteArray(writer, localName, ns, valueType, array, arraySize, itemOffset, itemCount, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteQualifiedName(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteQualifiedName(writer, prefix, localName, ns, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteChars(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, uint16_t* chars, uint32_t charCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteChars(writer, chars, charCount, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteCharsUtf8(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, uint8_t* bytes, uint32_t byteCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteCharsUtf8(writer, bytes, byteCount, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteBytes(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, void* bytes, uint32_t byteCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteBytes(writer, bytes, byteCount, error);
        return win32_impl_result;
    }
    inline int32_t WsPushBytes(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_PUSH_BYTES_CALLBACK* callback, void* callbackState, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsPushBytes(writer, callback, callbackState, error);
        return win32_impl_result;
    }
    inline int32_t WsPullBytes(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_PULL_BYTES_CALLBACK* callback, void* callbackState, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsPullBytes(writer, callback, callbackState, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEndElement(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEndElement(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteText(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_TEXT* text, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteText(writer, text, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteStartCData(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteStartCData(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEndCData(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEndCData(writer, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteNode(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_NODE* node, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteNode(writer, node, error);
        return win32_impl_result;
    }
    inline int32_t WsGetPrefixFromNamespace(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::SystemServices::BOOL required, Windows::Win32::WindowsWebServices::WS_XML_STRING** prefix, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetPrefixFromNamespace(writer, ns, required, prefix, error);
        return win32_impl_result;
    }
    inline int32_t WsGetWriterPosition(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* nodePosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetWriterPosition(writer, nodePosition, error);
        return win32_impl_result;
    }
    inline int32_t WsSetWriterPosition(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* nodePosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetWriterPosition(writer, nodePosition, error);
        return win32_impl_result;
    }
    inline int32_t WsMoveWriter(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_MOVE_TO moveTo, int32_t* found, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsMoveWriter(writer, moveTo, found, error);
        return win32_impl_result;
    }
    inline int32_t WsTrimXmlWhitespace(uint16_t* chars, uint32_t charCount, uint16_t** trimmedChars, uint32_t* trimmedCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsTrimXmlWhitespace(chars, charCount, trimmedChars, trimmedCount, error);
        return win32_impl_result;
    }
    inline int32_t WsVerifyXmlNCName(uint16_t* ncNameChars, uint32_t ncNameCharCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsVerifyXmlNCName(ncNameChars, ncNameCharCount, error);
        return win32_impl_result;
    }
    inline int32_t WsXmlStringEquals(Windows::Win32::WindowsWebServices::WS_XML_STRING* string1, Windows::Win32::WindowsWebServices::WS_XML_STRING* string2, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsXmlStringEquals(string1, string2, error);
        return win32_impl_result;
    }
    inline int32_t WsGetNamespaceFromPrefix(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::SystemServices::BOOL required, Windows::Win32::WindowsWebServices::WS_XML_STRING** ns, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetNamespaceFromPrefix(reader, prefix, required, ns, error);
        return win32_impl_result;
    }
    inline int32_t WsReadQualifiedName(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_XML_STRING* prefix, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_XML_STRING* ns, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadQualifiedName(reader, heap, prefix, localName, ns, error);
        return win32_impl_result;
    }
    inline int32_t WsGetXmlAttribute(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_XML_STRING* localName, Windows::Win32::WindowsWebServices::WS_HEAP* heap, uint16_t** valueChars, uint32_t* valueCharCount, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetXmlAttribute(reader, localName, heap, valueChars, valueCharCount, error);
        return win32_impl_result;
    }
    inline int32_t WsCopyNode(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCopyNode(writer, reader, error);
        return win32_impl_result;
    }
    inline int32_t WsAsyncExecute(Windows::Win32::WindowsWebServices::WS_ASYNC_STATE* asyncState, Windows::Win32::WindowsWebServices::WS_ASYNC_FUNCTION* operation, Windows::Win32::WindowsWebServices::WS_CALLBACK_MODEL callbackModel, void* callbackState, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAsyncExecute(asyncState, operation, callbackModel, callbackState, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL_TYPE channelType, Windows::Win32::WindowsWebServices::WS_CHANNEL_BINDING channelBinding, Windows::Win32::WindowsWebServices::WS_CHANNEL_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_SECURITY_DESCRIPTION* securityDescription, Windows::Win32::WindowsWebServices::WS_CHANNEL** channel, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateChannel(channelType, channelBinding, properties, propertyCount, securityDescription, channel, error);
        return win32_impl_result;
    }
    inline int32_t WsOpenChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS* endpointAddress, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsOpenChannel(channel, endpointAddress, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsSendMessage(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_MESSAGE_DESCRIPTION* messageDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* bodyValue, uint32_t bodyValueSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSendMessage(channel, message, messageDescription, writeOption, bodyValue, bodyValueSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsReceiveMessage(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_MESSAGE_DESCRIPTION** messageDescriptions, uint32_t messageDescriptionCount, Windows::Win32::WindowsWebServices::WS_RECEIVE_OPTION receiveOption, Windows::Win32::WindowsWebServices::WS_READ_OPTION readBodyOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, uint32_t* index, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReceiveMessage(channel, message, messageDescriptions, messageDescriptionCount, receiveOption, readBodyOption, heap, value, valueSize, index, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsRequestReply(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* requestMessage, Windows::Win32::WindowsWebServices::WS_MESSAGE_DESCRIPTION* requestMessageDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* requestBodyValue, uint32_t requestBodyValueSize, Windows::Win32::WindowsWebServices::WS_MESSAGE* replyMessage, Windows::Win32::WindowsWebServices::WS_MESSAGE_DESCRIPTION* replyMessageDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRequestReply(channel, requestMessage, requestMessageDescription, writeOption, requestBodyValue, requestBodyValueSize, replyMessage, replyMessageDescription, readOption, heap, value, valueSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsSendReplyMessage(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* replyMessage, Windows::Win32::WindowsWebServices::WS_MESSAGE_DESCRIPTION* replyMessageDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* replyBodyValue, uint32_t replyBodyValueSize, Windows::Win32::WindowsWebServices::WS_MESSAGE* requestMessage, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSendReplyMessage(channel, replyMessage, replyMessageDescription, writeOption, replyBodyValue, replyBodyValueSize, requestMessage, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsSendFaultMessageForError(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* replyMessage, Windows::Win32::WindowsWebServices::WS_ERROR* faultError, int32_t faultErrorCode, Windows::Win32::WindowsWebServices::WS_FAULT_DISCLOSURE faultDisclosure, Windows::Win32::WindowsWebServices::WS_MESSAGE* requestMessage, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSendFaultMessageForError(channel, replyMessage, faultError, faultErrorCode, faultDisclosure, requestMessage, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsGetChannelProperty(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_CHANNEL_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetChannelProperty(channel, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsSetChannelProperty(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_CHANNEL_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetChannelProperty(channel, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteMessageStart(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteMessageStart(channel, message, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteMessageEnd(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteMessageEnd(channel, message, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsReadMessageStart(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadMessageStart(channel, message, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsReadMessageEnd(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadMessageEnd(channel, message, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsCloseChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCloseChannel(channel, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsAbortChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbortChannel(channel, error);
        return win32_impl_result;
    }
    inline void WsFreeChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel)
    {
        WIN32_IMPL_WsFreeChannel(channel);
    }
    inline int32_t WsResetChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetChannel(channel, error);
        return win32_impl_result;
    }
    inline int32_t WsAbandonMessage(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbandonMessage(channel, message, error);
        return win32_impl_result;
    }
    inline int32_t WsShutdownSessionChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsShutdownSessionChannel(channel, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsGetOperationContextProperty(Windows::Win32::WindowsWebServices::WS_OPERATION_CONTEXT* context, Windows::Win32::WindowsWebServices::WS_OPERATION_CONTEXT_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetOperationContextProperty(context, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsGetDictionary(Windows::Win32::WindowsWebServices::WS_ENCODING encoding, Windows::Win32::WindowsWebServices::WS_XML_DICTIONARY** dictionary, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetDictionary(encoding, dictionary, error);
        return win32_impl_result;
    }
    inline int32_t WsReadEndpointAddressExtension(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS* endpointAddress, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS_EXTENSION_TYPE extensionType, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadEndpointAddressExtension(reader, endpointAddress, extensionType, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateError(Windows::Win32::WindowsWebServices::WS_ERROR_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_ERROR** error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateError(properties, propertyCount, error);
        return win32_impl_result;
    }
    inline int32_t WsAddErrorString(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_STRING* string)
    {
        auto win32_impl_result = WIN32_IMPL_WsAddErrorString(error, string);
        return win32_impl_result;
    }
    inline int32_t WsGetErrorString(Windows::Win32::WindowsWebServices::WS_ERROR* error, uint32_t index, Windows::Win32::WindowsWebServices::WS_STRING* string)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetErrorString(error, index, string);
        return win32_impl_result;
    }
    inline int32_t WsCopyError(Windows::Win32::WindowsWebServices::WS_ERROR* source, Windows::Win32::WindowsWebServices::WS_ERROR* destination)
    {
        auto win32_impl_result = WIN32_IMPL_WsCopyError(source, destination);
        return win32_impl_result;
    }
    inline int32_t WsGetErrorProperty(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_ERROR_PROPERTY_ID id, void* buffer, uint32_t bufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetErrorProperty(error, id, buffer, bufferSize);
        return win32_impl_result;
    }
    inline int32_t WsSetErrorProperty(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_ERROR_PROPERTY_ID id, void* value, uint32_t valueSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetErrorProperty(error, id, value, valueSize);
        return win32_impl_result;
    }
    inline int32_t WsResetError(Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetError(error);
        return win32_impl_result;
    }
    inline void WsFreeError(Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        WIN32_IMPL_WsFreeError(error);
    }
    inline int32_t WsGetFaultErrorProperty(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_FAULT_ERROR_PROPERTY_ID id, void* buffer, uint32_t bufferSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetFaultErrorProperty(error, id, buffer, bufferSize);
        return win32_impl_result;
    }
    inline int32_t WsSetFaultErrorProperty(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_FAULT_ERROR_PROPERTY_ID id, void* value, uint32_t valueSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetFaultErrorProperty(error, id, value, valueSize);
        return win32_impl_result;
    }
    inline int32_t WsCreateFaultFromError(Windows::Win32::WindowsWebServices::WS_ERROR* error, int32_t faultErrorCode, Windows::Win32::WindowsWebServices::WS_FAULT_DISCLOSURE faultDisclosure, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_FAULT* fault)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateFaultFromError(error, faultErrorCode, faultDisclosure, heap, fault);
        return win32_impl_result;
    }
    inline int32_t WsSetFaultErrorDetail(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_FAULT_DETAIL_DESCRIPTION* faultDetailDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetFaultErrorDetail(error, faultDetailDescription, writeOption, value, valueSize);
        return win32_impl_result;
    }
    inline int32_t WsGetFaultErrorDetail(Windows::Win32::WindowsWebServices::WS_ERROR* error, Windows::Win32::WindowsWebServices::WS_FAULT_DETAIL_DESCRIPTION* faultDetailDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetFaultErrorDetail(error, faultDetailDescription, readOption, heap, value, valueSize);
        return win32_impl_result;
    }
    inline int32_t WsCreateHeap(size_t maxSize, size_t trimSize, Windows::Win32::WindowsWebServices::WS_HEAP_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_HEAP** heap, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateHeap(maxSize, trimSize, properties, propertyCount, heap, error);
        return win32_impl_result;
    }
    inline int32_t WsAlloc(Windows::Win32::WindowsWebServices::WS_HEAP* heap, size_t size, void** ptr, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAlloc(heap, size, ptr, error);
        return win32_impl_result;
    }
    inline int32_t WsGetHeapProperty(Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_HEAP_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetHeapProperty(heap, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsResetHeap(Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetHeap(heap, error);
        return win32_impl_result;
    }
    inline void WsFreeHeap(Windows::Win32::WindowsWebServices::WS_HEAP* heap)
    {
        WIN32_IMPL_WsFreeHeap(heap);
    }
    inline int32_t WsCreateListener(Windows::Win32::WindowsWebServices::WS_CHANNEL_TYPE channelType, Windows::Win32::WindowsWebServices::WS_CHANNEL_BINDING channelBinding, Windows::Win32::WindowsWebServices::WS_LISTENER_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_SECURITY_DESCRIPTION* securityDescription, Windows::Win32::WindowsWebServices::WS_LISTENER** listener, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateListener(channelType, channelBinding, properties, propertyCount, securityDescription, listener, error);
        return win32_impl_result;
    }
    inline int32_t WsOpenListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_STRING* url, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsOpenListener(listener, url, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsAcceptChannel(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAcceptChannel(listener, channel, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsCloseListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCloseListener(listener, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsAbortListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbortListener(listener, error);
        return win32_impl_result;
    }
    inline int32_t WsResetListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetListener(listener, error);
        return win32_impl_result;
    }
    inline void WsFreeListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener)
    {
        WIN32_IMPL_WsFreeListener(listener);
    }
    inline int32_t WsGetListenerProperty(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_LISTENER_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetListenerProperty(listener, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsSetListenerProperty(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_LISTENER_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetListenerProperty(listener, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateChannelForListener(Windows::Win32::WindowsWebServices::WS_LISTENER* listener, Windows::Win32::WindowsWebServices::WS_CHANNEL_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_CHANNEL** channel, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateChannelForListener(listener, properties, propertyCount, channel, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateMessage(Windows::Win32::WindowsWebServices::WS_ENVELOPE_VERSION envelopeVersion, Windows::Win32::WindowsWebServices::WS_ADDRESSING_VERSION addressingVersion, Windows::Win32::WindowsWebServices::WS_MESSAGE_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_MESSAGE** message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateMessage(envelopeVersion, addressingVersion, properties, propertyCount, message, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateMessageForChannel(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_MESSAGE_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_MESSAGE** message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateMessageForChannel(channel, properties, propertyCount, message, error);
        return win32_impl_result;
    }
    inline int32_t WsInitializeMessage(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_MESSAGE_INITIALIZATION initialization, Windows::Win32::WindowsWebServices::WS_MESSAGE* sourceMessage, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsInitializeMessage(message, initialization, sourceMessage, error);
        return win32_impl_result;
    }
    inline int32_t WsResetMessage(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetMessage(message, error);
        return win32_impl_result;
    }
    inline void WsFreeMessage(Windows::Win32::WindowsWebServices::WS_MESSAGE* message)
    {
        WIN32_IMPL_WsFreeMessage(message);
    }
    inline int32_t WsGetHeaderAttributes(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_READER* reader, uint32_t* headerAttributes, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetHeaderAttributes(message, reader, headerAttributes, error);
        return win32_impl_result;
    }
    inline int32_t WsGetHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_HEADER_TYPE headerType, Windows::Win32::WindowsWebServices::WS_TYPE valueType, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetHeader(message, headerType, valueType, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsGetCustomHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* customHeaderDescription, Windows::Win32::WindowsWebServices::WS_REPEATING_HEADER_OPTION repeatingOption, uint32_t headerIndex, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, uint32_t* headerAttributes, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetCustomHeader(message, customHeaderDescription, repeatingOption, headerIndex, readOption, heap, value, valueSize, headerAttributes, error);
        return win32_impl_result;
    }
    inline int32_t WsRemoveHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_HEADER_TYPE headerType, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRemoveHeader(message, headerType, error);
        return win32_impl_result;
    }
    inline int32_t WsSetHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_HEADER_TYPE headerType, Windows::Win32::WindowsWebServices::WS_TYPE valueType, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetHeader(message, headerType, valueType, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsRemoveCustomHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_STRING* headerName, Windows::Win32::WindowsWebServices::WS_XML_STRING* headerNs, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRemoveCustomHeader(message, headerName, headerNs, error);
        return win32_impl_result;
    }
    inline int32_t WsAddCustomHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* headerDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, uint32_t headerAttributes, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAddCustomHeader(message, headerDescription, writeOption, value, valueSize, headerAttributes, error);
        return win32_impl_result;
    }
    inline int32_t WsAddMappedHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_STRING* headerName, Windows::Win32::WindowsWebServices::WS_TYPE valueType, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAddMappedHeader(message, headerName, valueType, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsRemoveMappedHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_STRING* headerName, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRemoveMappedHeader(message, headerName, error);
        return win32_impl_result;
    }
    inline int32_t WsGetMappedHeader(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_STRING* headerName, Windows::Win32::WindowsWebServices::WS_REPEATING_HEADER_OPTION repeatingOption, uint32_t headerIndex, Windows::Win32::WindowsWebServices::WS_TYPE valueType, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetMappedHeader(message, headerName, repeatingOption, headerIndex, valueType, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteBody(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* bodyDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteBody(message, bodyDescription, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsReadBody(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* bodyDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadBody(message, bodyDescription, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEnvelopeStart(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_MESSAGE_DONE_CALLBACK* doneCallback, void* doneCallbackState, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEnvelopeStart(message, writer, doneCallback, doneCallbackState, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteEnvelopeEnd(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteEnvelopeEnd(message, error);
        return win32_impl_result;
    }
    inline int32_t WsReadEnvelopeStart(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_MESSAGE_DONE_CALLBACK* doneCallback, void* doneCallbackState, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadEnvelopeStart(message, reader, doneCallback, doneCallbackState, error);
        return win32_impl_result;
    }
    inline int32_t WsReadEnvelopeEnd(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadEnvelopeEnd(message, error);
        return win32_impl_result;
    }
    inline int32_t WsGetMessageProperty(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_MESSAGE_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetMessageProperty(message, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsSetMessageProperty(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_MESSAGE_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsSetMessageProperty(message, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsAddressMessage(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS* address, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAddressMessage(message, address, error);
        return win32_impl_result;
    }
    inline int32_t WsCheckMustUnderstandHeaders(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCheckMustUnderstandHeaders(message, error);
        return win32_impl_result;
    }
    inline int32_t WsMarkHeaderAsUnderstood(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, Windows::Win32::WindowsWebServices::WS_XML_NODE_POSITION* headerPosition, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsMarkHeaderAsUnderstood(message, headerPosition, error);
        return win32_impl_result;
    }
    inline int32_t WsFillBody(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, uint32_t minSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFillBody(message, minSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsFlushBody(Windows::Win32::WindowsWebServices::WS_MESSAGE* message, uint32_t minSize, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFlushBody(message, minSize, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsRequestSecurityToken(Windows::Win32::WindowsWebServices::WS_CHANNEL* channel, Windows::Win32::WindowsWebServices::WS_REQUEST_SECURITY_TOKEN_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_SECURITY_TOKEN** token, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRequestSecurityToken(channel, properties, propertyCount, token, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsGetSecurityTokenProperty(Windows::Win32::WindowsWebServices::WS_SECURITY_TOKEN* securityToken, Windows::Win32::WindowsWebServices::WS_SECURITY_TOKEN_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetSecurityTokenProperty(securityToken, id, value, valueSize, heap, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateXmlSecurityToken(Windows::Win32::WindowsWebServices::WS_XML_BUFFER* tokenXml, Windows::Win32::WindowsWebServices::WS_SECURITY_KEY_HANDLE* tokenKey, Windows::Win32::WindowsWebServices::WS_XML_SECURITY_TOKEN_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_SECURITY_TOKEN** token, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateXmlSecurityToken(tokenXml, tokenKey, properties, propertyCount, token, error);
        return win32_impl_result;
    }
    inline void WsFreeSecurityToken(Windows::Win32::WindowsWebServices::WS_SECURITY_TOKEN* token)
    {
        WIN32_IMPL_WsFreeSecurityToken(token);
    }
    inline int32_t WsRevokeSecurityContext(Windows::Win32::WindowsWebServices::WS_SECURITY_CONTEXT* securityContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRevokeSecurityContext(securityContext, error);
        return win32_impl_result;
    }
    inline int32_t WsGetSecurityContextProperty(Windows::Win32::WindowsWebServices::WS_SECURITY_CONTEXT* securityContext, Windows::Win32::WindowsWebServices::WS_SECURITY_CONTEXT_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetSecurityContextProperty(securityContext, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsReadElement(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* elementDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadElement(reader, elementDescription, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsReadAttribute(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_ATTRIBUTE_DESCRIPTION* attributeDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadAttribute(reader, attributeDescription, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsReadType(Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_TYPE_MAPPING typeMapping, Windows::Win32::WindowsWebServices::WS_TYPE type, void* typeDescription, Windows::Win32::WindowsWebServices::WS_READ_OPTION readOption, Windows::Win32::WindowsWebServices::WS_HEAP* heap, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadType(reader, typeMapping, type, typeDescription, readOption, heap, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteElement(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ELEMENT_DESCRIPTION* elementDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteElement(writer, elementDescription, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteAttribute(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_ATTRIBUTE_DESCRIPTION* attributeDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteAttribute(writer, attributeDescription, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsWriteType(Windows::Win32::WindowsWebServices::WS_XML_WRITER* writer, Windows::Win32::WindowsWebServices::WS_TYPE_MAPPING typeMapping, Windows::Win32::WindowsWebServices::WS_TYPE type, void* typeDescription, Windows::Win32::WindowsWebServices::WS_WRITE_OPTION writeOption, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsWriteType(writer, typeMapping, type, typeDescription, writeOption, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsRegisterOperationForCancel(Windows::Win32::WindowsWebServices::WS_OPERATION_CONTEXT* context, Windows::Win32::WindowsWebServices::WS_OPERATION_CANCEL_CALLBACK* cancelCallback, Windows::Win32::WindowsWebServices::WS_OPERATION_FREE_STATE_CALLBACK* freestateCallback, void* userState, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsRegisterOperationForCancel(context, cancelCallback, freestateCallback, userState, error);
        return win32_impl_result;
    }
    inline int32_t WsGetServiceHostProperty(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost, Windows::Win32::WindowsWebServices::WS_SERVICE_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetServiceHostProperty(serviceHost, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_ENDPOINT** endpoints, uint16_t endpointCount, Windows::Win32::WindowsWebServices::WS_SERVICE_PROPERTY* serviceProperties, uint32_t servicePropertyCount, Windows::Win32::WindowsWebServices::WS_SERVICE_HOST** serviceHost, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateServiceHost(endpoints, endpointCount, serviceProperties, servicePropertyCount, serviceHost, error);
        return win32_impl_result;
    }
    inline int32_t WsOpenServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsOpenServiceHost(serviceHost, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsCloseServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCloseServiceHost(serviceHost, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsAbortServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbortServiceHost(serviceHost, error);
        return win32_impl_result;
    }
    inline void WsFreeServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost)
    {
        WIN32_IMPL_WsFreeServiceHost(serviceHost);
    }
    inline int32_t WsResetServiceHost(Windows::Win32::WindowsWebServices::WS_SERVICE_HOST* serviceHost, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetServiceHost(serviceHost, error);
        return win32_impl_result;
    }
    inline int32_t WsGetServiceProxyProperty(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_PROXY_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetServiceProxyProperty(serviceProxy, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateServiceProxy(Windows::Win32::WindowsWebServices::WS_CHANNEL_TYPE channelType, Windows::Win32::WindowsWebServices::WS_CHANNEL_BINDING channelBinding, Windows::Win32::WindowsWebServices::WS_SECURITY_DESCRIPTION* securityDescription, Windows::Win32::WindowsWebServices::WS_PROXY_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_CHANNEL_PROPERTY* channelProperties, uint32_t channelPropertyCount, Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY** serviceProxy, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateServiceProxy(channelType, channelBinding, securityDescription, properties, propertyCount, channelProperties, channelPropertyCount, serviceProxy, error);
        return win32_impl_result;
    }
    inline int32_t WsOpenServiceProxy(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS* address, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsOpenServiceProxy(serviceProxy, address, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsCloseServiceProxy(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCloseServiceProxy(serviceProxy, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsAbortServiceProxy(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbortServiceProxy(serviceProxy, error);
        return win32_impl_result;
    }
    inline void WsFreeServiceProxy(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy)
    {
        WIN32_IMPL_WsFreeServiceProxy(serviceProxy);
    }
    inline int32_t WsResetServiceProxy(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetServiceProxy(serviceProxy, error);
        return win32_impl_result;
    }
    inline int32_t WsAbandonCall(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, uint32_t callId, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsAbandonCall(serviceProxy, callId, error);
        return win32_impl_result;
    }
    inline int32_t WsCall(Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY* serviceProxy, Windows::Win32::WindowsWebServices::WS_OPERATION_DESCRIPTION* operation, void** arguments, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_CALL_PROPERTY* callProperties, uint32_t callPropertyCount, Windows::Win32::WindowsWebServices::WS_ASYNC_CONTEXT* asyncContext, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCall(serviceProxy, operation, arguments, heap, callProperties, callPropertyCount, asyncContext, error);
        return win32_impl_result;
    }
    inline int32_t WsDecodeUrl(Windows::Win32::WindowsWebServices::WS_STRING* url, uint32_t flags, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_URL** outUrl, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsDecodeUrl(url, flags, heap, outUrl, error);
        return win32_impl_result;
    }
    inline int32_t WsEncodeUrl(Windows::Win32::WindowsWebServices::WS_URL* url, uint32_t flags, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_STRING* outUrl, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsEncodeUrl(url, flags, heap, outUrl, error);
        return win32_impl_result;
    }
    inline int32_t WsCombineUrl(Windows::Win32::WindowsWebServices::WS_STRING* baseUrl, Windows::Win32::WindowsWebServices::WS_STRING* referenceUrl, uint32_t flags, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_STRING* resultUrl, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCombineUrl(baseUrl, referenceUrl, flags, heap, resultUrl, error);
        return win32_impl_result;
    }
    inline int32_t WsDateTimeToFileTime(Windows::Win32::WindowsWebServices::WS_DATETIME* dateTime, Windows::Win32::WindowsProgramming::FILETIME* fileTime, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsDateTimeToFileTime(dateTime, fileTime, error);
        return win32_impl_result;
    }
    inline int32_t WsFileTimeToDateTime(Windows::Win32::WindowsProgramming::FILETIME* fileTime, Windows::Win32::WindowsWebServices::WS_DATETIME* dateTime, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsFileTimeToDateTime(fileTime, dateTime, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateMetadata(Windows::Win32::WindowsWebServices::WS_METADATA_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_METADATA** metadata, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateMetadata(properties, propertyCount, metadata, error);
        return win32_impl_result;
    }
    inline int32_t WsReadMetadata(Windows::Win32::WindowsWebServices::WS_METADATA* metadata, Windows::Win32::WindowsWebServices::WS_XML_READER* reader, Windows::Win32::WindowsWebServices::WS_STRING* url, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsReadMetadata(metadata, reader, url, error);
        return win32_impl_result;
    }
    inline void WsFreeMetadata(Windows::Win32::WindowsWebServices::WS_METADATA* metadata)
    {
        WIN32_IMPL_WsFreeMetadata(metadata);
    }
    inline int32_t WsResetMetadata(Windows::Win32::WindowsWebServices::WS_METADATA* metadata, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsResetMetadata(metadata, error);
        return win32_impl_result;
    }
    inline int32_t WsGetMetadataProperty(Windows::Win32::WindowsWebServices::WS_METADATA* metadata, Windows::Win32::WindowsWebServices::WS_METADATA_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetMetadataProperty(metadata, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsGetMissingMetadataDocumentAddress(Windows::Win32::WindowsWebServices::WS_METADATA* metadata, Windows::Win32::WindowsWebServices::WS_ENDPOINT_ADDRESS** address, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetMissingMetadataDocumentAddress(metadata, address, error);
        return win32_impl_result;
    }
    inline int32_t WsGetMetadataEndpoints(Windows::Win32::WindowsWebServices::WS_METADATA* metadata, Windows::Win32::WindowsWebServices::WS_METADATA_ENDPOINTS* endpoints, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetMetadataEndpoints(metadata, endpoints, error);
        return win32_impl_result;
    }
    inline int32_t WsMatchPolicyAlternative(Windows::Win32::WindowsWebServices::WS_POLICY* policy, uint32_t alternativeIndex, Windows::Win32::WindowsWebServices::WS_POLICY_CONSTRAINTS* policyConstraints, Windows::Win32::SystemServices::BOOL matchRequired, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsMatchPolicyAlternative(policy, alternativeIndex, policyConstraints, matchRequired, heap, error);
        return win32_impl_result;
    }
    inline int32_t WsGetPolicyProperty(Windows::Win32::WindowsWebServices::WS_POLICY* policy, Windows::Win32::WindowsWebServices::WS_POLICY_PROPERTY_ID id, void* value, uint32_t valueSize, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetPolicyProperty(policy, id, value, valueSize, error);
        return win32_impl_result;
    }
    inline int32_t WsGetPolicyAlternativeCount(Windows::Win32::WindowsWebServices::WS_POLICY* policy, uint32_t* count, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsGetPolicyAlternativeCount(policy, count, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateServiceProxyFromTemplate(Windows::Win32::WindowsWebServices::WS_CHANNEL_TYPE channelType, Windows::Win32::WindowsWebServices::WS_PROXY_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_BINDING_TEMPLATE_TYPE templateType, void* templateValue, uint32_t templateSize, void* templateDescription, uint32_t templateDescriptionSize, Windows::Win32::WindowsWebServices::WS_SERVICE_PROXY** serviceProxy, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateServiceProxyFromTemplate(channelType, properties, propertyCount, templateType, templateValue, templateSize, templateDescription, templateDescriptionSize, serviceProxy, error);
        return win32_impl_result;
    }
    inline int32_t WsCreateServiceEndpointFromTemplate(Windows::Win32::WindowsWebServices::WS_CHANNEL_TYPE channelType, Windows::Win32::WindowsWebServices::WS_SERVICE_ENDPOINT_PROPERTY* properties, uint32_t propertyCount, Windows::Win32::WindowsWebServices::WS_STRING* addressUrl, Windows::Win32::WindowsWebServices::WS_SERVICE_CONTRACT* contract, Windows::Win32::WindowsWebServices::WS_SERVICE_SECURITY_CALLBACK* authorizationCallback, Windows::Win32::WindowsWebServices::WS_HEAP* heap, Windows::Win32::WindowsWebServices::WS_BINDING_TEMPLATE_TYPE templateType, void* templateValue, uint32_t templateSize, void* templateDescription, uint32_t templateDescriptionSize, Windows::Win32::WindowsWebServices::WS_SERVICE_ENDPOINT** serviceEndpoint, Windows::Win32::WindowsWebServices::WS_ERROR* error)
    {
        auto win32_impl_result = WIN32_IMPL_WsCreateServiceEndpointFromTemplate(channelType, properties, propertyCount, addressUrl, contract, authorizationCallback, heap, templateType, templateValue, templateSize, templateDescription, templateDescriptionSize, serviceEndpoint, error);
        return win32_impl_result;
    }
    inline uint32_t WebAuthNGetApiVersionNumber()
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNGetApiVersionNumber();
        return win32_impl_result;
    }
    inline int32_t WebAuthNIsUserVerifyingPlatformAuthenticatorAvailable(int32_t* pbIsUserVerifyingPlatformAuthenticatorAvailable)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNIsUserVerifyingPlatformAuthenticatorAvailable(pbIsUserVerifyingPlatformAuthenticatorAvailable);
        return win32_impl_result;
    }
    inline int32_t WebAuthNAuthenticatorMakeCredential(Windows::Win32::WindowsAndMessaging::HWND hWnd, Windows::Win32::WindowsWebServices::WEBAUTHN_RP_ENTITY_INFORMATION* pRpInformation, Windows::Win32::WindowsWebServices::WEBAUTHN_USER_ENTITY_INFORMATION* pUserInformation, Windows::Win32::WindowsWebServices::WEBAUTHN_COSE_CREDENTIAL_PARAMETERS* pPubKeyCredParams, Windows::Win32::WindowsWebServices::WEBAUTHN_CLIENT_DATA* pWebAuthNClientData, Windows::Win32::WindowsWebServices::WEBAUTHN_AUTHENTICATOR_MAKE_CREDENTIAL_OPTIONS* pWebAuthNMakeCredentialOptions, Windows::Win32::WindowsWebServices::WEBAUTHN_CREDENTIAL_ATTESTATION** ppWebAuthNCredentialAttestation)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNAuthenticatorMakeCredential(hWnd, pRpInformation, pUserInformation, pPubKeyCredParams, pWebAuthNClientData, pWebAuthNMakeCredentialOptions, ppWebAuthNCredentialAttestation);
        return win32_impl_result;
    }
    inline int32_t WebAuthNAuthenticatorGetAssertion(Windows::Win32::WindowsAndMessaging::HWND hWnd, uint16_t* pwszRpId, Windows::Win32::WindowsWebServices::WEBAUTHN_CLIENT_DATA* pWebAuthNClientData, Windows::Win32::WindowsWebServices::WEBAUTHN_AUTHENTICATOR_GET_ASSERTION_OPTIONS* pWebAuthNGetAssertionOptions, Windows::Win32::WindowsWebServices::WEBAUTHN_ASSERTION** ppWebAuthNAssertion)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNAuthenticatorGetAssertion(hWnd, pwszRpId, pWebAuthNClientData, pWebAuthNGetAssertionOptions, ppWebAuthNAssertion);
        return win32_impl_result;
    }
    inline void WebAuthNFreeCredentialAttestation(Windows::Win32::WindowsWebServices::WEBAUTHN_CREDENTIAL_ATTESTATION* pWebAuthNCredentialAttestation)
    {
        WIN32_IMPL_WebAuthNFreeCredentialAttestation(pWebAuthNCredentialAttestation);
    }
    inline void WebAuthNFreeAssertion(Windows::Win32::WindowsWebServices::WEBAUTHN_ASSERTION* pWebAuthNAssertion)
    {
        WIN32_IMPL_WebAuthNFreeAssertion(pWebAuthNAssertion);
    }
    inline int32_t WebAuthNGetCancellationId(::win32::guid* pCancellationId)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNGetCancellationId(pCancellationId);
        return win32_impl_result;
    }
    inline int32_t WebAuthNCancelCurrentOperation(::win32::guid* pCancellationId)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNCancelCurrentOperation(pCancellationId);
        return win32_impl_result;
    }
    inline uint16_t* WebAuthNGetErrorName(int32_t hr)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNGetErrorName(hr);
        return win32_impl_result;
    }
    inline int32_t WebAuthNGetW3CExceptionDOMError(int32_t hr)
    {
        auto win32_impl_result = WIN32_IMPL_WebAuthNGetW3CExceptionDOMError(hr);
        return win32_impl_result;
    }

    inline constexpr int32_t WS_HTTP_HEADER_MAPPING_COMMA_SEPARATOR = 1;
    inline constexpr int32_t WS_HTTP_HEADER_MAPPING_SEMICOLON_SEPARATOR = 2;
    inline constexpr int32_t WS_HTTP_HEADER_MAPPING_QUOTED_VALUE = 4;
    inline constexpr int32_t WS_HTTP_RESPONSE_MAPPING_STATUS_CODE = 1;
    inline constexpr int32_t WS_HTTP_RESPONSE_MAPPING_STATUS_TEXT = 2;
    inline constexpr int32_t WS_HTTP_REQUEST_MAPPING_VERB = 2;
    inline constexpr int32_t WS_MATCH_URL_DNS_HOST = 1;
    inline constexpr int32_t WS_MATCH_URL_DNS_FULLY_QUALIFIED_HOST = 2;
    inline constexpr int32_t WS_MATCH_URL_NETBIOS_HOST = 4;
    inline constexpr int32_t WS_MATCH_URL_LOCAL_HOST = 8;
    inline constexpr int32_t WS_MATCH_URL_HOST_ADDRESSES = 16;
    inline constexpr int32_t WS_MATCH_URL_THIS_HOST = 31;
    inline constexpr int32_t WS_MATCH_URL_PORT = 32;
    inline constexpr int32_t WS_MATCH_URL_EXACT_PATH = 64;
    inline constexpr int32_t WS_MATCH_URL_PREFIX_PATH = 128;
    inline constexpr int32_t WS_MATCH_URL_NO_QUERY = 256;
    inline constexpr int32_t WS_MUST_UNDERSTAND_HEADER_ATTRIBUTE = 1;
    inline constexpr int32_t WS_RELAY_HEADER_ATTRIBUTE = 2;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_NONE = 1;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_BASIC = 2;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_DIGEST = 4;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_NTLM = 8;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_NEGOTIATE = 16;
    inline constexpr int32_t WS_HTTP_HEADER_AUTH_SCHEME_PASSPORT = 32;
    inline constexpr int32_t WS_CERT_FAILURE_CN_MISMATCH = 1;
    inline constexpr int32_t WS_CERT_FAILURE_INVALID_DATE = 2;
    inline constexpr int32_t WS_CERT_FAILURE_UNTRUSTED_ROOT = 4;
    inline constexpr int32_t WS_CERT_FAILURE_WRONG_USAGE = 8;
    inline constexpr int32_t WS_CERT_FAILURE_REVOCATION_OFFLINE = 16;
    inline constexpr int32_t WS_STRUCT_ABSTRACT = 1;
    inline constexpr int32_t WS_STRUCT_IGNORE_TRAILING_ELEMENT_CONTENT = 2;
    inline constexpr int32_t WS_STRUCT_IGNORE_UNHANDLED_ATTRIBUTES = 4;
    inline constexpr int32_t WS_FIELD_POINTER = 1;
    inline constexpr int32_t WS_FIELD_OPTIONAL = 2;
    inline constexpr int32_t WS_FIELD_NILLABLE = 4;
    inline constexpr int32_t WS_FIELD_NILLABLE_ITEM = 8;
    inline constexpr int32_t WS_FIELD_OTHER_NAMESPACE = 16;
    inline constexpr int32_t WS_SERVICE_OPERATION_MESSAGE_NILLABLE_ELEMENT = 1;
    inline constexpr int32_t WS_URL_FLAGS_ALLOW_HOST_WILDCARDS = 1;
    inline constexpr int32_t WS_URL_FLAGS_NO_PATH_COLLAPSE = 2;
    inline constexpr int32_t WS_URL_FLAGS_ZERO_TERMINATE = 4;
#pragma endregion methods

}
#endif
