// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_XInput_H
#define WIN32_Windows_Win32_XInput_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.XInput.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::XInput
{
#pragma region methods
    inline uint32_t XInputGetState(uint32_t dwUserIndex, Windows::Win32::XInput::XINPUT_STATE* pState)
    {
        auto win32_impl_result = WIN32_IMPL_XInputGetState(dwUserIndex, pState);
        return win32_impl_result;
    }
    inline uint32_t XInputSetState(uint32_t dwUserIndex, Windows::Win32::XInput::XINPUT_VIBRATION* pVibration)
    {
        auto win32_impl_result = WIN32_IMPL_XInputSetState(dwUserIndex, pVibration);
        return win32_impl_result;
    }
    inline uint32_t XInputGetCapabilities(uint32_t dwUserIndex, uint32_t dwFlags, Windows::Win32::XInput::XINPUT_CAPABILITIES* pCapabilities)
    {
        auto win32_impl_result = WIN32_IMPL_XInputGetCapabilities(dwUserIndex, dwFlags, pCapabilities);
        return win32_impl_result;
    }
    inline void XInputEnable(Windows::Win32::SystemServices::BOOL enable)
    {
        WIN32_IMPL_XInputEnable(enable);
    }
    inline uint32_t XInputGetAudioDeviceIds(uint32_t dwUserIndex, uint16_t* pRenderDeviceId, uint32_t* pRenderCount, uint16_t* pCaptureDeviceId, uint32_t* pCaptureCount)
    {
        auto win32_impl_result = WIN32_IMPL_XInputGetAudioDeviceIds(dwUserIndex, pRenderDeviceId, pRenderCount, pCaptureDeviceId, pCaptureCount);
        return win32_impl_result;
    }
    inline uint32_t XInputGetBatteryInformation(uint32_t dwUserIndex, uint8_t devType, Windows::Win32::XInput::XINPUT_BATTERY_INFORMATION* pBatteryInformation)
    {
        auto win32_impl_result = WIN32_IMPL_XInputGetBatteryInformation(dwUserIndex, devType, pBatteryInformation);
        return win32_impl_result;
    }
    inline uint32_t XInputGetKeystroke(uint32_t dwUserIndex, uint32_t dwReserved, Windows::Win32::XInput::XINPUT_KEYSTROKE* pKeystroke)
    {
        auto win32_impl_result = WIN32_IMPL_XInputGetKeystroke(dwUserIndex, dwReserved, pKeystroke);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
