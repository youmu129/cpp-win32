// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Xps_H
#define WIN32_Windows_Win32_Xps_H
#include "win32/base.h"
static_assert(win32::check_version(CPPWIN32_VERSION, "0.0.0.1"), "Mismatched C++/Win32 headers.");
#define CPPWIN32_VERSION "0.0.0.1"
#include "win32/impl/Windows.Win32.Xps.2.h"
WIN32_EXPORT namespace win32::Windows::Win32::Xps
{
#pragma region methods
    inline int32_t DeviceCapabilitiesA(int8_t* pDevice, int8_t* pPort, uint16_t fwCapability, int8_t* pOutput, Windows::Win32::Xps::DEVMODEA* pDevMode)
    {
        auto win32_impl_result = WIN32_IMPL_DeviceCapabilitiesA(pDevice, pPort, fwCapability, pOutput, pDevMode);
        return win32_impl_result;
    }
    inline int32_t DeviceCapabilitiesW(uint16_t* pDevice, uint16_t* pPort, uint16_t fwCapability, uint16_t* pOutput, Windows::Win32::DisplayDevices::DEVMODEW* pDevMode)
    {
        auto win32_impl_result = WIN32_IMPL_DeviceCapabilitiesW(pDevice, pPort, fwCapability, pOutput, pDevMode);
        return win32_impl_result;
    }
    inline int32_t Escape(Windows::Win32::Gdi::HDC hdc, int32_t iEscape, int32_t cjIn, int8_t* pvIn, void* pvOut)
    {
        auto win32_impl_result = WIN32_IMPL_Escape(hdc, iEscape, cjIn, pvIn, pvOut);
        return win32_impl_result;
    }
    inline int32_t ExtEscape(Windows::Win32::Gdi::HDC hdc, int32_t iEscape, int32_t cjInput, int8_t* lpInData, int32_t cjOutput, int8_t* lpOutData)
    {
        auto win32_impl_result = WIN32_IMPL_ExtEscape(hdc, iEscape, cjInput, lpInData, cjOutput, lpOutData);
        return win32_impl_result;
    }
    inline int32_t StartDocA(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Xps::DOCINFOA* lpdi)
    {
        auto win32_impl_result = WIN32_IMPL_StartDocA(hdc, lpdi);
        return win32_impl_result;
    }
    inline int32_t StartDocW(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Xps::DOCINFOW* lpdi)
    {
        auto win32_impl_result = WIN32_IMPL_StartDocW(hdc, lpdi);
        return win32_impl_result;
    }
    inline int32_t EndDoc(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_EndDoc(hdc);
        return win32_impl_result;
    }
    inline int32_t StartPage(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_StartPage(hdc);
        return win32_impl_result;
    }
    inline int32_t EndPage(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_EndPage(hdc);
        return win32_impl_result;
    }
    inline int32_t AbortDoc(Windows::Win32::Gdi::HDC hdc)
    {
        auto win32_impl_result = WIN32_IMPL_AbortDoc(hdc);
        return win32_impl_result;
    }
    inline int32_t SetAbortProc(Windows::Win32::Gdi::HDC hdc, Windows::Win32::Xps::ABORTPROC* proc)
    {
        auto win32_impl_result = WIN32_IMPL_SetAbortProc(hdc, proc);
        return win32_impl_result;
    }
    inline Windows::Win32::SystemServices::BOOL PrintWindow(Windows::Win32::WindowsAndMessaging::HWND hwnd, Windows::Win32::Gdi::HDC hdcBlt, uint32_t nFlags)
    {
        auto win32_impl_result = WIN32_IMPL_PrintWindow(hwnd, hdcBlt, nFlags);
        return win32_impl_result;
    }
    inline int32_t PTQuerySchemaVersionSupport(uint16_t* pszPrinterName, uint32_t* pMaxVersion)
    {
        auto win32_impl_result = WIN32_IMPL_PTQuerySchemaVersionSupport(pszPrinterName, pMaxVersion);
        return win32_impl_result;
    }
    inline int32_t PTOpenProvider(uint16_t* pszPrinterName, uint32_t dwVersion, Windows::Win32::Xps::HPTPROVIDER__** phProvider)
    {
        auto win32_impl_result = WIN32_IMPL_PTOpenProvider(pszPrinterName, dwVersion, phProvider);
        return win32_impl_result;
    }
    inline int32_t PTOpenProviderEx(uint16_t* pszPrinterName, uint32_t dwMaxVersion, uint32_t dwPrefVersion, Windows::Win32::Xps::HPTPROVIDER__** phProvider, uint32_t* pUsedVersion)
    {
        auto win32_impl_result = WIN32_IMPL_PTOpenProviderEx(pszPrinterName, dwMaxVersion, dwPrefVersion, phProvider, pUsedVersion);
        return win32_impl_result;
    }
    inline int32_t PTCloseProvider(Windows::Win32::Xps::HPTPROVIDER__* hProvider)
    {
        auto win32_impl_result = WIN32_IMPL_PTCloseProvider(hProvider);
        return win32_impl_result;
    }
    inline int32_t PTReleaseMemory(void* pBuffer)
    {
        auto win32_impl_result = WIN32_IMPL_PTReleaseMemory(pBuffer);
        return win32_impl_result;
    }
    inline int32_t PTGetPrintCapabilities(Windows::Win32::Xps::HPTPROVIDER__* hProvider, Windows::Win32::StructuredStorage::IStream* pPrintTicket, Windows::Win32::StructuredStorage::IStream* pCapabilities, Windows::Win32::Automation::BSTR* pbstrErrorMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PTGetPrintCapabilities(hProvider, pPrintTicket, pCapabilities, pbstrErrorMessage);
        return win32_impl_result;
    }
    inline int32_t PTGetPrintDeviceCapabilities(Windows::Win32::Xps::HPTPROVIDER__* hProvider, Windows::Win32::StructuredStorage::IStream* pPrintTicket, Windows::Win32::StructuredStorage::IStream* pDeviceCapabilities, Windows::Win32::Automation::BSTR* pbstrErrorMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PTGetPrintDeviceCapabilities(hProvider, pPrintTicket, pDeviceCapabilities, pbstrErrorMessage);
        return win32_impl_result;
    }
    inline int32_t PTGetPrintDeviceResources(Windows::Win32::Xps::HPTPROVIDER__* hProvider, uint16_t* pszLocaleName, Windows::Win32::StructuredStorage::IStream* pPrintTicket, Windows::Win32::StructuredStorage::IStream* pDeviceResources, Windows::Win32::Automation::BSTR* pbstrErrorMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PTGetPrintDeviceResources(hProvider, pszLocaleName, pPrintTicket, pDeviceResources, pbstrErrorMessage);
        return win32_impl_result;
    }
    inline int32_t PTMergeAndValidatePrintTicket(Windows::Win32::Xps::HPTPROVIDER__* hProvider, Windows::Win32::StructuredStorage::IStream* pBaseTicket, Windows::Win32::StructuredStorage::IStream* pDeltaTicket, Windows::Win32::Xps::EPrintTicketScope scope, Windows::Win32::StructuredStorage::IStream* pResultTicket, Windows::Win32::Automation::BSTR* pbstrErrorMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PTMergeAndValidatePrintTicket(hProvider, pBaseTicket, pDeltaTicket, scope, pResultTicket, pbstrErrorMessage);
        return win32_impl_result;
    }
    inline int32_t PTConvertPrintTicketToDevMode(Windows::Win32::Xps::HPTPROVIDER__* hProvider, Windows::Win32::StructuredStorage::IStream* pPrintTicket, Windows::Win32::Xps::EDefaultDevmodeType baseDevmodeType, Windows::Win32::Xps::EPrintTicketScope scope, uint32_t* pcbDevmode, Windows::Win32::Xps::DEVMODEA** ppDevmode, Windows::Win32::Automation::BSTR* pbstrErrorMessage)
    {
        auto win32_impl_result = WIN32_IMPL_PTConvertPrintTicketToDevMode(hProvider, pPrintTicket, baseDevmodeType, scope, pcbDevmode, ppDevmode, pbstrErrorMessage);
        return win32_impl_result;
    }
    inline int32_t PTConvertDevModeToPrintTicket(Windows::Win32::Xps::HPTPROVIDER__* hProvider, uint32_t cbDevmode, Windows::Win32::Xps::DEVMODEA* pDevmode, Windows::Win32::Xps::EPrintTicketScope scope, Windows::Win32::StructuredStorage::IStream* pPrintTicket)
    {
        auto win32_impl_result = WIN32_IMPL_PTConvertDevModeToPrintTicket(hProvider, cbDevmode, pDevmode, scope, pPrintTicket);
        return win32_impl_result;
    }

#pragma endregion methods

}
#endif
