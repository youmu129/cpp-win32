// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Audio_0_H
#define WIN32_Windows_Win32_Audio_0_H
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::Audio
{
#pragma region enums
    enum class APO_CONNECTION_BUFFER_TYPE : int32_t
    {
        APO_CONNECTION_BUFFER_TYPE_ALLOCATED = 0,
        APO_CONNECTION_BUFFER_TYPE_EXTERNAL = 1,
        APO_CONNECTION_BUFFER_TYPE_DEPENDANT = 2,
    };
    enum class APO_FLAG : int32_t
    {
        APO_FLAG_NONE = 0,
        APO_FLAG_INPLACE = 1,
        APO_FLAG_SAMPLESPERFRAME_MUST_MATCH = 2,
        APO_FLAG_FRAMESPERSECOND_MUST_MATCH = 4,
        APO_FLAG_BITSPERSAMPLE_MUST_MATCH = 8,
        APO_FLAG_MIXER = 16,
        APO_FLAG_DEFAULT = 14,
    };
    enum class AUDIO_FLOW_TYPE : int32_t
    {
        AUDIO_FLOW_PULL = 0,
        AUDIO_FLOW_PUSH = 1,
    };
    enum class DMUS_CLOCKTYPE : int32_t
    {
        DMUS_CLOCK_SYSTEM = 0,
        DMUS_CLOCK_WAVE = 1,
    };
    enum class EAudioConstriction : int32_t
    {
        eAudioConstrictionOff = 0,
        eAudioConstriction48_16 = 1,
        eAudioConstriction44_16 = 2,
        eAudioConstriction14_14 = 3,
        eAudioConstrictionMute = 4,
    };
    enum class KSPROPERTY_AUDIOEFFECTSDISCOVERY : int32_t
    {
        KSPROPERTY_AUDIOEFFECTSDISCOVERY_EFFECTSLIST = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APOInitBaseStruct;
    struct APOInitSystemEffects;
    struct APOInitSystemEffects2;
    struct APO_CONNECTION_DESCRIPTOR;
    struct APO_REG_PROPERTIES;
    struct AudioFXExtensionParams;
    struct CONNECTION;
    struct CONNECTIONLIST;
    struct DLSHEADER;
    struct DLSID;
    struct DLSVERSION;
    struct DMUS_ARTICPARAMS;
    struct DMUS_ARTICULATION;
    struct DMUS_ARTICULATION2;
    struct DMUS_BUFFERDESC;
    struct DMUS_CLOCKINFO7;
    struct DMUS_CLOCKINFO8;
    struct DMUS_COPYRIGHT;
    struct DMUS_DOWNLOADINFO;
    struct DMUS_EVENTHEADER;
    struct DMUS_EXTENSIONCHUNK;
    struct DMUS_INSTRUMENT;
    struct DMUS_LFOPARAMS;
    struct DMUS_MSCPARAMS;
    struct DMUS_NOTERANGE;
    struct DMUS_OFFSETTABLE;
    struct DMUS_PEGPARAMS;
    struct DMUS_PORTCAPS;
    struct DMUS_PORTPARAMS8;
    struct DMUS_REGION;
    struct DMUS_SYNTHSTATS;
    struct DMUS_SYNTHSTATS8;
    struct DMUS_VEGPARAMS;
    struct DMUS_VOICE_STATE;
    struct DMUS_WAVE;
    struct DMUS_WAVEARTDL;
    struct DMUS_WAVEDATA;
    struct DMUS_WAVEDL;
    struct DMUS_WAVES_REVERB_PARAMS;
    struct DS3DBUFFER;
    struct DS3DLISTENER;
    struct DSBCAPS;
    struct DSBPOSITIONNOTIFY;
    struct DSBUFFERDESC;
    struct DSBUFFERDESC1;
    struct DSCAPS;
    struct DSCBCAPS;
    struct DSCBUFFERDESC;
    struct DSCBUFFERDESC1;
    struct DSCCAPS;
    struct DSCEFFECTDESC;
    struct DSCFXAec;
    struct DSCFXNoiseSuppress;
    struct DSEFFECTDESC;
    struct DSFXChorus;
    struct DSFXCompressor;
    struct DSFXDistortion;
    struct DSFXEcho;
    struct DSFXFlanger;
    struct DSFXGargle;
    struct DSFXI3DL2Reverb;
    struct DSFXParamEq;
    struct DSFXWavesReverb;
    struct INSTHEADER;
    struct KSP_PINMODE;
    struct MDEVICECAPSEX;
    struct MIDILOCALE;
    struct MIDIOPENDESC;
    struct POOLCUE;
    struct POOLTABLE;
    struct RGNHEADER;
    struct RGNRANGE;
    struct UNCOMPRESSEDAUDIOFORMAT;
    struct WAVELINK;
    struct _DMUS_PORTPARAMS;
    struct _rloop;
    struct _rwsmp;
    struct IAudioDeviceModulesClient;
    struct IAudioMediaType;
    struct IAudioProcessingObject;
    struct IAudioProcessingObjectConfiguration;
    struct IAudioProcessingObjectRT;
    struct IAudioProcessingObjectVBR;
    struct IAudioSystemEffects;
    struct IAudioSystemEffects2;
    struct IAudioSystemEffectsCustomFormats;
    struct IDirectMusic;
    struct IDirectMusic8;
    struct IDirectMusicBuffer;
    struct IDirectMusicCollection;
    struct IDirectMusicDownload;
    struct IDirectMusicDownloadedInstrument;
    struct IDirectMusicInstrument;
    struct IDirectMusicPort;
    struct IDirectMusicPortDownload;
    struct IDirectMusicSynth;
    struct IDirectMusicSynth8;
    struct IDirectMusicSynthSink;
    struct IDirectMusicThru;
    struct IDirectSound;
    struct IDirectSound3DBuffer;
    struct IDirectSound3DListener;
    struct IDirectSound8;
    struct IDirectSoundBuffer;
    struct IDirectSoundBuffer8;
    struct IDirectSoundCapture;
    struct IDirectSoundCaptureBuffer;
    struct IDirectSoundCaptureBuffer8;
    struct IDirectSoundCaptureFXAec;
    struct IDirectSoundCaptureFXNoiseSuppress;
    struct IDirectSoundFXChorus;
    struct IDirectSoundFXCompressor;
    struct IDirectSoundFXDistortion;
    struct IDirectSoundFXEcho;
    struct IDirectSoundFXFlanger;
    struct IDirectSoundFXGargle;
    struct IDirectSoundFXI3DL2Reverb;
    struct IDirectSoundFXParamEq;
    struct IDirectSoundFXWavesReverb;
    struct IDirectSoundFullDuplex;
    struct IDirectSoundNotify;
    struct IPropertyStore;
    struct KSPROPSETID_AudioEffectsDiscovery;
#pragma endregion forward_declarations

#pragma region delegates
    using FNAPONOTIFICATIONCALLBACK = int32_t __stdcall(Windows::Win32::Audio::APO_REG_PROPERTIES*, void*);
    using LPDSENUMCALLBACKA = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, int8_t*, int8_t*, void*);
    using LPDSENUMCALLBACKW = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, uint16_t*, uint16_t*, void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioDeviceModulesClient>{ 0x98F37DAC,0xD0B6,0x49F5,{ 0x89,0x6A,0xAA,0x4D,0x16,0x9A,0x4C,0x48 } }; // 98F37DAC-D0B6-49F5-896A-AA4D169A4C48
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioMediaType>{ 0x4E997F73,0xB71F,0x4798,{ 0x87,0x3B,0xED,0x7D,0xFC,0xF1,0x5B,0x4D } }; // 4E997F73-B71F-4798-873B-ED7DFCF15B4D
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioProcessingObject>{ 0xFD7F2B29,0x24D0,0x4B5C,{ 0xB1,0x77,0x59,0x2C,0x39,0xF9,0xCA,0x10 } }; // FD7F2B29-24D0-4B5C-B177-592C39F9CA10
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioProcessingObjectConfiguration>{ 0x0E5ED805,0xABA6,0x49C3,{ 0x8F,0x9A,0x2B,0x8C,0x88,0x9C,0x4F,0xA8 } }; // 0E5ED805-ABA6-49C3-8F9A-2B8C889C4FA8
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioProcessingObjectRT>{ 0x9E1D6A6D,0xDDBC,0x4E95,{ 0xA4,0xC7,0xAD,0x64,0xBA,0x37,0x84,0x6C } }; // 9E1D6A6D-DDBC-4E95-A4C7-AD64BA37846C
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioProcessingObjectVBR>{ 0x7BA1DB8F,0x78AD,0x49CD,{ 0x95,0x91,0xF7,0x9D,0x80,0xA1,0x7C,0x81 } }; // 7BA1DB8F-78AD-49CD-9591-F79D80A17C81
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioSystemEffects>{ 0x5FA00F27,0xADD6,0x499A,{ 0x8A,0x9D,0x6B,0x98,0x52,0x1F,0xA7,0x5B } }; // 5FA00F27-ADD6-499A-8A9D-6B98521FA75B
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioSystemEffects2>{ 0xBAFE99D2,0x7436,0x44CE,{ 0x9E,0x0E,0x4D,0x89,0xAF,0xBF,0xFF,0x56 } }; // BAFE99D2-7436-44CE-9E0E-4D89AFBFFF56
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IAudioSystemEffectsCustomFormats>{ 0xB1176E34,0xBB7F,0x4F05,{ 0xBE,0xBD,0x1B,0x18,0xA5,0x34,0xE0,0x97 } }; // B1176E34-BB7F-4F05-BEBD-1B18A534E097
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::IPropertyStore>{ 0x886D8EEB,0x8CF2,0x4446,{ 0x8D,0x02,0xCD,0xBA,0x1D,0xBD,0xCF,0x99 } }; // 886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99
    template <> inline constexpr guid guid_v<Windows::Win32::Audio::KSPROPSETID_AudioEffectsDiscovery>{ 0x0B217A72,0x16B8,0x4A4D,{ 0xBD,0xED,0xF9,0xD6,0xBB,0xED,0xCD,0x8F } }; // 0B217A72-16B8-4A4D-BDED-F9D6BBEDCD8F
#pragma endregion guids

}
#endif
