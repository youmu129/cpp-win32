// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Automation_0_H
#define WIN32_Windows_Win32_Automation_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Automation
{
#pragma region enums
    enum class CALLCONV : int32_t
    {
        CC_FASTCALL = 0,
        CC_CDECL = 1,
        CC_MSCPASCAL = 2,
        CC_PASCAL = 2,
        CC_MACPASCAL = 3,
        CC_STDCALL = 4,
        CC_FPFASTCALL = 5,
        CC_SYSCALL = 6,
        CC_MPWCDECL = 7,
        CC_MPWPASCAL = 8,
        CC_MAX = 9,
    };
    enum class CHANGEKIND : int32_t
    {
        CHANGEKIND_ADDMEMBER = 0,
        CHANGEKIND_DELETEMEMBER = 1,
        CHANGEKIND_SETNAMES = 2,
        CHANGEKIND_SETDOCUMENTATION = 3,
        CHANGEKIND_GENERAL = 4,
        CHANGEKIND_INVALIDATE = 5,
        CHANGEKIND_CHANGEFAILED = 6,
        CHANGEKIND_MAX = 7,
    };
    enum class DESCKIND : int32_t
    {
        DESCKIND_NONE = 0,
        DESCKIND_FUNCDESC = 1,
        DESCKIND_VARDESC = 2,
        DESCKIND_TYPECOMP = 3,
        DESCKIND_IMPLICITAPPOBJ = 4,
        DESCKIND_MAX = 5,
    };
    enum class FUNCFLAGS : int32_t
    {
        FUNCFLAG_FRESTRICTED = 1,
        FUNCFLAG_FSOURCE = 2,
        FUNCFLAG_FBINDABLE = 4,
        FUNCFLAG_FREQUESTEDIT = 8,
        FUNCFLAG_FDISPLAYBIND = 16,
        FUNCFLAG_FDEFAULTBIND = 32,
        FUNCFLAG_FHIDDEN = 64,
        FUNCFLAG_FUSESGETLASTERROR = 128,
        FUNCFLAG_FDEFAULTCOLLELEM = 256,
        FUNCFLAG_FUIDEFAULT = 512,
        FUNCFLAG_FNONBROWSABLE = 1024,
        FUNCFLAG_FREPLACEABLE = 2048,
        FUNCFLAG_FIMMEDIATEBIND = 4096,
    };
    enum class FUNCKIND : int32_t
    {
        FUNC_VIRTUAL = 0,
        FUNC_PUREVIRTUAL = 1,
        FUNC_NONVIRTUAL = 2,
        FUNC_STATIC = 3,
        FUNC_DISPATCH = 4,
    };
    enum class INVOKEKIND : int32_t
    {
        INVOKE_FUNC = 1,
        INVOKE_PROPERTYGET = 2,
        INVOKE_PROPERTYPUT = 4,
        INVOKE_PROPERTYPUTREF = 8,
    };
    enum class LIBFLAGS : int32_t
    {
        LIBFLAG_FRESTRICTED = 1,
        LIBFLAG_FCONTROL = 2,
        LIBFLAG_FHIDDEN = 4,
        LIBFLAG_FHASDISKIMAGE = 8,
    };
    enum class REGKIND : int32_t
    {
        REGKIND_DEFAULT = 0,
        REGKIND_REGISTER = 1,
        REGKIND_NONE = 2,
    };
    enum class SF_TYPE : int32_t
    {
        SF_ERROR = 10,
        SF_I1 = 16,
        SF_I2 = 2,
        SF_I4 = 3,
        SF_I8 = 20,
        SF_BSTR = 8,
        SF_UNKNOWN = 13,
        SF_DISPATCH = 9,
        SF_VARIANT = 12,
        SF_RECORD = 36,
        SF_HAVEIID = 32781,
    };
    enum class SYSKIND : int32_t
    {
        SYS_WIN16 = 0,
        SYS_WIN32 = 1,
        SYS_MAC = 2,
        SYS_WIN64 = 3,
    };
    enum class TYPEFLAGS : int32_t
    {
        TYPEFLAG_FAPPOBJECT = 1,
        TYPEFLAG_FCANCREATE = 2,
        TYPEFLAG_FLICENSED = 4,
        TYPEFLAG_FPREDECLID = 8,
        TYPEFLAG_FHIDDEN = 16,
        TYPEFLAG_FCONTROL = 32,
        TYPEFLAG_FDUAL = 64,
        TYPEFLAG_FNONEXTENSIBLE = 128,
        TYPEFLAG_FOLEAUTOMATION = 256,
        TYPEFLAG_FRESTRICTED = 512,
        TYPEFLAG_FAGGREGATABLE = 1024,
        TYPEFLAG_FREPLACEABLE = 2048,
        TYPEFLAG_FDISPATCHABLE = 4096,
        TYPEFLAG_FREVERSEBIND = 8192,
        TYPEFLAG_FPROXY = 16384,
    };
    enum class TYPEKIND : int32_t
    {
        TKIND_ENUM = 0,
        TKIND_RECORD = 1,
        TKIND_MODULE = 2,
        TKIND_INTERFACE = 3,
        TKIND_DISPATCH = 4,
        TKIND_COCLASS = 5,
        TKIND_ALIAS = 6,
        TKIND_UNION = 7,
        TKIND_MAX = 8,
    };
    enum class VARENUM : int32_t
    {
        VT_EMPTY = 0,
        VT_NULL = 1,
        VT_I2 = 2,
        VT_I4 = 3,
        VT_R4 = 4,
        VT_R8 = 5,
        VT_CY = 6,
        VT_DATE = 7,
        VT_BSTR = 8,
        VT_DISPATCH = 9,
        VT_ERROR = 10,
        VT_BOOL = 11,
        VT_VARIANT = 12,
        VT_UNKNOWN = 13,
        VT_DECIMAL = 14,
        VT_I1 = 16,
        VT_UI1 = 17,
        VT_UI2 = 18,
        VT_UI4 = 19,
        VT_I8 = 20,
        VT_UI8 = 21,
        VT_INT = 22,
        VT_UINT = 23,
        VT_VOID = 24,
        VT_HRESULT = 25,
        VT_PTR = 26,
        VT_SAFEARRAY = 27,
        VT_CARRAY = 28,
        VT_USERDEFINED = 29,
        VT_LPSTR = 30,
        VT_LPWSTR = 31,
        VT_RECORD = 36,
        VT_INT_PTR = 37,
        VT_UINT_PTR = 38,
        VT_FILETIME = 64,
        VT_BLOB = 65,
        VT_STREAM = 66,
        VT_STORAGE = 67,
        VT_STREAMED_OBJECT = 68,
        VT_STORED_OBJECT = 69,
        VT_BLOB_OBJECT = 70,
        VT_CF = 71,
        VT_CLSID = 72,
        VT_VERSIONED_STREAM = 73,
        VT_BSTR_BLOB = 4095,
        VT_VECTOR = 4096,
        VT_ARRAY = 8192,
        VT_BYREF = 16384,
        VT_RESERVED = 32768,
        VT_ILLEGAL = 65535,
        VT_ILLEGALMASKED = 4095,
        VT_TYPEMASK = 4095,
    };
    enum class VARFLAGS : int32_t
    {
        VARFLAG_FREADONLY = 1,
        VARFLAG_FSOURCE = 2,
        VARFLAG_FBINDABLE = 4,
        VARFLAG_FREQUESTEDIT = 8,
        VARFLAG_FDISPLAYBIND = 16,
        VARFLAG_FDEFAULTBIND = 32,
        VARFLAG_FHIDDEN = 64,
        VARFLAG_FRESTRICTED = 128,
        VARFLAG_FDEFAULTCOLLELEM = 256,
        VARFLAG_FUIDEFAULT = 512,
        VARFLAG_FNONBROWSABLE = 1024,
        VARFLAG_FREPLACEABLE = 2048,
        VARFLAG_FIMMEDIATEBIND = 4096,
    };
    enum class VARKIND : int32_t
    {
        VAR_PERINSTANCE = 0,
        VAR_STATIC = 1,
        VAR_CONST = 2,
        VAR_DISPATCH = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ARRAYDESC;
    union BINDPTR;
    struct BSTR;
    struct CLEANLOCALSTORAGE;
    struct CUSTDATA;
    struct CUSTDATAITEM;
    struct DISPPARAMS;
    struct ELEMDESC;
    struct EXCEPINFO;
    struct FUNCDESC;
    struct IDLDESC;
    struct INTERFACEDATA;
    struct METHODDATA;
    struct NUMPARSE;
    struct PARAMDATA;
    struct PARAMDESC;
    struct PARAMDESCEX;
    struct SAFEARRAY;
    struct SAFEARRAYBOUND;
    struct TLIBATTR;
    struct TYPEATTR;
    struct TYPEDESC;
    struct UDATE;
    struct VARDESC;
    struct VARIANT;
    struct WIA_BARCODES;
    struct WIA_BARCODE_INFO;
    struct WIA_MICR;
    struct WIA_MICR_INFO;
    struct WIA_PATCH_CODES;
    struct WIA_PATCH_CODE_INFO;
    struct WIA_RAW_HEADER;
    struct _wireBRECORD;
    struct _wireSAFEARRAY;
    struct _wireSAFEARRAY_UNION;
    struct _wireSAFEARR_BRECORD;
    struct _wireSAFEARR_BSTR;
    struct _wireSAFEARR_DISPATCH;
    struct _wireSAFEARR_HAVEIID;
    struct _wireSAFEARR_UNKNOWN;
    struct _wireSAFEARR_VARIANT;
    struct _wireVARIANT;
    struct ICanHandleException;
    struct ICreateErrorInfo;
    struct ICreateTypeInfo;
    struct ICreateTypeInfo2;
    struct ICreateTypeLib;
    struct ICreateTypeLib2;
    struct IDispError;
    struct IDispatch;
    struct IDispatchEx;
    struct IEnumVARIANT;
    struct IErrorInfo;
    struct IErrorLog;
    struct IObjectIdentity;
    struct IPropertyBag;
    struct IProvideRuntimeContext;
    struct IRecordInfo;
    struct ISupportErrorInfo;
    struct ITypeChangeEvents;
    struct ITypeComp;
    struct ITypeFactory;
    struct ITypeInfo;
    struct ITypeInfo2;
    struct ITypeLib;
    struct ITypeLib2;
    struct ITypeLibRegistration;
    struct ITypeLibRegistrationReader;
    struct ITypeMarshal;
    struct IVariantChangeType;
    struct WiaDevMgr;
    struct WiaLog;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICanHandleException>{ 0xC5598E60,0xB307,0x11D1,{ 0xB2,0x7D,0x00,0x60,0x08,0xC3,0xFB,0xFB } }; // C5598E60-B307-11D1-B27D-006008C3FBFB
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICreateErrorInfo>{ 0x22F03340,0x547D,0x101B,{ 0x8E,0x65,0x08,0x00,0x2B,0x2B,0xD1,0x19 } }; // 22F03340-547D-101B-8E65-08002B2BD119
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICreateTypeInfo>{ 0x00020405,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020405-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICreateTypeInfo2>{ 0x0002040E,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 0002040E-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICreateTypeLib>{ 0x00020406,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020406-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ICreateTypeLib2>{ 0x0002040F,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 0002040F-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IDispError>{ 0xA6EF9861,0xC720,0x11D0,{ 0x93,0x37,0x00,0xA0,0xC9,0x0D,0xCA,0xA9 } }; // A6EF9861-C720-11D0-9337-00A0C90DCAA9
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IDispatch>{ 0x00020400,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020400-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IDispatchEx>{ 0xA6EF9860,0xC720,0x11D0,{ 0x93,0x37,0x00,0xA0,0xC9,0x0D,0xCA,0xA9 } }; // A6EF9860-C720-11D0-9337-00A0C90DCAA9
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IEnumVARIANT>{ 0x00020404,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020404-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IErrorInfo>{ 0x1CF2B120,0x547D,0x101B,{ 0x8E,0x65,0x08,0x00,0x2B,0x2B,0xD1,0x19 } }; // 1CF2B120-547D-101B-8E65-08002B2BD119
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IErrorLog>{ 0x3127CA40,0x446E,0x11CE,{ 0x81,0x35,0x00,0xAA,0x00,0x4B,0xB8,0x51 } }; // 3127CA40-446E-11CE-8135-00AA004BB851
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IObjectIdentity>{ 0xCA04B7E6,0x0D21,0x11D1,{ 0x8C,0xC5,0x00,0xC0,0x4F,0xC2,0xB0,0x85 } }; // CA04B7E6-0D21-11D1-8CC5-00C04FC2B085
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IPropertyBag>{ 0x55272A00,0x42CB,0x11CE,{ 0x81,0x35,0x00,0xAA,0x00,0x4B,0xB8,0x51 } }; // 55272A00-42CB-11CE-8135-00AA004BB851
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IProvideRuntimeContext>{ 0x10E2414A,0xEC59,0x49D2,{ 0xBC,0x51,0x5A,0xDD,0x2C,0x36,0xFE,0xBC } }; // 10E2414A-EC59-49D2-BC51-5ADD2C36FEBC
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IRecordInfo>{ 0x0000002F,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 0000002F-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ISupportErrorInfo>{ 0xDF0B3D60,0x548F,0x101B,{ 0x8E,0x65,0x08,0x00,0x2B,0x2B,0xD1,0x19 } }; // DF0B3D60-548F-101B-8E65-08002B2BD119
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeChangeEvents>{ 0x00020410,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020410-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeComp>{ 0x00020403,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020403-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeFactory>{ 0x0000002E,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 0000002E-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeInfo>{ 0x00020401,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020401-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeInfo2>{ 0x00020412,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020412-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeLib>{ 0x00020402,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020402-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeLib2>{ 0x00020411,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 00020411-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeLibRegistration>{ 0x76A3E735,0x02DF,0x4A12,{ 0x98,0xEB,0x04,0x3A,0xD3,0x60,0x0A,0xF3 } }; // 76A3E735-02DF-4A12-98EB-043AD3600AF3
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeLibRegistrationReader>{ 0xED6A8A2A,0xB160,0x4E77,{ 0x8F,0x73,0xAA,0x74,0x35,0xCD,0x5C,0x27 } }; // ED6A8A2A-B160-4E77-8F73-AA7435CD5C27
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::ITypeMarshal>{ 0x0000002D,0x0000,0x0000,{ 0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 } }; // 0000002D-0000-0000-C000-000000000046
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::IVariantChangeType>{ 0xA6EF9862,0xC720,0x11D0,{ 0x93,0x37,0x00,0xA0,0xC9,0x0D,0xCA,0xA9 } }; // A6EF9862-C720-11D0-9337-00A0C90DCAA9
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::WiaDevMgr>{ 0xA1F4E726,0x8CF1,0x11D1,{ 0xBF,0x92,0x00,0x60,0x08,0x1E,0xD8,0x11 } }; // A1F4E726-8CF1-11D1-BF92-0060081ED811
    template <> inline constexpr guid guid_v<Windows::Win32::Automation::WiaLog>{ 0xA1E75357,0x881A,0x419E,{ 0x83,0xE2,0xBB,0x16,0xDB,0x19,0x7C,0x68 } }; // A1E75357-881A-419E-83E2-BB16DB197C68
#pragma endregion guids

}
#endif
