// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Controls_0_H
#define WIN32_Windows_Win32_Controls_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Com
{
    struct IUnknown;
}
WIN32_EXPORT namespace win32::Windows::Win32::DisplayDevices
{
    struct RECT;
}
WIN32_EXPORT namespace win32::Windows::Win32::Gdi
{
    struct HDC;
}
WIN32_EXPORT namespace win32::Windows::Win32::StructuredStorage
{
    struct IStream;
}
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::WindowsAndMessaging
{
    struct HWND;
    struct LPARAM;
    struct WPARAM;
}
WIN32_EXPORT namespace win32::Windows::Win32::Controls
{
#pragma region enums
    enum class BP_ANIMATIONSTYLE : int32_t
    {
        BPAS_NONE = 0,
        BPAS_LINEAR = 1,
        BPAS_CUBIC = 2,
        BPAS_SINE = 3,
    };
    enum class BP_BUFFERFORMAT : int32_t
    {
        BPBF_COMPATIBLEBITMAP = 0,
        BPBF_DIB = 1,
        BPBF_TOPDOWNDIB = 2,
        BPBF_TOPDOWNMONODIB = 3,
    };
    enum class CARET_FLAGS : int32_t
    {
        CARET_NONE = 0,
        CARET_CUSTOM = 1,
        CARET_RTL = 2,
        CARET_ITALIC = 32,
        CARET_NULL = 64,
        CARET_ROTATE90 = 128,
    };
    enum class CHANGETYPE : int32_t
    {
        CN_GENERIC = 0,
        CN_TEXTCHANGED = 1,
        CN_NEWUNDO = 2,
        CN_NEWREDO = 4,
    };
    enum class EC_ENDOFLINE : int32_t
    {
        EC_ENDOFLINE_DETECTFROMCONTENT = 0,
        EC_ENDOFLINE_CRLF = 1,
        EC_ENDOFLINE_CR = 2,
        EC_ENDOFLINE_LF = 3,
    };
    enum class EC_SEARCHWEB_ENTRYPOINT : int32_t
    {
        EC_SEARCHWEB_ENTRYPOINT_EXTERNAL = 0,
        EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU = 1,
    };
    enum class FEEDBACK_TYPE : int32_t
    {
        FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
        FEEDBACK_PEN_BARRELVISUALIZATION = 2,
        FEEDBACK_PEN_TAP = 3,
        FEEDBACK_PEN_DOUBLETAP = 4,
        FEEDBACK_PEN_PRESSANDHOLD = 5,
        FEEDBACK_PEN_RIGHTTAP = 6,
        FEEDBACK_TOUCH_TAP = 7,
        FEEDBACK_TOUCH_DOUBLETAP = 8,
        FEEDBACK_TOUCH_PRESSANDHOLD = 9,
        FEEDBACK_TOUCH_RIGHTTAP = 10,
        FEEDBACK_GESTURE_PRESSANDTAP = 11,
        FEEDBACK_MAX = -1,
    };
    enum class INPUT_MESSAGE_DEVICE_TYPE : int32_t
    {
        IMDT_UNAVAILABLE = 0,
        IMDT_KEYBOARD = 1,
        IMDT_MOUSE = 2,
        IMDT_TOUCH = 4,
        IMDT_PEN = 8,
        IMDT_TOUCHPAD = 16,
    };
    enum class INPUT_MESSAGE_ORIGIN_ID : int32_t
    {
        IMO_UNAVAILABLE = 0,
        IMO_HARDWARE = 1,
        IMO_INJECTED = 2,
        IMO_SYSTEM = 4,
    };
    enum class KHYPH : int32_t
    {
        khyphNil = 0,
        khyphNormal = 1,
        khyphAddBefore = 2,
        khyphChangeBefore = 3,
        khyphDeleteBefore = 4,
        khyphChangeAfter = 5,
        khyphDelAndChange = 6,
    };
    enum class MANCODE : int32_t
    {
        MBOLD = 16,
        MITAL = 32,
        MGREEK = 64,
        MROMN = 0,
        MSCRP = 1,
        MFRAK = 2,
        MOPEN = 3,
        MSANS = 4,
        MMONO = 5,
        MMATH = 6,
        MISOL = 7,
        MINIT = 8,
        MTAIL = 9,
        MSTRCH = 10,
        MLOOP = 11,
        MOPENA = 12,
    };
    enum class OBJECTTYPE : int32_t
    {
        tomSimpleText = 0,
        tomRuby = 1,
        tomHorzVert = 2,
        tomWarichu = 3,
        tomEq = 9,
        tomMath = 10,
        tomAccent = 10,
        tomBox = 11,
        tomBoxedFormula = 12,
        tomBrackets = 13,
        tomBracketsWithSeps = 14,
        tomEquationArray = 15,
        tomFraction = 16,
        tomFunctionApply = 17,
        tomLeftSubSup = 18,
        tomLowerLimit = 19,
        tomMatrix = 20,
        tomNary = 21,
        tomOpChar = 22,
        tomOverbar = 23,
        tomPhantom = 24,
        tomRadical = 25,
        tomSlashedFraction = 26,
        tomStack = 27,
        tomStretchStack = 28,
        tomSubscript = 29,
        tomSubSup = 30,
        tomSuperscript = 31,
        tomUnderbar = 32,
        tomUpperLimit = 33,
        tomObjectMax = 33,
    };
    enum class POINTER_DEVICE_CURSOR_TYPE : int32_t
    {
        POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
        POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
        POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
        POINTER_DEVICE_CURSOR_TYPE_MAX = -1,
    };
    enum class POINTER_DEVICE_TYPE : int32_t
    {
        POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
        POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
        POINTER_DEVICE_TYPE_TOUCH = 3,
        POINTER_DEVICE_TYPE_TOUCH_PAD = 4,
        POINTER_DEVICE_TYPE_MAX = -1,
    };
    enum class POINTER_FEEDBACK_MODE : int32_t
    {
        POINTER_FEEDBACK_DEFAULT = 1,
        POINTER_FEEDBACK_INDIRECT = 2,
        POINTER_FEEDBACK_NONE = 3,
    };
    enum class PROPERTYORIGIN : int32_t
    {
        PO_STATE = 0,
        PO_PART = 1,
        PO_CLASS = 2,
        PO_GLOBAL = 3,
        PO_NOTFOUND = 4,
    };
    enum class TASKDIALOG_ELEMENTS : int32_t
    {
        TDE_CONTENT = 0,
        TDE_EXPANDED_INFORMATION = 1,
        TDE_FOOTER = 2,
        TDE_MAIN_INSTRUCTION = 3,
    };
    enum class TASKDIALOG_ICON_ELEMENTS : int32_t
    {
        TDIE_ICON_MAIN = 0,
        TDIE_ICON_FOOTER = 1,
    };
    enum class TASKDIALOG_MESSAGES : int32_t
    {
        TDM_NAVIGATE_PAGE = 1125,
        TDM_CLICK_BUTTON = 1126,
        TDM_SET_MARQUEE_PROGRESS_BAR = 1127,
        TDM_SET_PROGRESS_BAR_STATE = 1128,
        TDM_SET_PROGRESS_BAR_RANGE = 1129,
        TDM_SET_PROGRESS_BAR_POS = 1130,
        TDM_SET_PROGRESS_BAR_MARQUEE = 1131,
        TDM_SET_ELEMENT_TEXT = 1132,
        TDM_CLICK_RADIO_BUTTON = 1134,
        TDM_ENABLE_BUTTON = 1135,
        TDM_ENABLE_RADIO_BUTTON = 1136,
        TDM_CLICK_VERIFICATION = 1137,
        TDM_UPDATE_ELEMENT_TEXT = 1138,
        TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE = 1139,
        TDM_UPDATE_ICON = 1140,
    };
    enum class TASKDIALOG_NOTIFICATIONS : int32_t
    {
        TDN_CREATED = 0,
        TDN_NAVIGATED = 1,
        TDN_BUTTON_CLICKED = 2,
        TDN_HYPERLINK_CLICKED = 3,
        TDN_TIMER = 4,
        TDN_DESTROYED = 5,
        TDN_RADIO_BUTTON_CLICKED = 6,
        TDN_DIALOG_CONSTRUCTED = 7,
        TDN_VERIFICATION_CLICKED = 8,
        TDN_HELP = 9,
        TDN_EXPANDO_BUTTON_CLICKED = 10,
    };
    enum class TA_PROPERTY : int32_t
    {
        TAP_FLAGS = 0,
        TAP_TRANSFORMCOUNT = 1,
        TAP_STAGGERDELAY = 2,
        TAP_STAGGERDELAYCAP = 3,
        TAP_STAGGERDELAYFACTOR = 4,
        TAP_ZORDER = 5,
    };
    enum class TA_PROPERTY_FLAG : int32_t
    {
        TAPF_NONE = 0,
        TAPF_HASSTAGGER = 1,
        TAPF_ISRTLAWARE = 2,
        TAPF_ALLOWCOLLECTION = 4,
        TAPF_HASBACKGROUND = 8,
        TAPF_HASPERSPECTIVE = 16,
    };
    enum class TA_TIMINGFUNCTION_TYPE : int32_t
    {
        TTFT_UNDEFINED = 0,
        TTFT_CUBIC_BEZIER = 1,
    };
    enum class TA_TRANSFORM_FLAG : int32_t
    {
        TATF_NONE = 0,
        TATF_TARGETVALUES_USER = 1,
        TATF_HASINITIALVALUES = 2,
        TATF_HASORIGINVALUES = 4,
    };
    enum class TA_TRANSFORM_TYPE : int32_t
    {
        TATT_TRANSLATE_2D = 0,
        TATT_SCALE_2D = 1,
        TATT_OPACITY = 2,
        TATT_CLIP = 3,
    };
    enum class TEXTMODE : int32_t
    {
        TM_PLAINTEXT = 1,
        TM_RICHTEXT = 2,
        TM_SINGLELEVELUNDO = 4,
        TM_MULTILEVELUNDO = 8,
        TM_SINGLECODEPAGE = 16,
        TM_MULTICODEPAGE = 32,
    };
    enum class THEMESIZE : int32_t
    {
        TS_MIN = 0,
        TS_TRUE = 1,
        TS_DRAW = 2,
    };
    enum class TVITEMPART : int32_t
    {
        TVGIPR_BUTTON = 1,
    };
    enum class TXTBACKSTYLE : int32_t
    {
        TXTBACK_TRANSPARENT = 0,
        TXTBACK_OPAQUE = 1,
    };
    enum class TXTHITRESULT : int32_t
    {
        TXTHITRESULT_NOHIT = 0,
        TXTHITRESULT_TRANSPARENT = 1,
        TXTHITRESULT_CLOSE = 2,
        TXTHITRESULT_HIT = 3,
    };
    enum class TXTNATURALSIZE : int32_t
    {
        TXTNS_FITTOCONTENT2 = 0,
        TXTNS_FITTOCONTENT = 1,
        TXTNS_ROUNDTOLINE = 2,
        TXTNS_FITTOCONTENT3 = 3,
        TXTNS_FITTOCONTENTWSP = 4,
        TXTNS_INCLUDELASTLINE = 1073741824,
        TXTNS_EMU = -2147483648,
    };
    enum class TXTVIEW : int32_t
    {
        TXTVIEW_ACTIVE = 0,
        TXTVIEW_INACTIVE = -1,
    };
    enum class UNDONAMEID : int32_t
    {
        UID_UNKNOWN = 0,
        UID_TYPING = 1,
        UID_DELETE = 2,
        UID_DRAGDROP = 3,
        UID_CUT = 4,
        UID_PASTE = 5,
        UID_AUTOTABLE = 6,
    };
    enum class WINDOWTHEMEATTRIBUTETYPE : int32_t
    {
        WTA_NONCLIENT = 1,
    };
    enum class _LI_METRIC : int32_t
    {
        LIM_SMALL = 0,
        LIM_LARGE = 1,
    };
    enum class _TASKDIALOG_COMMON_BUTTON_FLAGS : int32_t
    {
        TDCBF_OK_BUTTON = 1,
        TDCBF_YES_BUTTON = 2,
        TDCBF_NO_BUTTON = 4,
        TDCBF_CANCEL_BUTTON = 8,
        TDCBF_RETRY_BUTTON = 16,
        TDCBF_CLOSE_BUTTON = 32,
    };
    enum class _TASKDIALOG_FLAGS : int32_t
    {
        TDF_ENABLE_HYPERLINKS = 1,
        TDF_USE_HICON_MAIN = 2,
        TDF_USE_HICON_FOOTER = 4,
        TDF_ALLOW_DIALOG_CANCELLATION = 8,
        TDF_USE_COMMAND_LINKS = 16,
        TDF_USE_COMMAND_LINKS_NO_ICON = 32,
        TDF_EXPAND_FOOTER_AREA = 64,
        TDF_EXPANDED_BY_DEFAULT = 128,
        TDF_VERIFICATION_FLAG_CHECKED = 256,
        TDF_SHOW_PROGRESS_BAR = 512,
        TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024,
        TDF_CALLBACK_TIMER = 2048,
        TDF_POSITION_RELATIVE_TO_WINDOW = 4096,
        TDF_RTL_LAYOUT = 8192,
        TDF_NO_DEFAULT_RADIO_BUTTON = 16384,
        TDF_CAN_BE_MINIMIZED = 32768,
        TDF_NO_SET_FOREGROUND = 65536,
        TDF_SIZE_TO_CONTENT = 16777216,
    };
    enum class tomConstants : int32_t
    {
        tomFalse = 0,
        tomTrue = -1,
        tomUndefined = -9999999,
        tomToggle = -9999998,
        tomAutoColor = -9999997,
        tomDefault = -9999996,
        tomSuspend = -9999995,
        tomResume = -9999994,
        tomApplyNow = 0,
        tomApplyLater = 1,
        tomTrackParms = 2,
        tomCacheParms = 3,
        tomApplyTmp = 4,
        tomDisableSmartFont = 8,
        tomEnableSmartFont = 9,
        tomUsePoints = 10,
        tomUseTwips = 11,
        tomBackward = -1073741823,
        tomForward = 1073741823,
        tomMove = 0,
        tomExtend = 1,
        tomNoSelection = 0,
        tomSelectionIP = 1,
        tomSelectionNormal = 2,
        tomSelectionFrame = 3,
        tomSelectionColumn = 4,
        tomSelectionRow = 5,
        tomSelectionBlock = 6,
        tomSelectionInlineShape = 7,
        tomSelectionShape = 8,
        tomSelStartActive = 1,
        tomSelAtEOL = 2,
        tomSelOvertype = 4,
        tomSelActive = 8,
        tomSelReplace = 16,
        tomEnd = 0,
        tomStart = 32,
        tomCollapseEnd = 0,
        tomCollapseStart = 1,
        tomClientCoord = 256,
        tomAllowOffClient = 512,
        tomTransform = 1024,
        tomObjectArg = 2048,
        tomAtEnd = 4096,
        tomNone = 0,
        tomSingle = 1,
        tomWords = 2,
        tomDouble = 3,
        tomDotted = 4,
        tomDash = 5,
        tomDashDot = 6,
        tomDashDotDot = 7,
        tomWave = 8,
        tomThick = 9,
        tomHair = 10,
        tomDoubleWave = 11,
        tomHeavyWave = 12,
        tomLongDash = 13,
        tomThickDash = 14,
        tomThickDashDot = 15,
        tomThickDashDotDot = 16,
        tomThickDotted = 17,
        tomThickLongDash = 18,
        tomLineSpaceSingle = 0,
        tomLineSpace1pt5 = 1,
        tomLineSpaceDouble = 2,
        tomLineSpaceAtLeast = 3,
        tomLineSpaceExactly = 4,
        tomLineSpaceMultiple = 5,
        tomLineSpacePercent = 6,
        tomAlignLeft = 0,
        tomAlignCenter = 1,
        tomAlignRight = 2,
        tomAlignJustify = 3,
        tomAlignDecimal = 3,
        tomAlignBar = 4,
        tomDefaultTab = 5,
        tomAlignInterWord = 3,
        tomAlignNewspaper = 4,
        tomAlignInterLetter = 5,
        tomAlignScaled = 6,
        tomSpaces = 0,
        tomDots = 1,
        tomDashes = 2,
        tomLines = 3,
        tomThickLines = 4,
        tomEquals = 5,
        tomTabBack = -3,
        tomTabNext = -2,
        tomTabHere = -1,
        tomListNone = 0,
        tomListBullet = 1,
        tomListNumberAsArabic = 2,
        tomListNumberAsLCLetter = 3,
        tomListNumberAsUCLetter = 4,
        tomListNumberAsLCRoman = 5,
        tomListNumberAsUCRoman = 6,
        tomListNumberAsSequence = 7,
        tomListNumberedCircle = 8,
        tomListNumberedBlackCircleWingding = 9,
        tomListNumberedWhiteCircleWingding = 10,
        tomListNumberedArabicWide = 11,
        tomListNumberedChS = 12,
        tomListNumberedChT = 13,
        tomListNumberedJpnChS = 14,
        tomListNumberedJpnKor = 15,
        tomListNumberedArabic1 = 16,
        tomListNumberedArabic2 = 17,
        tomListNumberedHebrew = 18,
        tomListNumberedThaiAlpha = 19,
        tomListNumberedThaiNum = 20,
        tomListNumberedHindiAlpha = 21,
        tomListNumberedHindiAlpha1 = 22,
        tomListNumberedHindiNum = 23,
        tomListParentheses = 65536,
        tomListPeriod = 131072,
        tomListPlain = 196608,
        tomListNoNumber = 262144,
        tomListMinus = 524288,
        tomIgnoreNumberStyle = 16777216,
        tomParaStyleNormal = -1,
        tomParaStyleHeading1 = -2,
        tomParaStyleHeading2 = -3,
        tomParaStyleHeading3 = -4,
        tomParaStyleHeading4 = -5,
        tomParaStyleHeading5 = -6,
        tomParaStyleHeading6 = -7,
        tomParaStyleHeading7 = -8,
        tomParaStyleHeading8 = -9,
        tomParaStyleHeading9 = -10,
        tomCharacter = 1,
        tomWord = 2,
        tomSentence = 3,
        tomParagraph = 4,
        tomLine = 5,
        tomStory = 6,
        tomScreen = 7,
        tomSection = 8,
        tomTableColumn = 9,
        tomColumn = 9,
        tomRow = 10,
        tomWindow = 11,
        tomCell = 12,
        tomCharFormat = 13,
        tomParaFormat = 14,
        tomTable = 15,
        tomObject = 16,
        tomPage = 17,
        tomHardParagraph = 18,
        tomCluster = 19,
        tomInlineObject = 20,
        tomInlineObjectArg = 21,
        tomLeafLine = 22,
        tomLayoutColumn = 23,
        tomProcessId = 1073741825,
        tomMatchWord = 2,
        tomMatchCase = 4,
        tomMatchPattern = 8,
        tomUnknownStory = 0,
        tomMainTextStory = 1,
        tomFootnotesStory = 2,
        tomEndnotesStory = 3,
        tomCommentsStory = 4,
        tomTextFrameStory = 5,
        tomEvenPagesHeaderStory = 6,
        tomPrimaryHeaderStory = 7,
        tomEvenPagesFooterStory = 8,
        tomPrimaryFooterStory = 9,
        tomFirstPageHeaderStory = 10,
        tomFirstPageFooterStory = 11,
        tomScratchStory = 127,
        tomFindStory = 128,
        tomReplaceStory = 129,
        tomStoryInactive = 0,
        tomStoryActiveDisplay = 1,
        tomStoryActiveUI = 2,
        tomStoryActiveDisplayUI = 3,
        tomNoAnimation = 0,
        tomLasVegasLights = 1,
        tomBlinkingBackground = 2,
        tomSparkleText = 3,
        tomMarchingBlackAnts = 4,
        tomMarchingRedAnts = 5,
        tomShimmer = 6,
        tomWipeDown = 7,
        tomWipeRight = 8,
        tomAnimationMax = 8,
        tomLowerCase = 0,
        tomUpperCase = 1,
        tomTitleCase = 2,
        tomSentenceCase = 4,
        tomToggleCase = 5,
        tomReadOnly = 256,
        tomShareDenyRead = 512,
        tomShareDenyWrite = 1024,
        tomPasteFile = 4096,
        tomCreateNew = 16,
        tomCreateAlways = 32,
        tomOpenExisting = 48,
        tomOpenAlways = 64,
        tomTruncateExisting = 80,
        tomRTF = 1,
        tomText = 2,
        tomHTML = 3,
        tomWordDocument = 4,
        tomBold = -2147483647,
        tomItalic = -2147483646,
        tomUnderline = -2147483644,
        tomStrikeout = -2147483640,
        tomProtected = -2147483632,
        tomLink = -2147483616,
        tomSmallCaps = -2147483584,
        tomAllCaps = -2147483520,
        tomHidden = -2147483392,
        tomOutline = -2147483136,
        tomShadow = -2147482624,
        tomEmboss = -2147481600,
        tomImprint = -2147479552,
        tomDisabled = -2147475456,
        tomRevised = -2147467264,
        tomSubscriptCF = -2147418112,
        tomSuperscriptCF = -2147352576,
        tomFontBound = -2146435072,
        tomLinkProtected = -2139095040,
        tomInlineObjectStart = -2130706432,
        tomExtendedChar = -2113929216,
        tomAutoBackColor = -2080374784,
        tomMathZoneNoBuildUp = -2013265920,
        tomMathZone = -1879048192,
        tomMathZoneOrdinary = -1610612736,
        tomAutoTextColor = -1073741824,
        tomMathZoneDisplay = 262144,
        tomParaEffectRTL = 1,
        tomParaEffectKeep = 2,
        tomParaEffectKeepNext = 4,
        tomParaEffectPageBreakBefore = 8,
        tomParaEffectNoLineNumber = 16,
        tomParaEffectNoWidowControl = 32,
        tomParaEffectDoNotHyphen = 64,
        tomParaEffectSideBySide = 128,
        tomParaEffectCollapsed = 256,
        tomParaEffectOutlineLevel = 512,
        tomParaEffectBox = 1024,
        tomParaEffectTableRowDelimiter = 4096,
        tomParaEffectTable = 16384,
        tomModWidthPairs = 1,
        tomModWidthSpace = 2,
        tomAutoSpaceAlpha = 4,
        tomAutoSpaceNumeric = 8,
        tomAutoSpaceParens = 16,
        tomEmbeddedFont = 32,
        tomDoublestrike = 64,
        tomOverlapping = 128,
        tomNormalCaret = 0,
        tomKoreanBlockCaret = 1,
        tomNullCaret = 2,
        tomIncludeInset = 1,
        tomUnicodeBiDi = 1,
        tomMathCFCheck = 4,
        tomUnlink = 8,
        tomUnhide = 16,
        tomCheckTextLimit = 32,
        tomIgnoreCurrentFont = 0,
        tomMatchCharRep = 1,
        tomMatchFontSignature = 2,
        tomMatchAscii = 4,
        tomGetHeightOnly = 8,
        tomMatchMathFont = 16,
        tomCharset = -2147483648,
        tomCharRepFromLcid = 1073741824,
        tomAnsi = 0,
        tomEastEurope = 1,
        tomCyrillic = 2,
        tomGreek = 3,
        tomTurkish = 4,
        tomHebrew = 5,
        tomArabic = 6,
        tomBaltic = 7,
        tomVietnamese = 8,
        tomDefaultCharRep = 9,
        tomSymbol = 10,
        tomThai = 11,
        tomShiftJIS = 12,
        tomGB2312 = 13,
        tomHangul = 14,
        tomBIG5 = 15,
        tomPC437 = 16,
        tomOEM = 17,
        tomMac = 18,
        tomArmenian = 19,
        tomSyriac = 20,
        tomThaana = 21,
        tomDevanagari = 22,
        tomBengali = 23,
        tomGurmukhi = 24,
        tomGujarati = 25,
        tomOriya = 26,
        tomTamil = 27,
        tomTelugu = 28,
        tomKannada = 29,
        tomMalayalam = 30,
        tomSinhala = 31,
        tomLao = 32,
        tomTibetan = 33,
        tomMyanmar = 34,
        tomGeorgian = 35,
        tomJamo = 36,
        tomEthiopic = 37,
        tomCherokee = 38,
        tomAboriginal = 39,
        tomOgham = 40,
        tomRunic = 41,
        tomKhmer = 42,
        tomMongolian = 43,
        tomBraille = 44,
        tomYi = 45,
        tomLimbu = 46,
        tomTaiLe = 47,
        tomNewTaiLue = 48,
        tomSylotiNagri = 49,
        tomKharoshthi = 50,
        tomKayahli = 51,
        tomUsymbol = 52,
        tomEmoji = 53,
        tomGlagolitic = 54,
        tomLisu = 55,
        tomVai = 56,
        tomNKo = 57,
        tomOsmanya = 58,
        tomPhagsPa = 59,
        tomGothic = 60,
        tomDeseret = 61,
        tomTifinagh = 62,
        tomCharRepMax = 63,
        tomRE10Mode = 1,
        tomUseAtFont = 2,
        tomTextFlowMask = 12,
        tomTextFlowES = 0,
        tomTextFlowSW = 4,
        tomTextFlowWN = 8,
        tomTextFlowNE = 12,
        tomNoIME = 524288,
        tomSelfIME = 262144,
        tomNoUpScroll = 65536,
        tomNoVpScroll = 262144,
        tomNoLink = 0,
        tomClientLink = 1,
        tomFriendlyLinkName = 2,
        tomFriendlyLinkAddress = 3,
        tomAutoLinkURL = 4,
        tomAutoLinkEmail = 5,
        tomAutoLinkPhone = 6,
        tomAutoLinkPath = 7,
        tomCompressNone = 0,
        tomCompressPunctuation = 1,
        tomCompressPunctuationAndKana = 2,
        tomCompressMax = 2,
        tomUnderlinePositionAuto = 0,
        tomUnderlinePositionBelow = 1,
        tomUnderlinePositionAbove = 2,
        tomUnderlinePositionMax = 2,
        tomFontAlignmentAuto = 0,
        tomFontAlignmentTop = 1,
        tomFontAlignmentBaseline = 2,
        tomFontAlignmentBottom = 3,
        tomFontAlignmentCenter = 4,
        tomFontAlignmentMax = 4,
        tomRubyBelow = 128,
        tomRubyAlignCenter = 0,
        tomRubyAlign010 = 1,
        tomRubyAlign121 = 2,
        tomRubyAlignLeft = 3,
        tomRubyAlignRight = 4,
        tomLimitsDefault = 0,
        tomLimitsUnderOver = 1,
        tomLimitsSubSup = 2,
        tomUpperLimitAsSuperScript = 3,
        tomLimitsOpposite = 4,
        tomShowLLimPlaceHldr = 8,
        tomShowULimPlaceHldr = 16,
        tomDontGrowWithContent = 64,
        tomGrowWithContent = 128,
        tomSubSupAlign = 1,
        tomLimitAlignMask = 3,
        tomLimitAlignCenter = 0,
        tomLimitAlignLeft = 1,
        tomLimitAlignRight = 2,
        tomShowDegPlaceHldr = 8,
        tomAlignDefault = 0,
        tomAlignMatchAscentDescent = 2,
        tomMathVariant = 32,
        tomStyleDefault = 0,
        tomStyleScriptScriptCramped = 1,
        tomStyleScriptScript = 2,
        tomStyleScriptCramped = 3,
        tomStyleScript = 4,
        tomStyleTextCramped = 5,
        tomStyleText = 6,
        tomStyleDisplayCramped = 7,
        tomStyleDisplay = 8,
        tomMathRelSize = 64,
        tomDecDecSize = 254,
        tomDecSize = 255,
        tomIncSize = 65,
        tomIncIncSize = 66,
        tomGravityUI = 0,
        tomGravityBack = 1,
        tomGravityFore = 2,
        tomGravityIn = 3,
        tomGravityOut = 4,
        tomGravityBackward = 536870912,
        tomGravityForward = 1073741824,
        tomAdjustCRLF = 1,
        tomUseCRLF = 2,
        tomTextize = 4,
        tomAllowFinalEOP = 8,
        tomFoldMathAlpha = 16,
        tomNoHidden = 32,
        tomIncludeNumbering = 64,
        tomTranslateTableCell = 128,
        tomNoMathZoneBrackets = 256,
        tomConvertMathChar = 512,
        tomNoUCGreekItalic = 1024,
        tomAllowMathBold = 2048,
        tomLanguageTag = 4096,
        tomConvertRTF = 8192,
        tomApplyRtfDocProps = 16384,
        tomPhantomShow = 1,
        tomPhantomZeroWidth = 2,
        tomPhantomZeroAscent = 4,
        tomPhantomZeroDescent = 8,
        tomPhantomTransparent = 16,
        tomPhantomASmash = 5,
        tomPhantomDSmash = 9,
        tomPhantomHSmash = 3,
        tomPhantomSmash = 13,
        tomPhantomHorz = 12,
        tomPhantomVert = 2,
        tomBoxHideTop = 1,
        tomBoxHideBottom = 2,
        tomBoxHideLeft = 4,
        tomBoxHideRight = 8,
        tomBoxStrikeH = 16,
        tomBoxStrikeV = 32,
        tomBoxStrikeTLBR = 64,
        tomBoxStrikeBLTR = 128,
        tomBoxAlignCenter = 1,
        tomSpaceMask = 28,
        tomSpaceDefault = 0,
        tomSpaceUnary = 4,
        tomSpaceBinary = 8,
        tomSpaceRelational = 12,
        tomSpaceSkip = 16,
        tomSpaceOrd = 20,
        tomSpaceDifferential = 24,
        tomSizeText = 32,
        tomSizeScript = 64,
        tomSizeScriptScript = 96,
        tomNoBreak = 128,
        tomTransparentForPositioning = 256,
        tomTransparentForSpacing = 512,
        tomStretchCharBelow = 0,
        tomStretchCharAbove = 1,
        tomStretchBaseBelow = 2,
        tomStretchBaseAbove = 3,
        tomMatrixAlignMask = 3,
        tomMatrixAlignCenter = 0,
        tomMatrixAlignTopRow = 1,
        tomMatrixAlignBottomRow = 3,
        tomShowMatPlaceHldr = 8,
        tomEqArrayLayoutWidth = 1,
        tomEqArrayAlignMask = 12,
        tomEqArrayAlignCenter = 0,
        tomEqArrayAlignTopRow = 4,
        tomEqArrayAlignBottomRow = 12,
        tomMathManualBreakMask = 127,
        tomMathBreakLeft = 125,
        tomMathBreakCenter = 126,
        tomMathBreakRight = 127,
        tomMathEqAlign = 128,
        tomMathArgShadingStart = 593,
        tomMathArgShadingEnd = 594,
        tomMathObjShadingStart = 595,
        tomMathObjShadingEnd = 596,
        tomFunctionTypeNone = 0,
        tomFunctionTypeTakesArg = 1,
        tomFunctionTypeTakesLim = 2,
        tomFunctionTypeTakesLim2 = 3,
        tomFunctionTypeIsLim = 4,
        tomMathParaAlignDefault = 0,
        tomMathParaAlignCenterGroup = 1,
        tomMathParaAlignCenter = 2,
        tomMathParaAlignLeft = 3,
        tomMathParaAlignRight = 4,
        tomMathDispAlignMask = 3,
        tomMathDispAlignCenterGroup = 0,
        tomMathDispAlignCenter = 1,
        tomMathDispAlignLeft = 2,
        tomMathDispAlignRight = 3,
        tomMathDispIntUnderOver = 4,
        tomMathDispFracTeX = 8,
        tomMathDispNaryGrow = 16,
        tomMathDocEmptyArgMask = 96,
        tomMathDocEmptyArgAuto = 0,
        tomMathDocEmptyArgAlways = 32,
        tomMathDocEmptyArgNever = 64,
        tomMathDocSbSpOpUnchanged = 128,
        tomMathDocDiffMask = 768,
        tomMathDocDiffDefault = 0,
        tomMathDocDiffUpright = 256,
        tomMathDocDiffItalic = 512,
        tomMathDocDiffOpenItalic = 768,
        tomMathDispNarySubSup = 1024,
        tomMathDispDef = 2048,
        tomMathEnableRtl = 4096,
        tomMathBrkBinMask = 196608,
        tomMathBrkBinBefore = 0,
        tomMathBrkBinAfter = 65536,
        tomMathBrkBinDup = 131072,
        tomMathBrkBinSubMask = 786432,
        tomMathBrkBinSubMM = 0,
        tomMathBrkBinSubPM = 262144,
        tomMathBrkBinSubMP = 524288,
        tomSelRange = 597,
        tomHstring = 596,
        tomFontPropTeXStyle = 828,
        tomFontPropAlign = 829,
        tomFontStretch = 830,
        tomFontStyle = 831,
        tomFontStyleUpright = 0,
        tomFontStyleOblique = 1,
        tomFontStyleItalic = 2,
        tomFontStretchDefault = 0,
        tomFontStretchUltraCondensed = 1,
        tomFontStretchExtraCondensed = 2,
        tomFontStretchCondensed = 3,
        tomFontStretchSemiCondensed = 4,
        tomFontStretchNormal = 5,
        tomFontStretchSemiExpanded = 6,
        tomFontStretchExpanded = 7,
        tomFontStretchExtraExpanded = 8,
        tomFontStretchUltraExpanded = 9,
        tomFontWeightDefault = 0,
        tomFontWeightThin = 100,
        tomFontWeightExtraLight = 200,
        tomFontWeightLight = 300,
        tomFontWeightNormal = 400,
        tomFontWeightRegular = 400,
        tomFontWeightMedium = 500,
        tomFontWeightSemiBold = 600,
        tomFontWeightBold = 700,
        tomFontWeightExtraBold = 800,
        tomFontWeightBlack = 900,
        tomFontWeightHeavy = 900,
        tomFontWeightExtraBlack = 950,
        tomParaPropMathAlign = 1079,
        tomDocMathBuild = 128,
        tomMathLMargin = 129,
        tomMathRMargin = 130,
        tomMathWrapIndent = 131,
        tomMathWrapRight = 132,
        tomMathPostSpace = 134,
        tomMathPreSpace = 133,
        tomMathInterSpace = 135,
        tomMathIntraSpace = 136,
        tomCanCopy = 137,
        tomCanRedo = 138,
        tomCanUndo = 139,
        tomUndoLimit = 140,
        tomDocAutoLink = 141,
        tomEllipsisMode = 142,
        tomEllipsisState = 143,
        tomEllipsisNone = 0,
        tomEllipsisEnd = 1,
        tomEllipsisWord = 3,
        tomEllipsisPresent = 1,
        tomVTopCell = 1,
        tomVLowCell = 2,
        tomHStartCell = 4,
        tomHContCell = 8,
        tomRowUpdate = 1,
        tomRowApplyDefault = 0,
        tomCellStructureChangeOnly = 1,
        tomRowHeightActual = 2059,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct BIDIOPTIONS;
    struct BP_ANIMATIONPARAMS;
    struct BP_PAINTPARAMS;
    struct BUTTON_IMAGELIST;
    struct BUTTON_SPLITINFO;
    union CARET_INFO;
    struct CHANGENOTIFY;
    struct CHARFORMAT2A;
    struct CHARFORMAT2W;
    struct CHARFORMATA;
    struct CHARFORMATW;
    struct CHARRANGE;
    struct CLIPBOARDFORMAT;
    struct COLORMAP;
    struct COLORSCHEME;
    struct COMBOBOXEXITEMA;
    struct COMBOBOXEXITEMW;
    struct COMBOBOXINFO;
    struct COMPAREITEMSTRUCT;
    struct COMPCOLOR;
    struct CRGB;
    struct DATETIMEPICKERINFO;
    struct DELETEITEMSTRUCT;
    struct DPASTREAMINFO;
    struct DRAGLISTINFO;
    struct DRAWITEMSTRUCT;
    struct DTBGOPTS;
    struct DTTOPTS;
    struct EDITBALLOONTIP;
    struct EDITSTREAM;
    struct ENCORRECTTEXT;
    struct ENDCOMPOSITIONNOTIFY;
    struct ENDROPFILES;
    struct ENLINK;
    struct ENLOWFIRTF;
    struct ENOLEOPFAILED;
    struct ENPROTECTED;
    struct ENSAVECLIPBOARD;
    struct FINDTEXTA;
    struct FINDTEXTEXA;
    struct FINDTEXTEXW;
    struct FINDTEXTW;
    struct FORMATRANGE;
    struct GETCONTEXTMENUEX;
    struct GETTEXTEX;
    struct GETTEXTLENGTHEX;
    struct HDHITTESTINFO;
    struct HDITEMA;
    struct HDITEMW;
    struct HDLAYOUT;
    struct HD_TEXTFILTERA;
    struct HD_TEXTFILTERW;
    struct HIMAGELIST;
    struct HPROPSHEETPAGE;
    struct HYPHENATEINFO;
    struct IMAGEINFO;
    struct IMAGELISTDRAWPARAMS;
    struct IMAGELISTSTATS;
    struct IMECOMPTEXT;
    struct INITCOMMONCONTROLSEX;
    struct INPUT_INJECTION_VALUE;
    struct INPUT_MESSAGE_SOURCE;
    struct INTLIST;
    struct LHITTESTINFO;
    struct LITEM;
    struct LVBKIMAGEA;
    struct LVBKIMAGEW;
    struct LVCOLUMNA;
    struct LVCOLUMNW;
    struct LVFINDINFOA;
    struct LVFINDINFOW;
    struct LVFOOTERINFO;
    struct LVFOOTERITEM;
    struct LVGROUP;
    struct LVGROUPMETRICS;
    struct LVHITTESTINFO;
    struct LVINSERTGROUPSORTED;
    struct LVINSERTMARK;
    struct LVITEMA;
    struct LVITEMINDEX;
    struct LVITEMW;
    struct LVSETINFOTIP;
    struct LVTILEINFO;
    struct LVTILEVIEWINFO;
    struct MARGINS;
    struct MCGRIDINFO;
    struct MCHITTESTINFO;
    struct MEASUREITEMSTRUCT;
    struct MSGFILTER;
    struct NMBCDROPDOWN;
    struct NMBCHOTITEM;
    struct NMCBEDRAGBEGINA;
    struct NMCBEDRAGBEGINW;
    struct NMCBEENDEDITA;
    struct NMCBEENDEDITW;
    struct NMCHAR;
    struct NMCOMBOBOXEXA;
    struct NMCOMBOBOXEXW;
    struct NMCUSTOMDRAW;
    struct NMCUSTOMSPLITRECTINFO;
    struct NMCUSTOMTEXT;
    struct NMDATETIMECHANGE;
    struct NMDATETIMEFORMATA;
    struct NMDATETIMEFORMATQUERYA;
    struct NMDATETIMEFORMATQUERYW;
    struct NMDATETIMEFORMATW;
    struct NMDATETIMESTRINGA;
    struct NMDATETIMESTRINGW;
    struct NMDATETIMEWMKEYDOWNA;
    struct NMDATETIMEWMKEYDOWNW;
    struct NMDAYSTATE;
    struct NMHDDISPINFOA;
    struct NMHDDISPINFOW;
    struct NMHDFILTERBTNCLICK;
    struct NMHDR;
    struct NMHEADERA;
    struct NMHEADERW;
    struct NMIPADDRESS;
    struct NMITEMACTIVATE;
    struct NMKEY;
    struct NMLINK;
    struct NMLISTVIEW;
    struct NMLVCACHEHINT;
    struct NMLVCUSTOMDRAW;
    struct NMLVDISPINFOA;
    struct NMLVDISPINFOW;
    struct NMLVEMPTYMARKUP;
    struct NMLVFINDITEMA;
    struct NMLVFINDITEMW;
    struct NMLVGETINFOTIPA;
    struct NMLVGETINFOTIPW;
    struct NMLVKEYDOWN;
    struct NMLVLINK;
    struct NMLVODSTATECHANGE;
    struct NMLVSCROLL;
    struct NMMOUSE;
    struct NMOBJECTNOTIFY;
    struct NMPGCALCSIZE;
    struct NMPGHOTITEM;
    struct NMPGSCROLL;
    struct NMRBAUTOSIZE;
    struct NMREBAR;
    struct NMREBARAUTOBREAK;
    struct NMREBARCHEVRON;
    struct NMREBARCHILDSIZE;
    struct NMREBARSPLITTER;
    struct NMSEARCHWEB;
    struct NMSELCHANGE;
    struct NMTBCUSTOMDRAW;
    struct NMTBDISPINFOA;
    struct NMTBDISPINFOW;
    struct NMTBGETINFOTIPA;
    struct NMTBGETINFOTIPW;
    struct NMTBHOTITEM;
    struct NMTBRESTORE;
    struct NMTBSAVE;
    struct NMTCKEYDOWN;
    struct NMTOOLBARA;
    struct NMTOOLBARW;
    struct NMTOOLTIPSCREATED;
    struct NMTRBTHUMBPOSCHANGING;
    struct NMTREEVIEWA;
    struct NMTREEVIEWW;
    struct NMTTCUSTOMDRAW;
    struct NMTTDISPINFOA;
    struct NMTTDISPINFOW;
    struct NMTVASYNCDRAW;
    struct NMTVCUSTOMDRAW;
    struct NMTVDISPINFOA;
    struct NMTVDISPINFOEXA;
    struct NMTVDISPINFOEXW;
    struct NMTVDISPINFOW;
    struct NMTVGETINFOTIPA;
    struct NMTVGETINFOTIPW;
    struct NMTVITEMCHANGE;
    struct NMTVKEYDOWN;
    struct NMTVSTATEIMAGECHANGING;
    struct NMUPDOWN;
    struct NMVIEWCHANGE;
    struct OBJECTPOSITIONS;
    struct PARAFORMAT;
    struct PARAFORMAT2;
    struct PBRANGE;
    struct POINTER_DEVICE_CURSOR_INFO;
    struct POINTER_DEVICE_INFO;
    struct POINTER_DEVICE_PROPERTY;
    struct POINTER_TYPE_INFO;
    struct PROPSHEETHEADERA_V1;
    struct PROPSHEETHEADERA_V2;
    struct PROPSHEETHEADERW_V1;
    struct PROPSHEETHEADERW_V2;
    struct PROPSHEETPAGEA;
    struct PROPSHEETPAGEA_V1;
    struct PROPSHEETPAGEA_V2;
    struct PROPSHEETPAGEA_V3;
    struct PROPSHEETPAGEW;
    struct PROPSHEETPAGEW_V1;
    struct PROPSHEETPAGEW_V2;
    struct PROPSHEETPAGEW_V3;
    struct PSHNOTIFY;
    struct PUNCTUATION;
    struct RBHITTESTINFO;
    struct REBARBANDINFOA;
    struct REBARBANDINFOW;
    struct REBARINFO;
    struct REOBJECT;
    struct REPASTESPECIAL;
    struct REQRESIZE;
    struct RICHEDIT_IMAGE_PARAMETERS;
    struct SCROLLBARINFO;
    struct SCROLLINFO;
    struct SELCHANGE;
    struct SETTEXTEX;
    struct TABLECELLPARMS;
    struct TABLEROWPARMS;
    struct TASKDIALOGCONFIG;
    struct TASKDIALOG_BUTTON;
    struct TA_CUBIC_BEZIER;
    struct TA_TIMINGFUNCTION;
    struct TA_TRANSFORM;
    struct TA_TRANSFORM_2D;
    struct TA_TRANSFORM_CLIP;
    struct TA_TRANSFORM_OPACITY;
    struct TBADDBITMAP;
    struct TBBUTTON;
    struct TBBUTTONINFOA;
    struct TBBUTTONINFOW;
    struct TBINSERTMARK;
    struct TBMETRICS;
    struct TBREPLACEBITMAP;
    struct TBSAVEPARAMSA;
    struct TBSAVEPARAMSW;
    struct TCHITTESTINFO;
    struct TCITEMA;
    struct TCITEMHEADERA;
    struct TCITEMHEADERW;
    struct TCITEMW;
    struct TEXTRANGEA;
    struct TEXTRANGEW;
    struct TOUCH_HIT_TESTING_INPUT;
    struct TOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
    struct TTGETTITLE;
    struct TTHITTESTINFOA;
    struct TTHITTESTINFOW;
    struct TTTOOLINFOA;
    struct TTTOOLINFOW;
    struct TVGETITEMPARTRECTINFO;
    struct TVHITTESTINFO;
    struct TVINSERTSTRUCTA;
    struct TVINSERTSTRUCTW;
    struct TVITEMA;
    struct TVITEMEXA;
    struct TVITEMEXW;
    struct TVITEMW;
    struct TVSORTCB;
    struct UDACCEL;
    struct USAGE_PROPERTIES;
    struct WTA_OPTIONS;
    struct _DPA;
    struct _DSA;
    struct _IMAGELIST;
    struct _PSP;
    struct _TREEITEM;
    struct _grouptypingchange;
    struct hyphresult;
    struct IImageList;
    struct IImageList2;
    struct IRichEditOle;
    struct IRichEditOleCallback;
    struct IRichEditUiaInformation;
    struct IRicheditUiaOverrides;
    struct IRicheditWindowlessAccessibility;
    struct ITextDisplays;
    struct ITextDocument;
    struct ITextDocument2;
    struct ITextDocument2Old;
    struct ITextFont;
    struct ITextFont2;
    struct ITextHost;
    struct ITextHost2;
    struct ITextPara;
    struct ITextPara2;
    struct ITextRange;
    struct ITextRange2;
    struct ITextRow;
    struct ITextSelection;
    struct ITextSelection2;
    struct ITextServices;
    struct ITextServices2;
    struct ITextStory;
    struct ITextStoryRanges;
    struct ITextStoryRanges2;
    struct ITextStrings;
    struct ImageList;
#pragma endregion forward_declarations

#pragma region delegates
    using LPFNPSPCALLBACKA = uint32_t __stdcall(Windows::Win32::WindowsAndMessaging::HWND, uint32_t, Windows::Win32::Controls::PROPSHEETPAGEA*);
    using LPFNPSPCALLBACKW = uint32_t __stdcall(Windows::Win32::WindowsAndMessaging::HWND, uint32_t, Windows::Win32::Controls::PROPSHEETPAGEW*);
    using PFNPROPSHEETCALLBACK = int32_t __stdcall(Windows::Win32::WindowsAndMessaging::HWND, uint32_t, Windows::Win32::WindowsAndMessaging::LPARAM);
    using LPFNADDPROPSHEETPAGE = Windows::Win32::SystemServices::BOOL __stdcall(Windows::Win32::Controls::HPROPSHEETPAGE, Windows::Win32::WindowsAndMessaging::LPARAM);
    using LPFNADDPROPSHEETPAGES = Windows::Win32::SystemServices::BOOL __stdcall(void*, Windows::Win32::Controls::LPFNADDPROPSHEETPAGE*, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFNLVCOMPARE = int32_t __stdcall(Windows::Win32::WindowsAndMessaging::LPARAM, Windows::Win32::WindowsAndMessaging::LPARAM, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFNLVGROUPCOMPARE = int32_t __stdcall(int32_t, int32_t, void*);
    using PFNTVCOMPARE = int32_t __stdcall(Windows::Win32::WindowsAndMessaging::LPARAM, Windows::Win32::WindowsAndMessaging::LPARAM, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFTASKDIALOGCALLBACK = int32_t __stdcall(Windows::Win32::WindowsAndMessaging::HWND, uint32_t, Windows::Win32::WindowsAndMessaging::WPARAM, Windows::Win32::WindowsAndMessaging::LPARAM, intptr_t);
    using PFNDAENUMCALLBACK = int32_t __stdcall(void*, void*);
    using PFNDAENUMCALLBACKCONST = int32_t __stdcall(void*, void*);
    using PFNDACOMPARE = int32_t __stdcall(void*, void*, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFNDACOMPARECONST = int32_t __stdcall(void*, void*, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFNDPASTREAM = int32_t __stdcall(Windows::Win32::Controls::DPASTREAMINFO*, Windows::Win32::StructuredStorage::IStream*, void*);
    using PFNDPAMERGE = void* __stdcall(uint32_t, void*, void*, Windows::Win32::WindowsAndMessaging::LPARAM);
    using PFNDPAMERGECONST = void* __stdcall(uint32_t, void*, void*, Windows::Win32::WindowsAndMessaging::LPARAM);
    using AutoCorrectProc = int32_t __stdcall(uint16_t, uint16_t*, uint16_t*, int32_t, int32_t*);
    using EDITWORDBREAKPROCEX = int32_t __stdcall(int8_t*, int32_t, uint8_t, int32_t);
    using EDITSTREAMCALLBACK = uint32_t __stdcall(size_t, uint8_t*, int32_t, int32_t*);
    using PCreateTextServices = int32_t __stdcall(Windows::Win32::Com::IUnknown*, Windows::Win32::Controls::ITextHost*, Windows::Win32::Com::IUnknown**);
    using PShutdownTextServices = int32_t __stdcall(Windows::Win32::Com::IUnknown*);
    using DTT_CALLBACK_PROC = int32_t __stdcall(Windows::Win32::Gdi::HDC, uint16_t*, int32_t, Windows::Win32::DisplayDevices::RECT*, uint32_t, Windows::Win32::WindowsAndMessaging::LPARAM);
    using EDITWORDBREAKPROCA = int32_t __stdcall(int8_t*, int32_t, int32_t, int32_t);
    using EDITWORDBREAKPROCW = int32_t __stdcall(uint16_t*, int32_t, int32_t, int32_t);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::IImageList>{ 0x46EB5926,0x582E,0x4017,{ 0x9F,0xDF,0xE8,0x99,0x8D,0xAA,0x09,0x50 } }; // 46EB5926-582E-4017-9FDF-E8998DAA0950
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::IImageList2>{ 0x192B9D83,0x50FC,0x457B,{ 0x90,0xA0,0x2B,0x82,0xA8,0xB5,0xDA,0xE1 } }; // 192B9D83-50FC-457B-90A0-2B82A8B5DAE1
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextDisplays>{ 0xC241F5F2,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5F2-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextDocument>{ 0x8CC497C0,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C0-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextDocument2>{ 0xC241F5E0,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E0-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextDocument2Old>{ 0x01C25500,0x4268,0x11D1,{ 0x88,0x3A,0x3C,0x8B,0x00,0xC1,0x00,0x00 } }; // 01C25500-4268-11D1-883A-3C8B00C10000
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextFont>{ 0x8CC497C3,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C3-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextFont2>{ 0xC241F5E3,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E3-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextPara>{ 0x8CC497C4,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C4-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextPara2>{ 0xC241F5E4,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E4-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextRange>{ 0x8CC497C2,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C2-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextRange2>{ 0xC241F5E2,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E2-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextRow>{ 0xC241F5EF,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5EF-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextSelection>{ 0x8CC497C1,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C1-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextSelection2>{ 0xC241F5E1,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E1-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextStory>{ 0xC241F5F3,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5F3-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextStoryRanges>{ 0x8CC497C5,0xA1DF,0x11CE,{ 0x80,0x98,0x00,0xAA,0x00,0x47,0xBE,0x5D } }; // 8CC497C5-A1DF-11CE-8098-00AA0047BE5D
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextStoryRanges2>{ 0xC241F5E5,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E5-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ITextStrings>{ 0xC241F5E7,0x7206,0x11D8,{ 0xA2,0xC7,0x00,0xA0,0xD1,0xD6,0xC6,0xB3 } }; // C241F5E7-7206-11D8-A2C7-00A0D1D6C6B3
    template <> inline constexpr guid guid_v<Windows::Win32::Controls::ImageList>{ 0x7C476BA2,0x02B1,0x48F4,{ 0x80,0x48,0xB2,0x46,0x19,0xDD,0xC0,0x58 } }; // 7C476BA2-02B1-48F4-8048-B24619DDC058
#pragma endregion guids

}
#endif
