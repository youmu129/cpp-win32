// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Direct3DHlsl_0_H
#define WIN32_Windows_Win32_Direct3DHlsl_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Direct3D11
{
    struct D3D_SHADER_MACRO;
    struct ID3DBlob;
    struct ID3DInclude;
}
WIN32_EXPORT namespace win32::Windows::Win32::Direct3DHlsl
{
#pragma region enums
    enum class D3DCOMPILER_STRIP_FLAGS : int32_t
    {
        D3DCOMPILER_STRIP_REFLECTION_DATA = 1,
        D3DCOMPILER_STRIP_DEBUG_INFO = 2,
        D3DCOMPILER_STRIP_TEST_BLOBS = 4,
        D3DCOMPILER_STRIP_PRIVATE_DATA = 8,
        D3DCOMPILER_STRIP_ROOT_SIGNATURE = 16,
        D3DCOMPILER_STRIP_FORCE_DWORD = 2147483647,
    };
    enum class D3D_BLOB_PART : int32_t
    {
        D3D_BLOB_INPUT_SIGNATURE_BLOB = 0,
        D3D_BLOB_OUTPUT_SIGNATURE_BLOB = 1,
        D3D_BLOB_INPUT_AND_OUTPUT_SIGNATURE_BLOB = 2,
        D3D_BLOB_PATCH_CONSTANT_SIGNATURE_BLOB = 3,
        D3D_BLOB_ALL_SIGNATURE_BLOB = 4,
        D3D_BLOB_DEBUG_INFO = 5,
        D3D_BLOB_LEGACY_SHADER = 6,
        D3D_BLOB_XNA_PREPASS_SHADER = 7,
        D3D_BLOB_XNA_SHADER = 8,
        D3D_BLOB_PDB = 9,
        D3D_BLOB_PRIVATE_DATA = 10,
        D3D_BLOB_ROOT_SIGNATURE = 11,
        D3D_BLOB_DEBUG_NAME = 12,
        D3D_BLOB_TEST_ALTERNATE_SHADER = 32768,
        D3D_BLOB_TEST_COMPILE_DETAILS = 32769,
        D3D_BLOB_TEST_COMPILE_PERF = 32770,
        D3D_BLOB_TEST_COMPILE_REPORT = 32771,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct D3D_SHADER_DATA;
#pragma endregion forward_declarations

#pragma region delegates
    using pD3DCompile = int32_t __stdcall(void*, size_t, int8_t*, Windows::Win32::Direct3D11::D3D_SHADER_MACRO*, Windows::Win32::Direct3D11::ID3DInclude*, int8_t*, int8_t*, uint32_t, uint32_t, Windows::Win32::Direct3D11::ID3DBlob**, Windows::Win32::Direct3D11::ID3DBlob**);
    using pD3DPreprocess = int32_t __stdcall(void*, size_t, int8_t*, Windows::Win32::Direct3D11::D3D_SHADER_MACRO*, Windows::Win32::Direct3D11::ID3DInclude*, Windows::Win32::Direct3D11::ID3DBlob**, Windows::Win32::Direct3D11::ID3DBlob**);
    using pD3DDisassemble = int32_t __stdcall(void*, size_t, uint32_t, int8_t*, Windows::Win32::Direct3D11::ID3DBlob**);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
