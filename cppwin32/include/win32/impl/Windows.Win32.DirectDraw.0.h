// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_DirectDraw_0_H
#define WIN32_Windows_Win32_DirectDraw_0_H
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::WindowsAndMessaging
{
    struct HWND;
}
WIN32_EXPORT namespace win32::Windows::Win32::DirectDraw
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct DDARGB;
    struct DDBLTBATCH;
    struct DDBLTFX;
    struct DDCAPS_DX1;
    struct DDCAPS_DX3;
    struct DDCAPS_DX5;
    struct DDCAPS_DX6;
    struct DDCAPS_DX7;
    struct DDCOLORCONTROL;
    struct DDDEVICEIDENTIFIER;
    struct DDDEVICEIDENTIFIER2;
    struct DDGAMMARAMP;
    struct DDOPTSURFACEDESC;
    struct DDOSCAPS;
    struct DDOVERLAYFX;
    struct DDPIXELFORMAT;
    struct DDRGBA;
    struct DDSCAPS;
    struct DDSCAPS2;
    struct DDSCAPSEX;
    struct DDSURFACEDESC;
    struct DDSURFACEDESC2;
    struct _DDFXROP;
    struct IDirectDraw;
    struct IDirectDraw2;
    struct IDirectDraw4;
    struct IDirectDraw7;
    struct IDirectDrawClipper;
    struct IDirectDrawColorControl;
    struct IDirectDrawGammaControl;
    struct IDirectDrawPalette;
    struct IDirectDrawSurface;
    struct IDirectDrawSurface2;
    struct IDirectDrawSurface3;
    struct IDirectDrawSurface4;
    struct IDirectDrawSurface7;
#pragma endregion forward_declarations

#pragma region delegates
    using LPDDENUMCALLBACKA = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, int8_t*, int8_t*, void*);
    using LPDDENUMCALLBACKW = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, uint16_t*, uint16_t*, void*);
    using LPDDENUMCALLBACKEXA = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, int8_t*, int8_t*, void*, intptr_t);
    using LPDDENUMCALLBACKEXW = Windows::Win32::SystemServices::BOOL __stdcall(::win32::guid*, uint16_t*, uint16_t*, void*, intptr_t);
    using LPDIRECTDRAWENUMERATEEXA = int32_t __stdcall(Windows::Win32::DirectDraw::LPDDENUMCALLBACKEXA*, void*, uint32_t);
    using LPDIRECTDRAWENUMERATEEXW = int32_t __stdcall(Windows::Win32::DirectDraw::LPDDENUMCALLBACKEXW*, void*, uint32_t);
    using LPDDENUMCALLBACK = Windows::Win32::SystemServices::BOOL __stdcall();
    using LPDDENUMCALLBACKEX = Windows::Win32::SystemServices::BOOL __stdcall();
    using LPDIRECTDRAWENUMERATEEX = int32_t __stdcall();
    using LPDDENUMMODESCALLBACK = int32_t __stdcall(Windows::Win32::DirectDraw::DDSURFACEDESC*, void*);
    using LPDDENUMMODESCALLBACK2 = int32_t __stdcall(Windows::Win32::DirectDraw::DDSURFACEDESC2*, void*);
    using LPDDENUMSURFACESCALLBACK = int32_t __stdcall(Windows::Win32::DirectDraw::IDirectDrawSurface*, Windows::Win32::DirectDraw::DDSURFACEDESC*, void*);
    using LPDDENUMSURFACESCALLBACK2 = int32_t __stdcall(Windows::Win32::DirectDraw::IDirectDrawSurface4*, Windows::Win32::DirectDraw::DDSURFACEDESC2*, void*);
    using LPDDENUMSURFACESCALLBACK7 = int32_t __stdcall(Windows::Win32::DirectDraw::IDirectDrawSurface7*, Windows::Win32::DirectDraw::DDSURFACEDESC2*, void*);
    using LPCLIPPERCALLBACK = uint32_t __stdcall(Windows::Win32::DirectDraw::IDirectDrawClipper*, Windows::Win32::WindowsAndMessaging::HWND, uint32_t, void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
