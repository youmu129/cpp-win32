// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Dxgi_0_H
#define WIN32_Windows_Win32_Dxgi_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Dxgi
{
#pragma region enums
    enum class DXGI_ADAPTER_FLAG : uint32_t
    {
        DXGI_ADAPTER_FLAG_NONE = 0x0,
        DXGI_ADAPTER_FLAG_REMOTE = 0x1,
        DXGI_ADAPTER_FLAG_SOFTWARE = 0x2,
    };
    enum class DXGI_ADAPTER_FLAG3 : uint32_t
    {
        DXGI_ADAPTER_FLAG3_NONE = 0x0,
        DXGI_ADAPTER_FLAG3_REMOTE = 0x1,
        DXGI_ADAPTER_FLAG3_SOFTWARE = 0x2,
        DXGI_ADAPTER_FLAG3_ACG_COMPATIBLE = 0x4,
        DXGI_ADAPTER_FLAG3_SUPPORT_MONITORED_FENCES = 0x8,
        DXGI_ADAPTER_FLAG3_SUPPORT_NON_MONITORED_FENCES = 0x10,
        DXGI_ADAPTER_FLAG3_KEYED_MUTEX_CONFORMANCE = 0x20,
        DXGI_ADAPTER_FLAG3_FORCE_DWORD = 0xffffffff,
    };
    enum class DXGI_ALPHA_MODE : uint32_t
    {
        DXGI_ALPHA_MODE_UNSPECIFIED = 0x0,
        DXGI_ALPHA_MODE_PREMULTIPLIED = 0x1,
        DXGI_ALPHA_MODE_STRAIGHT = 0x2,
        DXGI_ALPHA_MODE_IGNORE = 0x3,
        DXGI_ALPHA_MODE_FORCE_DWORD = 0xffffffff,
    };
    enum class DXGI_COLOR_SPACE_TYPE : int32_t
    {
        DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709 = 0,
        DXGI_COLOR_SPACE_RGB_FULL_G10_NONE_P709 = 1,
        DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P709 = 2,
        DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P2020 = 3,
        DXGI_COLOR_SPACE_RESERVED = 4,
        DXGI_COLOR_SPACE_YCBCR_FULL_G22_NONE_P709_X601 = 5,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P601 = 6,
        DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P601 = 7,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709 = 8,
        DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P709 = 9,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P2020 = 10,
        DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P2020 = 11,
        DXGI_COLOR_SPACE_RGB_FULL_G2084_NONE_P2020 = 12,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_LEFT_P2020 = 13,
        DXGI_COLOR_SPACE_RGB_STUDIO_G2084_NONE_P2020 = 14,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_TOPLEFT_P2020 = 15,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_TOPLEFT_P2020 = 16,
        DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P2020 = 17,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_GHLG_TOPLEFT_P2020 = 18,
        DXGI_COLOR_SPACE_YCBCR_FULL_GHLG_TOPLEFT_P2020 = 19,
        DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P709 = 20,
        DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P2020 = 21,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P709 = 22,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P2020 = 23,
        DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_TOPLEFT_P2020 = 24,
        DXGI_COLOR_SPACE_CUSTOM = -1,
    };
    enum class DXGI_COMPUTE_PREEMPTION_GRANULARITY : int32_t
    {
        DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY = 0,
        DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY = 1,
        DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY = 2,
        DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY = 3,
        DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY = 4,
    };
    enum class DXGI_DEBUG_RLO_FLAGS : int32_t
    {
        DXGI_DEBUG_RLO_SUMMARY = 1,
        DXGI_DEBUG_RLO_DETAIL = 2,
        DXGI_DEBUG_RLO_IGNORE_INTERNAL = 4,
        DXGI_DEBUG_RLO_ALL = 7,
    };
    enum class DXGI_FEATURE : int32_t
    {
        DXGI_FEATURE_PRESENT_ALLOW_TEARING = 0,
    };
    enum class DXGI_FORMAT : uint32_t
    {
        DXGI_FORMAT_UNKNOWN = 0x0,
        DXGI_FORMAT_R32G32B32A32_TYPELESS = 0x1,
        DXGI_FORMAT_R32G32B32A32_FLOAT = 0x2,
        DXGI_FORMAT_R32G32B32A32_UINT = 0x3,
        DXGI_FORMAT_R32G32B32A32_SINT = 0x4,
        DXGI_FORMAT_R32G32B32_TYPELESS = 0x5,
        DXGI_FORMAT_R32G32B32_FLOAT = 0x6,
        DXGI_FORMAT_R32G32B32_UINT = 0x7,
        DXGI_FORMAT_R32G32B32_SINT = 0x8,
        DXGI_FORMAT_R16G16B16A16_TYPELESS = 0x9,
        DXGI_FORMAT_R16G16B16A16_FLOAT = 0xa,
        DXGI_FORMAT_R16G16B16A16_UNORM = 0xb,
        DXGI_FORMAT_R16G16B16A16_UINT = 0xc,
        DXGI_FORMAT_R16G16B16A16_SNORM = 0xd,
        DXGI_FORMAT_R16G16B16A16_SINT = 0xe,
        DXGI_FORMAT_R32G32_TYPELESS = 0xf,
        DXGI_FORMAT_R32G32_FLOAT = 0x10,
        DXGI_FORMAT_R32G32_UINT = 0x11,
        DXGI_FORMAT_R32G32_SINT = 0x12,
        DXGI_FORMAT_R32G8X24_TYPELESS = 0x13,
        DXGI_FORMAT_D32_FLOAT_S8X24_UINT = 0x14,
        DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS = 0x15,
        DXGI_FORMAT_X32_TYPELESS_G8X24_UINT = 0x16,
        DXGI_FORMAT_R10G10B10A2_TYPELESS = 0x17,
        DXGI_FORMAT_R10G10B10A2_UNORM = 0x18,
        DXGI_FORMAT_R10G10B10A2_UINT = 0x19,
        DXGI_FORMAT_R11G11B10_FLOAT = 0x1a,
        DXGI_FORMAT_R8G8B8A8_TYPELESS = 0x1b,
        DXGI_FORMAT_R8G8B8A8_UNORM = 0x1c,
        DXGI_FORMAT_R8G8B8A8_UNORM_SRGB = 0x1d,
        DXGI_FORMAT_R8G8B8A8_UINT = 0x1e,
        DXGI_FORMAT_R8G8B8A8_SNORM = 0x1f,
        DXGI_FORMAT_R8G8B8A8_SINT = 0x20,
        DXGI_FORMAT_R16G16_TYPELESS = 0x21,
        DXGI_FORMAT_R16G16_FLOAT = 0x22,
        DXGI_FORMAT_R16G16_UNORM = 0x23,
        DXGI_FORMAT_R16G16_UINT = 0x24,
        DXGI_FORMAT_R16G16_SNORM = 0x25,
        DXGI_FORMAT_R16G16_SINT = 0x26,
        DXGI_FORMAT_R32_TYPELESS = 0x27,
        DXGI_FORMAT_D32_FLOAT = 0x28,
        DXGI_FORMAT_R32_FLOAT = 0x29,
        DXGI_FORMAT_R32_UINT = 0x2a,
        DXGI_FORMAT_R32_SINT = 0x2b,
        DXGI_FORMAT_R24G8_TYPELESS = 0x2c,
        DXGI_FORMAT_D24_UNORM_S8_UINT = 0x2d,
        DXGI_FORMAT_R24_UNORM_X8_TYPELESS = 0x2e,
        DXGI_FORMAT_X24_TYPELESS_G8_UINT = 0x2f,
        DXGI_FORMAT_R8G8_TYPELESS = 0x30,
        DXGI_FORMAT_R8G8_UNORM = 0x31,
        DXGI_FORMAT_R8G8_UINT = 0x32,
        DXGI_FORMAT_R8G8_SNORM = 0x33,
        DXGI_FORMAT_R8G8_SINT = 0x34,
        DXGI_FORMAT_R16_TYPELESS = 0x35,
        DXGI_FORMAT_R16_FLOAT = 0x36,
        DXGI_FORMAT_D16_UNORM = 0x37,
        DXGI_FORMAT_R16_UNORM = 0x38,
        DXGI_FORMAT_R16_UINT = 0x39,
        DXGI_FORMAT_R16_SNORM = 0x3a,
        DXGI_FORMAT_R16_SINT = 0x3b,
        DXGI_FORMAT_R8_TYPELESS = 0x3c,
        DXGI_FORMAT_R8_UNORM = 0x3d,
        DXGI_FORMAT_R8_UINT = 0x3e,
        DXGI_FORMAT_R8_SNORM = 0x3f,
        DXGI_FORMAT_R8_SINT = 0x40,
        DXGI_FORMAT_A8_UNORM = 0x41,
        DXGI_FORMAT_R1_UNORM = 0x42,
        DXGI_FORMAT_R9G9B9E5_SHAREDEXP = 0x43,
        DXGI_FORMAT_R8G8_B8G8_UNORM = 0x44,
        DXGI_FORMAT_G8R8_G8B8_UNORM = 0x45,
        DXGI_FORMAT_BC1_TYPELESS = 0x46,
        DXGI_FORMAT_BC1_UNORM = 0x47,
        DXGI_FORMAT_BC1_UNORM_SRGB = 0x48,
        DXGI_FORMAT_BC2_TYPELESS = 0x49,
        DXGI_FORMAT_BC2_UNORM = 0x4a,
        DXGI_FORMAT_BC2_UNORM_SRGB = 0x4b,
        DXGI_FORMAT_BC3_TYPELESS = 0x4c,
        DXGI_FORMAT_BC3_UNORM = 0x4d,
        DXGI_FORMAT_BC3_UNORM_SRGB = 0x4e,
        DXGI_FORMAT_BC4_TYPELESS = 0x4f,
        DXGI_FORMAT_BC4_UNORM = 0x50,
        DXGI_FORMAT_BC4_SNORM = 0x51,
        DXGI_FORMAT_BC5_TYPELESS = 0x52,
        DXGI_FORMAT_BC5_UNORM = 0x53,
        DXGI_FORMAT_BC5_SNORM = 0x54,
        DXGI_FORMAT_B5G6R5_UNORM = 0x55,
        DXGI_FORMAT_B5G5R5A1_UNORM = 0x56,
        DXGI_FORMAT_B8G8R8A8_UNORM = 0x57,
        DXGI_FORMAT_B8G8R8X8_UNORM = 0x58,
        DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM = 0x59,
        DXGI_FORMAT_B8G8R8A8_TYPELESS = 0x5a,
        DXGI_FORMAT_B8G8R8A8_UNORM_SRGB = 0x5b,
        DXGI_FORMAT_B8G8R8X8_TYPELESS = 0x5c,
        DXGI_FORMAT_B8G8R8X8_UNORM_SRGB = 0x5d,
        DXGI_FORMAT_BC6H_TYPELESS = 0x5e,
        DXGI_FORMAT_BC6H_UF16 = 0x5f,
        DXGI_FORMAT_BC6H_SF16 = 0x60,
        DXGI_FORMAT_BC7_TYPELESS = 0x61,
        DXGI_FORMAT_BC7_UNORM = 0x62,
        DXGI_FORMAT_BC7_UNORM_SRGB = 0x63,
        DXGI_FORMAT_AYUV = 0x64,
        DXGI_FORMAT_Y410 = 0x65,
        DXGI_FORMAT_Y416 = 0x66,
        DXGI_FORMAT_NV12 = 0x67,
        DXGI_FORMAT_P010 = 0x68,
        DXGI_FORMAT_P016 = 0x69,
        DXGI_FORMAT_420_OPAQUE = 0x6a,
        DXGI_FORMAT_YUY2 = 0x6b,
        DXGI_FORMAT_Y210 = 0x6c,
        DXGI_FORMAT_Y216 = 0x6d,
        DXGI_FORMAT_NV11 = 0x6e,
        DXGI_FORMAT_AI44 = 0x6f,
        DXGI_FORMAT_IA44 = 0x70,
        DXGI_FORMAT_P8 = 0x71,
        DXGI_FORMAT_A8P8 = 0x72,
        DXGI_FORMAT_B4G4R4A4_UNORM = 0x73,
        DXGI_FORMAT_P208 = 0x82,
        DXGI_FORMAT_V208 = 0x83,
        DXGI_FORMAT_V408 = 0x84,
        DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE = 0xbd,
        DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE = 0xbe,
        DXGI_FORMAT_FORCE_UINT = 0xffffffff,
    };
    enum class DXGI_FRAME_PRESENTATION_MODE : int32_t
    {
        DXGI_FRAME_PRESENTATION_MODE_COMPOSED = 0,
        DXGI_FRAME_PRESENTATION_MODE_OVERLAY = 1,
        DXGI_FRAME_PRESENTATION_MODE_NONE = 2,
        DXGI_FRAME_PRESENTATION_MODE_COMPOSITION_FAILURE = 3,
    };
    enum class DXGI_GPU_PREFERENCE : int32_t
    {
        DXGI_GPU_PREFERENCE_UNSPECIFIED = 0,
        DXGI_GPU_PREFERENCE_MINIMUM_POWER = 1,
        DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE = 2,
    };
    enum class DXGI_GRAPHICS_PREEMPTION_GRANULARITY : int32_t
    {
        DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY = 0,
        DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY = 1,
        DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY = 2,
        DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY = 3,
        DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY = 4,
    };
    enum class DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS : int32_t
    {
        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_FULLSCREEN = 1,
        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_WINDOWED = 2,
        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_CURSOR_STRETCHED = 4,
    };
    enum class DXGI_HDR_METADATA_TYPE : int32_t
    {
        DXGI_HDR_METADATA_TYPE_NONE = 0,
        DXGI_HDR_METADATA_TYPE_HDR10 = 1,
        DXGI_HDR_METADATA_TYPE_HDR10PLUS = 2,
    };
    enum class DXGI_INFO_QUEUE_MESSAGE_CATEGORY : int32_t
    {
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN = 0,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS = 1,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION = 2,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP = 3,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION = 4,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION = 5,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING = 6,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING = 7,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = 8,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION = 9,
        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER = 10,
    };
    enum class DXGI_INFO_QUEUE_MESSAGE_SEVERITY : int32_t
    {
        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION = 0,
        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR = 1,
        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING = 2,
        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO = 3,
        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE = 4,
    };
    enum class DXGI_MEMORY_SEGMENT_GROUP : int32_t
    {
        DXGI_MEMORY_SEGMENT_GROUP_LOCAL = 0,
        DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL = 1,
    };
    enum class DXGI_MODE_ROTATION : int32_t
    {
        DXGI_MODE_ROTATION_UNSPECIFIED = 0,
        DXGI_MODE_ROTATION_IDENTITY = 1,
        DXGI_MODE_ROTATION_ROTATE90 = 2,
        DXGI_MODE_ROTATION_ROTATE180 = 3,
        DXGI_MODE_ROTATION_ROTATE270 = 4,
    };
    enum class DXGI_MODE_SCALING : int32_t
    {
        DXGI_MODE_SCALING_UNSPECIFIED = 0,
        DXGI_MODE_SCALING_CENTERED = 1,
        DXGI_MODE_SCALING_STRETCHED = 2,
    };
    enum class DXGI_MODE_SCANLINE_ORDER : int32_t
    {
        DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED = 0,
        DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE = 1,
        DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST = 2,
        DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST = 3,
    };
    enum class DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS : int32_t
    {
        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_NOMINAL_RANGE = 1,
        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_BT709 = 2,
        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_xvYCC = 4,
    };
    enum class DXGI_OFFER_RESOURCE_FLAGS : int32_t
    {
        DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT = 1,
    };
    enum class DXGI_OFFER_RESOURCE_PRIORITY : int32_t
    {
        DXGI_OFFER_RESOURCE_PRIORITY_LOW = 1,
        DXGI_OFFER_RESOURCE_PRIORITY_NORMAL = 2,
        DXGI_OFFER_RESOURCE_PRIORITY_HIGH = 3,
    };
    enum class DXGI_OUTDUPL_FLAG : int32_t
    {
        DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY = 1,
    };
    enum class DXGI_OUTDUPL_POINTER_SHAPE_TYPE : int32_t
    {
        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME = 1,
        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR = 2,
        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR = 4,
    };
    enum class DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG : int32_t
    {
        DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT = 1,
    };
    enum class DXGI_OVERLAY_SUPPORT_FLAG : int32_t
    {
        DXGI_OVERLAY_SUPPORT_FLAG_DIRECT = 1,
        DXGI_OVERLAY_SUPPORT_FLAG_SCALING = 2,
    };
    enum class DXGI_RECLAIM_RESOURCE_RESULTS : int32_t
    {
        DXGI_RECLAIM_RESOURCE_RESULT_OK = 0,
        DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED = 1,
        DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED = 2,
    };
    enum class DXGI_RESIDENCY : int32_t
    {
        DXGI_RESIDENCY_FULLY_RESIDENT = 1,
        DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY = 2,
        DXGI_RESIDENCY_EVICTED_TO_DISK = 3,
    };
    enum class DXGI_SCALING : int32_t
    {
        DXGI_SCALING_STRETCH = 0,
        DXGI_SCALING_NONE = 1,
        DXGI_SCALING_ASPECT_RATIO_STRETCH = 2,
    };
    enum class DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG : int32_t
    {
        DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT = 1,
        DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT = 2,
    };
    enum class DXGI_SWAP_CHAIN_FLAG : int32_t
    {
        DXGI_SWAP_CHAIN_FLAG_NONPREROTATED = 1,
        DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH = 2,
        DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE = 4,
        DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT = 8,
        DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER = 16,
        DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY = 32,
        DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT = 64,
        DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER = 128,
        DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO = 256,
        DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO = 512,
        DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED = 1024,
        DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING = 2048,
        DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS = 4096,
    };
    enum class DXGI_SWAP_EFFECT : int32_t
    {
        DXGI_SWAP_EFFECT_DISCARD = 0,
        DXGI_SWAP_EFFECT_SEQUENTIAL = 1,
        DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL = 3,
        DXGI_SWAP_EFFECT_FLIP_DISCARD = 4,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DXGI_ADAPTER_DESC;
    struct DXGI_ADAPTER_DESC1;
    struct DXGI_ADAPTER_DESC2;
    struct DXGI_ADAPTER_DESC3;
    struct DXGI_DECODE_SWAP_CHAIN_DESC;
    struct DXGI_DISPLAY_COLOR_SPACE;
    struct DXGI_FRAME_STATISTICS;
    struct DXGI_FRAME_STATISTICS_MEDIA;
    struct DXGI_GAMMA_CONTROL;
    struct DXGI_GAMMA_CONTROL_CAPABILITIES;
    struct DXGI_HDR_METADATA_HDR10;
    struct DXGI_HDR_METADATA_HDR10PLUS;
    struct DXGI_INFO_QUEUE_FILTER;
    struct DXGI_INFO_QUEUE_FILTER_DESC;
    struct DXGI_INFO_QUEUE_MESSAGE;
    struct DXGI_JPEG_AC_HUFFMAN_TABLE;
    struct DXGI_JPEG_DC_HUFFMAN_TABLE;
    struct DXGI_JPEG_QUANTIZATION_TABLE;
    struct DXGI_MAPPED_RECT;
    struct DXGI_MATRIX_3X2_F;
    struct DXGI_MODE_DESC;
    struct DXGI_MODE_DESC1;
    struct DXGI_OUTDUPL_DESC;
    struct DXGI_OUTDUPL_FRAME_INFO;
    struct DXGI_OUTDUPL_MOVE_RECT;
    struct DXGI_OUTDUPL_POINTER_POSITION;
    struct DXGI_OUTDUPL_POINTER_SHAPE_INFO;
    struct DXGI_OUTPUT_DESC;
    struct DXGI_OUTPUT_DESC1;
    struct DXGI_PRESENT_PARAMETERS;
    struct DXGI_QUERY_VIDEO_MEMORY_INFO;
    struct DXGI_RATIONAL;
    struct DXGI_RGB;
    struct DXGI_RGBA;
    struct DXGI_SAMPLE_DESC;
    struct DXGI_SHARED_RESOURCE;
    struct DXGI_SURFACE_DESC;
    struct DXGI_SWAP_CHAIN_DESC;
    struct DXGI_SWAP_CHAIN_DESC1;
    struct DXGI_SWAP_CHAIN_FULLSCREEN_DESC;
    struct IDXGIAdapter;
    struct IDXGIAdapter1;
    struct IDXGIAdapter2;
    struct IDXGIAdapter3;
    struct IDXGIAdapter4;
    struct IDXGIDebug;
    struct IDXGIDebug1;
    struct IDXGIDecodeSwapChain;
    struct IDXGIDevice;
    struct IDXGIDevice1;
    struct IDXGIDevice2;
    struct IDXGIDevice3;
    struct IDXGIDevice4;
    struct IDXGIDeviceSubObject;
    struct IDXGIDisplayControl;
    struct IDXGIFactory;
    struct IDXGIFactory1;
    struct IDXGIFactory2;
    struct IDXGIFactory3;
    struct IDXGIFactory4;
    struct IDXGIFactory5;
    struct IDXGIFactory6;
    struct IDXGIFactory7;
    struct IDXGIFactoryMedia;
    struct IDXGIInfoQueue;
    struct IDXGIKeyedMutex;
    struct IDXGIObject;
    struct IDXGIOutput;
    struct IDXGIOutput1;
    struct IDXGIOutput2;
    struct IDXGIOutput3;
    struct IDXGIOutput4;
    struct IDXGIOutput5;
    struct IDXGIOutput6;
    struct IDXGIOutputDuplication;
    struct IDXGIResource;
    struct IDXGIResource1;
    struct IDXGISurface;
    struct IDXGISurface1;
    struct IDXGISurface2;
    struct IDXGISwapChain;
    struct IDXGISwapChain1;
    struct IDXGISwapChain2;
    struct IDXGISwapChain3;
    struct IDXGISwapChain4;
    struct IDXGISwapChainMedia;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIAdapter>{ 0x2411E7E1,0x12AC,0x4CCF,{ 0xBD,0x14,0x97,0x98,0xE8,0x53,0x4D,0xC0 } }; // 2411E7E1-12AC-4CCF-BD14-9798E8534DC0
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIAdapter1>{ 0x29038F61,0x3839,0x4626,{ 0x91,0xFD,0x08,0x68,0x79,0x01,0x1A,0x05 } }; // 29038F61-3839-4626-91FD-086879011A05
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIAdapter2>{ 0x0AA1AE0A,0xFA0E,0x4B84,{ 0x86,0x44,0xE0,0x5F,0xF8,0xE5,0xAC,0xB5 } }; // 0AA1AE0A-FA0E-4B84-8644-E05FF8E5ACB5
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIAdapter3>{ 0x645967A4,0x1392,0x4310,{ 0xA7,0x98,0x80,0x53,0xCE,0x3E,0x93,0xFD } }; // 645967A4-1392-4310-A798-8053CE3E93FD
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIAdapter4>{ 0x3C8D99D1,0x4FBF,0x4181,{ 0xA8,0x2C,0xAF,0x66,0xBF,0x7B,0xD2,0x4E } }; // 3C8D99D1-4FBF-4181-A82C-AF66BF7BD24E
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDebug>{ 0x119E7452,0xDE9E,0x40FE,{ 0x88,0x06,0x88,0xF9,0x0C,0x12,0xB4,0x41 } }; // 119E7452-DE9E-40FE-8806-88F90C12B441
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDebug1>{ 0xC5A05F0C,0x16F2,0x4ADF,{ 0x9F,0x4D,0xA8,0xC4,0xD5,0x8A,0xC5,0x50 } }; // C5A05F0C-16F2-4ADF-9F4D-A8C4D58AC550
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDecodeSwapChain>{ 0x2633066B,0x4514,0x4C7A,{ 0x8F,0xD8,0x12,0xEA,0x98,0x05,0x9D,0x18 } }; // 2633066B-4514-4C7A-8FD8-12EA98059D18
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDevice>{ 0x54EC77FA,0x1377,0x44E6,{ 0x8C,0x32,0x88,0xFD,0x5F,0x44,0xC8,0x4C } }; // 54EC77FA-1377-44E6-8C32-88FD5F44C84C
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDevice1>{ 0x77DB970F,0x6276,0x48BA,{ 0xBA,0x28,0x07,0x01,0x43,0xB4,0x39,0x2C } }; // 77DB970F-6276-48BA-BA28-070143B4392C
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDevice2>{ 0x05008617,0xFBFD,0x4051,{ 0xA7,0x90,0x14,0x48,0x84,0xB4,0xF6,0xA9 } }; // 05008617-FBFD-4051-A790-144884B4F6A9
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDevice3>{ 0x6007896C,0x3244,0x4AFD,{ 0xBF,0x18,0xA6,0xD3,0xBE,0xDA,0x50,0x23 } }; // 6007896C-3244-4AFD-BF18-A6D3BEDA5023
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDevice4>{ 0x95B4F95F,0xD8DA,0x4CA4,{ 0x9E,0xE6,0x3B,0x76,0xD5,0x96,0x8A,0x10 } }; // 95B4F95F-D8DA-4CA4-9EE6-3B76D5968A10
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDeviceSubObject>{ 0x3D3E0379,0xF9DE,0x4D58,{ 0xBB,0x6C,0x18,0xD6,0x29,0x92,0xF1,0xA6 } }; // 3D3E0379-F9DE-4D58-BB6C-18D62992F1A6
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIDisplayControl>{ 0xEA9DBF1A,0xC88E,0x4486,{ 0x85,0x4A,0x98,0xAA,0x01,0x38,0xF3,0x0C } }; // EA9DBF1A-C88E-4486-854A-98AA0138F30C
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory>{ 0x7B7166EC,0x21C7,0x44AE,{ 0xB2,0x1A,0xC9,0xAE,0x32,0x1A,0xE3,0x69 } }; // 7B7166EC-21C7-44AE-B21A-C9AE321AE369
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory1>{ 0x770AAE78,0xF26F,0x4DBA,{ 0xA8,0x29,0x25,0x3C,0x83,0xD1,0xB3,0x87 } }; // 770AAE78-F26F-4DBA-A829-253C83D1B387
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory2>{ 0x50C83A1C,0xE072,0x4C48,{ 0x87,0xB0,0x36,0x30,0xFA,0x36,0xA6,0xD0 } }; // 50C83A1C-E072-4C48-87B0-3630FA36A6D0
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory3>{ 0x25483823,0xCD46,0x4C7D,{ 0x86,0xCA,0x47,0xAA,0x95,0xB8,0x37,0xBD } }; // 25483823-CD46-4C7D-86CA-47AA95B837BD
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory4>{ 0x1BC6EA02,0xEF36,0x464F,{ 0xBF,0x0C,0x21,0xCA,0x39,0xE5,0x16,0x8A } }; // 1BC6EA02-EF36-464F-BF0C-21CA39E5168A
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory5>{ 0x7632E1F5,0xEE65,0x4DCA,{ 0x87,0xFD,0x84,0xCD,0x75,0xF8,0x83,0x8D } }; // 7632E1F5-EE65-4DCA-87FD-84CD75F8838D
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory6>{ 0xC1B6694F,0xFF09,0x44A9,{ 0xB0,0x3C,0x77,0x90,0x0A,0x0A,0x1D,0x17 } }; // C1B6694F-FF09-44A9-B03C-77900A0A1D17
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactory7>{ 0xA4966EED,0x76DB,0x44DA,{ 0x84,0xC1,0xEE,0x9A,0x7A,0xFB,0x20,0xA8 } }; // A4966EED-76DB-44DA-84C1-EE9A7AFB20A8
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIFactoryMedia>{ 0x41E7D1F2,0xA591,0x4F7B,{ 0xA2,0xE5,0xFA,0x9C,0x84,0x3E,0x1C,0x12 } }; // 41E7D1F2-A591-4F7B-A2E5-FA9C843E1C12
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIInfoQueue>{ 0xD67441C7,0x672A,0x476F,{ 0x9E,0x82,0xCD,0x55,0xB4,0x49,0x49,0xCE } }; // D67441C7-672A-476F-9E82-CD55B44949CE
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIKeyedMutex>{ 0x9D8E1289,0xD7B3,0x465F,{ 0x81,0x26,0x25,0x0E,0x34,0x9A,0xF8,0x5D } }; // 9D8E1289-D7B3-465F-8126-250E349AF85D
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIObject>{ 0xAEC22FB8,0x76F3,0x4639,{ 0x9B,0xE0,0x28,0xEB,0x43,0xA6,0x7A,0x2E } }; // AEC22FB8-76F3-4639-9BE0-28EB43A67A2E
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput>{ 0xAE02EEDB,0xC735,0x4690,{ 0x8D,0x52,0x5A,0x8D,0xC2,0x02,0x13,0xAA } }; // AE02EEDB-C735-4690-8D52-5A8DC20213AA
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput1>{ 0x00CDDEA8,0x939B,0x4B83,{ 0xA3,0x40,0xA6,0x85,0x22,0x66,0x66,0xCC } }; // 00CDDEA8-939B-4B83-A340-A685226666CC
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput2>{ 0x595E39D1,0x2724,0x4663,{ 0x99,0xB1,0xDA,0x96,0x9D,0xE2,0x83,0x64 } }; // 595E39D1-2724-4663-99B1-DA969DE28364
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput3>{ 0x8A6BB301,0x7E7E,0x41F4,{ 0xA8,0xE0,0x5B,0x32,0xF7,0xF9,0x9B,0x18 } }; // 8A6BB301-7E7E-41F4-A8E0-5B32F7F99B18
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput4>{ 0xDC7DCA35,0x2196,0x414D,{ 0x9F,0x53,0x61,0x78,0x84,0x03,0x2A,0x60 } }; // DC7DCA35-2196-414D-9F53-617884032A60
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput5>{ 0x80A07424,0xAB52,0x42EB,{ 0x83,0x3C,0x0C,0x42,0xFD,0x28,0x2D,0x98 } }; // 80A07424-AB52-42EB-833C-0C42FD282D98
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutput6>{ 0x068346E8,0xAAEC,0x4B84,{ 0xAD,0xD7,0x13,0x7F,0x51,0x3F,0x77,0xA1 } }; // 068346E8-AAEC-4B84-ADD7-137F513F77A1
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIOutputDuplication>{ 0x191CFAC3,0xA341,0x470D,{ 0xB2,0x6E,0xA8,0x64,0xF4,0x28,0x31,0x9C } }; // 191CFAC3-A341-470D-B26E-A864F428319C
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIResource>{ 0x035F3AB4,0x482E,0x4E50,{ 0xB4,0x1F,0x8A,0x7F,0x8B,0xD8,0x96,0x0B } }; // 035F3AB4-482E-4E50-B41F-8A7F8BD8960B
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGIResource1>{ 0x30961379,0x4609,0x4A41,{ 0x99,0x8E,0x54,0xFE,0x56,0x7E,0xE0,0xC1 } }; // 30961379-4609-4A41-998E-54FE567EE0C1
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISurface>{ 0xCAFCB56C,0x6AC3,0x4889,{ 0xBF,0x47,0x9E,0x23,0xBB,0xD2,0x60,0xEC } }; // CAFCB56C-6AC3-4889-BF47-9E23BBD260EC
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISurface1>{ 0x4AE63092,0x6327,0x4C1B,{ 0x80,0xAE,0xBF,0xE1,0x2E,0xA3,0x2B,0x86 } }; // 4AE63092-6327-4C1B-80AE-BFE12EA32B86
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISurface2>{ 0xABA496DD,0xB617,0x4CB8,{ 0xA8,0x66,0xBC,0x44,0xD7,0xEB,0x1F,0xA2 } }; // ABA496DD-B617-4CB8-A866-BC44D7EB1FA2
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChain>{ 0x310D36A0,0xD2E7,0x4C0A,{ 0xAA,0x04,0x6A,0x9D,0x23,0xB8,0x88,0x6A } }; // 310D36A0-D2E7-4C0A-AA04-6A9D23B8886A
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChain1>{ 0x790A45F7,0x0D42,0x4876,{ 0x98,0x3A,0x0A,0x55,0xCF,0xE6,0xF4,0xAA } }; // 790A45F7-0D42-4876-983A-0A55CFE6F4AA
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChain2>{ 0xA8BE2AC4,0x199F,0x4946,{ 0xB3,0x31,0x79,0x59,0x9F,0xB9,0x8D,0xE7 } }; // A8BE2AC4-199F-4946-B331-79599FB98DE7
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChain3>{ 0x94D99BDB,0xF1F8,0x4AB0,{ 0xB2,0x36,0x7D,0xA0,0x17,0x0E,0xDA,0xB1 } }; // 94D99BDB-F1F8-4AB0-B236-7DA0170EDAB1
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChain4>{ 0x3D585D5A,0xBD4A,0x489E,{ 0xB1,0xF4,0x3D,0xBC,0xB6,0x45,0x2F,0xFB } }; // 3D585D5A-BD4A-489E-B1F4-3DBCB6452FFB
    template <> inline constexpr guid guid_v<Windows::Win32::Dxgi::IDXGISwapChainMedia>{ 0xDD95B90B,0xF05F,0x4F6A,{ 0xBD,0x65,0x25,0xBF,0xB2,0x64,0xBD,0x84 } }; // DD95B90B-F05F-4F6A-BD65-25BFB264BD84
#pragma endregion guids

}
#endif
