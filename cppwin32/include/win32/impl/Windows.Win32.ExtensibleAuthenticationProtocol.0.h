// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_ExtensibleAuthenticationProtocol_0_H
#define WIN32_Windows_Win32_ExtensibleAuthenticationProtocol_0_H
WIN32_EXPORT namespace win32::Windows::Win32::ExtensibleAuthenticationProtocol
{
#pragma region enums
    enum class EAPHOST_AUTH_STATUS : int32_t
    {
        EapHostInvalidSession = 0,
        EapHostAuthNotStarted = 1,
        EapHostAuthIdentityExchange = 2,
        EapHostAuthNegotiatingType = 3,
        EapHostAuthInProgress = 4,
        EapHostAuthSucceeded = 5,
        EapHostAuthFailed = 6,
    };
    enum class EAP_ATTRIBUTE_TYPE : int32_t
    {
        eatMinimum = 0,
        eatUserName = 1,
        eatUserPassword = 2,
        eatMD5CHAPPassword = 3,
        eatNASIPAddress = 4,
        eatNASPort = 5,
        eatServiceType = 6,
        eatFramedProtocol = 7,
        eatFramedIPAddress = 8,
        eatFramedIPNetmask = 9,
        eatFramedRouting = 10,
        eatFilterId = 11,
        eatFramedMTU = 12,
        eatFramedCompression = 13,
        eatLoginIPHost = 14,
        eatLoginService = 15,
        eatLoginTCPPort = 16,
        eatUnassigned17 = 17,
        eatReplyMessage = 18,
        eatCallbackNumber = 19,
        eatCallbackId = 20,
        eatUnassigned21 = 21,
        eatFramedRoute = 22,
        eatFramedIPXNetwork = 23,
        eatState = 24,
        eatClass = 25,
        eatVendorSpecific = 26,
        eatSessionTimeout = 27,
        eatIdleTimeout = 28,
        eatTerminationAction = 29,
        eatCalledStationId = 30,
        eatCallingStationId = 31,
        eatNASIdentifier = 32,
        eatProxyState = 33,
        eatLoginLATService = 34,
        eatLoginLATNode = 35,
        eatLoginLATGroup = 36,
        eatFramedAppleTalkLink = 37,
        eatFramedAppleTalkNetwork = 38,
        eatFramedAppleTalkZone = 39,
        eatAcctStatusType = 40,
        eatAcctDelayTime = 41,
        eatAcctInputOctets = 42,
        eatAcctOutputOctets = 43,
        eatAcctSessionId = 44,
        eatAcctAuthentic = 45,
        eatAcctSessionTime = 46,
        eatAcctInputPackets = 47,
        eatAcctOutputPackets = 48,
        eatAcctTerminateCause = 49,
        eatAcctMultiSessionId = 50,
        eatAcctLinkCount = 51,
        eatAcctEventTimeStamp = 55,
        eatMD5CHAPChallenge = 60,
        eatNASPortType = 61,
        eatPortLimit = 62,
        eatLoginLATPort = 63,
        eatTunnelType = 64,
        eatTunnelMediumType = 65,
        eatTunnelClientEndpoint = 66,
        eatTunnelServerEndpoint = 67,
        eatARAPPassword = 70,
        eatARAPFeatures = 71,
        eatARAPZoneAccess = 72,
        eatARAPSecurity = 73,
        eatARAPSecurityData = 74,
        eatPasswordRetry = 75,
        eatPrompt = 76,
        eatConnectInfo = 77,
        eatConfigurationToken = 78,
        eatEAPMessage = 79,
        eatSignature = 80,
        eatARAPChallengeResponse = 84,
        eatAcctInterimInterval = 85,
        eatNASIPv6Address = 95,
        eatFramedInterfaceId = 96,
        eatFramedIPv6Prefix = 97,
        eatLoginIPv6Host = 98,
        eatFramedIPv6Route = 99,
        eatFramedIPv6Pool = 100,
        eatARAPGuestLogon = 8096,
        eatCertificateOID = 8097,
        eatEAPConfiguration = 8098,
        eatPEAPEmbeddedEAPTypeId = 8099,
        eatPEAPFastRoamedSession = 8100,
        eatFastRoamedSession = 8100,
        eatEAPTLV = 8102,
        eatCredentialsChanged = 8103,
        eatInnerEapMethodType = 8104,
        eatClearTextPassword = 8107,
        eatQuarantineSoH = 8150,
        eatCertificateThumbprint = 8250,
        eatPeerId = 9000,
        eatServerId = 9001,
        eatMethodId = 9002,
        eatEMSK = 9003,
        eatSessionId = 9004,
        eatReserved = -1,
    };
    enum class EAP_AUTHENTICATOR_SEND_TIMEOUT : int32_t
    {
        EAP_AUTHENTICATOR_SEND_TIMEOUT_NONE = 0,
        EAP_AUTHENTICATOR_SEND_TIMEOUT_BASIC = 1,
        EAP_AUTHENTICATOR_SEND_TIMEOUT_INTERACTIVE = 2,
    };
    enum class EAP_CONFIG_INPUT_FIELD_TYPE : int32_t
    {
        EapConfigInputUsername = 0,
        EapConfigInputPassword = 1,
        EapConfigInputNetworkUsername = 2,
        EapConfigInputNetworkPassword = 3,
        EapConfigInputPin = 4,
        EapConfigInputPSK = 5,
        EapConfigInputEdit = 6,
        EapConfigSmartCardUsername = 7,
        EapConfigSmartCardError = 8,
    };
    enum class EAP_INTERACTIVE_UI_DATA_TYPE : int32_t
    {
        EapCredReq = 0,
        EapCredResp = 1,
        EapCredExpiryReq = 2,
        EapCredExpiryResp = 3,
        EapCredLogonReq = 4,
        EapCredLogonResp = 5,
    };
    enum class EAP_METHOD_AUTHENTICATOR_RESPONSE_ACTION : int32_t
    {
        EAP_METHOD_AUTHENTICATOR_RESPONSE_DISCARD = 0,
        EAP_METHOD_AUTHENTICATOR_RESPONSE_SEND = 1,
        EAP_METHOD_AUTHENTICATOR_RESPONSE_RESULT = 2,
        EAP_METHOD_AUTHENTICATOR_RESPONSE_RESPOND = 3,
        EAP_METHOD_AUTHENTICATOR_RESPONSE_AUTHENTICATE = 4,
        EAP_METHOD_AUTHENTICATOR_RESPONSE_HANDLE_IDENTITY = 5,
    };
    enum class EAP_METHOD_PROPERTY_TYPE : int32_t
    {
        emptPropCipherSuiteNegotiation = 0,
        emptPropMutualAuth = 1,
        emptPropIntegrity = 2,
        emptPropReplayProtection = 3,
        emptPropConfidentiality = 4,
        emptPropKeyDerivation = 5,
        emptPropKeyStrength64 = 6,
        emptPropKeyStrength128 = 7,
        emptPropKeyStrength256 = 8,
        emptPropKeyStrength512 = 9,
        emptPropKeyStrength1024 = 10,
        emptPropDictionaryAttackResistance = 11,
        emptPropFastReconnect = 12,
        emptPropCryptoBinding = 13,
        emptPropSessionIndependence = 14,
        emptPropFragmentation = 15,
        emptPropChannelBinding = 16,
        emptPropNap = 17,
        emptPropStandalone = 18,
        emptPropMppeEncryption = 19,
        emptPropTunnelMethod = 20,
        emptPropSupportsConfig = 21,
        emptPropCertifiedMethod = 22,
        emptPropHiddenMethod = 23,
        emptPropMachineAuth = 24,
        emptPropUserAuth = 25,
        emptPropIdentityPrivacy = 26,
        emptPropMethodChaining = 27,
        emptPropSharedStateEquivalence = 28,
        emptLegacyMethodPropertyFlag = 31,
        emptPropVendorSpecific = 255,
    };
    enum class EAP_METHOD_PROPERTY_VALUE_TYPE : int32_t
    {
        empvtBool = 0,
        empvtDword = 1,
        empvtString = 2,
    };
    enum class EapCode : int32_t
    {
        EapCodeMinimum = 1,
        EapCodeRequest = 1,
        EapCodeResponse = 2,
        EapCodeSuccess = 3,
        EapCodeFailure = 4,
        EapCodeMaximum = 4,
    };
    enum class EapCredentialType : int32_t
    {
        EAP_EMPTY_CREDENTIAL = 0,
        EAP_USERNAME_PASSWORD_CREDENTIAL = 1,
        EAP_WINLOGON_CREDENTIAL = 2,
        EAP_CERTIFICATE_CREDENTIAL = 3,
        EAP_SIM_CREDENTIAL = 4,
    };
    enum class EapHostPeerAuthParams : int32_t
    {
        EapHostPeerAuthStatus = 1,
        EapHostPeerIdentity = 2,
        EapHostPeerIdentityExtendedInfo = 3,
        EapHostNapInfo = 4,
    };
    enum class EapHostPeerMethodResultReason : int32_t
    {
        EapHostPeerMethodResultAltSuccessReceived = 1,
        EapHostPeerMethodResultTimeout = 2,
        EapHostPeerMethodResultFromMethod = 3,
    };
    enum class EapHostPeerResponseAction : int32_t
    {
        EapHostPeerResponseDiscard = 0,
        EapHostPeerResponseSend = 1,
        EapHostPeerResponseResult = 2,
        EapHostPeerResponseInvokeUi = 3,
        EapHostPeerResponseRespond = 4,
        EapHostPeerResponseStartAuthentication = 5,
        EapHostPeerResponseNone = 6,
    };
    enum class EapPeerMethodResponseAction : int32_t
    {
        EapPeerMethodResponseActionDiscard = 0,
        EapPeerMethodResponseActionSend = 1,
        EapPeerMethodResponseActionResult = 2,
        EapPeerMethodResponseActionInvokeUI = 3,
        EapPeerMethodResponseActionRespond = 4,
        EapPeerMethodResponseActionNone = 5,
    };
    enum class EapPeerMethodResultReason : int32_t
    {
        EapPeerMethodResultUnknown = 1,
        EapPeerMethodResultSuccess = 2,
        EapPeerMethodResultFailure = 3,
    };
    enum class ISOLATION_STATE : int32_t
    {
        ISOLATION_STATE_UNKNOWN = 0,
        ISOLATION_STATE_NOT_RESTRICTED = 1,
        ISOLATION_STATE_IN_PROBATION = 2,
        ISOLATION_STATE_RESTRICTED_ACCESS = 3,
    };
    enum class PPP_EAP_ACTION : int32_t
    {
        EAPACTION_NoAction = 0,
        EAPACTION_Authenticate = 1,
        EAPACTION_Done = 2,
        EAPACTION_SendAndDone = 3,
        EAPACTION_Send = 4,
        EAPACTION_SendWithTimeout = 5,
        EAPACTION_SendWithTimeoutInteractive = 6,
        EAPACTION_IndicateTLV = 7,
        EAPACTION_IndicateIdentity = 8,
    };
    enum class RAS_AUTH_ATTRIBUTE_TYPE : int32_t
    {
        raatMinimum = 0,
        raatUserName = 1,
        raatUserPassword = 2,
        raatMD5CHAPPassword = 3,
        raatNASIPAddress = 4,
        raatNASPort = 5,
        raatServiceType = 6,
        raatFramedProtocol = 7,
        raatFramedIPAddress = 8,
        raatFramedIPNetmask = 9,
        raatFramedRouting = 10,
        raatFilterId = 11,
        raatFramedMTU = 12,
        raatFramedCompression = 13,
        raatLoginIPHost = 14,
        raatLoginService = 15,
        raatLoginTCPPort = 16,
        raatUnassigned17 = 17,
        raatReplyMessage = 18,
        raatCallbackNumber = 19,
        raatCallbackId = 20,
        raatUnassigned21 = 21,
        raatFramedRoute = 22,
        raatFramedIPXNetwork = 23,
        raatState = 24,
        raatClass = 25,
        raatVendorSpecific = 26,
        raatSessionTimeout = 27,
        raatIdleTimeout = 28,
        raatTerminationAction = 29,
        raatCalledStationId = 30,
        raatCallingStationId = 31,
        raatNASIdentifier = 32,
        raatProxyState = 33,
        raatLoginLATService = 34,
        raatLoginLATNode = 35,
        raatLoginLATGroup = 36,
        raatFramedAppleTalkLink = 37,
        raatFramedAppleTalkNetwork = 38,
        raatFramedAppleTalkZone = 39,
        raatAcctStatusType = 40,
        raatAcctDelayTime = 41,
        raatAcctInputOctets = 42,
        raatAcctOutputOctets = 43,
        raatAcctSessionId = 44,
        raatAcctAuthentic = 45,
        raatAcctSessionTime = 46,
        raatAcctInputPackets = 47,
        raatAcctOutputPackets = 48,
        raatAcctTerminateCause = 49,
        raatAcctMultiSessionId = 50,
        raatAcctLinkCount = 51,
        raatAcctEventTimeStamp = 55,
        raatMD5CHAPChallenge = 60,
        raatNASPortType = 61,
        raatPortLimit = 62,
        raatLoginLATPort = 63,
        raatTunnelType = 64,
        raatTunnelMediumType = 65,
        raatTunnelClientEndpoint = 66,
        raatTunnelServerEndpoint = 67,
        raatARAPPassword = 70,
        raatARAPFeatures = 71,
        raatARAPZoneAccess = 72,
        raatARAPSecurity = 73,
        raatARAPSecurityData = 74,
        raatPasswordRetry = 75,
        raatPrompt = 76,
        raatConnectInfo = 77,
        raatConfigurationToken = 78,
        raatEAPMessage = 79,
        raatSignature = 80,
        raatARAPChallengeResponse = 84,
        raatAcctInterimInterval = 85,
        raatNASIPv6Address = 95,
        raatFramedInterfaceId = 96,
        raatFramedIPv6Prefix = 97,
        raatLoginIPv6Host = 98,
        raatFramedIPv6Route = 99,
        raatFramedIPv6Pool = 100,
        raatARAPGuestLogon = 8096,
        raatCertificateOID = 8097,
        raatEAPConfiguration = 8098,
        raatPEAPEmbeddedEAPTypeId = 8099,
        raatInnerEAPTypeId = 8099,
        raatPEAPFastRoamedSession = 8100,
        raatFastRoamedSession = 8100,
        raatEAPTLV = 8102,
        raatCredentialsChanged = 8103,
        raatCertificateThumbprint = 8250,
        raatPeerId = 9000,
        raatServerId = 9001,
        raatMethodId = 9002,
        raatEMSK = 9003,
        raatSessionId = 9004,
        raatReserved = -1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct EAPHOST_AUTH_INFO;
    struct EAPHOST_IDENTITY_UI_PARAMS;
    struct EAPHOST_INTERACTIVE_UI_PARAMS;
    struct EAP_ATTRIBUTE;
    struct EAP_ATTRIBUTES;
    struct EAP_AUTHENTICATOR_METHOD_ROUTINES;
    struct EAP_CONFIG_INPUT_FIELD_ARRAY;
    struct EAP_CONFIG_INPUT_FIELD_DATA;
    struct EAP_CRED_EXPIRY_REQ;
    struct EAP_ERROR;
    struct EAP_INTERACTIVE_UI_DATA;
    struct EAP_METHOD_AUTHENTICATOR_RESULT;
    struct EAP_METHOD_INFO;
    struct EAP_METHOD_INFO_ARRAY;
    struct EAP_METHOD_INFO_ARRAY_EX;
    struct EAP_METHOD_INFO_EX;
    struct EAP_METHOD_PROPERTY;
    struct EAP_METHOD_PROPERTY_ARRAY;
    union EAP_METHOD_PROPERTY_VALUE;
    struct EAP_METHOD_PROPERTY_VALUE_BOOL;
    struct EAP_METHOD_PROPERTY_VALUE_DWORD;
    struct EAP_METHOD_PROPERTY_VALUE_STRING;
    struct EAP_METHOD_TYPE;
    struct EAP_PEER_METHOD_ROUTINES;
    struct EAP_TYPE;
    union EAP_UI_DATA_FORMAT;
    struct EapCertificateCredential;
    struct EapCredential;
    union EapCredentialTypeData;
    struct EapHostPeerMethodResult;
    struct EapPacket;
    struct EapPeerMethodOutput;
    struct EapPeerMethodResult;
    struct EapSimCredential;
    struct EapUsernamePasswordCredential;
    struct LEGACY_IDENTITY_UI_PARAMS;
    struct LEGACY_INTERACTIVE_UI_PARAMS;
    struct NgcTicketContext;
    struct PPP_EAP_INFO;
    struct PPP_EAP_INPUT;
    struct PPP_EAP_OUTPUT;
    struct PPP_EAP_PACKET;
    struct RAS_AUTH_ATTRIBUTE;
    struct IAccountingProviderConfig;
    struct IAuthenticationProviderConfig;
    struct IEAPProviderConfig;
    struct IEAPProviderConfig2;
    struct IEAPProviderConfig3;
    struct IRouterProtocolConfig;
#pragma endregion forward_declarations

#pragma region delegates
    using NotificationHandler = void __stdcall(::win32::guid, void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IAccountingProviderConfig>{ 0x66A2DB18,0xD706,0x11D0,{ 0xA3,0x7B,0x00,0xC0,0x4F,0xC9,0xDA,0x04 } }; // 66A2DB18-D706-11D0-A37B-00C04FC9DA04
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IAuthenticationProviderConfig>{ 0x66A2DB17,0xD706,0x11D0,{ 0xA3,0x7B,0x00,0xC0,0x4F,0xC9,0xDA,0x04 } }; // 66A2DB17-D706-11D0-A37B-00C04FC9DA04
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IEAPProviderConfig>{ 0x66A2DB19,0xD706,0x11D0,{ 0xA3,0x7B,0x00,0xC0,0x4F,0xC9,0xDA,0x04 } }; // 66A2DB19-D706-11D0-A37B-00C04FC9DA04
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IEAPProviderConfig2>{ 0xD565917A,0x85C4,0x4466,{ 0x85,0x6E,0x67,0x1C,0x37,0x42,0xEA,0x9A } }; // D565917A-85C4-4466-856E-671C3742EA9A
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IEAPProviderConfig3>{ 0xB78ECD12,0x68BB,0x4F86,{ 0x9B,0xF0,0x84,0x38,0xDD,0x3B,0xE9,0x82 } }; // B78ECD12-68BB-4F86-9BF0-8438DD3BE982
    template <> inline constexpr guid guid_v<Windows::Win32::ExtensibleAuthenticationProtocol::IRouterProtocolConfig>{ 0x66A2DB16,0xD706,0x11D0,{ 0xA3,0x7B,0x00,0xC0,0x4F,0xC9,0xDA,0x04 } }; // 66A2DB16-D706-11D0-A37B-00C04FC9DA04
#pragma endregion guids

}
#endif
