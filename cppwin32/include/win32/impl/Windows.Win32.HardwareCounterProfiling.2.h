// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_HardwareCounterProfiling_2_H
#define WIN32_Windows_Win32_HardwareCounterProfiling_2_H
#include "win32/impl/Windows.Win32.HardwareCounterProfiling.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    uint32_t __stdcall WIN32_IMPL_EnableThreadProfiling(win32::Windows::Win32::SystemServices::HANDLE ThreadHandle, uint32_t Flags, uint64_t HardwareCounters, win32::Windows::Win32::SystemServices::HANDLE* PerformanceDataHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_DisableThreadProfiling(win32::Windows::Win32::SystemServices::HANDLE PerformanceDataHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_QueryThreadProfiling(win32::Windows::Win32::SystemServices::HANDLE ThreadHandle, uint8_t* Enabled) noexcept;
    uint32_t __stdcall WIN32_IMPL_ReadThreadProfilingData(win32::Windows::Win32::SystemServices::HANDLE PerformanceDataHandle, uint32_t Flags, win32::Windows::Win32::HardwareCounterProfiling::PERFORMANCE_DATA* PerformanceData) noexcept;
}
WIN32_IMPL_LINK(EnableThreadProfiling, 20)
WIN32_IMPL_LINK(DisableThreadProfiling, 4)
WIN32_IMPL_LINK(QueryThreadProfiling, 8)
WIN32_IMPL_LINK(ReadThreadProfilingData, 12)

#pragma endregion abi_methods

#endif
