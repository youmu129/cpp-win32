// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_InteractionContext_0_H
#define WIN32_Windows_Win32_InteractionContext_0_H
WIN32_EXPORT namespace win32::Windows::Win32::InteractionContext
{
#pragma region enums
    enum class CROSS_SLIDE_FLAGS : int32_t
    {
        CROSS_SLIDE_FLAGS_NONE = 0,
        CROSS_SLIDE_FLAGS_SELECT = 1,
        CROSS_SLIDE_FLAGS_SPEED_BUMP = 2,
        CROSS_SLIDE_FLAGS_REARRANGE = 4,
        CROSS_SLIDE_FLAGS_MAX = -1,
    };
    enum class CROSS_SLIDE_THRESHOLD : int32_t
    {
        CROSS_SLIDE_THRESHOLD_SELECT_START = 0,
        CROSS_SLIDE_THRESHOLD_SPEED_BUMP_START = 1,
        CROSS_SLIDE_THRESHOLD_SPEED_BUMP_END = 2,
        CROSS_SLIDE_THRESHOLD_REARRANGE_START = 3,
        CROSS_SLIDE_THRESHOLD_COUNT = 4,
        CROSS_SLIDE_THRESHOLD_MAX = -1,
    };
    enum class HOLD_PARAMETER : int32_t
    {
        HOLD_PARAMETER_MIN_CONTACT_COUNT = 0,
        HOLD_PARAMETER_MAX_CONTACT_COUNT = 1,
        HOLD_PARAMETER_THRESHOLD_RADIUS = 2,
        HOLD_PARAMETER_THRESHOLD_START_DELAY = 3,
        HOLD_PARAMETER_MAX = -1,
    };
    enum class INERTIA_PARAMETER : int32_t
    {
        INERTIA_PARAMETER_TRANSLATION_DECELERATION = 1,
        INERTIA_PARAMETER_TRANSLATION_DISPLACEMENT = 2,
        INERTIA_PARAMETER_ROTATION_DECELERATION = 3,
        INERTIA_PARAMETER_ROTATION_ANGLE = 4,
        INERTIA_PARAMETER_EXPANSION_DECELERATION = 5,
        INERTIA_PARAMETER_EXPANSION_EXPANSION = 6,
        INERTIA_PARAMETER_MAX = -1,
    };
    enum class INTERACTION_CONFIGURATION_FLAGS : int32_t
    {
        INTERACTION_CONFIGURATION_FLAG_NONE = 0,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION = 1,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_TRANSLATION_X = 2,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_TRANSLATION_Y = 4,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_ROTATION = 8,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_SCALING = 16,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_TRANSLATION_INERTIA = 32,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_ROTATION_INERTIA = 64,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_SCALING_INERTIA = 128,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_RAILS_X = 256,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_RAILS_Y = 512,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_EXACT = 1024,
        INTERACTION_CONFIGURATION_FLAG_MANIPULATION_MULTIPLE_FINGER_PANNING = 2048,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE = 1,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE_HORIZONTAL = 2,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE_SELECT = 4,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE_SPEED_BUMP = 8,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE_REARRANGE = 16,
        INTERACTION_CONFIGURATION_FLAG_CROSS_SLIDE_EXACT = 32,
        INTERACTION_CONFIGURATION_FLAG_TAP = 1,
        INTERACTION_CONFIGURATION_FLAG_TAP_DOUBLE = 2,
        INTERACTION_CONFIGURATION_FLAG_TAP_MULTIPLE_FINGER = 4,
        INTERACTION_CONFIGURATION_FLAG_SECONDARY_TAP = 1,
        INTERACTION_CONFIGURATION_FLAG_HOLD = 1,
        INTERACTION_CONFIGURATION_FLAG_HOLD_MOUSE = 2,
        INTERACTION_CONFIGURATION_FLAG_HOLD_MULTIPLE_FINGER = 4,
        INTERACTION_CONFIGURATION_FLAG_DRAG = 1,
        INTERACTION_CONFIGURATION_FLAG_MAX = -1,
    };
    enum class INTERACTION_CONTEXT_PROPERTY : int32_t
    {
        INTERACTION_CONTEXT_PROPERTY_MEASUREMENT_UNITS = 1,
        INTERACTION_CONTEXT_PROPERTY_INTERACTION_UI_FEEDBACK = 2,
        INTERACTION_CONTEXT_PROPERTY_FILTER_POINTERS = 3,
        INTERACTION_CONTEXT_PROPERTY_MAX = -1,
    };
    enum class INTERACTION_FLAGS : int32_t
    {
        INTERACTION_FLAG_NONE = 0,
        INTERACTION_FLAG_BEGIN = 1,
        INTERACTION_FLAG_END = 2,
        INTERACTION_FLAG_CANCEL = 4,
        INTERACTION_FLAG_INERTIA = 8,
        INTERACTION_FLAG_MAX = -1,
    };
    enum class INTERACTION_ID : int32_t
    {
        INTERACTION_ID_NONE = 0,
        INTERACTION_ID_MANIPULATION = 1,
        INTERACTION_ID_TAP = 2,
        INTERACTION_ID_SECONDARY_TAP = 3,
        INTERACTION_ID_HOLD = 4,
        INTERACTION_ID_DRAG = 5,
        INTERACTION_ID_CROSS_SLIDE = 6,
        INTERACTION_ID_MAX = -1,
    };
    enum class INTERACTION_STATE : int32_t
    {
        INTERACTION_STATE_IDLE = 0,
        INTERACTION_STATE_IN_INTERACTION = 1,
        INTERACTION_STATE_POSSIBLE_DOUBLE_TAP = 2,
        INTERACTION_STATE_MAX = -1,
    };
    enum class MANIPULATION_RAILS_STATE : int32_t
    {
        MANIPULATION_RAILS_STATE_UNDECIDED = 0,
        MANIPULATION_RAILS_STATE_FREE = 1,
        MANIPULATION_RAILS_STATE_RAILED = 2,
        MANIPULATION_RAILS_STATE_MAX = -1,
    };
    enum class MOUSE_WHEEL_PARAMETER : int32_t
    {
        MOUSE_WHEEL_PARAMETER_CHAR_TRANSLATION_X = 1,
        MOUSE_WHEEL_PARAMETER_CHAR_TRANSLATION_Y = 2,
        MOUSE_WHEEL_PARAMETER_DELTA_SCALE = 3,
        MOUSE_WHEEL_PARAMETER_DELTA_ROTATION = 4,
        MOUSE_WHEEL_PARAMETER_PAGE_TRANSLATION_X = 5,
        MOUSE_WHEEL_PARAMETER_PAGE_TRANSLATION_Y = 6,
        MOUSE_WHEEL_PARAMETER_MAX = -1,
    };
    enum class TAP_PARAMETER : int32_t
    {
        TAP_PARAMETER_MIN_CONTACT_COUNT = 0,
        TAP_PARAMETER_MAX_CONTACT_COUNT = 1,
        TAP_PARAMETER_MAX = -1,
    };
    enum class TRANSLATION_PARAMETER : int32_t
    {
        TRANSLATION_PARAMETER_MIN_CONTACT_COUNT = 0,
        TRANSLATION_PARAMETER_MAX_CONTACT_COUNT = 1,
        TRANSLATION_PARAMETER_MAX = -1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CROSS_SLIDE_PARAMETER;
    struct HINTERACTIONCONTEXT__;
    struct INTERACTION_ARGUMENTS_CROSS_SLIDE;
    struct INTERACTION_ARGUMENTS_MANIPULATION;
    struct INTERACTION_ARGUMENTS_TAP;
    struct INTERACTION_CONTEXT_CONFIGURATION;
    struct INTERACTION_CONTEXT_OUTPUT;
    struct INTERACTION_CONTEXT_OUTPUT2;
    struct MANIPULATION_TRANSFORM;
    struct MANIPULATION_VELOCITY;
#pragma endregion forward_declarations

#pragma region delegates
    using INTERACTION_CONTEXT_OUTPUT_CALLBACK = void __stdcall(void*, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_OUTPUT*);
    using INTERACTION_CONTEXT_OUTPUT_CALLBACK2 = void __stdcall(void*, Windows::Win32::InteractionContext::INTERACTION_CONTEXT_OUTPUT2*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
