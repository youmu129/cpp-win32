// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Intl_2_H
#define WIN32_Windows_Win32_Intl_2_H
#include "win32/impl/Windows.Win32.Intl.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    int32_t __stdcall WIN32_IMPL_GetTextCharset(win32::Windows::Win32::Gdi::HDC hdc) noexcept;
    int32_t __stdcall WIN32_IMPL_GetTextCharsetInfo(win32::Windows::Win32::Gdi::HDC hdc, win32::Windows::Win32::Intl::FONTSIGNATURE* lpSig, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_TranslateCharsetInfo(uint32_t* lpSrc, win32::Windows::Win32::Intl::CHARSETINFO* lpCs, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_GetDateFormatA(uint32_t Locale, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpDate, int8_t* lpFormat, int8_t* lpDateStr, int32_t cchDate) noexcept;
    int32_t __stdcall WIN32_IMPL_GetDateFormatW(uint32_t Locale, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpDate, uint16_t* lpFormat, uint16_t* lpDateStr, int32_t cchDate) noexcept;
    int32_t __stdcall WIN32_IMPL_GetTimeFormatA(uint32_t Locale, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpTime, int8_t* lpFormat, int8_t* lpTimeStr, int32_t cchTime) noexcept;
    int32_t __stdcall WIN32_IMPL_GetTimeFormatW(uint32_t Locale, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpTime, uint16_t* lpFormat, uint16_t* lpTimeStr, int32_t cchTime) noexcept;
    int32_t __stdcall WIN32_IMPL_GetTimeFormatEx(uint16_t* lpLocaleName, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpTime, uint16_t* lpFormat, uint16_t* lpTimeStr, int32_t cchTime) noexcept;
    int32_t __stdcall WIN32_IMPL_GetDateFormatEx(uint16_t* lpLocaleName, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpDate, uint16_t* lpFormat, uint16_t* lpDateStr, int32_t cchDate, uint16_t* lpCalendar) noexcept;
    int32_t __stdcall WIN32_IMPL_GetDurationFormatEx(uint16_t* lpLocaleName, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpDuration, uint64_t ullDuration, uint16_t* lpFormat, uint16_t* lpDurationStr, int32_t cchDuration) noexcept;
    int32_t __stdcall WIN32_IMPL_CompareStringEx(uint16_t* lpLocaleName, uint32_t dwCmpFlags, uint16_t* lpString1, int32_t cchCount1, uint16_t* lpString2, int32_t cchCount2, win32::Windows::Win32::Intl::NLSVERSIONINFO* lpVersionInformation, void* lpReserved, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam) noexcept;
    int32_t __stdcall WIN32_IMPL_CompareStringOrdinal(uint16_t* lpString1, int32_t cchCount1, uint16_t* lpString2, int32_t cchCount2, win32::Windows::Win32::SystemServices::BOOL bIgnoreCase) noexcept;
    int32_t __stdcall WIN32_IMPL_CompareStringW(uint32_t Locale, uint32_t dwCmpFlags, uint16_t* lpString1, int32_t cchCount1, uint16_t* lpString2, int32_t cchCount2) noexcept;
    int32_t __stdcall WIN32_IMPL_FoldStringW(uint32_t dwMapFlags, uint16_t* lpSrcStr, int32_t cchSrc, uint16_t* lpDestStr, int32_t cchDest) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetStringTypeExW(uint32_t Locale, uint32_t dwInfoType, uint16_t* lpSrcStr, int32_t cchSrc, uint16_t* lpCharType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetStringTypeW(uint32_t dwInfoType, uint16_t* lpSrcStr, int32_t cchSrc, uint16_t* lpCharType) noexcept;
    int32_t __stdcall WIN32_IMPL_MultiByteToWideChar(uint32_t CodePage, uint32_t dwFlags, int8_t* lpMultiByteStr, int32_t cbMultiByte, uint16_t* lpWideCharStr, int32_t cchWideChar) noexcept;
    int32_t __stdcall WIN32_IMPL_WideCharToMultiByte(uint32_t CodePage, uint32_t dwFlags, uint16_t* lpWideCharStr, int32_t cchWideChar, int8_t* lpMultiByteStr, int32_t cbMultiByte, int8_t* lpDefaultChar, int32_t* lpUsedDefaultChar) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsValidCodePage(uint32_t CodePage) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetACP() noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOEMCP() noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetCPInfo(uint32_t CodePage, win32::Windows::Win32::Intl::CPINFO* lpCPInfo) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetCPInfoExA(uint32_t CodePage, uint32_t dwFlags, win32::Windows::Win32::Intl::CPINFOEXA* lpCPInfoEx) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetCPInfoExW(uint32_t CodePage, uint32_t dwFlags, win32::Windows::Win32::Intl::CPINFOEXW* lpCPInfoEx) noexcept;
    int32_t __stdcall WIN32_IMPL_CompareStringA(uint32_t Locale, uint32_t dwCmpFlags, int8_t* lpString1, int32_t cchCount1, int8_t* lpString2, int32_t cchCount2) noexcept;
    int32_t __stdcall WIN32_IMPL_FindNLSString(uint32_t Locale, uint32_t dwFindNLSStringFlags, uint16_t* lpStringSource, int32_t cchSource, uint16_t* lpStringValue, int32_t cchValue, int32_t* pcchFound) noexcept;
    int32_t __stdcall WIN32_IMPL_LCMapStringW(uint32_t Locale, uint32_t dwMapFlags, uint16_t* lpSrcStr, int32_t cchSrc, uint16_t* lpDestStr, int32_t cchDest) noexcept;
    int32_t __stdcall WIN32_IMPL_LCMapStringA(uint32_t Locale, uint32_t dwMapFlags, int8_t* lpSrcStr, int32_t cchSrc, int8_t* lpDestStr, int32_t cchDest) noexcept;
    int32_t __stdcall WIN32_IMPL_GetLocaleInfoW(uint32_t Locale, uint32_t LCType, uint16_t* lpLCData, int32_t cchData) noexcept;
    int32_t __stdcall WIN32_IMPL_GetLocaleInfoA(uint32_t Locale, uint32_t LCType, int8_t* lpLCData, int32_t cchData) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetLocaleInfoA(uint32_t Locale, uint32_t LCType, int8_t* lpLCData) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetLocaleInfoW(uint32_t Locale, uint32_t LCType, uint16_t* lpLCData) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCalendarInfoA(uint32_t Locale, uint32_t Calendar, uint32_t CalType, int8_t* lpCalData, int32_t cchData, uint32_t* lpValue) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCalendarInfoW(uint32_t Locale, uint32_t Calendar, uint32_t CalType, uint16_t* lpCalData, int32_t cchData, uint32_t* lpValue) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetCalendarInfoA(uint32_t Locale, uint32_t Calendar, uint32_t CalType, int8_t* lpCalData) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetCalendarInfoW(uint32_t Locale, uint32_t Calendar, uint32_t CalType, uint16_t* lpCalData) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsDBCSLeadByte(uint8_t TestChar) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsDBCSLeadByteEx(uint32_t CodePage, uint8_t TestChar) noexcept;
    uint32_t __stdcall WIN32_IMPL_LocaleNameToLCID(uint16_t* lpName, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_LCIDToLocaleName(uint32_t Locale, uint16_t* lpName, int32_t cchName, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_GetDurationFormat(uint32_t Locale, uint32_t dwFlags, win32::Windows::Win32::WindowsProgramming::SYSTEMTIME* lpDuration, uint64_t ullDuration, uint16_t* lpFormat, uint16_t* lpDurationStr, int32_t cchDuration) noexcept;
    int32_t __stdcall WIN32_IMPL_GetNumberFormatA(uint32_t Locale, uint32_t dwFlags, int8_t* lpValue, win32::Windows::Win32::Intl::NUMBERFMTA* lpFormat, int8_t* lpNumberStr, int32_t cchNumber) noexcept;
    int32_t __stdcall WIN32_IMPL_GetNumberFormatW(uint32_t Locale, uint32_t dwFlags, uint16_t* lpValue, win32::Windows::Win32::Intl::NUMBERFMTW* lpFormat, uint16_t* lpNumberStr, int32_t cchNumber) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCurrencyFormatA(uint32_t Locale, uint32_t dwFlags, int8_t* lpValue, win32::Windows::Win32::Intl::CURRENCYFMTA* lpFormat, int8_t* lpCurrencyStr, int32_t cchCurrency) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCurrencyFormatW(uint32_t Locale, uint32_t dwFlags, uint16_t* lpValue, win32::Windows::Win32::Intl::CURRENCYFMTW* lpFormat, uint16_t* lpCurrencyStr, int32_t cchCurrency) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumCalendarInfoA(win32::Windows::Win32::Intl::CALINFO_ENUMPROCA* lpCalInfoEnumProc, uint32_t Locale, uint32_t Calendar, uint32_t CalType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumCalendarInfoW(win32::Windows::Win32::Intl::CALINFO_ENUMPROCW* lpCalInfoEnumProc, uint32_t Locale, uint32_t Calendar, uint32_t CalType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumCalendarInfoExA(win32::Windows::Win32::Intl::CALINFO_ENUMPROCEXA* lpCalInfoEnumProcEx, uint32_t Locale, uint32_t Calendar, uint32_t CalType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumCalendarInfoExW(win32::Windows::Win32::Intl::CALINFO_ENUMPROCEXW* lpCalInfoEnumProcEx, uint32_t Locale, uint32_t Calendar, uint32_t CalType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumTimeFormatsA(win32::Windows::Win32::Intl::TIMEFMT_ENUMPROCA* lpTimeFmtEnumProc, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumTimeFormatsW(win32::Windows::Win32::Intl::TIMEFMT_ENUMPROCW* lpTimeFmtEnumProc, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumDateFormatsA(win32::Windows::Win32::Intl::DATEFMT_ENUMPROCA* lpDateFmtEnumProc, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumDateFormatsW(win32::Windows::Win32::Intl::DATEFMT_ENUMPROCW* lpDateFmtEnumProc, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumDateFormatsExA(win32::Windows::Win32::Intl::DATEFMT_ENUMPROCEXA* lpDateFmtEnumProcEx, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumDateFormatsExW(win32::Windows::Win32::Intl::DATEFMT_ENUMPROCEXW* lpDateFmtEnumProcEx, uint32_t Locale, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsValidLanguageGroup(uint32_t LanguageGroup, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetNLSVersion(uint32_t Function, uint32_t Locale, win32::Windows::Win32::Intl::NLSVERSIONINFO* lpVersionInformation) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsValidLocale(uint32_t Locale, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_GetGeoInfoA(int32_t Location, uint32_t GeoType, int8_t* lpGeoData, int32_t cchData, uint16_t LangId) noexcept;
    int32_t __stdcall WIN32_IMPL_GetGeoInfoW(int32_t Location, uint32_t GeoType, uint16_t* lpGeoData, int32_t cchData, uint16_t LangId) noexcept;
    int32_t __stdcall WIN32_IMPL_GetGeoInfoEx(uint16_t* location, uint32_t geoType, uint16_t* geoData, int32_t geoDataCount) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemGeoID(uint32_t GeoClass, int32_t ParentGeoId, win32::Windows::Win32::Intl::GEO_ENUMPROC* lpGeoEnumProc) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemGeoNames(uint32_t geoClass, win32::Windows::Win32::Intl::GEO_ENUMNAMEPROC* geoEnumProc, win32::Windows::Win32::WindowsAndMessaging::LPARAM data) noexcept;
    int32_t __stdcall WIN32_IMPL_GetUserGeoID(uint32_t GeoClass) noexcept;
    int32_t __stdcall WIN32_IMPL_GetUserDefaultGeoName(uint16_t* geoName, int32_t geoNameCount) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetUserGeoID(int32_t GeoId) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetUserGeoName(uint16_t* geoName) noexcept;
    uint32_t __stdcall WIN32_IMPL_ConvertDefaultLocale(uint32_t Locale) noexcept;
    uint16_t __stdcall WIN32_IMPL_GetSystemDefaultUILanguage() noexcept;
    uint32_t __stdcall WIN32_IMPL_GetThreadLocale() noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetThreadLocale(uint32_t Locale) noexcept;
    uint16_t __stdcall WIN32_IMPL_GetUserDefaultUILanguage() noexcept;
    uint16_t __stdcall WIN32_IMPL_GetUserDefaultLangID() noexcept;
    uint16_t __stdcall WIN32_IMPL_GetSystemDefaultLangID() noexcept;
    uint32_t __stdcall WIN32_IMPL_GetSystemDefaultLCID() noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUserDefaultLCID() noexcept;
    uint16_t __stdcall WIN32_IMPL_SetThreadUILanguage(uint16_t LangId) noexcept;
    uint16_t __stdcall WIN32_IMPL_GetThreadUILanguage() noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetProcessPreferredUILanguages(uint32_t dwFlags, uint32_t* pulNumLanguages, uint16_t* pwszLanguagesBuffer, uint32_t* pcchLanguagesBuffer) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetProcessPreferredUILanguages(uint32_t dwFlags, uint16_t* pwszLanguagesBuffer, uint32_t* pulNumLanguages) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetUserPreferredUILanguages(uint32_t dwFlags, uint32_t* pulNumLanguages, uint16_t* pwszLanguagesBuffer, uint32_t* pcchLanguagesBuffer) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetSystemPreferredUILanguages(uint32_t dwFlags, uint32_t* pulNumLanguages, uint16_t* pwszLanguagesBuffer, uint32_t* pcchLanguagesBuffer) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetThreadPreferredUILanguages(uint32_t dwFlags, uint32_t* pulNumLanguages, uint16_t* pwszLanguagesBuffer, uint32_t* pcchLanguagesBuffer) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetThreadPreferredUILanguages(uint32_t dwFlags, uint16_t* pwszLanguagesBuffer, uint32_t* pulNumLanguages) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetFileMUIInfo(uint32_t dwFlags, uint16_t* pcwszFilePath, win32::Windows::Win32::Intl::FILEMUIINFO* pFileMUIInfo, uint32_t* pcbFileMUIInfo) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetFileMUIPath(uint32_t dwFlags, uint16_t* pcwszFilePath, uint16_t* pwszLanguage, uint32_t* pcchLanguage, uint16_t* pwszFileMUIPath, uint32_t* pcchFileMUIPath, uint64_t* pululEnumerator) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetUILanguageInfo(uint32_t dwFlags, uint16_t* pwmszLanguage, uint16_t* pwszFallbackLanguages, uint32_t* pcchFallbackLanguages, uint32_t* pAttributes) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_SetThreadPreferredUILanguages2(uint32_t flags, uint16_t* languages, uint32_t* numLanguagesSet, win32::Windows::Win32::Intl::HSAVEDUILANGUAGES__** snapshot) noexcept;
    void __stdcall WIN32_IMPL_RestoreThreadPreferredUILanguages(win32::Windows::Win32::Intl::HSAVEDUILANGUAGES__* snapshot) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_NotifyUILanguageChange(uint32_t dwFlags, uint16_t* pcwstrNewLanguage, uint16_t* pcwstrPreviousLanguage, uint32_t dwReserved, uint32_t* pdwStatusRtrn) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetStringTypeExA(uint32_t Locale, uint32_t dwInfoType, int8_t* lpSrcStr, int32_t cchSrc, uint16_t* lpCharType) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetStringTypeA(uint32_t Locale, uint32_t dwInfoType, int8_t* lpSrcStr, int32_t cchSrc, uint16_t* lpCharType) noexcept;
    int32_t __stdcall WIN32_IMPL_FoldStringA(uint32_t dwMapFlags, int8_t* lpSrcStr, int32_t cchSrc, int8_t* lpDestStr, int32_t cchDest) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemLocalesA(win32::Windows::Win32::Intl::LOCALE_ENUMPROCA* lpLocaleEnumProc, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemLocalesW(win32::Windows::Win32::Intl::LOCALE_ENUMPROCW* lpLocaleEnumProc, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemLanguageGroupsA(win32::Windows::Win32::Intl::LANGUAGEGROUP_ENUMPROCA* lpLanguageGroupEnumProc, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemLanguageGroupsW(win32::Windows::Win32::Intl::LANGUAGEGROUP_ENUMPROCW* lpLanguageGroupEnumProc, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumLanguageGroupLocalesA(win32::Windows::Win32::Intl::LANGGROUPLOCALE_ENUMPROCA* lpLangGroupLocaleEnumProc, uint32_t LanguageGroup, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumLanguageGroupLocalesW(win32::Windows::Win32::Intl::LANGGROUPLOCALE_ENUMPROCW* lpLangGroupLocaleEnumProc, uint32_t LanguageGroup, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumUILanguagesA(win32::Windows::Win32::Intl::UILANGUAGE_ENUMPROCA* lpUILanguageEnumProc, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumUILanguagesW(win32::Windows::Win32::Intl::UILANGUAGE_ENUMPROCW* lpUILanguageEnumProc, uint32_t dwFlags, intptr_t lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemCodePagesA(win32::Windows::Win32::Intl::CODEPAGE_ENUMPROCA* lpCodePageEnumProc, uint32_t dwFlags) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemCodePagesW(win32::Windows::Win32::Intl::CODEPAGE_ENUMPROCW* lpCodePageEnumProc, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_IdnToAscii(uint32_t dwFlags, uint16_t* lpUnicodeCharStr, int32_t cchUnicodeChar, uint16_t* lpASCIICharStr, int32_t cchASCIIChar) noexcept;
    int32_t __stdcall WIN32_IMPL_IdnToUnicode(uint32_t dwFlags, uint16_t* lpASCIICharStr, int32_t cchASCIIChar, uint16_t* lpUnicodeCharStr, int32_t cchUnicodeChar) noexcept;
    int32_t __stdcall WIN32_IMPL_IdnToNameprepUnicode(uint32_t dwFlags, uint16_t* lpUnicodeCharStr, int32_t cchUnicodeChar, uint16_t* lpNameprepCharStr, int32_t cchNameprepChar) noexcept;
    int32_t __stdcall WIN32_IMPL_NormalizeString(win32::Windows::Win32::Intl::NORM_FORM NormForm, uint16_t* lpSrcString, int32_t cwSrcLength, uint16_t* lpDstString, int32_t cwDstLength) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsNormalizedString(win32::Windows::Win32::Intl::NORM_FORM NormForm, uint16_t* lpString, int32_t cwLength) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_VerifyScripts(uint32_t dwFlags, uint16_t* lpLocaleScripts, int32_t cchLocaleScripts, uint16_t* lpTestScripts, int32_t cchTestScripts) noexcept;
    int32_t __stdcall WIN32_IMPL_GetStringScripts(uint32_t dwFlags, uint16_t* lpString, int32_t cchString, uint16_t* lpScripts, int32_t cchScripts) noexcept;
    int32_t __stdcall WIN32_IMPL_GetLocaleInfoEx(uint16_t* lpLocaleName, uint32_t LCType, uint16_t* lpLCData, int32_t cchData) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCalendarInfoEx(uint16_t* lpLocaleName, uint32_t Calendar, uint16_t* lpReserved, uint32_t CalType, uint16_t* lpCalData, int32_t cchData, uint32_t* lpValue) noexcept;
    int32_t __stdcall WIN32_IMPL_GetNumberFormatEx(uint16_t* lpLocaleName, uint32_t dwFlags, uint16_t* lpValue, win32::Windows::Win32::Intl::NUMBERFMTW* lpFormat, uint16_t* lpNumberStr, int32_t cchNumber) noexcept;
    int32_t __stdcall WIN32_IMPL_GetCurrencyFormatEx(uint16_t* lpLocaleName, uint32_t dwFlags, uint16_t* lpValue, win32::Windows::Win32::Intl::CURRENCYFMTW* lpFormat, uint16_t* lpCurrencyStr, int32_t cchCurrency) noexcept;
    int32_t __stdcall WIN32_IMPL_GetUserDefaultLocaleName(uint16_t* lpLocaleName, int32_t cchLocaleName) noexcept;
    int32_t __stdcall WIN32_IMPL_GetSystemDefaultLocaleName(uint16_t* lpLocaleName, int32_t cchLocaleName) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsNLSDefinedString(uint32_t Function, uint32_t dwFlags, win32::Windows::Win32::Intl::NLSVERSIONINFO* lpVersionInformation, uint16_t* lpString, int32_t cchStr) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetNLSVersionEx(uint32_t function, uint16_t* lpLocaleName, win32::Windows::Win32::Intl::NLSVERSIONINFOEX* lpVersionInformation) noexcept;
    uint32_t __stdcall WIN32_IMPL_IsValidNLSVersion(uint32_t function, uint16_t* lpLocaleName, win32::Windows::Win32::Intl::NLSVERSIONINFOEX* lpVersionInformation) noexcept;
    int32_t __stdcall WIN32_IMPL_FindNLSStringEx(uint16_t* lpLocaleName, uint32_t dwFindNLSStringFlags, uint16_t* lpStringSource, int32_t cchSource, uint16_t* lpStringValue, int32_t cchValue, int32_t* pcchFound, win32::Windows::Win32::Intl::NLSVERSIONINFO* lpVersionInformation, void* lpReserved, win32::Windows::Win32::WindowsAndMessaging::LPARAM sortHandle) noexcept;
    int32_t __stdcall WIN32_IMPL_LCMapStringEx(uint16_t* lpLocaleName, uint32_t dwMapFlags, uint16_t* lpSrcStr, int32_t cchSrc, uint16_t* lpDestStr, int32_t cchDest, win32::Windows::Win32::Intl::NLSVERSIONINFO* lpVersionInformation, void* lpReserved, win32::Windows::Win32::WindowsAndMessaging::LPARAM sortHandle) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsValidLocaleName(uint16_t* lpLocaleName) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumCalendarInfoExEx(win32::Windows::Win32::Intl::CALINFO_ENUMPROCEXEX* pCalInfoEnumProcExEx, uint16_t* lpLocaleName, uint32_t Calendar, uint16_t* lpReserved, uint32_t CalType, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumDateFormatsExEx(win32::Windows::Win32::Intl::DATEFMT_ENUMPROCEXEX* lpDateFmtEnumProcExEx, uint16_t* lpLocaleName, uint32_t dwFlags, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumTimeFormatsEx(win32::Windows::Win32::Intl::TIMEFMT_ENUMPROCEX* lpTimeFmtEnumProcEx, uint16_t* lpLocaleName, uint32_t dwFlags, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_EnumSystemLocalesEx(win32::Windows::Win32::Intl::LOCALE_ENUMPROCEX* lpLocaleEnumProcEx, uint32_t dwFlags, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam, void* lpReserved) noexcept;
    int32_t __stdcall WIN32_IMPL_ResolveLocaleName(uint16_t* lpNameToResolve, uint16_t* lpLocaleName, int32_t cchLocaleName) noexcept;
    intptr_t __stdcall WIN32_IMPL_ImmInstallIMEA(int8_t* lpszIMEFileName, int8_t* lpszLayoutText) noexcept;
    intptr_t __stdcall WIN32_IMPL_ImmInstallIMEW(uint16_t* lpszIMEFileName, uint16_t* lpszLayoutText) noexcept;
    win32::Windows::Win32::WindowsAndMessaging::HWND __stdcall WIN32_IMPL_ImmGetDefaultIMEWnd(win32::Windows::Win32::WindowsAndMessaging::HWND param0) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetDescriptionA(intptr_t param0, int8_t* lpszDescription, uint32_t uBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetDescriptionW(intptr_t param0, uint16_t* lpszDescription, uint32_t uBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetIMEFileNameA(intptr_t param0, int8_t* lpszFileName, uint32_t uBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetIMEFileNameW(intptr_t param0, uint16_t* lpszFileName, uint32_t uBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetProperty(intptr_t param0, uint32_t param1) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmIsIME(intptr_t param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSimulateHotKey(win32::Windows::Win32::WindowsAndMessaging::HWND param0, uint32_t param1) noexcept;
    win32::Windows::Win32::Intl::HIMC__* __stdcall WIN32_IMPL_ImmCreateContext() noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmDestroyContext(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    win32::Windows::Win32::Intl::HIMC__* __stdcall WIN32_IMPL_ImmGetContext(win32::Windows::Win32::WindowsAndMessaging::HWND param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmReleaseContext(win32::Windows::Win32::WindowsAndMessaging::HWND param0, win32::Windows::Win32::Intl::HIMC__* param1) noexcept;
    win32::Windows::Win32::Intl::HIMC__* __stdcall WIN32_IMPL_ImmAssociateContext(win32::Windows::Win32::WindowsAndMessaging::HWND param0, win32::Windows::Win32::Intl::HIMC__* param1) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmAssociateContextEx(win32::Windows::Win32::WindowsAndMessaging::HWND param0, win32::Windows::Win32::Intl::HIMC__* param1, uint32_t param2) noexcept;
    int32_t __stdcall WIN32_IMPL_ImmGetCompositionStringA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, void* lpBuf, uint32_t dwBufLen) noexcept;
    int32_t __stdcall WIN32_IMPL_ImmGetCompositionStringW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, void* lpBuf, uint32_t dwBufLen) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCompositionStringA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t dwIndex, void* lpComp, uint32_t dwCompLen, void* lpRead, uint32_t dwReadLen) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCompositionStringW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t dwIndex, void* lpComp, uint32_t dwCompLen, void* lpRead, uint32_t dwReadLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetCandidateListCountA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t* lpdwListCount) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetCandidateListCountW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t* lpdwListCount) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetCandidateListA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t deIndex, win32::Windows::Win32::Intl::CANDIDATELIST* lpCandList, uint32_t dwBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetCandidateListW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t deIndex, win32::Windows::Win32::Intl::CANDIDATELIST* lpCandList, uint32_t dwBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetGuideLineA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t dwIndex, int8_t* lpBuf, uint32_t dwBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetGuideLineW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t dwIndex, uint16_t* lpBuf, uint32_t dwBufLen) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetConversionStatus(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t* lpfdwConversion, uint32_t* lpfdwSentence) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetConversionStatus(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, uint32_t param2) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetOpenStatus(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetOpenStatus(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::SystemServices::BOOL param1) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetCompositionFontA(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Shell::LOGFONTA* lplf) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetCompositionFontW(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Shell::LOGFONTW* lplf) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCompositionFontA(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Shell::LOGFONTA* lplf) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCompositionFontW(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Shell::LOGFONTW* lplf) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmConfigureIMEA(intptr_t param0, win32::Windows::Win32::WindowsAndMessaging::HWND param1, uint32_t param2, void* param3) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmConfigureIMEW(intptr_t param0, win32::Windows::Win32::WindowsAndMessaging::HWND param1, uint32_t param2, void* param3) noexcept;
    win32::Windows::Win32::SystemServices::LRESULT __stdcall WIN32_IMPL_ImmEscapeA(intptr_t param0, win32::Windows::Win32::Intl::HIMC__* param1, uint32_t param2, void* param3) noexcept;
    win32::Windows::Win32::SystemServices::LRESULT __stdcall WIN32_IMPL_ImmEscapeW(intptr_t param0, win32::Windows::Win32::Intl::HIMC__* param1, uint32_t param2, void* param3) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetConversionListA(intptr_t param0, win32::Windows::Win32::Intl::HIMC__* param1, int8_t* lpSrc, win32::Windows::Win32::Intl::CANDIDATELIST* lpDst, uint32_t dwBufLen, uint32_t uFlag) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetConversionListW(intptr_t param0, win32::Windows::Win32::Intl::HIMC__* param1, uint16_t* lpSrc, win32::Windows::Win32::Intl::CANDIDATELIST* lpDst, uint32_t dwBufLen, uint32_t uFlag) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmNotifyIME(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t dwAction, uint32_t dwIndex, uint32_t dwValue) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetStatusWindowPos(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::DisplayDevices::POINT* lpptPos) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetStatusWindowPos(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::DisplayDevices::POINT* lpptPos) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetCompositionWindow(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Intl::COMPOSITIONFORM* lpCompForm) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCompositionWindow(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Intl::COMPOSITIONFORM* lpCompForm) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetCandidateWindow(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, win32::Windows::Win32::Intl::CANDIDATEFORM* lpCandidate) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetCandidateWindow(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::Intl::CANDIDATEFORM* lpCandidate) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmIsUIMessageA(win32::Windows::Win32::WindowsAndMessaging::HWND param0, uint32_t param1, win32::Windows::Win32::WindowsAndMessaging::WPARAM param2, win32::Windows::Win32::WindowsAndMessaging::LPARAM param3) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmIsUIMessageW(win32::Windows::Win32::WindowsAndMessaging::HWND param0, uint32_t param1, win32::Windows::Win32::WindowsAndMessaging::WPARAM param2, win32::Windows::Win32::WindowsAndMessaging::LPARAM param3) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetVirtualKey(win32::Windows::Win32::WindowsAndMessaging::HWND param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmRegisterWordA(intptr_t param0, int8_t* lpszReading, uint32_t param2, int8_t* lpszRegister) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmRegisterWordW(intptr_t param0, uint16_t* lpszReading, uint32_t param2, uint16_t* lpszRegister) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmUnregisterWordA(intptr_t param0, int8_t* lpszReading, uint32_t param2, int8_t* lpszUnregister) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmUnregisterWordW(intptr_t param0, uint16_t* lpszReading, uint32_t param2, uint16_t* lpszUnregister) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetRegisterWordStyleA(intptr_t param0, uint32_t nItem, win32::Windows::Win32::Intl::STYLEBUFA* lpStyleBuf) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetRegisterWordStyleW(intptr_t param0, uint32_t nItem, win32::Windows::Win32::Intl::STYLEBUFW* lpStyleBuf) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmEnumRegisterWordA(intptr_t param0, win32::Windows::Win32::Intl::REGISTERWORDENUMPROCA* param1, int8_t* lpszReading, uint32_t param3, int8_t* lpszRegister, void* param5) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmEnumRegisterWordW(intptr_t param0, win32::Windows::Win32::Intl::REGISTERWORDENUMPROCW* param1, uint16_t* lpszReading, uint32_t param3, uint16_t* lpszRegister, void* param5) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmDisableIME(uint32_t param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmEnumInputContext(uint32_t idThread, win32::Windows::Win32::Intl::IMCENUMPROC* lpfn, win32::Windows::Win32::WindowsAndMessaging::LPARAM lParam) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetImeMenuItemsA(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, uint32_t param2, win32::Windows::Win32::Intl::IMEMENUITEMINFOA* lpImeParentMenu, win32::Windows::Win32::Intl::IMEMENUITEMINFOA* lpImeMenu, uint32_t dwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetImeMenuItemsW(win32::Windows::Win32::Intl::HIMC__* param0, uint32_t param1, uint32_t param2, win32::Windows::Win32::Intl::IMEMENUITEMINFOW* lpImeParentMenu, win32::Windows::Win32::Intl::IMEMENUITEMINFOW* lpImeMenu, uint32_t dwSize) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmDisableTextFrameService(uint32_t idThread) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmDisableLegacyIME() noexcept;
    int32_t __stdcall WIN32_IMPL_MappingGetServices(win32::Windows::Win32::Intl::MAPPING_ENUM_OPTIONS* pOptions, win32::Windows::Win32::Intl::MAPPING_SERVICE_INFO** prgServices, uint32_t* pdwServicesCount) noexcept;
    int32_t __stdcall WIN32_IMPL_MappingFreeServices(win32::Windows::Win32::Intl::MAPPING_SERVICE_INFO* pServiceInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_MappingRecognizeText(win32::Windows::Win32::Intl::MAPPING_SERVICE_INFO* pServiceInfo, uint16_t* pszText, uint32_t dwLength, uint32_t dwIndex, win32::Windows::Win32::Intl::MAPPING_OPTIONS* pOptions, win32::Windows::Win32::Intl::MAPPING_PROPERTY_BAG* pbag) noexcept;
    int32_t __stdcall WIN32_IMPL_MappingDoAction(win32::Windows::Win32::Intl::MAPPING_PROPERTY_BAG* pBag, uint32_t dwRangeIndex, uint16_t* pszActionId) noexcept;
    int32_t __stdcall WIN32_IMPL_MappingFreePropertyBag(win32::Windows::Win32::Intl::MAPPING_PROPERTY_BAG* pBag) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGetHotKey(uint32_t param0, uint32_t* lpuModifiers, uint32_t* lpuVKey, intptr_t* phKL) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmSetHotKey(uint32_t param0, uint32_t param1, uint32_t param2, intptr_t param3) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmGenerateMessage(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    win32::Windows::Win32::SystemServices::LRESULT __stdcall WIN32_IMPL_ImmRequestMessageA(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::WindowsAndMessaging::WPARAM param1, win32::Windows::Win32::WindowsAndMessaging::LPARAM param2) noexcept;
    win32::Windows::Win32::SystemServices::LRESULT __stdcall WIN32_IMPL_ImmRequestMessageW(win32::Windows::Win32::Intl::HIMC__* param0, win32::Windows::Win32::WindowsAndMessaging::WPARAM param1, win32::Windows::Win32::WindowsAndMessaging::LPARAM param2) noexcept;
    win32::Windows::Win32::WindowsAndMessaging::HWND __stdcall WIN32_IMPL_ImmCreateSoftKeyboard(uint32_t param0, win32::Windows::Win32::WindowsAndMessaging::HWND param1, int32_t param2, int32_t param3) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmDestroySoftKeyboard(win32::Windows::Win32::WindowsAndMessaging::HWND param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmShowSoftKeyboard(win32::Windows::Win32::WindowsAndMessaging::HWND param0, int32_t param1) noexcept;
    win32::Windows::Win32::Intl::INPUTCONTEXT* __stdcall WIN32_IMPL_ImmLockIMC(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmUnlockIMC(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetIMCLockCount(win32::Windows::Win32::Intl::HIMC__* param0) noexcept;
    win32::Windows::Win32::Intl::HIMCC__* __stdcall WIN32_IMPL_ImmCreateIMCC(uint32_t param0) noexcept;
    win32::Windows::Win32::Intl::HIMCC__* __stdcall WIN32_IMPL_ImmDestroyIMCC(win32::Windows::Win32::Intl::HIMCC__* param0) noexcept;
    void* __stdcall WIN32_IMPL_ImmLockIMCC(win32::Windows::Win32::Intl::HIMCC__* param0) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_ImmUnlockIMCC(win32::Windows::Win32::Intl::HIMCC__* param0) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetIMCCLockCount(win32::Windows::Win32::Intl::HIMCC__* param0) noexcept;
    win32::Windows::Win32::Intl::HIMCC__* __stdcall WIN32_IMPL_ImmReSizeIMCC(win32::Windows::Win32::Intl::HIMCC__* param0, uint32_t param1) noexcept;
    uint32_t __stdcall WIN32_IMPL_ImmGetIMCCSize(win32::Windows::Win32::Intl::HIMCC__* param0) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptFreeCache(void** psc) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptItemize(uint16_t* pwcInChars, int32_t cInChars, int32_t cMaxItems, win32::Windows::Win32::Intl::SCRIPT_CONTROL* psControl, win32::Windows::Win32::Intl::SCRIPT_STATE* psState, win32::Windows::Win32::Intl::SCRIPT_ITEM* pItems, int32_t* pcItems) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptLayout(int32_t cRuns, uint8_t* pbLevel, int32_t* piVisualToLogical, int32_t* piLogicalToVisual) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptShape(win32::Windows::Win32::Gdi::HDC hdc, void** psc, uint16_t* pwcChars, int32_t cChars, int32_t cMaxGlyphs, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint16_t* pwOutGlyphs, uint16_t* pwLogClust, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* pcGlyphs) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptPlace(win32::Windows::Win32::Gdi::HDC hdc, void** psc, uint16_t* pwGlyphs, int32_t cGlyphs, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, int32_t* piAdvance, win32::Windows::Win32::Intl::GOFFSET* pGoffset, win32::Windows::Win32::Gdi::ABC* pABC) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptTextOut(intptr_t hdc, void** psc, int32_t x, int32_t y, uint32_t fuOptions, win32::Windows::Win32::DisplayDevices::RECT* lprc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint16_t* pwcReserved, int32_t iReserved, uint16_t* pwGlyphs, int32_t cGlyphs, int32_t* piAdvance, int32_t* piJustify, win32::Windows::Win32::Intl::GOFFSET* pGoffset) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptJustify(win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* piAdvance, int32_t cGlyphs, int32_t iDx, int32_t iMinKashida, int32_t* piJustify) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptBreak(uint16_t* pwcChars, int32_t cChars, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, win32::Windows::Win32::Intl::SCRIPT_LOGATTR* psla) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptCPtoX(int32_t iCP, win32::Windows::Win32::SystemServices::BOOL fTrailing, int32_t cChars, int32_t cGlyphs, uint16_t* pwLogClust, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* piAdvance, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, int32_t* piX) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptXtoCP(int32_t iX, int32_t cChars, int32_t cGlyphs, uint16_t* pwLogClust, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* piAdvance, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, int32_t* piCP, int32_t* piTrailing) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetLogicalWidths(win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, int32_t cChars, int32_t cGlyphs, int32_t* piGlyphWidth, uint16_t* pwLogClust, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* piDx) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptApplyLogicalWidth(int32_t* piDx, int32_t cChars, int32_t cGlyphs, uint16_t* pwLogClust, win32::Windows::Win32::Intl::SCRIPT_VISATTR* psva, int32_t* piAdvance, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, win32::Windows::Win32::Gdi::ABC* pABC, int32_t* piJustify) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetCMap(win32::Windows::Win32::Gdi::HDC hdc, void** psc, uint16_t* pwcInChars, int32_t cChars, uint32_t dwFlags, uint16_t* pwOutGlyphs) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetGlyphABCWidth(win32::Windows::Win32::Gdi::HDC hdc, void** psc, uint16_t wGlyph, win32::Windows::Win32::Gdi::ABC* pABC) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetProperties(win32::Windows::Win32::Intl::SCRIPT_PROPERTIES*** ppSp, int32_t* piNumScripts) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetFontProperties(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_FONTPROPERTIES* sfp) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptCacheGetHeight(win32::Windows::Win32::Gdi::HDC hdc, void** psc, int32_t* tmHeight) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringAnalyse(win32::Windows::Win32::Gdi::HDC hdc, void* pString, int32_t cString, int32_t cGlyphs, int32_t iCharset, uint32_t dwFlags, int32_t iReqWidth, win32::Windows::Win32::Intl::SCRIPT_CONTROL* psControl, win32::Windows::Win32::Intl::SCRIPT_STATE* psState, int32_t* piDx, win32::Windows::Win32::Intl::SCRIPT_TABDEF* pTabdef, uint8_t* pbInClass, void** pssa) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringFree(void** pssa) noexcept;
    win32::Windows::Win32::DisplayDevices::SIZE* __stdcall WIN32_IMPL_ScriptString_pSize(void* ssa) noexcept;
    int32_t* __stdcall WIN32_IMPL_ScriptString_pcOutChars(void* ssa) noexcept;
    win32::Windows::Win32::Intl::SCRIPT_LOGATTR* __stdcall WIN32_IMPL_ScriptString_pLogAttr(void* ssa) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringGetOrder(void* ssa, uint32_t* puOrder) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringCPtoX(void* ssa, int32_t icp, win32::Windows::Win32::SystemServices::BOOL fTrailing, int32_t* pX) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringXtoCP(void* ssa, int32_t iX, int32_t* piCh, int32_t* piTrailing) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringGetLogicalWidths(void* ssa, int32_t* piDx) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringValidate(void* ssa) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptStringOut(void* ssa, int32_t iX, int32_t iY, uint32_t uOptions, win32::Windows::Win32::DisplayDevices::RECT* prc, int32_t iMinSel, int32_t iMaxSel, win32::Windows::Win32::SystemServices::BOOL fDisabled) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptIsComplex(uint16_t* pwcInChars, int32_t cInChars, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptRecordDigitSubstitution(uint32_t Locale, win32::Windows::Win32::Intl::SCRIPT_DIGITSUBSTITUTE* psds) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptApplyDigitSubstitution(win32::Windows::Win32::Intl::SCRIPT_DIGITSUBSTITUTE* psds, win32::Windows::Win32::Intl::SCRIPT_CONTROL* psc, win32::Windows::Win32::Intl::SCRIPT_STATE* pss) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptShapeOpenType(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, int32_t* rcRangeChars, win32::Windows::Win32::Intl::textrange_properties** rpRangeProperties, int32_t cRanges, uint16_t* pwcChars, int32_t cChars, int32_t cMaxGlyphs, uint16_t* pwLogClust, win32::Windows::Win32::Intl::script_charprop* pCharProps, uint16_t* pwOutGlyphs, win32::Windows::Win32::Intl::script_glyphprop* pOutGlyphProps, int32_t* pcGlyphs) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptPlaceOpenType(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, int32_t* rcRangeChars, win32::Windows::Win32::Intl::textrange_properties** rpRangeProperties, int32_t cRanges, uint16_t* pwcChars, uint16_t* pwLogClust, win32::Windows::Win32::Intl::script_charprop* pCharProps, int32_t cChars, uint16_t* pwGlyphs, win32::Windows::Win32::Intl::script_glyphprop* pGlyphProps, int32_t cGlyphs, int32_t* piAdvance, win32::Windows::Win32::Intl::GOFFSET* pGoffset, win32::Windows::Win32::Gdi::ABC* pABC) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptItemizeOpenType(uint16_t* pwcInChars, int32_t cInChars, int32_t cMaxItems, win32::Windows::Win32::Intl::SCRIPT_CONTROL* psControl, win32::Windows::Win32::Intl::SCRIPT_STATE* psState, win32::Windows::Win32::Intl::SCRIPT_ITEM* pItems, uint32_t* pScriptTags, int32_t* pcItems) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetFontScriptTags(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, int32_t cMaxTags, uint32_t* pScriptTags, int32_t* pcTags) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetFontLanguageTags(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, int32_t cMaxTags, uint32_t* pLangsysTags, int32_t* pcTags) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetFontFeatureTags(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, int32_t cMaxTags, uint32_t* pFeatureTags, int32_t* pcTags) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptGetFontAlternateGlyphs(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, uint32_t tagFeature, uint16_t wGlyphId, int32_t cMaxAlternates, uint16_t* pAlternateGlyphs, int32_t* pcAlternates) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptSubstituteSingleGlyph(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, uint32_t tagFeature, int32_t lParameter, uint16_t wGlyphId, uint16_t* pwOutGlyphId) noexcept;
    int32_t __stdcall WIN32_IMPL_ScriptPositionSingleGlyph(win32::Windows::Win32::Gdi::HDC hdc, void** psc, win32::Windows::Win32::Intl::SCRIPT_ANALYSIS* psa, uint32_t tagScript, uint32_t tagLangSys, uint32_t tagFeature, int32_t lParameter, uint16_t wGlyphId, int32_t iAdvance, win32::Windows::Win32::Intl::GOFFSET GOffset, int32_t* piOutAdvance, win32::Windows::Win32::Intl::GOFFSET* pOutGoffset) noexcept;
    int32_t __stdcall WIN32_IMPL_utf8_nextCharSafeBody(uint8_t* s, int32_t* pi, int32_t length, int32_t c, int8_t strict) noexcept;
    int32_t __stdcall WIN32_IMPL_utf8_appendCharSafeBody(uint8_t* s, int32_t i, int32_t length, int32_t c, int8_t* pIsError) noexcept;
    int32_t __stdcall WIN32_IMPL_utf8_prevCharSafeBody(uint8_t* s, int32_t start, int32_t* pi, int32_t c, int8_t strict) noexcept;
    int32_t __stdcall WIN32_IMPL_utf8_back1SafeBody(uint8_t* s, int32_t start, int32_t i) noexcept;
    void __stdcall WIN32_IMPL_u_versionFromString(uint8_t* versionArray, int8_t* versionString) noexcept;
    void __stdcall WIN32_IMPL_u_versionFromUString(uint8_t* versionArray, uint16_t* versionString) noexcept;
    void __stdcall WIN32_IMPL_u_versionToString(uint8_t* versionArray, int8_t* versionString) noexcept;
    void __stdcall WIN32_IMPL_u_getVersion(uint8_t* versionArray) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_errorName(win32::Windows::Win32::Intl::UErrorCode code) noexcept;
    void __stdcall WIN32_IMPL_utrace_setLevel(int32_t traceLevel) noexcept;
    int32_t __stdcall WIN32_IMPL_utrace_getLevel() noexcept;
    void __stdcall WIN32_IMPL_utrace_setFunctions(void* context, win32::Windows::Win32::Intl::UTraceEntry** e, win32::Windows::Win32::Intl::UTraceExit** x, win32::Windows::Win32::Intl::UTraceData** d) noexcept;
    void __stdcall WIN32_IMPL_utrace_getFunctions(void** context, win32::Windows::Win32::Intl::UTraceEntry*** e, win32::Windows::Win32::Intl::UTraceExit*** x, win32::Windows::Win32::Intl::UTraceData*** d) noexcept;
    int32_t __stdcall WIN32_IMPL_utrace_vformat(int8_t* outBuf, int32_t capacity, int32_t indent, int8_t* fmt, int8_t* args) noexcept;
    int32_t __stdcall WIN32_IMPL_utrace_format(int8_t* outBuf, int32_t capacity, int32_t indent, int8_t* fmt) noexcept;
    int8_t* __stdcall WIN32_IMPL_utrace_functionName(int32_t fnNumber) noexcept;
    int32_t __stdcall WIN32_IMPL_u_shapeArabic(uint16_t* source, int32_t sourceLength, uint16_t* dest, int32_t destSize, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uscript_getCode(int8_t* nameOrAbbrOrLocale, win32::Windows::Win32::Intl::UScriptCode* fillIn, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t* __stdcall WIN32_IMPL_uscript_getName(win32::Windows::Win32::Intl::UScriptCode scriptCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_uscript_getShortName(win32::Windows::Win32::Intl::UScriptCode scriptCode) noexcept;
    win32::Windows::Win32::Intl::UScriptCode __stdcall WIN32_IMPL_uscript_getScript(int32_t codepoint, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t __stdcall WIN32_IMPL_uscript_hasScript(int32_t c, win32::Windows::Win32::Intl::UScriptCode sc) noexcept;
    int32_t __stdcall WIN32_IMPL_uscript_getScriptExtensions(int32_t c, win32::Windows::Win32::Intl::UScriptCode* scripts, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* errorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uscript_getSampleString(win32::Windows::Win32::Intl::UScriptCode script, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UScriptUsage __stdcall WIN32_IMPL_uscript_getUsage(win32::Windows::Win32::Intl::UScriptCode script) noexcept;
    int8_t __stdcall WIN32_IMPL_uscript_isRightToLeft(win32::Windows::Win32::Intl::UScriptCode script) noexcept;
    int8_t __stdcall WIN32_IMPL_uscript_breaksBetweenLetters(win32::Windows::Win32::Intl::UScriptCode script) noexcept;
    int8_t __stdcall WIN32_IMPL_uscript_isCased(win32::Windows::Win32::Intl::UScriptCode script) noexcept;
    int32_t __stdcall WIN32_IMPL_uiter_current32(win32::Windows::Win32::Intl::UCharIterator* iter) noexcept;
    int32_t __stdcall WIN32_IMPL_uiter_next32(win32::Windows::Win32::Intl::UCharIterator* iter) noexcept;
    int32_t __stdcall WIN32_IMPL_uiter_previous32(win32::Windows::Win32::Intl::UCharIterator* iter) noexcept;
    uint32_t __stdcall WIN32_IMPL_uiter_getState(win32::Windows::Win32::Intl::UCharIterator* iter) noexcept;
    void __stdcall WIN32_IMPL_uiter_setState(win32::Windows::Win32::Intl::UCharIterator* iter, uint32_t state, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_uiter_setString(win32::Windows::Win32::Intl::UCharIterator* iter, uint16_t* s, int32_t length) noexcept;
    void __stdcall WIN32_IMPL_uiter_setUTF16BE(win32::Windows::Win32::Intl::UCharIterator* iter, int8_t* s, int32_t length) noexcept;
    void __stdcall WIN32_IMPL_uiter_setUTF8(win32::Windows::Win32::Intl::UCharIterator* iter, int8_t* s, int32_t length) noexcept;
    void __stdcall WIN32_IMPL_uenum_close(win32::Windows::Win32::Intl::UEnumeration* en) noexcept;
    int32_t __stdcall WIN32_IMPL_uenum_count(win32::Windows::Win32::Intl::UEnumeration* en, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_uenum_unext(win32::Windows::Win32::Intl::UEnumeration* en, int32_t* resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_uenum_next(win32::Windows::Win32::Intl::UEnumeration* en, int32_t* resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uenum_reset(win32::Windows::Win32::Intl::UEnumeration* en, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uenum_openUCharStringsEnumeration(uint16_t** strings, int32_t count, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uenum_openCharStringsEnumeration(int8_t** strings, int32_t count, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_getDefault() noexcept;
    void __stdcall WIN32_IMPL_uloc_setDefault(int8_t* localeID, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getLanguage(int8_t* localeID, int8_t* language, int32_t languageCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getScript(int8_t* localeID, int8_t* script, int32_t scriptCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getCountry(int8_t* localeID, int8_t* country, int32_t countryCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getVariant(int8_t* localeID, int8_t* variant, int32_t variantCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getName(int8_t* localeID, int8_t* name, int32_t nameCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_canonicalize(int8_t* localeID, int8_t* name, int32_t nameCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_getISO3Language(int8_t* localeID) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_getISO3Country(int8_t* localeID) noexcept;
    uint32_t __stdcall WIN32_IMPL_uloc_getLCID(int8_t* localeID) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayLanguage(int8_t* locale, int8_t* displayLocale, uint16_t* language, int32_t languageCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayScript(int8_t* locale, int8_t* displayLocale, uint16_t* script, int32_t scriptCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayCountry(int8_t* locale, int8_t* displayLocale, uint16_t* country, int32_t countryCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayVariant(int8_t* locale, int8_t* displayLocale, uint16_t* variant, int32_t variantCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayKeyword(int8_t* keyword, int8_t* displayLocale, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayKeywordValue(int8_t* locale, int8_t* keyword, int8_t* displayLocale, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getDisplayName(int8_t* localeID, int8_t* inLocaleID, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_getAvailable(int32_t n) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_countAvailable() noexcept;
    int8_t** __stdcall WIN32_IMPL_uloc_getISOLanguages() noexcept;
    int8_t** __stdcall WIN32_IMPL_uloc_getISOCountries() noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getParent(int8_t* localeID, int8_t* parent, int32_t parentCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getBaseName(int8_t* localeID, int8_t* name, int32_t nameCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uloc_openKeywords(int8_t* localeID, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getKeywordValue(int8_t* localeID, int8_t* keywordName, int8_t* buffer, int32_t bufferCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_setKeywordValue(int8_t* keywordName, int8_t* keywordValue, int8_t* buffer, int32_t bufferCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uloc_isRightToLeft(int8_t* locale) noexcept;
    win32::Windows::Win32::Intl::ULayoutType __stdcall WIN32_IMPL_uloc_getCharacterOrientation(int8_t* localeId, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::ULayoutType __stdcall WIN32_IMPL_uloc_getLineOrientation(int8_t* localeId, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_acceptLanguageFromHTTP(int8_t* result, int32_t resultAvailable, win32::Windows::Win32::Intl::UAcceptResult* outResult, int8_t* httpAcceptLanguage, win32::Windows::Win32::Intl::UEnumeration* availableLocales, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_acceptLanguage(int8_t* result, int32_t resultAvailable, win32::Windows::Win32::Intl::UAcceptResult* outResult, int8_t** acceptList, int32_t acceptListCount, win32::Windows::Win32::Intl::UEnumeration* availableLocales, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_getLocaleForLCID(uint32_t hostID, int8_t* locale, int32_t localeCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_addLikelySubtags(int8_t* localeID, int8_t* maximizedLocaleID, int32_t maximizedLocaleIDCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_minimizeSubtags(int8_t* localeID, int8_t* minimizedLocaleID, int32_t minimizedLocaleIDCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_forLanguageTag(int8_t* langtag, int8_t* localeID, int32_t localeIDCapacity, int32_t* parsedLength, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_uloc_toLanguageTag(int8_t* localeID, int8_t* langtag, int32_t langtagCapacity, int8_t strict, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_toUnicodeLocaleKey(int8_t* keyword) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_toUnicodeLocaleType(int8_t* keyword, int8_t* value) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_toLegacyKey(int8_t* keyword) noexcept;
    int8_t* __stdcall WIN32_IMPL_uloc_toLegacyType(int8_t* keyword, int8_t* value) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_open(int8_t* packageName, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_openDirect(int8_t* packageName, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_openU(uint16_t* packageName, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ures_close(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    void __stdcall WIN32_IMPL_ures_getVersion(win32::Windows::Win32::Intl::UResourceBundle* resB, uint8_t* versionInfo) noexcept;
    int8_t* __stdcall WIN32_IMPL_ures_getLocaleByType(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ures_getString(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ures_getUTF8String(win32::Windows::Win32::Intl::UResourceBundle* resB, int8_t* dest, int32_t* length, int8_t forceCopy, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint8_t* __stdcall WIN32_IMPL_ures_getBinary(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t* __stdcall WIN32_IMPL_ures_getIntVector(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint32_t __stdcall WIN32_IMPL_ures_getUInt(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ures_getInt(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ures_getSize(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    win32::Windows::Win32::Intl::UResType __stdcall WIN32_IMPL_ures_getType(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    int8_t* __stdcall WIN32_IMPL_ures_getKey(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    void __stdcall WIN32_IMPL_ures_resetIterator(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    int8_t __stdcall WIN32_IMPL_ures_hasNext(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_getNextResource(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, win32::Windows::Win32::Intl::UResourceBundle* fillIn, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ures_getNextString(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t* len, int8_t** key, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_getByIndex(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t indexR, win32::Windows::Win32::Intl::UResourceBundle* fillIn, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ures_getStringByIndex(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int32_t indexS, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ures_getUTF8StringByIndex(win32::Windows::Win32::Intl::UResourceBundle* resB, int32_t stringIndex, int8_t* dest, int32_t* pLength, int8_t forceCopy, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_ures_getByKey(win32::Windows::Win32::Intl::UResourceBundle* resourceBundle, int8_t* key, win32::Windows::Win32::Intl::UResourceBundle* fillIn, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ures_getStringByKey(win32::Windows::Win32::Intl::UResourceBundle* resB, int8_t* key, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ures_getUTF8StringByKey(win32::Windows::Win32::Intl::UResourceBundle* resB, int8_t* key, int8_t* dest, int32_t* pLength, int8_t forceCopy, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ures_openAvailableLocales(int8_t* packageName, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::ULocaleDisplayNames* __stdcall WIN32_IMPL_uldn_open(int8_t* locale, win32::Windows::Win32::Intl::UDialectHandling dialectHandling, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_uldn_close(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn) noexcept;
    int8_t* __stdcall WIN32_IMPL_uldn_getLocale(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn) noexcept;
    win32::Windows::Win32::Intl::UDialectHandling __stdcall WIN32_IMPL_uldn_getDialectHandling(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_localeDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* locale, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_languageDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* lang, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_scriptDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* script, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_scriptCodeDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, win32::Windows::Win32::Intl::UScriptCode scriptCode, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_regionDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* region, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_variantDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* variant, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_keyDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* key, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uldn_keyValueDisplayName(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, int8_t* key, int8_t* value, uint16_t* result, int32_t maxResultSize, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::ULocaleDisplayNames* __stdcall WIN32_IMPL_uldn_openForContext(int8_t* locale, win32::Windows::Win32::Intl::UDisplayContext* contexts, int32_t length, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UDisplayContext __stdcall WIN32_IMPL_uldn_getContext(win32::Windows::Win32::Intl::ULocaleDisplayNames* ldn, win32::Windows::Win32::Intl::UDisplayContextType type, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_forLocale(int8_t* locale, uint16_t* buff, int32_t buffCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void* __stdcall WIN32_IMPL_ucurr_register(uint16_t* isoCode, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucurr_unregister(void* key, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ucurr_getName(uint16_t* currency, int8_t* locale, win32::Windows::Win32::Intl::UCurrNameStyle nameStyle, int8_t* isChoiceFormat, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ucurr_getPluralName(uint16_t* currency, int8_t* locale, int8_t* isChoiceFormat, int8_t* pluralCount, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_getDefaultFractionDigits(uint16_t* currency, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_getDefaultFractionDigitsForUsage(uint16_t* currency, win32::Windows::Win32::Intl::UCurrencyUsage usage, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    double __stdcall WIN32_IMPL_ucurr_getRoundingIncrement(uint16_t* currency, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    double __stdcall WIN32_IMPL_ucurr_getRoundingIncrementForUsage(uint16_t* currency, win32::Windows::Win32::Intl::UCurrencyUsage usage, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucurr_openISOCurrencies(uint32_t currType, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t __stdcall WIN32_IMPL_ucurr_isAvailable(uint16_t* isoCode, double from, double to, win32::Windows::Win32::Intl::UErrorCode* errorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_countCurrencies(int8_t* locale, double date, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_forLocaleAndDate(int8_t* locale, double date, int32_t index, uint16_t* buff, int32_t buffCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucurr_getKeywordValuesForLocale(int8_t* key, int8_t* locale, int8_t commonlyUsed, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucurr_getNumericCode(uint16_t* currency) noexcept;
    void __stdcall WIN32_IMPL_UCNV_FROM_U_CALLBACK_STOP(void* context, win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* fromUArgs, uint16_t* codeUnits, int32_t length, int32_t codePoint, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_TO_U_CALLBACK_STOP(void* context, win32::Windows::Win32::Intl::UConverterToUnicodeArgs* toUArgs, int8_t* codeUnits, int32_t length, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_FROM_U_CALLBACK_SKIP(void* context, win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* fromUArgs, uint16_t* codeUnits, int32_t length, int32_t codePoint, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_FROM_U_CALLBACK_SUBSTITUTE(void* context, win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* fromUArgs, uint16_t* codeUnits, int32_t length, int32_t codePoint, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_FROM_U_CALLBACK_ESCAPE(void* context, win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* fromUArgs, uint16_t* codeUnits, int32_t length, int32_t codePoint, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_TO_U_CALLBACK_SKIP(void* context, win32::Windows::Win32::Intl::UConverterToUnicodeArgs* toUArgs, int8_t* codeUnits, int32_t length, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_TO_U_CALLBACK_SUBSTITUTE(void* context, win32::Windows::Win32::Intl::UConverterToUnicodeArgs* toUArgs, int8_t* codeUnits, int32_t length, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_UCNV_TO_U_CALLBACK_ESCAPE(void* context, win32::Windows::Win32::Intl::UConverterToUnicodeArgs* toUArgs, int8_t* codeUnits, int32_t length, win32::Windows::Win32::Intl::UConverterCallbackReason reason, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_compareNames(int8_t* name1, int8_t* name2) noexcept;
    win32::Windows::Win32::Intl::UConverter* __stdcall WIN32_IMPL_ucnv_open(int8_t* converterName, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverter* __stdcall WIN32_IMPL_ucnv_openU(uint16_t* name, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverter* __stdcall WIN32_IMPL_ucnv_openCCSID(int32_t codepage, win32::Windows::Win32::Intl::UConverterPlatform platform, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverter* __stdcall WIN32_IMPL_ucnv_openPackage(int8_t* packageName, int8_t* converterName, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverter* __stdcall WIN32_IMPL_ucnv_safeClone(win32::Windows::Win32::Intl::UConverter* cnv, void* stackBuffer, int32_t* pBufferSize, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucnv_close(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getSubstChars(win32::Windows::Win32::Intl::UConverter* converter, int8_t* subChars, int8_t* len, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_setSubstChars(win32::Windows::Win32::Intl::UConverter* converter, int8_t* subChars, int8_t len, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_setSubstString(win32::Windows::Win32::Intl::UConverter* cnv, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getInvalidChars(win32::Windows::Win32::Intl::UConverter* converter, int8_t* errBytes, int8_t* len, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getInvalidUChars(win32::Windows::Win32::Intl::UConverter* converter, uint16_t* errUChars, int8_t* len, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_reset(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    void __stdcall WIN32_IMPL_ucnv_resetToUnicode(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    void __stdcall WIN32_IMPL_ucnv_resetFromUnicode(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    int8_t __stdcall WIN32_IMPL_ucnv_getMaxCharSize(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    int8_t __stdcall WIN32_IMPL_ucnv_getMinCharSize(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_getDisplayName(win32::Windows::Win32::Intl::UConverter* converter, int8_t* displayLocale, uint16_t* displayName, int32_t displayNameCapacity, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getName(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_getCCSID(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverterPlatform __stdcall WIN32_IMPL_ucnv_getPlatform(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    win32::Windows::Win32::Intl::UConverterType __stdcall WIN32_IMPL_ucnv_getType(win32::Windows::Win32::Intl::UConverter* converter) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getStarters(win32::Windows::Win32::Intl::UConverter* converter, int8_t* starters, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getUnicodeSet(win32::Windows::Win32::Intl::UConverter* cnv, win32::Windows::Win32::Intl::USet* setFillIn, win32::Windows::Win32::Intl::UConverterUnicodeSet whichSet, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getToUCallBack(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UConverterToUCallback** action, void** context) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getFromUCallBack(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UConverterFromUCallback** action, void** context) noexcept;
    void __stdcall WIN32_IMPL_ucnv_setToUCallBack(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UConverterToUCallback* newAction, void* newContext, win32::Windows::Win32::Intl::UConverterToUCallback** oldAction, void** oldContext, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_setFromUCallBack(win32::Windows::Win32::Intl::UConverter* converter, win32::Windows::Win32::Intl::UConverterFromUCallback* newAction, void* newContext, win32::Windows::Win32::Intl::UConverterFromUCallback** oldAction, void** oldContext, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_fromUnicode(win32::Windows::Win32::Intl::UConverter* converter, int8_t** target, int8_t* targetLimit, uint16_t** source, uint16_t* sourceLimit, int32_t* offsets, int8_t flush, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_toUnicode(win32::Windows::Win32::Intl::UConverter* converter, uint16_t** target, uint16_t* targetLimit, int8_t** source, int8_t* sourceLimit, int32_t* offsets, int8_t flush, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_fromUChars(win32::Windows::Win32::Intl::UConverter* cnv, int8_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_toUChars(win32::Windows::Win32::Intl::UConverter* cnv, uint16_t* dest, int32_t destCapacity, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_getNextUChar(win32::Windows::Win32::Intl::UConverter* converter, int8_t** source, int8_t* sourceLimit, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_convertEx(win32::Windows::Win32::Intl::UConverter* targetCnv, win32::Windows::Win32::Intl::UConverter* sourceCnv, int8_t** target, int8_t* targetLimit, int8_t** source, int8_t* sourceLimit, uint16_t* pivotStart, uint16_t** pivotSource, uint16_t** pivotTarget, uint16_t* pivotLimit, int8_t reset, int8_t flush, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_convert(int8_t* toConverterName, int8_t* fromConverterName, int8_t* target, int32_t targetCapacity, int8_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_toAlgorithmic(win32::Windows::Win32::Intl::UConverterType algorithmicType, win32::Windows::Win32::Intl::UConverter* cnv, int8_t* target, int32_t targetCapacity, int8_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_fromAlgorithmic(win32::Windows::Win32::Intl::UConverter* cnv, win32::Windows::Win32::Intl::UConverterType algorithmicType, int8_t* target, int32_t targetCapacity, int8_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_flushCache() noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_countAvailable() noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getAvailableName(int32_t n) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucnv_openAllNames(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t __stdcall WIN32_IMPL_ucnv_countAliases(int8_t* alias, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getAlias(int8_t* alias, uint16_t n, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ucnv_getAliases(int8_t* alias, int8_t** aliases, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucnv_openStandardNames(int8_t* convName, int8_t* standard, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t __stdcall WIN32_IMPL_ucnv_countStandards() noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getStandard(uint16_t n, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getStandardName(int8_t* name, int8_t* standard, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getCanonicalName(int8_t* alias, int8_t* standard, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_getDefaultName() noexcept;
    void __stdcall WIN32_IMPL_ucnv_setDefaultName(int8_t* name) noexcept;
    void __stdcall WIN32_IMPL_ucnv_fixFileSeparator(win32::Windows::Win32::Intl::UConverter* cnv, uint16_t* source, int32_t sourceLen) noexcept;
    int8_t __stdcall WIN32_IMPL_ucnv_isAmbiguous(win32::Windows::Win32::Intl::UConverter* cnv) noexcept;
    void __stdcall WIN32_IMPL_ucnv_setFallback(win32::Windows::Win32::Intl::UConverter* cnv, int8_t usesFallback) noexcept;
    int8_t __stdcall WIN32_IMPL_ucnv_usesFallback(win32::Windows::Win32::Intl::UConverter* cnv) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucnv_detectUnicodeSignature(int8_t* source, int32_t sourceLength, int32_t* signatureLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_fromUCountPending(win32::Windows::Win32::Intl::UConverter* cnv, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnv_toUCountPending(win32::Windows::Win32::Intl::UConverter* cnv, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucnv_isFixedWidth(win32::Windows::Win32::Intl::UConverter* cnv, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucnv_cbFromUWriteBytes(win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* args, int8_t* source, int32_t length, int32_t offsetIndex, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_cbFromUWriteSub(win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* args, int32_t offsetIndex, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_cbFromUWriteUChars(win32::Windows::Win32::Intl::UConverterFromUnicodeArgs* args, uint16_t** source, uint16_t* sourceLimit, int32_t offsetIndex, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_cbToUWriteUChars(win32::Windows::Win32::Intl::UConverterToUnicodeArgs* args, uint16_t* source, int32_t length, int32_t offsetIndex, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_ucnv_cbToUWriteSub(win32::Windows::Win32::Intl::UConverterToUnicodeArgs* args, int32_t offsetIndex, win32::Windows::Win32::Intl::UErrorCode* err) noexcept;
    void __stdcall WIN32_IMPL_u_init(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_cleanup() noexcept;
    void __stdcall WIN32_IMPL_u_setMemoryFunctions(void* context, win32::Windows::Win32::Intl::UMemAllocFn** a, win32::Windows::Win32::Intl::UMemReallocFn** r, win32::Windows::Win32::Intl::UMemFreeFn** f, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UResourceBundle* __stdcall WIN32_IMPL_u_catopen(int8_t* name, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_u_catclose(win32::Windows::Win32::Intl::UResourceBundle* catd) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_catgets(win32::Windows::Win32::Intl::UResourceBundle* catd, int32_t set_num, int32_t msg_num, uint16_t* s, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int8_t __stdcall WIN32_IMPL_u_hasBinaryProperty(int32_t c, win32::Windows::Win32::Intl::UProperty which) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isUAlphabetic(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isULowercase(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isUUppercase(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isUWhiteSpace(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getIntPropertyValue(int32_t c, win32::Windows::Win32::Intl::UProperty which) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getIntPropertyMinValue(win32::Windows::Win32::Intl::UProperty which) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getIntPropertyMaxValue(win32::Windows::Win32::Intl::UProperty which) noexcept;
    double __stdcall WIN32_IMPL_u_getNumericValue(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_islower(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isupper(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_istitle(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isdigit(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isalpha(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isalnum(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isxdigit(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_ispunct(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isgraph(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isblank(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isdefined(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isspace(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isJavaSpaceChar(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isWhitespace(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_iscntrl(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isISOControl(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isprint(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isbase(int32_t c) noexcept;
    win32::Windows::Win32::Intl::UCharDirection __stdcall WIN32_IMPL_u_charDirection(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isMirrored(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_charMirror(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getBidiPairedBracket(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_charType(int32_t c) noexcept;
    void __stdcall WIN32_IMPL_u_enumCharTypes(win32::Windows::Win32::Intl::UCharEnumTypeRange** enumRange, void* context) noexcept;
    uint8_t __stdcall WIN32_IMPL_u_getCombiningClass(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_charDigitValue(int32_t c) noexcept;
    win32::Windows::Win32::Intl::UBlockCode __stdcall WIN32_IMPL_ublock_getCode(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_charName(int32_t code, win32::Windows::Win32::Intl::UCharNameChoice nameChoice, int8_t* buffer, int32_t bufferLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_u_charFromName(win32::Windows::Win32::Intl::UCharNameChoice nameChoice, int8_t* name, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_u_enumCharNames(int32_t start, int32_t limit, win32::Windows::Win32::Intl::UEnumCharNamesFn** fn, void* context, win32::Windows::Win32::Intl::UCharNameChoice nameChoice, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_getPropertyName(win32::Windows::Win32::Intl::UProperty property, win32::Windows::Win32::Intl::UPropertyNameChoice nameChoice) noexcept;
    win32::Windows::Win32::Intl::UProperty __stdcall WIN32_IMPL_u_getPropertyEnum(int8_t* alias) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_getPropertyValueName(win32::Windows::Win32::Intl::UProperty property, int32_t value, win32::Windows::Win32::Intl::UPropertyNameChoice nameChoice) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getPropertyValueEnum(win32::Windows::Win32::Intl::UProperty property, int8_t* alias) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isIDStart(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isIDPart(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isIDIgnorable(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isJavaIDStart(int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_u_isJavaIDPart(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_tolower(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_toupper(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_totitle(int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_u_foldCase(int32_t c, uint32_t options) noexcept;
    int32_t __stdcall WIN32_IMPL_u_digit(int32_t ch, int8_t radix) noexcept;
    int32_t __stdcall WIN32_IMPL_u_forDigit(int32_t digit, int8_t radix) noexcept;
    void __stdcall WIN32_IMPL_u_charAge(int32_t c, uint8_t* versionArray) noexcept;
    void __stdcall WIN32_IMPL_u_getUnicodeVersion(uint8_t* versionArray) noexcept;
    int32_t __stdcall WIN32_IMPL_u_getFC_NFKC_Closure(int32_t c, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBiDi* __stdcall WIN32_IMPL_ubidi_open() noexcept;
    win32::Windows::Win32::Intl::UBiDi* __stdcall WIN32_IMPL_ubidi_openSized(int32_t maxLength, int32_t maxRunCount, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_close(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setInverse(win32::Windows::Win32::Intl::UBiDi* pBiDi, int8_t isInverse) noexcept;
    int8_t __stdcall WIN32_IMPL_ubidi_isInverse(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    void __stdcall WIN32_IMPL_ubidi_orderParagraphsLTR(win32::Windows::Win32::Intl::UBiDi* pBiDi, int8_t orderParagraphsLTR) noexcept;
    int8_t __stdcall WIN32_IMPL_ubidi_isOrderParagraphsLTR(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setReorderingMode(win32::Windows::Win32::Intl::UBiDi* pBiDi, win32::Windows::Win32::Intl::UBiDiReorderingMode reorderingMode) noexcept;
    win32::Windows::Win32::Intl::UBiDiReorderingMode __stdcall WIN32_IMPL_ubidi_getReorderingMode(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setReorderingOptions(win32::Windows::Win32::Intl::UBiDi* pBiDi, uint32_t reorderingOptions) noexcept;
    uint32_t __stdcall WIN32_IMPL_ubidi_getReorderingOptions(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setContext(win32::Windows::Win32::Intl::UBiDi* pBiDi, uint16_t* prologue, int32_t proLength, uint16_t* epilogue, int32_t epiLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setPara(win32::Windows::Win32::Intl::UBiDi* pBiDi, uint16_t* text, int32_t length, uint8_t paraLevel, uint8_t* embeddingLevels, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setLine(win32::Windows::Win32::Intl::UBiDi* pParaBiDi, int32_t start, int32_t limit, win32::Windows::Win32::Intl::UBiDi* pLineBiDi, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBiDiDirection __stdcall WIN32_IMPL_ubidi_getDirection(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    win32::Windows::Win32::Intl::UBiDiDirection __stdcall WIN32_IMPL_ubidi_getBaseDirection(uint16_t* text, int32_t length) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ubidi_getText(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getLength(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    uint8_t __stdcall WIN32_IMPL_ubidi_getParaLevel(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_countParagraphs(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getParagraph(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t charIndex, int32_t* pParaStart, int32_t* pParaLimit, uint8_t* pParaLevel, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_getParagraphByIndex(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t paraIndex, int32_t* pParaStart, int32_t* pParaLimit, uint8_t* pParaLevel, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint8_t __stdcall WIN32_IMPL_ubidi_getLevelAt(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t charIndex) noexcept;
    uint8_t* __stdcall WIN32_IMPL_ubidi_getLevels(win32::Windows::Win32::Intl::UBiDi* pBiDi, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_getLogicalRun(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t logicalPosition, int32_t* pLogicalLimit, uint8_t* pLevel) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_countRuns(win32::Windows::Win32::Intl::UBiDi* pBiDi, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBiDiDirection __stdcall WIN32_IMPL_ubidi_getVisualRun(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t runIndex, int32_t* pLogicalStart, int32_t* pLength) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getVisualIndex(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t logicalIndex, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getLogicalIndex(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t visualIndex, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_getLogicalMap(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t* indexMap, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_getVisualMap(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t* indexMap, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_reorderLogical(uint8_t* levels, int32_t length, int32_t* indexMap) noexcept;
    void __stdcall WIN32_IMPL_ubidi_reorderVisual(uint8_t* levels, int32_t length, int32_t* indexMap) noexcept;
    void __stdcall WIN32_IMPL_ubidi_invertMap(int32_t* srcMap, int32_t* destMap, int32_t length) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getProcessedLength(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_getResultLength(win32::Windows::Win32::Intl::UBiDi* pBiDi) noexcept;
    win32::Windows::Win32::Intl::UCharDirection __stdcall WIN32_IMPL_ubidi_getCustomizedClass(win32::Windows::Win32::Intl::UBiDi* pBiDi, int32_t c) noexcept;
    void __stdcall WIN32_IMPL_ubidi_setClassCallback(win32::Windows::Win32::Intl::UBiDi* pBiDi, win32::Windows::Win32::Intl::UBiDiClassCallback** newFn, void* newContext, win32::Windows::Win32::Intl::UBiDiClassCallback*** oldFn, void** oldContext, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubidi_getClassCallback(win32::Windows::Win32::Intl::UBiDi* pBiDi, win32::Windows::Win32::Intl::UBiDiClassCallback*** fn, void** context) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_writeReordered(win32::Windows::Win32::Intl::UBiDi* pBiDi, uint16_t* dest, int32_t destSize, uint16_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ubidi_writeReverse(uint16_t* src, int32_t srcLength, uint16_t* dest, int32_t destSize, uint16_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint32_t __stdcall WIN32_IMPL_ubiditransform_transform(win32::Windows::Win32::Intl::UBiDiTransform* pBiDiTransform, uint16_t* src, int32_t srcLength, uint16_t* dest, int32_t destSize, uint8_t inParaLevel, win32::Windows::Win32::Intl::UBiDiOrder inOrder, uint8_t outParaLevel, win32::Windows::Win32::Intl::UBiDiOrder outOrder, win32::Windows::Win32::Intl::UBiDiMirroring doMirroring, uint32_t shapingOptions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBiDiTransform* __stdcall WIN32_IMPL_ubiditransform_open(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ubiditransform_close(win32::Windows::Win32::Intl::UBiDiTransform* pBidiTransform) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_utext_close(win32::Windows::Win32::Intl::UText* ut) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_utext_openUTF8(win32::Windows::Win32::Intl::UText* ut, int8_t* s, int64_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_utext_openUChars(win32::Windows::Win32::Intl::UText* ut, uint16_t* s, int64_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_utext_clone(win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UText* src, int8_t deep, int8_t readOnly, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_utext_equals(win32::Windows::Win32::Intl::UText* a, win32::Windows::Win32::Intl::UText* b) noexcept;
    int64_t __stdcall WIN32_IMPL_utext_nativeLength(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int8_t __stdcall WIN32_IMPL_utext_isLengthExpensive(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_char32At(win32::Windows::Win32::Intl::UText* ut, int64_t nativeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_current32(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_next32(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_previous32(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_next32From(win32::Windows::Win32::Intl::UText* ut, int64_t nativeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_previous32From(win32::Windows::Win32::Intl::UText* ut, int64_t nativeIndex) noexcept;
    int64_t __stdcall WIN32_IMPL_utext_getNativeIndex(win32::Windows::Win32::Intl::UText* ut) noexcept;
    void __stdcall WIN32_IMPL_utext_setNativeIndex(win32::Windows::Win32::Intl::UText* ut, int64_t nativeIndex) noexcept;
    int8_t __stdcall WIN32_IMPL_utext_moveIndex32(win32::Windows::Win32::Intl::UText* ut, int32_t delta) noexcept;
    int64_t __stdcall WIN32_IMPL_utext_getPreviousNativeIndex(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_extract(win32::Windows::Win32::Intl::UText* ut, int64_t nativeStart, int64_t nativeLimit, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_utext_isWritable(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int8_t __stdcall WIN32_IMPL_utext_hasMetaData(win32::Windows::Win32::Intl::UText* ut) noexcept;
    int32_t __stdcall WIN32_IMPL_utext_replace(win32::Windows::Win32::Intl::UText* ut, int64_t nativeStart, int64_t nativeLimit, uint16_t* replacementText, int32_t replacementLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utext_copy(win32::Windows::Win32::Intl::UText* ut, int64_t nativeStart, int64_t nativeLimit, int64_t destIndex, int8_t move, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utext_freeze(win32::Windows::Win32::Intl::UText* ut) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_utext_setup(win32::Windows::Win32::Intl::UText* ut, int32_t extraSpace, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_openEmpty() noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_open(int32_t start, int32_t end) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_openPattern(uint16_t* pattern, int32_t patternLength, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_openPatternOptions(uint16_t* pattern, int32_t patternLength, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_uset_close(win32::Windows::Win32::Intl::USet* set) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_clone(win32::Windows::Win32::Intl::USet* set) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_isFrozen(win32::Windows::Win32::Intl::USet* set) noexcept;
    void __stdcall WIN32_IMPL_uset_freeze(win32::Windows::Win32::Intl::USet* set) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uset_cloneAsThawed(win32::Windows::Win32::Intl::USet* set) noexcept;
    void __stdcall WIN32_IMPL_uset_set(win32::Windows::Win32::Intl::USet* set, int32_t start, int32_t end) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_applyPattern(win32::Windows::Win32::Intl::USet* set, uint16_t* pattern, int32_t patternLength, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uset_applyIntPropertyValue(win32::Windows::Win32::Intl::USet* set, win32::Windows::Win32::Intl::UProperty prop, int32_t value, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_uset_applyPropertyAlias(win32::Windows::Win32::Intl::USet* set, uint16_t* prop, int32_t propLength, uint16_t* value, int32_t valueLength, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_resemblesPattern(uint16_t* pattern, int32_t patternLength, int32_t pos) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_toPattern(win32::Windows::Win32::Intl::USet* set, uint16_t* result, int32_t resultCapacity, int8_t escapeUnprintable, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_uset_add(win32::Windows::Win32::Intl::USet* set, int32_t c) noexcept;
    void __stdcall WIN32_IMPL_uset_addAll(win32::Windows::Win32::Intl::USet* set, win32::Windows::Win32::Intl::USet* additionalSet) noexcept;
    void __stdcall WIN32_IMPL_uset_addRange(win32::Windows::Win32::Intl::USet* set, int32_t start, int32_t end) noexcept;
    void __stdcall WIN32_IMPL_uset_addString(win32::Windows::Win32::Intl::USet* set, uint16_t* str, int32_t strLen) noexcept;
    void __stdcall WIN32_IMPL_uset_addAllCodePoints(win32::Windows::Win32::Intl::USet* set, uint16_t* str, int32_t strLen) noexcept;
    void __stdcall WIN32_IMPL_uset_remove(win32::Windows::Win32::Intl::USet* set, int32_t c) noexcept;
    void __stdcall WIN32_IMPL_uset_removeRange(win32::Windows::Win32::Intl::USet* set, int32_t start, int32_t end) noexcept;
    void __stdcall WIN32_IMPL_uset_removeString(win32::Windows::Win32::Intl::USet* set, uint16_t* str, int32_t strLen) noexcept;
    void __stdcall WIN32_IMPL_uset_removeAll(win32::Windows::Win32::Intl::USet* set, win32::Windows::Win32::Intl::USet* removeSet) noexcept;
    void __stdcall WIN32_IMPL_uset_retain(win32::Windows::Win32::Intl::USet* set, int32_t start, int32_t end) noexcept;
    void __stdcall WIN32_IMPL_uset_retainAll(win32::Windows::Win32::Intl::USet* set, win32::Windows::Win32::Intl::USet* retain) noexcept;
    void __stdcall WIN32_IMPL_uset_compact(win32::Windows::Win32::Intl::USet* set) noexcept;
    void __stdcall WIN32_IMPL_uset_complement(win32::Windows::Win32::Intl::USet* set) noexcept;
    void __stdcall WIN32_IMPL_uset_complementAll(win32::Windows::Win32::Intl::USet* set, win32::Windows::Win32::Intl::USet* complement) noexcept;
    void __stdcall WIN32_IMPL_uset_clear(win32::Windows::Win32::Intl::USet* set) noexcept;
    void __stdcall WIN32_IMPL_uset_closeOver(win32::Windows::Win32::Intl::USet* set, int32_t attributes) noexcept;
    void __stdcall WIN32_IMPL_uset_removeAllStrings(win32::Windows::Win32::Intl::USet* set) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_isEmpty(win32::Windows::Win32::Intl::USet* set) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_contains(win32::Windows::Win32::Intl::USet* set, int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsRange(win32::Windows::Win32::Intl::USet* set, int32_t start, int32_t end) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsString(win32::Windows::Win32::Intl::USet* set, uint16_t* str, int32_t strLen) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_indexOf(win32::Windows::Win32::Intl::USet* set, int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_charAt(win32::Windows::Win32::Intl::USet* set, int32_t charIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_size(win32::Windows::Win32::Intl::USet* set) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_getItemCount(win32::Windows::Win32::Intl::USet* set) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_getItem(win32::Windows::Win32::Intl::USet* set, int32_t itemIndex, int32_t* start, int32_t* end, uint16_t* str, int32_t strCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsAll(win32::Windows::Win32::Intl::USet* set1, win32::Windows::Win32::Intl::USet* set2) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsAllCodePoints(win32::Windows::Win32::Intl::USet* set, uint16_t* str, int32_t strLen) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsNone(win32::Windows::Win32::Intl::USet* set1, win32::Windows::Win32::Intl::USet* set2) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_containsSome(win32::Windows::Win32::Intl::USet* set1, win32::Windows::Win32::Intl::USet* set2) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_span(win32::Windows::Win32::Intl::USet* set, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::USetSpanCondition spanCondition) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_spanBack(win32::Windows::Win32::Intl::USet* set, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::USetSpanCondition spanCondition) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_spanUTF8(win32::Windows::Win32::Intl::USet* set, int8_t* s, int32_t length, win32::Windows::Win32::Intl::USetSpanCondition spanCondition) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_spanBackUTF8(win32::Windows::Win32::Intl::USet* set, int8_t* s, int32_t length, win32::Windows::Win32::Intl::USetSpanCondition spanCondition) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_equals(win32::Windows::Win32::Intl::USet* set1, win32::Windows::Win32::Intl::USet* set2) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_serialize(win32::Windows::Win32::Intl::USet* set, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_getSerializedSet(win32::Windows::Win32::Intl::USerializedSet* fillSet, uint16_t* src, int32_t srcLength) noexcept;
    void __stdcall WIN32_IMPL_uset_setSerializedToOne(win32::Windows::Win32::Intl::USerializedSet* fillSet, int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_serializedContains(win32::Windows::Win32::Intl::USerializedSet* set, int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_uset_getSerializedRangeCount(win32::Windows::Win32::Intl::USerializedSet* set) noexcept;
    int8_t __stdcall WIN32_IMPL_uset_getSerializedRange(win32::Windows::Win32::Intl::USerializedSet* set, int32_t rangeIndex, int32_t* pStart, int32_t* pEnd) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getNFCInstance(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getNFDInstance(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getNFKCInstance(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getNFKDInstance(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getNFKCCasefoldInstance(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_getInstance(int8_t* packageName, int8_t* name, win32::Windows::Win32::Intl::UNormalization2Mode mode, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizer2* __stdcall WIN32_IMPL_unorm2_openFiltered(win32::Windows::Win32::Intl::UNormalizer2* norm2, win32::Windows::Win32::Intl::USet* filterSet, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_unorm2_close(win32::Windows::Win32::Intl::UNormalizer2* norm2) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_normalize(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* src, int32_t length, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_normalizeSecondAndAppend(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* first, int32_t firstLength, int32_t firstCapacity, uint16_t* second, int32_t secondLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_append(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* first, int32_t firstLength, int32_t firstCapacity, uint16_t* second, int32_t secondLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_getDecomposition(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c, uint16_t* decomposition, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_getRawDecomposition(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c, uint16_t* decomposition, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_composePair(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t a, int32_t b) noexcept;
    uint8_t __stdcall WIN32_IMPL_unorm2_getCombiningClass(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_unorm2_isNormalized(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UNormalizationCheckResult __stdcall WIN32_IMPL_unorm2_quickCheck(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm2_spanQuickCheckYes(win32::Windows::Win32::Intl::UNormalizer2* norm2, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t __stdcall WIN32_IMPL_unorm2_hasBoundaryBefore(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_unorm2_hasBoundaryAfter(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c) noexcept;
    int8_t __stdcall WIN32_IMPL_unorm2_isInert(win32::Windows::Win32::Intl::UNormalizer2* norm2, int32_t c) noexcept;
    int32_t __stdcall WIN32_IMPL_unorm_compare(uint16_t* s1, int32_t length1, uint16_t* s2, int32_t length2, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UConverterSelector* __stdcall WIN32_IMPL_ucnvsel_open(int8_t** converterList, int32_t converterListSize, win32::Windows::Win32::Intl::USet* excludedCodePoints, win32::Windows::Win32::Intl::UConverterUnicodeSet whichSet, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucnvsel_close(win32::Windows::Win32::Intl::UConverterSelector* sel) noexcept;
    win32::Windows::Win32::Intl::UConverterSelector* __stdcall WIN32_IMPL_ucnvsel_openFromSerialized(void* buffer, int32_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucnvsel_serialize(win32::Windows::Win32::Intl::UConverterSelector* sel, void* buffer, int32_t bufferCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucnvsel_selectForString(win32::Windows::Win32::Intl::UConverterSelector* sel, uint16_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucnvsel_selectForUTF8(win32::Windows::Win32::Intl::UConverterSelector* sel, int8_t* s, int32_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_charsToUChars(int8_t* cs, uint16_t* us, int32_t length) noexcept;
    void __stdcall WIN32_IMPL_u_UCharsToChars(uint16_t* us, int8_t* cs, int32_t length) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strlen(uint16_t* s) noexcept;
    int32_t __stdcall WIN32_IMPL_u_countChar32(uint16_t* s, int32_t length) noexcept;
    int8_t __stdcall WIN32_IMPL_u_strHasMoreChar32Than(uint16_t* s, int32_t length, int32_t number) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strcat(uint16_t* dst, uint16_t* src) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strncat(uint16_t* dst, uint16_t* src, int32_t n) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strstr(uint16_t* s, uint16_t* substring) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFindFirst(uint16_t* s, int32_t length, uint16_t* substring, int32_t subLength) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strchr(uint16_t* s, uint16_t c) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strchr32(uint16_t* s, int32_t c) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strrstr(uint16_t* s, uint16_t* substring) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFindLast(uint16_t* s, int32_t length, uint16_t* substring, int32_t subLength) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strrchr(uint16_t* s, uint16_t c) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strrchr32(uint16_t* s, int32_t c) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strpbrk(uint16_t* string, uint16_t* matchSet) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strcspn(uint16_t* string, uint16_t* matchSet) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strspn(uint16_t* string, uint16_t* matchSet) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strtok_r(uint16_t* src, uint16_t* delim, uint16_t** saveState) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strcmp(uint16_t* s1, uint16_t* s2) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strcmpCodePointOrder(uint16_t* s1, uint16_t* s2) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strCompare(uint16_t* s1, int32_t length1, uint16_t* s2, int32_t length2, int8_t codePointOrder) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strCompareIter(win32::Windows::Win32::Intl::UCharIterator* iter1, win32::Windows::Win32::Intl::UCharIterator* iter2, int8_t codePointOrder) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strCaseCompare(uint16_t* s1, int32_t length1, uint16_t* s2, int32_t length2, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strncmp(uint16_t* ucs1, uint16_t* ucs2, int32_t n) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strncmpCodePointOrder(uint16_t* s1, uint16_t* s2, int32_t n) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strcasecmp(uint16_t* s1, uint16_t* s2, uint32_t options) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strncasecmp(uint16_t* s1, uint16_t* s2, int32_t n, uint32_t options) noexcept;
    int32_t __stdcall WIN32_IMPL_u_memcasecmp(uint16_t* s1, uint16_t* s2, int32_t length, uint32_t options) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strcpy(uint16_t* dst, uint16_t* src) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strncpy(uint16_t* dst, uint16_t* src, int32_t n) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_uastrcpy(uint16_t* dst, int8_t* src) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_uastrncpy(uint16_t* dst, int8_t* src, int32_t n) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_austrcpy(int8_t* dst, uint16_t* src) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_austrncpy(int8_t* dst, uint16_t* src, int32_t n) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memcpy(uint16_t* dest, uint16_t* src, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memmove(uint16_t* dest, uint16_t* src, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memset(uint16_t* dest, uint16_t c, int32_t count) noexcept;
    int32_t __stdcall WIN32_IMPL_u_memcmp(uint16_t* buf1, uint16_t* buf2, int32_t count) noexcept;
    int32_t __stdcall WIN32_IMPL_u_memcmpCodePointOrder(uint16_t* s1, uint16_t* s2, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memchr(uint16_t* s, uint16_t c, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memchr32(uint16_t* s, int32_t c, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memrchr(uint16_t* s, uint16_t c, int32_t count) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_memrchr32(uint16_t* s, int32_t c, int32_t count) noexcept;
    int32_t __stdcall WIN32_IMPL_u_unescape(int8_t* src, uint16_t* dest, int32_t destCapacity) noexcept;
    int32_t __stdcall WIN32_IMPL_u_unescapeAt(win32::Windows::Win32::Intl::UNESCAPE_CHAR_AT* charAt, int32_t* offset, int32_t length, void* context) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strToUpper(uint16_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strToLower(uint16_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strToTitle(uint16_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UBreakIterator* titleIter, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_u_strFoldCase(uint16_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strToWCS(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromWCS(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_strToUTF8(int8_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromUTF8(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_strToUTF8WithSub(int8_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, int32_t subchar, int32_t* pNumSubstitutions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromUTF8WithSub(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int8_t* src, int32_t srcLength, int32_t subchar, int32_t* pNumSubstitutions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromUTF8Lenient(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t* __stdcall WIN32_IMPL_u_strToUTF32(int32_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromUTF32(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int32_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t* __stdcall WIN32_IMPL_u_strToUTF32WithSub(int32_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, int32_t subchar, int32_t* pNumSubstitutions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromUTF32WithSub(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int32_t* src, int32_t srcLength, int32_t subchar, int32_t* pNumSubstitutions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int8_t* __stdcall WIN32_IMPL_u_strToJavaModifiedUTF8(int8_t* dest, int32_t destCapacity, int32_t* pDestLength, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_u_strFromJavaModifiedUTF8WithSub(uint16_t* dest, int32_t destCapacity, int32_t* pDestLength, int8_t* src, int32_t srcLength, int32_t subchar, int32_t* pNumSubstitutions, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UCaseMap* __stdcall WIN32_IMPL_ucasemap_open(int8_t* locale, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ucasemap_close(win32::Windows::Win32::Intl::UCaseMap* csm) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucasemap_getLocale(win32::Windows::Win32::Intl::UCaseMap* csm) noexcept;
    uint32_t __stdcall WIN32_IMPL_ucasemap_getOptions(win32::Windows::Win32::Intl::UCaseMap* csm) noexcept;
    void __stdcall WIN32_IMPL_ucasemap_setLocale(win32::Windows::Win32::Intl::UCaseMap* csm, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ucasemap_setOptions(win32::Windows::Win32::Intl::UCaseMap* csm, uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_ucasemap_getBreakIterator(win32::Windows::Win32::Intl::UCaseMap* csm) noexcept;
    void __stdcall WIN32_IMPL_ucasemap_setBreakIterator(win32::Windows::Win32::Intl::UCaseMap* csm, win32::Windows::Win32::Intl::UBreakIterator* iterToAdopt, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucasemap_toTitle(win32::Windows::Win32::Intl::UCaseMap* csm, uint16_t* dest, int32_t destCapacity, uint16_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucasemap_utf8ToLower(win32::Windows::Win32::Intl::UCaseMap* csm, int8_t* dest, int32_t destCapacity, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucasemap_utf8ToUpper(win32::Windows::Win32::Intl::UCaseMap* csm, int8_t* dest, int32_t destCapacity, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucasemap_utf8ToTitle(win32::Windows::Win32::Intl::UCaseMap* csm, int8_t* dest, int32_t destCapacity, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucasemap_utf8FoldCase(win32::Windows::Win32::Intl::UCaseMap* csm, int8_t* dest, int32_t destCapacity, int8_t* src, int32_t srcLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UStringPrepProfile* __stdcall WIN32_IMPL_usprep_open(int8_t* path, int8_t* fileName, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UStringPrepProfile* __stdcall WIN32_IMPL_usprep_openByType(win32::Windows::Win32::Intl::UStringPrepProfileType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_usprep_close(win32::Windows::Win32::Intl::UStringPrepProfile* profile) noexcept;
    int32_t __stdcall WIN32_IMPL_usprep_prepare(win32::Windows::Win32::Intl::UStringPrepProfile* prep, uint16_t* src, int32_t srcLength, uint16_t* dest, int32_t destCapacity, int32_t options, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UIDNA* __stdcall WIN32_IMPL_uidna_openUTS46(uint32_t options, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_uidna_close(win32::Windows::Win32::Intl::UIDNA* idna) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_labelToASCII(win32::Windows::Win32::Intl::UIDNA* idna, uint16_t* label, int32_t length, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_labelToUnicode(win32::Windows::Win32::Intl::UIDNA* idna, uint16_t* label, int32_t length, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_nameToASCII(win32::Windows::Win32::Intl::UIDNA* idna, uint16_t* name, int32_t length, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_nameToUnicode(win32::Windows::Win32::Intl::UIDNA* idna, uint16_t* name, int32_t length, uint16_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_labelToASCII_UTF8(win32::Windows::Win32::Intl::UIDNA* idna, int8_t* label, int32_t length, int8_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_labelToUnicodeUTF8(win32::Windows::Win32::Intl::UIDNA* idna, int8_t* label, int32_t length, int8_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_nameToASCII_UTF8(win32::Windows::Win32::Intl::UIDNA* idna, int8_t* name, int32_t length, int8_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_uidna_nameToUnicodeUTF8(win32::Windows::Win32::Intl::UIDNA* idna, int8_t* name, int32_t length, int8_t* dest, int32_t capacity, win32::Windows::Win32::Intl::UIDNAInfo* pInfo, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_ubrk_open(win32::Windows::Win32::Intl::UBreakIteratorType type, int8_t* locale, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_ubrk_openRules(uint16_t* rules, int32_t rulesLength, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UParseError* parseErr, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_ubrk_openBinaryRules(uint8_t* binaryRules, int32_t rulesLength, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_ubrk_safeClone(win32::Windows::Win32::Intl::UBreakIterator* bi, void* stackBuffer, int32_t* pBufferSize, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ubrk_close(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    void __stdcall WIN32_IMPL_ubrk_setText(win32::Windows::Win32::Intl::UBreakIterator* bi, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ubrk_setUText(win32::Windows::Win32::Intl::UBreakIterator* bi, win32::Windows::Win32::Intl::UText* text, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_current(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_next(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_previous(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_first(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_last(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_preceding(win32::Windows::Win32::Intl::UBreakIterator* bi, int32_t offset) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_following(win32::Windows::Win32::Intl::UBreakIterator* bi, int32_t offset) noexcept;
    int8_t* __stdcall WIN32_IMPL_ubrk_getAvailable(int32_t index) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_countAvailable() noexcept;
    int8_t __stdcall WIN32_IMPL_ubrk_isBoundary(win32::Windows::Win32::Intl::UBreakIterator* bi, int32_t offset) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_getRuleStatus(win32::Windows::Win32::Intl::UBreakIterator* bi) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_getRuleStatusVec(win32::Windows::Win32::Intl::UBreakIterator* bi, int32_t* fillInVec, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ubrk_getLocaleByType(win32::Windows::Win32::Intl::UBreakIterator* bi, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ubrk_refreshUText(win32::Windows::Win32::Intl::UBreakIterator* bi, win32::Windows::Win32::Intl::UText* text, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ubrk_getBinaryRules(win32::Windows::Win32::Intl::UBreakIterator* bi, uint8_t* binaryRules, int32_t rulesCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_getDataVersion(uint8_t* dataVersionFillin, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucal_openTimeZoneIDEnumeration(win32::Windows::Win32::Intl::USystemTimeZoneType zoneType, int8_t* region, int32_t* rawOffset, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucal_openTimeZones(win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucal_openCountryTimeZones(int8_t* country, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getDefaultTimeZone(uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_ucal_setDefaultTimeZone(uint16_t* zoneID, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getDSTSavings(uint16_t* zoneID, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    double __stdcall WIN32_IMPL_ucal_getNow() noexcept;
    void** __stdcall WIN32_IMPL_ucal_open(uint16_t* zoneID, int32_t len, int8_t* locale, win32::Windows::Win32::Intl::UCalendarType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_close(void** cal) noexcept;
    void** __stdcall WIN32_IMPL_ucal_clone(void** cal, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_setTimeZone(void** cal, uint16_t* zoneID, int32_t len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getTimeZoneID(void** cal, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getTimeZoneDisplayName(void** cal, win32::Windows::Win32::Intl::UCalendarDisplayNameType type, int8_t* locale, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucal_inDaylightTime(void** cal, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_setGregorianChange(void** cal, double date, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    double __stdcall WIN32_IMPL_ucal_getGregorianChange(void** cal, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getAttribute(void** cal, win32::Windows::Win32::Intl::UCalendarAttribute attr) noexcept;
    void __stdcall WIN32_IMPL_ucal_setAttribute(void** cal, win32::Windows::Win32::Intl::UCalendarAttribute attr, int32_t newValue) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucal_getAvailable(int32_t localeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_countAvailable() noexcept;
    double __stdcall WIN32_IMPL_ucal_getMillis(void** cal, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_setMillis(void** cal, double dateTime, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_setDate(void** cal, int32_t year, int32_t month, int32_t date, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_setDateTime(void** cal, int32_t year, int32_t month, int32_t date, int32_t hour, int32_t minute, int32_t second, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucal_equivalentTo(void** cal1, void** cal2) noexcept;
    void __stdcall WIN32_IMPL_ucal_add(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field, int32_t amount, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_roll(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field, int32_t amount, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_get(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucal_set(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field, int32_t value) noexcept;
    int8_t __stdcall WIN32_IMPL_ucal_isSet(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field) noexcept;
    void __stdcall WIN32_IMPL_ucal_clearField(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field) noexcept;
    void __stdcall WIN32_IMPL_ucal_clear(void** calendar) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getLimit(void** cal, win32::Windows::Win32::Intl::UCalendarDateFields field, win32::Windows::Win32::Intl::UCalendarLimitType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucal_getLocaleByType(void** cal, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucal_getTZDataVersion(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getCanonicalTimeZoneID(uint16_t* id, int32_t len, uint16_t* result, int32_t resultCapacity, int8_t* isSystemID, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucal_getType(void** cal, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucal_getKeywordValuesForLocale(int8_t* key, int8_t* locale, int8_t commonlyUsed, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCalendarWeekdayType __stdcall WIN32_IMPL_ucal_getDayOfWeekType(void** cal, win32::Windows::Win32::Intl::UCalendarDaysOfWeek dayOfWeek, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getWeekendTransition(void** cal, win32::Windows::Win32::Intl::UCalendarDaysOfWeek dayOfWeek, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucal_isWeekend(void** cal, double date, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getFieldDifference(void** cal, double target, win32::Windows::Win32::Intl::UCalendarDateFields field, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucal_getTimeZoneTransitionDate(void** cal, win32::Windows::Win32::Intl::UTimeZoneTransitionType type, double* transition, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getWindowsTimeZoneID(uint16_t* id, int32_t len, uint16_t* winid, int32_t winidCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucal_getTimeZoneIDForWindowsID(uint16_t* winid, int32_t len, int8_t* region, uint16_t* id, int32_t idCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCollator* __stdcall WIN32_IMPL_ucol_open(int8_t* loc, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCollator* __stdcall WIN32_IMPL_ucol_openRules(uint16_t* rules, int32_t rulesLength, win32::Windows::Win32::Intl::UColAttributeValue normalizationMode, win32::Windows::Win32::Intl::UColAttributeValue strength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucol_getContractionsAndExpansions(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::USet* contractions, win32::Windows::Win32::Intl::USet* expansions, int8_t addPrefixes, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucol_close(win32::Windows::Win32::Intl::UCollator* coll) noexcept;
    win32::Windows::Win32::Intl::UCollationResult __stdcall WIN32_IMPL_ucol_strcoll(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* source, int32_t sourceLength, uint16_t* target, int32_t targetLength) noexcept;
    win32::Windows::Win32::Intl::UCollationResult __stdcall WIN32_IMPL_ucol_strcollUTF8(win32::Windows::Win32::Intl::UCollator* coll, int8_t* source, int32_t sourceLength, int8_t* target, int32_t targetLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucol_greater(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* source, int32_t sourceLength, uint16_t* target, int32_t targetLength) noexcept;
    int8_t __stdcall WIN32_IMPL_ucol_greaterOrEqual(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* source, int32_t sourceLength, uint16_t* target, int32_t targetLength) noexcept;
    int8_t __stdcall WIN32_IMPL_ucol_equal(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* source, int32_t sourceLength, uint16_t* target, int32_t targetLength) noexcept;
    win32::Windows::Win32::Intl::UCollationResult __stdcall WIN32_IMPL_ucol_strcollIter(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UCharIterator* sIter, win32::Windows::Win32::Intl::UCharIterator* tIter, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UColAttributeValue __stdcall WIN32_IMPL_ucol_getStrength(win32::Windows::Win32::Intl::UCollator* coll) noexcept;
    void __stdcall WIN32_IMPL_ucol_setStrength(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UColAttributeValue strength) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getReorderCodes(win32::Windows::Win32::Intl::UCollator* coll, int32_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_ucol_setReorderCodes(win32::Windows::Win32::Intl::UCollator* coll, int32_t* reorderCodes, int32_t reorderCodesLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getEquivalentReorderCodes(int32_t reorderCode, int32_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getDisplayName(int8_t* objLoc, int8_t* dispLoc, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucol_getAvailable(int32_t localeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_countAvailable() noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucol_openAvailableLocales(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucol_getKeywords(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucol_getKeywordValues(int8_t* keyword, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucol_getKeywordValuesForLocale(int8_t* key, int8_t* locale, int8_t commonlyUsed, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getFunctionalEquivalent(int8_t* result, int32_t resultCapacity, int8_t* keyword, int8_t* locale, int8_t* isAvailable, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ucol_getRules(win32::Windows::Win32::Intl::UCollator* coll, int32_t* length) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getSortKey(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* source, int32_t sourceLength, uint8_t* result, int32_t resultLength) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_nextSortKeyPart(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UCharIterator* iter, uint32_t* state, uint8_t* dest, int32_t count, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getBound(uint8_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UColBoundMode boundType, uint32_t noOfLevels, uint8_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucol_getVersion(win32::Windows::Win32::Intl::UCollator* coll, uint8_t* info) noexcept;
    void __stdcall WIN32_IMPL_ucol_getUCAVersion(win32::Windows::Win32::Intl::UCollator* coll, uint8_t* info) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_mergeSortkeys(uint8_t* src1, int32_t src1Length, uint8_t* src2, int32_t src2Length, uint8_t* dest, int32_t destCapacity) noexcept;
    void __stdcall WIN32_IMPL_ucol_setAttribute(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UColAttribute attr, win32::Windows::Win32::Intl::UColAttributeValue value, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UColAttributeValue __stdcall WIN32_IMPL_ucol_getAttribute(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UColAttribute attr, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucol_setMaxVariable(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UColReorderCode group, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UColReorderCode __stdcall WIN32_IMPL_ucol_getMaxVariable(win32::Windows::Win32::Intl::UCollator* coll) noexcept;
    uint32_t __stdcall WIN32_IMPL_ucol_getVariableTop(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCollator* __stdcall WIN32_IMPL_ucol_safeClone(win32::Windows::Win32::Intl::UCollator* coll, void* stackBuffer, int32_t* pBufferSize, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getRulesEx(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UColRuleOption delta, uint16_t* buffer, int32_t bufferLen) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucol_getLocaleByType(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_ucol_getTailoredSet(win32::Windows::Win32::Intl::UCollator* coll, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_cloneBinary(win32::Windows::Win32::Intl::UCollator* coll, uint8_t* buffer, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCollator* __stdcall WIN32_IMPL_ucol_openBinary(uint8_t* bin, int32_t length, win32::Windows::Win32::Intl::UCollator* base, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCollationElements* __stdcall WIN32_IMPL_ucol_openElements(win32::Windows::Win32::Intl::UCollator* coll, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_keyHashCode(uint8_t* key, int32_t length) noexcept;
    void __stdcall WIN32_IMPL_ucol_closeElements(win32::Windows::Win32::Intl::UCollationElements* elems) noexcept;
    void __stdcall WIN32_IMPL_ucol_reset(win32::Windows::Win32::Intl::UCollationElements* elems) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_next(win32::Windows::Win32::Intl::UCollationElements* elems, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_previous(win32::Windows::Win32::Intl::UCollationElements* elems, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getMaxExpansion(win32::Windows::Win32::Intl::UCollationElements* elems, int32_t order) noexcept;
    void __stdcall WIN32_IMPL_ucol_setText(win32::Windows::Win32::Intl::UCollationElements* elems, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_getOffset(win32::Windows::Win32::Intl::UCollationElements* elems) noexcept;
    void __stdcall WIN32_IMPL_ucol_setOffset(win32::Windows::Win32::Intl::UCollationElements* elems, int32_t offset, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_primaryOrder(int32_t order) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_secondaryOrder(int32_t order) noexcept;
    int32_t __stdcall WIN32_IMPL_ucol_tertiaryOrder(int32_t order) noexcept;
    win32::Windows::Win32::Intl::UCharsetDetector* __stdcall WIN32_IMPL_ucsdet_open(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucsdet_close(win32::Windows::Win32::Intl::UCharsetDetector* ucsd) noexcept;
    void __stdcall WIN32_IMPL_ucsdet_setText(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, int8_t* textIn, int32_t len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ucsdet_setDeclaredEncoding(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, int8_t* encoding, int32_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCharsetMatch* __stdcall WIN32_IMPL_ucsdet_detect(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCharsetMatch** __stdcall WIN32_IMPL_ucsdet_detectAll(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, int32_t* matchesFound, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucsdet_getName(win32::Windows::Win32::Intl::UCharsetMatch* ucsm, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucsdet_getConfidence(win32::Windows::Win32::Intl::UCharsetMatch* ucsm, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ucsdet_getLanguage(win32::Windows::Win32::Intl::UCharsetMatch* ucsm, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ucsdet_getUChars(win32::Windows::Win32::Intl::UCharsetMatch* ucsm, uint16_t* buf, int32_t cap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_ucsdet_getAllDetectableCharsets(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ucsdet_isInputFilterEnabled(win32::Windows::Win32::Intl::UCharsetDetector* ucsd) noexcept;
    int8_t __stdcall WIN32_IMPL_ucsdet_enableInputFilter(win32::Windows::Win32::Intl::UCharsetDetector* ucsd, int8_t filter) noexcept;
    void** __stdcall WIN32_IMPL_udatpg_open(int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void** __stdcall WIN32_IMPL_udatpg_openEmpty(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_udatpg_close(void** dtpg) noexcept;
    void** __stdcall WIN32_IMPL_udatpg_clone(void** dtpg, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_getBestPattern(void** dtpg, uint16_t* skeleton, int32_t length, uint16_t* bestPattern, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_getBestPatternWithOptions(void** dtpg, uint16_t* skeleton, int32_t length, win32::Windows::Win32::Intl::UDateTimePatternMatchOptions options, uint16_t* bestPattern, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_getSkeleton(void** unusedDtpg, uint16_t* pattern, int32_t length, uint16_t* skeleton, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_getBaseSkeleton(void** unusedDtpg, uint16_t* pattern, int32_t length, uint16_t* baseSkeleton, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UDateTimePatternConflict __stdcall WIN32_IMPL_udatpg_addPattern(void** dtpg, uint16_t* pattern, int32_t patternLength, int8_t override, uint16_t* conflictingPattern, int32_t capacity, int32_t* pLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_udatpg_setAppendItemFormat(void** dtpg, win32::Windows::Win32::Intl::UDateTimePatternField field, uint16_t* value, int32_t length) noexcept;
    uint16_t* __stdcall WIN32_IMPL_udatpg_getAppendItemFormat(void** dtpg, win32::Windows::Win32::Intl::UDateTimePatternField field, int32_t* pLength) noexcept;
    void __stdcall WIN32_IMPL_udatpg_setAppendItemName(void** dtpg, win32::Windows::Win32::Intl::UDateTimePatternField field, uint16_t* value, int32_t length) noexcept;
    uint16_t* __stdcall WIN32_IMPL_udatpg_getAppendItemName(void** dtpg, win32::Windows::Win32::Intl::UDateTimePatternField field, int32_t* pLength) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_getFieldDisplayName(void** dtpg, win32::Windows::Win32::Intl::UDateTimePatternField field, win32::Windows::Win32::Intl::UDateTimePGDisplayWidth width, uint16_t* fieldName, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_udatpg_setDateTimeFormat(void** dtpg, uint16_t* dtFormat, int32_t length) noexcept;
    uint16_t* __stdcall WIN32_IMPL_udatpg_getDateTimeFormat(void** dtpg, int32_t* pLength) noexcept;
    void __stdcall WIN32_IMPL_udatpg_setDecimal(void** dtpg, uint16_t* decimal, int32_t length) noexcept;
    uint16_t* __stdcall WIN32_IMPL_udatpg_getDecimal(void** dtpg, int32_t* pLength) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_replaceFieldTypes(void** dtpg, uint16_t* pattern, int32_t patternLength, uint16_t* skeleton, int32_t skeletonLength, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    int32_t __stdcall WIN32_IMPL_udatpg_replaceFieldTypesWithOptions(void** dtpg, uint16_t* pattern, int32_t patternLength, uint16_t* skeleton, int32_t skeletonLength, win32::Windows::Win32::Intl::UDateTimePatternMatchOptions options, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_udatpg_openSkeletons(void** dtpg, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_udatpg_openBaseSkeletons(void** dtpg, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    uint16_t* __stdcall WIN32_IMPL_udatpg_getPatternForSkeleton(void** dtpg, uint16_t* skeleton, int32_t skeletonLength, int32_t* pLength) noexcept;
    win32::Windows::Win32::Intl::UFieldPositionIterator* __stdcall WIN32_IMPL_ufieldpositer_open(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ufieldpositer_close(win32::Windows::Win32::Intl::UFieldPositionIterator* fpositer) noexcept;
    int32_t __stdcall WIN32_IMPL_ufieldpositer_next(win32::Windows::Win32::Intl::UFieldPositionIterator* fpositer, int32_t* beginIndex, int32_t* endIndex) noexcept;
    void** __stdcall WIN32_IMPL_ufmt_open(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ufmt_close(void** fmt) noexcept;
    win32::Windows::Win32::Intl::UFormattableType __stdcall WIN32_IMPL_ufmt_getType(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_ufmt_isNumeric(void** fmt) noexcept;
    double __stdcall WIN32_IMPL_ufmt_getDate(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    double __stdcall WIN32_IMPL_ufmt_getDouble(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ufmt_getLong(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_ufmt_getInt64(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void* __stdcall WIN32_IMPL_ufmt_getObject(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_ufmt_getUChars(void** fmt, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ufmt_getArrayLength(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_ufmt_getArrayItemByIndex(void** fmt, int32_t n, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_ufmt_getDecNumChars(void** fmt, int32_t* len, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UDateIntervalFormat* __stdcall WIN32_IMPL_udtitvfmt_open(int8_t* locale, uint16_t* skeleton, int32_t skeletonLength, uint16_t* tzID, int32_t tzIDLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udtitvfmt_close(win32::Windows::Win32::Intl::UDateIntervalFormat* formatter) noexcept;
    int32_t __stdcall WIN32_IMPL_udtitvfmt_format(win32::Windows::Win32::Intl::UDateIntervalFormat* formatter, double fromDate, double toDate, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UFieldPosition* position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UGenderInfo* __stdcall WIN32_IMPL_ugender_getInstance(int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UGender __stdcall WIN32_IMPL_ugender_getListGender(win32::Windows::Win32::Intl::UGenderInfo* genderInfo, win32::Windows::Win32::Intl::UGender* genders, int32_t size, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UListFormatter* __stdcall WIN32_IMPL_ulistfmt_open(int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ulistfmt_close(win32::Windows::Win32::Intl::UListFormatter* listfmt) noexcept;
    int32_t __stdcall WIN32_IMPL_ulistfmt_format(win32::Windows::Win32::Intl::UListFormatter* listfmt, uint16_t** strings, int32_t* stringLengths, int32_t stringCount, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::ULocaleData* __stdcall WIN32_IMPL_ulocdata_open(int8_t* localeID, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ulocdata_close(win32::Windows::Win32::Intl::ULocaleData* uld) noexcept;
    void __stdcall WIN32_IMPL_ulocdata_setNoSubstitute(win32::Windows::Win32::Intl::ULocaleData* uld, int8_t setting) noexcept;
    int8_t __stdcall WIN32_IMPL_ulocdata_getNoSubstitute(win32::Windows::Win32::Intl::ULocaleData* uld) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_ulocdata_getExemplarSet(win32::Windows::Win32::Intl::ULocaleData* uld, win32::Windows::Win32::Intl::USet* fillIn, uint32_t options, win32::Windows::Win32::Intl::ULocaleDataExemplarSetType extype, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ulocdata_getDelimiter(win32::Windows::Win32::Intl::ULocaleData* uld, win32::Windows::Win32::Intl::ULocaleDataDelimiterType type, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UMeasurementSystem __stdcall WIN32_IMPL_ulocdata_getMeasurementSystem(int8_t* localeID, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ulocdata_getPaperSize(int8_t* localeID, int32_t* height, int32_t* width, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ulocdata_getCLDRVersion(uint8_t* versionArray, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ulocdata_getLocaleDisplayPattern(win32::Windows::Win32::Intl::ULocaleData* uld, uint16_t* pattern, int32_t patternCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ulocdata_getLocaleSeparator(win32::Windows::Win32::Intl::ULocaleData* uld, uint16_t* separator, int32_t separatorCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_u_formatMessage(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_u_vformatMessage(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* result, int32_t resultLength, int8_t* ap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_parseMessage(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_vparseMessage(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* source, int32_t sourceLength, int8_t* ap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_u_formatMessageWithError(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_u_vformatMessageWithError(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UParseError* parseError, int8_t* ap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_parseMessageWithError(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* source, int32_t sourceLength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_u_vparseMessageWithError(int8_t* locale, uint16_t* pattern, int32_t patternLength, uint16_t* source, int32_t sourceLength, int8_t* ap, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_umsg_open(uint16_t* pattern, int32_t patternLength, int8_t* locale, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_umsg_close(void** format) noexcept;
    void* __stdcall WIN32_IMPL_umsg_clone(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_umsg_setLocale(void** fmt, int8_t* locale) noexcept;
    int8_t* __stdcall WIN32_IMPL_umsg_getLocale(void** fmt) noexcept;
    void __stdcall WIN32_IMPL_umsg_applyPattern(void** fmt, uint16_t* pattern, int32_t patternLength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_umsg_toPattern(void** fmt, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_umsg_format(void** fmt, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_umsg_vformat(void** fmt, uint16_t* result, int32_t resultLength, int8_t* ap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_umsg_parse(void** fmt, uint16_t* source, int32_t sourceLength, int32_t* count, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_umsg_vparse(void** fmt, uint16_t* source, int32_t sourceLength, int32_t* count, int8_t* ap, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_umsg_autoQuoteApostrophe(uint16_t* pattern, int32_t patternLength, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void** __stdcall WIN32_IMPL_unum_open(win32::Windows::Win32::Intl::UNumberFormatStyle style, uint16_t* pattern, int32_t patternLength, int8_t* locale, win32::Windows::Win32::Intl::UParseError* parseErr, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unum_close(void** fmt) noexcept;
    void** __stdcall WIN32_IMPL_unum_clone(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_format(void** fmt, int32_t number, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatInt64(void** fmt, int64_t number, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatDouble(void** fmt, double number, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatDoubleForFields(void** format, double number, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPositionIterator* fpositer, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatDecimal(void** fmt, int8_t* number, int32_t length, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatDoubleCurrency(void** fmt, double number, uint16_t* currency, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_formatUFormattable(void** fmt, void** number, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_parse(void** fmt, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_unum_parseInt64(void** fmt, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    double __stdcall WIN32_IMPL_unum_parseDouble(void** fmt, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_parseDecimal(void** fmt, uint16_t* text, int32_t textLength, int32_t* parsePos, int8_t* outBuf, int32_t outBufLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    double __stdcall WIN32_IMPL_unum_parseDoubleCurrency(void** fmt, uint16_t* text, int32_t textLength, int32_t* parsePos, uint16_t* currency, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_unum_parseToUFormattable(void** fmt, void** result, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unum_applyPattern(void** format, int8_t localized, uint16_t* pattern, int32_t patternLength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_unum_getAvailable(int32_t localeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_countAvailable() noexcept;
    int32_t __stdcall WIN32_IMPL_unum_getAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatAttribute attr) noexcept;
    void __stdcall WIN32_IMPL_unum_setAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatAttribute attr, int32_t newValue) noexcept;
    double __stdcall WIN32_IMPL_unum_getDoubleAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatAttribute attr) noexcept;
    void __stdcall WIN32_IMPL_unum_setDoubleAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatAttribute attr, double newValue) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_getTextAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatTextAttribute tag, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unum_setTextAttribute(void** fmt, win32::Windows::Win32::Intl::UNumberFormatTextAttribute tag, uint16_t* newValue, int32_t newValueLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_toPattern(void** fmt, int8_t isPatternLocalized, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_unum_getSymbol(void** fmt, win32::Windows::Win32::Intl::UNumberFormatSymbol symbol, uint16_t* buffer, int32_t size, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unum_setSymbol(void** fmt, win32::Windows::Win32::Intl::UNumberFormatSymbol symbol, uint16_t* value, int32_t length, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_unum_getLocaleByType(void** fmt, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unum_setContext(void** fmt, win32::Windows::Win32::Intl::UDisplayContext value, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UDisplayContext __stdcall WIN32_IMPL_unum_getContext(void** fmt, win32::Windows::Win32::Intl::UDisplayContextType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UCalendarDateFields __stdcall WIN32_IMPL_udat_toCalendarDateField(win32::Windows::Win32::Intl::UDateFormatField field) noexcept;
    void** __stdcall WIN32_IMPL_udat_open(win32::Windows::Win32::Intl::UDateFormatStyle timeStyle, win32::Windows::Win32::Intl::UDateFormatStyle dateStyle, int8_t* locale, uint16_t* tzID, int32_t tzIDLength, uint16_t* pattern, int32_t patternLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_close(void** format) noexcept;
    int8_t __stdcall WIN32_IMPL_udat_getBooleanAttribute(void** fmt, win32::Windows::Win32::Intl::UDateFormatBooleanAttribute attr, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_setBooleanAttribute(void** fmt, win32::Windows::Win32::Intl::UDateFormatBooleanAttribute attr, int8_t newValue, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_udat_clone(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_format(void** format, double dateToFormat, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPosition* position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_formatCalendar(void** format, void** calendar, uint16_t* result, int32_t capacity, win32::Windows::Win32::Intl::UFieldPosition* position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_formatForFields(void** format, double dateToFormat, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UFieldPositionIterator* fpositer, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_formatCalendarForFields(void** format, void** calendar, uint16_t* result, int32_t capacity, win32::Windows::Win32::Intl::UFieldPositionIterator* fpositer, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    double __stdcall WIN32_IMPL_udat_parse(void** format, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_parseCalendar(void** format, void** calendar, uint16_t* text, int32_t textLength, int32_t* parsePos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_udat_isLenient(void** fmt) noexcept;
    void __stdcall WIN32_IMPL_udat_setLenient(void** fmt, int8_t isLenient) noexcept;
    void** __stdcall WIN32_IMPL_udat_getCalendar(void** fmt) noexcept;
    void __stdcall WIN32_IMPL_udat_setCalendar(void** fmt, void** calendarToSet) noexcept;
    void** __stdcall WIN32_IMPL_udat_getNumberFormat(void** fmt) noexcept;
    void** __stdcall WIN32_IMPL_udat_getNumberFormatForField(void** fmt, uint16_t field) noexcept;
    void __stdcall WIN32_IMPL_udat_adoptNumberFormatForFields(void** fmt, uint16_t* fields, void** numberFormatToSet, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_setNumberFormat(void** fmt, void** numberFormatToSet) noexcept;
    void __stdcall WIN32_IMPL_udat_adoptNumberFormat(void** fmt, void** numberFormatToAdopt) noexcept;
    int8_t* __stdcall WIN32_IMPL_udat_getAvailable(int32_t localeIndex) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_countAvailable() noexcept;
    double __stdcall WIN32_IMPL_udat_get2DigitYearStart(void** fmt, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_set2DigitYearStart(void** fmt, double d, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_toPattern(void** fmt, int8_t localized, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_applyPattern(void** format, int8_t localized, uint16_t* pattern, int32_t patternLength) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_getSymbols(void** fmt, win32::Windows::Win32::Intl::UDateFormatSymbolType type, int32_t symbolIndex, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_udat_countSymbols(void** fmt, win32::Windows::Win32::Intl::UDateFormatSymbolType type) noexcept;
    void __stdcall WIN32_IMPL_udat_setSymbols(void** format, win32::Windows::Win32::Intl::UDateFormatSymbolType type, int32_t symbolIndex, uint16_t* value, int32_t valueLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_udat_getLocaleByType(void** fmt, win32::Windows::Win32::Intl::ULocDataLocaleType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_udat_setContext(void** fmt, win32::Windows::Win32::Intl::UDisplayContext value, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UDisplayContext __stdcall WIN32_IMPL_udat_getContext(void** fmt, win32::Windows::Win32::Intl::UDisplayContextType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UNumberFormatter* __stdcall WIN32_IMPL_unumf_openForSkeletonAndLocale(uint16_t* skeleton, int32_t skeletonLen, int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    win32::Windows::Win32::Intl::UFormattedNumber* __stdcall WIN32_IMPL_unumf_openResult(win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_unumf_formatInt(win32::Windows::Win32::Intl::UNumberFormatter* uformatter, int64_t value, win32::Windows::Win32::Intl::UFormattedNumber* uresult, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_unumf_formatDouble(win32::Windows::Win32::Intl::UNumberFormatter* uformatter, double value, win32::Windows::Win32::Intl::UFormattedNumber* uresult, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_unumf_formatDecimal(win32::Windows::Win32::Intl::UNumberFormatter* uformatter, int8_t* value, int32_t valueLen, win32::Windows::Win32::Intl::UFormattedNumber* uresult, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int32_t __stdcall WIN32_IMPL_unumf_resultToString(win32::Windows::Win32::Intl::UFormattedNumber* uresult, uint16_t* buffer, int32_t bufferCapacity, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    int8_t __stdcall WIN32_IMPL_unumf_resultNextFieldPosition(win32::Windows::Win32::Intl::UFormattedNumber* uresult, win32::Windows::Win32::Intl::UFieldPosition* ufpos, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_unumf_resultGetAllFieldPositions(win32::Windows::Win32::Intl::UFormattedNumber* uresult, win32::Windows::Win32::Intl::UFieldPositionIterator* ufpositer, win32::Windows::Win32::Intl::UErrorCode* ec) noexcept;
    void __stdcall WIN32_IMPL_unumf_close(win32::Windows::Win32::Intl::UNumberFormatter* uformatter) noexcept;
    void __stdcall WIN32_IMPL_unumf_closeResult(win32::Windows::Win32::Intl::UFormattedNumber* uresult) noexcept;
    win32::Windows::Win32::Intl::UNumberingSystem* __stdcall WIN32_IMPL_unumsys_open(int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UNumberingSystem* __stdcall WIN32_IMPL_unumsys_openByName(int8_t* name, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_unumsys_close(win32::Windows::Win32::Intl::UNumberingSystem* unumsys) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_unumsys_openAvailableNames(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_unumsys_getName(win32::Windows::Win32::Intl::UNumberingSystem* unumsys) noexcept;
    int8_t __stdcall WIN32_IMPL_unumsys_isAlgorithmic(win32::Windows::Win32::Intl::UNumberingSystem* unumsys) noexcept;
    int32_t __stdcall WIN32_IMPL_unumsys_getRadix(win32::Windows::Win32::Intl::UNumberingSystem* unumsys) noexcept;
    int32_t __stdcall WIN32_IMPL_unumsys_getDescription(win32::Windows::Win32::Intl::UNumberingSystem* unumsys, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UPluralRules* __stdcall WIN32_IMPL_uplrules_open(int8_t* locale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UPluralRules* __stdcall WIN32_IMPL_uplrules_openForType(int8_t* locale, win32::Windows::Win32::Intl::UPluralType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uplrules_close(win32::Windows::Win32::Intl::UPluralRules* uplrules) noexcept;
    int32_t __stdcall WIN32_IMPL_uplrules_select(win32::Windows::Win32::Intl::UPluralRules* uplrules, double number, uint16_t* keyword, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uplrules_getKeywords(win32::Windows::Win32::Intl::UPluralRules* uplrules, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URegularExpression* __stdcall WIN32_IMPL_uregex_open(uint16_t* pattern, int32_t patternLength, uint32_t flags, win32::Windows::Win32::Intl::UParseError* pe, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URegularExpression* __stdcall WIN32_IMPL_uregex_openUText(win32::Windows::Win32::Intl::UText* pattern, uint32_t flags, win32::Windows::Win32::Intl::UParseError* pe, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URegularExpression* __stdcall WIN32_IMPL_uregex_openC(int8_t* pattern, uint32_t flags, win32::Windows::Win32::Intl::UParseError* pe, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_close(win32::Windows::Win32::Intl::URegularExpression* regexp) noexcept;
    win32::Windows::Win32::Intl::URegularExpression* __stdcall WIN32_IMPL_uregex_clone(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_uregex_pattern(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t* patLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_patternUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_flags(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setText(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* text, int32_t textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* text, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_uregex_getText(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t* textLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_getUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_refreshUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* text, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_matches(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_matches64(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_lookingAt(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_lookingAt64(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_find(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_find64(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_findNext(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_groupCount(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_groupNumberFromName(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* groupName, int32_t nameLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_groupNumberFromCName(win32::Windows::Win32::Intl::URegularExpression* regexp, int8_t* groupName, int32_t nameLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_group(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_groupUText(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, win32::Windows::Win32::Intl::UText* dest, int64_t* groupLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_start(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_uregex_start64(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_end(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_uregex_end64(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t groupNum, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_reset(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t index, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_reset64(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t index, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setRegion(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t regionStart, int32_t regionLimit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setRegion64(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t regionStart, int64_t regionLimit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setRegionAndStart(win32::Windows::Win32::Intl::URegularExpression* regexp, int64_t regionStart, int64_t regionLimit, int64_t startIndex, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_regionStart(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_uregex_regionStart64(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_regionEnd(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_uregex_regionEnd64(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_hasTransparentBounds(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_useTransparentBounds(win32::Windows::Win32::Intl::URegularExpression* regexp, int8_t b, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_hasAnchoringBounds(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_useAnchoringBounds(win32::Windows::Win32::Intl::URegularExpression* regexp, int8_t b, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_hitEnd(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregex_requireEnd(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_replaceAll(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* replacementText, int32_t replacementLength, uint16_t* destBuf, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_replaceAllUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* replacement, win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_replaceFirst(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* replacementText, int32_t replacementLength, uint16_t* destBuf, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_replaceFirstUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* replacement, win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_appendReplacement(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* replacementText, int32_t replacementLength, uint16_t** destBuf, int32_t* destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_appendReplacementUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* replacementText, win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_appendTail(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t** destBuf, int32_t* destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UText* __stdcall WIN32_IMPL_uregex_appendTailUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText* dest, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_split(win32::Windows::Win32::Intl::URegularExpression* regexp, uint16_t* destBuf, int32_t destCapacity, int32_t* requiredCapacity, uint16_t** destFields, int32_t destFieldsCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_splitUText(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UText** destFields, int32_t destFieldsCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setTimeLimit(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t limit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_getTimeLimit(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setStackLimit(win32::Windows::Win32::Intl::URegularExpression* regexp, int32_t limit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uregex_getStackLimit(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setMatchCallback(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::URegexMatchCallback** callback, void* context, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_getMatchCallback(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::URegexMatchCallback*** callback, void** context, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_setFindProgressCallback(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::URegexFindProgressCallback** callback, void* context, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uregex_getFindProgressCallback(win32::Windows::Win32::Intl::URegularExpression* regexp, win32::Windows::Win32::Intl::URegexFindProgressCallback*** callback, void** context, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URegion* __stdcall WIN32_IMPL_uregion_getRegionFromCode(int8_t* regionCode, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URegion* __stdcall WIN32_IMPL_uregion_getRegionFromNumericCode(int32_t code, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uregion_getAvailable(win32::Windows::Win32::Intl::URegionType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregion_areEqual(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::URegion* otherRegion) noexcept;
    win32::Windows::Win32::Intl::URegion* __stdcall WIN32_IMPL_uregion_getContainingRegion(win32::Windows::Win32::Intl::URegion* uregion) noexcept;
    win32::Windows::Win32::Intl::URegion* __stdcall WIN32_IMPL_uregion_getContainingRegionOfType(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::URegionType type) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uregion_getContainedRegions(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uregion_getContainedRegionsOfType(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::URegionType type, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t __stdcall WIN32_IMPL_uregion_contains(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::URegion* otherRegion) noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_uregion_getPreferredValues(win32::Windows::Win32::Intl::URegion* uregion, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_uregion_getRegionCode(win32::Windows::Win32::Intl::URegion* uregion) noexcept;
    int32_t __stdcall WIN32_IMPL_uregion_getNumericCode(win32::Windows::Win32::Intl::URegion* uregion) noexcept;
    win32::Windows::Win32::Intl::URegionType __stdcall WIN32_IMPL_uregion_getType(win32::Windows::Win32::Intl::URegion* uregion) noexcept;
    win32::Windows::Win32::Intl::URelativeDateTimeFormatter* __stdcall WIN32_IMPL_ureldatefmt_open(int8_t* locale, void** nfToAdopt, win32::Windows::Win32::Intl::UDateRelativeDateTimeFormatterStyle width, win32::Windows::Win32::Intl::UDisplayContext capitalizationContext, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_ureldatefmt_close(win32::Windows::Win32::Intl::URelativeDateTimeFormatter* reldatefmt) noexcept;
    int32_t __stdcall WIN32_IMPL_ureldatefmt_formatNumeric(win32::Windows::Win32::Intl::URelativeDateTimeFormatter* reldatefmt, double offset, win32::Windows::Win32::Intl::URelativeDateTimeUnit unit, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ureldatefmt_format(win32::Windows::Win32::Intl::URelativeDateTimeFormatter* reldatefmt, double offset, win32::Windows::Win32::Intl::URelativeDateTimeUnit unit, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_ureldatefmt_combineDateAndTime(win32::Windows::Win32::Intl::URelativeDateTimeFormatter* reldatefmt, uint16_t* relativeDateString, int32_t relativeDateStringLen, uint16_t* timeString, int32_t timeStringLen, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UStringSearch* __stdcall WIN32_IMPL_usearch_open(uint16_t* pattern, int32_t patternlength, uint16_t* text, int32_t textlength, int8_t* locale, win32::Windows::Win32::Intl::UBreakIterator* breakiter, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UStringSearch* __stdcall WIN32_IMPL_usearch_openFromCollator(uint16_t* pattern, int32_t patternlength, uint16_t* text, int32_t textlength, win32::Windows::Win32::Intl::UCollator* collator, win32::Windows::Win32::Intl::UBreakIterator* breakiter, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_usearch_close(win32::Windows::Win32::Intl::UStringSearch* searchiter) noexcept;
    void __stdcall WIN32_IMPL_usearch_setOffset(win32::Windows::Win32::Intl::UStringSearch* strsrch, int32_t position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_getOffset(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    void __stdcall WIN32_IMPL_usearch_setAttribute(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::USearchAttribute attribute, win32::Windows::Win32::Intl::USearchAttributeValue value, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USearchAttributeValue __stdcall WIN32_IMPL_usearch_getAttribute(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::USearchAttribute attribute) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_getMatchedStart(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_getMatchedLength(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_getMatchedText(win32::Windows::Win32::Intl::UStringSearch* strsrch, uint16_t* result, int32_t resultCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_usearch_setBreakIterator(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UBreakIterator* breakiter, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::UBreakIterator* __stdcall WIN32_IMPL_usearch_getBreakIterator(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    void __stdcall WIN32_IMPL_usearch_setText(win32::Windows::Win32::Intl::UStringSearch* strsrch, uint16_t* text, int32_t textlength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_usearch_getText(win32::Windows::Win32::Intl::UStringSearch* strsrch, int32_t* length) noexcept;
    win32::Windows::Win32::Intl::UCollator* __stdcall WIN32_IMPL_usearch_getCollator(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    void __stdcall WIN32_IMPL_usearch_setCollator(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UCollator* collator, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_usearch_setPattern(win32::Windows::Win32::Intl::UStringSearch* strsrch, uint16_t* pattern, int32_t patternlength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    uint16_t* __stdcall WIN32_IMPL_usearch_getPattern(win32::Windows::Win32::Intl::UStringSearch* strsrch, int32_t* length) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_first(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_following(win32::Windows::Win32::Intl::UStringSearch* strsrch, int32_t position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_last(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_preceding(win32::Windows::Win32::Intl::UStringSearch* strsrch, int32_t position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_next(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_usearch_previous(win32::Windows::Win32::Intl::UStringSearch* strsrch, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_usearch_reset(win32::Windows::Win32::Intl::UStringSearch* strsrch) noexcept;
    win32::Windows::Win32::Intl::USpoofChecker* __stdcall WIN32_IMPL_uspoof_open(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USpoofChecker* __stdcall WIN32_IMPL_uspoof_openFromSerialized(void* data, int32_t length, int32_t* pActualLength, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    win32::Windows::Win32::Intl::USpoofChecker* __stdcall WIN32_IMPL_uspoof_openFromSource(int8_t* confusables, int32_t confusablesLen, int8_t* confusablesWholeScript, int32_t confusablesWholeScriptLen, int32_t* errType, win32::Windows::Win32::Intl::UParseError* pe, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uspoof_close(win32::Windows::Win32::Intl::USpoofChecker* sc) noexcept;
    win32::Windows::Win32::Intl::USpoofChecker* __stdcall WIN32_IMPL_uspoof_clone(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uspoof_setChecks(win32::Windows::Win32::Intl::USpoofChecker* sc, int32_t checks, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_getChecks(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uspoof_setRestrictionLevel(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::URestrictionLevel restrictionLevel) noexcept;
    win32::Windows::Win32::Intl::URestrictionLevel __stdcall WIN32_IMPL_uspoof_getRestrictionLevel(win32::Windows::Win32::Intl::USpoofChecker* sc) noexcept;
    void __stdcall WIN32_IMPL_uspoof_setAllowedLocales(win32::Windows::Win32::Intl::USpoofChecker* sc, int8_t* localesList, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int8_t* __stdcall WIN32_IMPL_uspoof_getAllowedLocales(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uspoof_setAllowedChars(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::USet* chars, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uspoof_getAllowedChars(win32::Windows::Win32::Intl::USpoofChecker* sc, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_check(win32::Windows::Win32::Intl::USpoofChecker* sc, uint16_t* id, int32_t length, int32_t* position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_checkUTF8(win32::Windows::Win32::Intl::USpoofChecker* sc, int8_t* id, int32_t length, int32_t* position, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_check2(win32::Windows::Win32::Intl::USpoofChecker* sc, uint16_t* id, int32_t length, win32::Windows::Win32::Intl::USpoofCheckResult* checkResult, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_check2UTF8(win32::Windows::Win32::Intl::USpoofChecker* sc, int8_t* id, int32_t length, win32::Windows::Win32::Intl::USpoofCheckResult* checkResult, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USpoofCheckResult* __stdcall WIN32_IMPL_uspoof_openCheckResult(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_uspoof_closeCheckResult(win32::Windows::Win32::Intl::USpoofCheckResult* checkResult) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_getCheckResultChecks(win32::Windows::Win32::Intl::USpoofCheckResult* checkResult, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::URestrictionLevel __stdcall WIN32_IMPL_uspoof_getCheckResultRestrictionLevel(win32::Windows::Win32::Intl::USpoofCheckResult* checkResult, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uspoof_getCheckResultNumerics(win32::Windows::Win32::Intl::USpoofCheckResult* checkResult, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_areConfusable(win32::Windows::Win32::Intl::USpoofChecker* sc, uint16_t* id1, int32_t length1, uint16_t* id2, int32_t length2, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_areConfusableUTF8(win32::Windows::Win32::Intl::USpoofChecker* sc, int8_t* id1, int32_t length1, int8_t* id2, int32_t length2, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_getSkeleton(win32::Windows::Win32::Intl::USpoofChecker* sc, uint32_t type, uint16_t* id, int32_t length, uint16_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_getSkeletonUTF8(win32::Windows::Win32::Intl::USpoofChecker* sc, uint32_t type, int8_t* id, int32_t length, int8_t* dest, int32_t destCapacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uspoof_getInclusionSet(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_uspoof_getRecommendedSet(win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_uspoof_serialize(win32::Windows::Win32::Intl::USpoofChecker* sc, void* data, int32_t capacity, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_utmscale_getTimeScaleValue(win32::Windows::Win32::Intl::UDateTimeScale timeScale, win32::Windows::Win32::Intl::UTimeScaleValue value, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_utmscale_fromInt64(int64_t otherTime, win32::Windows::Win32::Intl::UDateTimeScale timeScale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int64_t __stdcall WIN32_IMPL_utmscale_toInt64(int64_t universalTime, win32::Windows::Win32::Intl::UDateTimeScale timeScale, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_utrans_openU(uint16_t* id, int32_t idLength, win32::Windows::Win32::Intl::UTransDirection dir, uint16_t* rules, int32_t rulesLength, win32::Windows::Win32::Intl::UParseError* parseError, win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void** __stdcall WIN32_IMPL_utrans_openInverse(void** trans, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void** __stdcall WIN32_IMPL_utrans_clone(void** trans, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utrans_close(void** trans) noexcept;
    uint16_t* __stdcall WIN32_IMPL_utrans_getUnicodeID(void** trans, int32_t* resultLength) noexcept;
    void __stdcall WIN32_IMPL_utrans_register(void** adoptedTrans, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utrans_unregisterID(uint16_t* id, int32_t idLength) noexcept;
    void __stdcall WIN32_IMPL_utrans_setFilter(void** trans, uint16_t* filterPattern, int32_t filterPatternLen, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_utrans_countAvailableIDs() noexcept;
    win32::Windows::Win32::Intl::UEnumeration* __stdcall WIN32_IMPL_utrans_openIDs(win32::Windows::Win32::Intl::UErrorCode* pErrorCode) noexcept;
    void __stdcall WIN32_IMPL_utrans_trans(void** trans, void** rep, win32::Windows::Win32::Intl::UReplaceableCallbacks* repFunc, int32_t start, int32_t* limit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utrans_transIncremental(void** trans, void** rep, win32::Windows::Win32::Intl::UReplaceableCallbacks* repFunc, win32::Windows::Win32::Intl::UTransPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utrans_transUChars(void** trans, uint16_t* text, int32_t* textLength, int32_t textCapacity, int32_t start, int32_t* limit, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    void __stdcall WIN32_IMPL_utrans_transIncrementalUChars(void** trans, uint16_t* text, int32_t* textLength, int32_t textCapacity, win32::Windows::Win32::Intl::UTransPosition* pos, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_utrans_toRules(void** trans, int8_t escapeUnprintable, uint16_t* result, int32_t resultLength, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    win32::Windows::Win32::Intl::USet* __stdcall WIN32_IMPL_utrans_getSourceSet(void** trans, int8_t ignoreFilter, win32::Windows::Win32::Intl::USet* fillIn, win32::Windows::Win32::Intl::UErrorCode* status) noexcept;
    int32_t __stdcall WIN32_IMPL_FindStringOrdinal(uint32_t dwFindStringOrdinalFlags, uint16_t* lpStringSource, int32_t cchSource, uint16_t* lpStringValue, int32_t cchValue, win32::Windows::Win32::SystemServices::BOOL bIgnoreCase) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IsTextUnicode(void* lpv, int32_t iSize, int32_t* lpiResult) noexcept;
}
WIN32_IMPL_LINK(GetTextCharset, 4)
WIN32_IMPL_LINK(GetTextCharsetInfo, 12)
WIN32_IMPL_LINK(TranslateCharsetInfo, 12)
WIN32_IMPL_LINK(GetDateFormatA, 24)
WIN32_IMPL_LINK(GetDateFormatW, 24)
WIN32_IMPL_LINK(GetTimeFormatA, 24)
WIN32_IMPL_LINK(GetTimeFormatW, 24)
WIN32_IMPL_LINK(GetTimeFormatEx, 24)
WIN32_IMPL_LINK(GetDateFormatEx, 28)
WIN32_IMPL_LINK(GetDurationFormatEx, 32)
WIN32_IMPL_LINK(CompareStringEx, 36)
WIN32_IMPL_LINK(CompareStringOrdinal, 20)
WIN32_IMPL_LINK(CompareStringW, 24)
WIN32_IMPL_LINK(FoldStringW, 20)
WIN32_IMPL_LINK(GetStringTypeExW, 20)
WIN32_IMPL_LINK(GetStringTypeW, 16)
WIN32_IMPL_LINK(MultiByteToWideChar, 24)
WIN32_IMPL_LINK(WideCharToMultiByte, 32)
WIN32_IMPL_LINK(IsValidCodePage, 4)
WIN32_IMPL_LINK(GetACP, 0)
WIN32_IMPL_LINK(GetOEMCP, 0)
WIN32_IMPL_LINK(GetCPInfo, 8)
WIN32_IMPL_LINK(GetCPInfoExA, 12)
WIN32_IMPL_LINK(GetCPInfoExW, 12)
WIN32_IMPL_LINK(CompareStringA, 24)
WIN32_IMPL_LINK(FindNLSString, 28)
WIN32_IMPL_LINK(LCMapStringW, 24)
WIN32_IMPL_LINK(LCMapStringA, 24)
WIN32_IMPL_LINK(GetLocaleInfoW, 16)
WIN32_IMPL_LINK(GetLocaleInfoA, 16)
WIN32_IMPL_LINK(SetLocaleInfoA, 12)
WIN32_IMPL_LINK(SetLocaleInfoW, 12)
WIN32_IMPL_LINK(GetCalendarInfoA, 24)
WIN32_IMPL_LINK(GetCalendarInfoW, 24)
WIN32_IMPL_LINK(SetCalendarInfoA, 16)
WIN32_IMPL_LINK(SetCalendarInfoW, 16)
WIN32_IMPL_LINK(IsDBCSLeadByte, 4)
WIN32_IMPL_LINK(IsDBCSLeadByteEx, 8)
WIN32_IMPL_LINK(LocaleNameToLCID, 8)
WIN32_IMPL_LINK(LCIDToLocaleName, 16)
WIN32_IMPL_LINK(GetDurationFormat, 32)
WIN32_IMPL_LINK(GetNumberFormatA, 24)
WIN32_IMPL_LINK(GetNumberFormatW, 24)
WIN32_IMPL_LINK(GetCurrencyFormatA, 24)
WIN32_IMPL_LINK(GetCurrencyFormatW, 24)
WIN32_IMPL_LINK(EnumCalendarInfoA, 16)
WIN32_IMPL_LINK(EnumCalendarInfoW, 16)
WIN32_IMPL_LINK(EnumCalendarInfoExA, 16)
WIN32_IMPL_LINK(EnumCalendarInfoExW, 16)
WIN32_IMPL_LINK(EnumTimeFormatsA, 12)
WIN32_IMPL_LINK(EnumTimeFormatsW, 12)
WIN32_IMPL_LINK(EnumDateFormatsA, 12)
WIN32_IMPL_LINK(EnumDateFormatsW, 12)
WIN32_IMPL_LINK(EnumDateFormatsExA, 12)
WIN32_IMPL_LINK(EnumDateFormatsExW, 12)
WIN32_IMPL_LINK(IsValidLanguageGroup, 8)
WIN32_IMPL_LINK(GetNLSVersion, 12)
WIN32_IMPL_LINK(IsValidLocale, 8)
WIN32_IMPL_LINK(GetGeoInfoA, 20)
WIN32_IMPL_LINK(GetGeoInfoW, 20)
WIN32_IMPL_LINK(GetGeoInfoEx, 16)
WIN32_IMPL_LINK(EnumSystemGeoID, 12)
WIN32_IMPL_LINK(EnumSystemGeoNames, 12)
WIN32_IMPL_LINK(GetUserGeoID, 4)
WIN32_IMPL_LINK(GetUserDefaultGeoName, 8)
WIN32_IMPL_LINK(SetUserGeoID, 4)
WIN32_IMPL_LINK(SetUserGeoName, 4)
WIN32_IMPL_LINK(ConvertDefaultLocale, 4)
WIN32_IMPL_LINK(GetSystemDefaultUILanguage, 0)
WIN32_IMPL_LINK(GetThreadLocale, 0)
WIN32_IMPL_LINK(SetThreadLocale, 4)
WIN32_IMPL_LINK(GetUserDefaultUILanguage, 0)
WIN32_IMPL_LINK(GetUserDefaultLangID, 0)
WIN32_IMPL_LINK(GetSystemDefaultLangID, 0)
WIN32_IMPL_LINK(GetSystemDefaultLCID, 0)
WIN32_IMPL_LINK(GetUserDefaultLCID, 0)
WIN32_IMPL_LINK(SetThreadUILanguage, 4)
WIN32_IMPL_LINK(GetThreadUILanguage, 0)
WIN32_IMPL_LINK(GetProcessPreferredUILanguages, 16)
WIN32_IMPL_LINK(SetProcessPreferredUILanguages, 12)
WIN32_IMPL_LINK(GetUserPreferredUILanguages, 16)
WIN32_IMPL_LINK(GetSystemPreferredUILanguages, 16)
WIN32_IMPL_LINK(GetThreadPreferredUILanguages, 16)
WIN32_IMPL_LINK(SetThreadPreferredUILanguages, 12)
WIN32_IMPL_LINK(GetFileMUIInfo, 16)
WIN32_IMPL_LINK(GetFileMUIPath, 28)
WIN32_IMPL_LINK(GetUILanguageInfo, 20)
WIN32_IMPL_LINK(SetThreadPreferredUILanguages2, 16)
WIN32_IMPL_LINK(RestoreThreadPreferredUILanguages, 4)
WIN32_IMPL_LINK(NotifyUILanguageChange, 20)
WIN32_IMPL_LINK(GetStringTypeExA, 20)
WIN32_IMPL_LINK(GetStringTypeA, 20)
WIN32_IMPL_LINK(FoldStringA, 20)
WIN32_IMPL_LINK(EnumSystemLocalesA, 8)
WIN32_IMPL_LINK(EnumSystemLocalesW, 8)
WIN32_IMPL_LINK(EnumSystemLanguageGroupsA, 12)
WIN32_IMPL_LINK(EnumSystemLanguageGroupsW, 12)
WIN32_IMPL_LINK(EnumLanguageGroupLocalesA, 16)
WIN32_IMPL_LINK(EnumLanguageGroupLocalesW, 16)
WIN32_IMPL_LINK(EnumUILanguagesA, 12)
WIN32_IMPL_LINK(EnumUILanguagesW, 12)
WIN32_IMPL_LINK(EnumSystemCodePagesA, 8)
WIN32_IMPL_LINK(EnumSystemCodePagesW, 8)
WIN32_IMPL_LINK(IdnToAscii, 20)
WIN32_IMPL_LINK(IdnToUnicode, 20)
WIN32_IMPL_LINK(IdnToNameprepUnicode, 20)
WIN32_IMPL_LINK(NormalizeString, 20)
WIN32_IMPL_LINK(IsNormalizedString, 12)
WIN32_IMPL_LINK(VerifyScripts, 20)
WIN32_IMPL_LINK(GetStringScripts, 20)
WIN32_IMPL_LINK(GetLocaleInfoEx, 16)
WIN32_IMPL_LINK(GetCalendarInfoEx, 28)
WIN32_IMPL_LINK(GetNumberFormatEx, 24)
WIN32_IMPL_LINK(GetCurrencyFormatEx, 24)
WIN32_IMPL_LINK(GetUserDefaultLocaleName, 8)
WIN32_IMPL_LINK(GetSystemDefaultLocaleName, 8)
WIN32_IMPL_LINK(IsNLSDefinedString, 20)
WIN32_IMPL_LINK(GetNLSVersionEx, 12)
WIN32_IMPL_LINK(IsValidNLSVersion, 12)
WIN32_IMPL_LINK(FindNLSStringEx, 40)
WIN32_IMPL_LINK(LCMapStringEx, 36)
WIN32_IMPL_LINK(IsValidLocaleName, 4)
WIN32_IMPL_LINK(EnumCalendarInfoExEx, 24)
WIN32_IMPL_LINK(EnumDateFormatsExEx, 16)
WIN32_IMPL_LINK(EnumTimeFormatsEx, 16)
WIN32_IMPL_LINK(EnumSystemLocalesEx, 16)
WIN32_IMPL_LINK(ResolveLocaleName, 12)
WIN32_IMPL_LINK(ImmInstallIMEA, 8)
WIN32_IMPL_LINK(ImmInstallIMEW, 8)
WIN32_IMPL_LINK(ImmGetDefaultIMEWnd, 4)
WIN32_IMPL_LINK(ImmGetDescriptionA, 12)
WIN32_IMPL_LINK(ImmGetDescriptionW, 12)
WIN32_IMPL_LINK(ImmGetIMEFileNameA, 12)
WIN32_IMPL_LINK(ImmGetIMEFileNameW, 12)
WIN32_IMPL_LINK(ImmGetProperty, 8)
WIN32_IMPL_LINK(ImmIsIME, 4)
WIN32_IMPL_LINK(ImmSimulateHotKey, 8)
WIN32_IMPL_LINK(ImmCreateContext, 0)
WIN32_IMPL_LINK(ImmDestroyContext, 4)
WIN32_IMPL_LINK(ImmGetContext, 4)
WIN32_IMPL_LINK(ImmReleaseContext, 8)
WIN32_IMPL_LINK(ImmAssociateContext, 8)
WIN32_IMPL_LINK(ImmAssociateContextEx, 12)
WIN32_IMPL_LINK(ImmGetCompositionStringA, 16)
WIN32_IMPL_LINK(ImmGetCompositionStringW, 16)
WIN32_IMPL_LINK(ImmSetCompositionStringA, 24)
WIN32_IMPL_LINK(ImmSetCompositionStringW, 24)
WIN32_IMPL_LINK(ImmGetCandidateListCountA, 8)
WIN32_IMPL_LINK(ImmGetCandidateListCountW, 8)
WIN32_IMPL_LINK(ImmGetCandidateListA, 16)
WIN32_IMPL_LINK(ImmGetCandidateListW, 16)
WIN32_IMPL_LINK(ImmGetGuideLineA, 16)
WIN32_IMPL_LINK(ImmGetGuideLineW, 16)
WIN32_IMPL_LINK(ImmGetConversionStatus, 12)
WIN32_IMPL_LINK(ImmSetConversionStatus, 12)
WIN32_IMPL_LINK(ImmGetOpenStatus, 4)
WIN32_IMPL_LINK(ImmSetOpenStatus, 8)
WIN32_IMPL_LINK(ImmGetCompositionFontA, 8)
WIN32_IMPL_LINK(ImmGetCompositionFontW, 8)
WIN32_IMPL_LINK(ImmSetCompositionFontA, 8)
WIN32_IMPL_LINK(ImmSetCompositionFontW, 8)
WIN32_IMPL_LINK(ImmConfigureIMEA, 16)
WIN32_IMPL_LINK(ImmConfigureIMEW, 16)
WIN32_IMPL_LINK(ImmEscapeA, 16)
WIN32_IMPL_LINK(ImmEscapeW, 16)
WIN32_IMPL_LINK(ImmGetConversionListA, 24)
WIN32_IMPL_LINK(ImmGetConversionListW, 24)
WIN32_IMPL_LINK(ImmNotifyIME, 16)
WIN32_IMPL_LINK(ImmGetStatusWindowPos, 8)
WIN32_IMPL_LINK(ImmSetStatusWindowPos, 8)
WIN32_IMPL_LINK(ImmGetCompositionWindow, 8)
WIN32_IMPL_LINK(ImmSetCompositionWindow, 8)
WIN32_IMPL_LINK(ImmGetCandidateWindow, 12)
WIN32_IMPL_LINK(ImmSetCandidateWindow, 8)
WIN32_IMPL_LINK(ImmIsUIMessageA, 16)
WIN32_IMPL_LINK(ImmIsUIMessageW, 16)
WIN32_IMPL_LINK(ImmGetVirtualKey, 4)
WIN32_IMPL_LINK(ImmRegisterWordA, 16)
WIN32_IMPL_LINK(ImmRegisterWordW, 16)
WIN32_IMPL_LINK(ImmUnregisterWordA, 16)
WIN32_IMPL_LINK(ImmUnregisterWordW, 16)
WIN32_IMPL_LINK(ImmGetRegisterWordStyleA, 12)
WIN32_IMPL_LINK(ImmGetRegisterWordStyleW, 12)
WIN32_IMPL_LINK(ImmEnumRegisterWordA, 24)
WIN32_IMPL_LINK(ImmEnumRegisterWordW, 24)
WIN32_IMPL_LINK(ImmDisableIME, 4)
WIN32_IMPL_LINK(ImmEnumInputContext, 12)
WIN32_IMPL_LINK(ImmGetImeMenuItemsA, 24)
WIN32_IMPL_LINK(ImmGetImeMenuItemsW, 24)
WIN32_IMPL_LINK(ImmDisableTextFrameService, 4)
WIN32_IMPL_LINK(ImmDisableLegacyIME, 0)
WIN32_IMPL_LINK(MappingGetServices, 12)
WIN32_IMPL_LINK(MappingFreeServices, 4)
WIN32_IMPL_LINK(MappingRecognizeText, 24)
WIN32_IMPL_LINK(MappingDoAction, 12)
WIN32_IMPL_LINK(MappingFreePropertyBag, 4)
WIN32_IMPL_LINK(ImmGetHotKey, 16)
WIN32_IMPL_LINK(ImmSetHotKey, 16)
WIN32_IMPL_LINK(ImmGenerateMessage, 4)
WIN32_IMPL_LINK(ImmRequestMessageA, 12)
WIN32_IMPL_LINK(ImmRequestMessageW, 12)
WIN32_IMPL_LINK(ImmCreateSoftKeyboard, 16)
WIN32_IMPL_LINK(ImmDestroySoftKeyboard, 4)
WIN32_IMPL_LINK(ImmShowSoftKeyboard, 8)
WIN32_IMPL_LINK(ImmLockIMC, 4)
WIN32_IMPL_LINK(ImmUnlockIMC, 4)
WIN32_IMPL_LINK(ImmGetIMCLockCount, 4)
WIN32_IMPL_LINK(ImmCreateIMCC, 4)
WIN32_IMPL_LINK(ImmDestroyIMCC, 4)
WIN32_IMPL_LINK(ImmLockIMCC, 4)
WIN32_IMPL_LINK(ImmUnlockIMCC, 4)
WIN32_IMPL_LINK(ImmGetIMCCLockCount, 4)
WIN32_IMPL_LINK(ImmReSizeIMCC, 8)
WIN32_IMPL_LINK(ImmGetIMCCSize, 4)
WIN32_IMPL_LINK(ScriptFreeCache, 4)
WIN32_IMPL_LINK(ScriptItemize, 28)
WIN32_IMPL_LINK(ScriptLayout, 16)
WIN32_IMPL_LINK(ScriptShape, 40)
WIN32_IMPL_LINK(ScriptPlace, 36)
WIN32_IMPL_LINK(ScriptTextOut, 56)
WIN32_IMPL_LINK(ScriptJustify, 24)
WIN32_IMPL_LINK(ScriptBreak, 16)
WIN32_IMPL_LINK(ScriptCPtoX, 36)
WIN32_IMPL_LINK(ScriptXtoCP, 36)
WIN32_IMPL_LINK(ScriptGetLogicalWidths, 28)
WIN32_IMPL_LINK(ScriptApplyLogicalWidth, 36)
WIN32_IMPL_LINK(ScriptGetCMap, 24)
WIN32_IMPL_LINK(ScriptGetGlyphABCWidth, 16)
WIN32_IMPL_LINK(ScriptGetProperties, 8)
WIN32_IMPL_LINK(ScriptGetFontProperties, 12)
WIN32_IMPL_LINK(ScriptCacheGetHeight, 12)
WIN32_IMPL_LINK(ScriptStringAnalyse, 52)
WIN32_IMPL_LINK(ScriptStringFree, 4)
WIN32_IMPL_LINK(ScriptString_pSize, 4)
WIN32_IMPL_LINK(ScriptString_pcOutChars, 4)
WIN32_IMPL_LINK(ScriptString_pLogAttr, 4)
WIN32_IMPL_LINK(ScriptStringGetOrder, 8)
WIN32_IMPL_LINK(ScriptStringCPtoX, 16)
WIN32_IMPL_LINK(ScriptStringXtoCP, 16)
WIN32_IMPL_LINK(ScriptStringGetLogicalWidths, 8)
WIN32_IMPL_LINK(ScriptStringValidate, 4)
WIN32_IMPL_LINK(ScriptStringOut, 32)
WIN32_IMPL_LINK(ScriptIsComplex, 12)
WIN32_IMPL_LINK(ScriptRecordDigitSubstitution, 8)
WIN32_IMPL_LINK(ScriptApplyDigitSubstitution, 12)
WIN32_IMPL_LINK(ScriptShapeOpenType, 64)
WIN32_IMPL_LINK(ScriptPlaceOpenType, 72)
WIN32_IMPL_LINK(ScriptItemizeOpenType, 32)
WIN32_IMPL_LINK(ScriptGetFontScriptTags, 24)
WIN32_IMPL_LINK(ScriptGetFontLanguageTags, 28)
WIN32_IMPL_LINK(ScriptGetFontFeatureTags, 32)
WIN32_IMPL_LINK(ScriptGetFontAlternateGlyphs, 40)
WIN32_IMPL_LINK(ScriptSubstituteSingleGlyph, 36)
WIN32_IMPL_LINK(ScriptPositionSingleGlyph, 48)
WIN32_IMPL_LINK(utf8_nextCharSafeBody, 20)
WIN32_IMPL_LINK(utf8_appendCharSafeBody, 20)
WIN32_IMPL_LINK(utf8_prevCharSafeBody, 20)
WIN32_IMPL_LINK(utf8_back1SafeBody, 12)
WIN32_IMPL_LINK(u_versionFromString, 8)
WIN32_IMPL_LINK(u_versionFromUString, 8)
WIN32_IMPL_LINK(u_versionToString, 8)
WIN32_IMPL_LINK(u_getVersion, 4)
WIN32_IMPL_LINK(u_errorName, 4)
WIN32_IMPL_LINK(utrace_setLevel, 4)
WIN32_IMPL_LINK(utrace_getLevel, 0)
WIN32_IMPL_LINK(utrace_setFunctions, 16)
WIN32_IMPL_LINK(utrace_getFunctions, 16)
WIN32_IMPL_LINK(utrace_vformat, 20)
WIN32_IMPL_LINK(utrace_format, 16)
WIN32_IMPL_LINK(utrace_functionName, 4)
WIN32_IMPL_LINK(u_shapeArabic, 24)
WIN32_IMPL_LINK(uscript_getCode, 16)
WIN32_IMPL_LINK(uscript_getName, 4)
WIN32_IMPL_LINK(uscript_getShortName, 4)
WIN32_IMPL_LINK(uscript_getScript, 8)
WIN32_IMPL_LINK(uscript_hasScript, 8)
WIN32_IMPL_LINK(uscript_getScriptExtensions, 16)
WIN32_IMPL_LINK(uscript_getSampleString, 16)
WIN32_IMPL_LINK(uscript_getUsage, 4)
WIN32_IMPL_LINK(uscript_isRightToLeft, 4)
WIN32_IMPL_LINK(uscript_breaksBetweenLetters, 4)
WIN32_IMPL_LINK(uscript_isCased, 4)
WIN32_IMPL_LINK(uiter_current32, 4)
WIN32_IMPL_LINK(uiter_next32, 4)
WIN32_IMPL_LINK(uiter_previous32, 4)
WIN32_IMPL_LINK(uiter_getState, 4)
WIN32_IMPL_LINK(uiter_setState, 12)
WIN32_IMPL_LINK(uiter_setString, 12)
WIN32_IMPL_LINK(uiter_setUTF16BE, 12)
WIN32_IMPL_LINK(uiter_setUTF8, 12)
WIN32_IMPL_LINK(uenum_close, 4)
WIN32_IMPL_LINK(uenum_count, 8)
WIN32_IMPL_LINK(uenum_unext, 12)
WIN32_IMPL_LINK(uenum_next, 12)
WIN32_IMPL_LINK(uenum_reset, 8)
WIN32_IMPL_LINK(uenum_openUCharStringsEnumeration, 12)
WIN32_IMPL_LINK(uenum_openCharStringsEnumeration, 12)
WIN32_IMPL_LINK(uloc_getDefault, 0)
WIN32_IMPL_LINK(uloc_setDefault, 8)
WIN32_IMPL_LINK(uloc_getLanguage, 16)
WIN32_IMPL_LINK(uloc_getScript, 16)
WIN32_IMPL_LINK(uloc_getCountry, 16)
WIN32_IMPL_LINK(uloc_getVariant, 16)
WIN32_IMPL_LINK(uloc_getName, 16)
WIN32_IMPL_LINK(uloc_canonicalize, 16)
WIN32_IMPL_LINK(uloc_getISO3Language, 4)
WIN32_IMPL_LINK(uloc_getISO3Country, 4)
WIN32_IMPL_LINK(uloc_getLCID, 4)
WIN32_IMPL_LINK(uloc_getDisplayLanguage, 20)
WIN32_IMPL_LINK(uloc_getDisplayScript, 20)
WIN32_IMPL_LINK(uloc_getDisplayCountry, 20)
WIN32_IMPL_LINK(uloc_getDisplayVariant, 20)
WIN32_IMPL_LINK(uloc_getDisplayKeyword, 20)
WIN32_IMPL_LINK(uloc_getDisplayKeywordValue, 24)
WIN32_IMPL_LINK(uloc_getDisplayName, 20)
WIN32_IMPL_LINK(uloc_getAvailable, 4)
WIN32_IMPL_LINK(uloc_countAvailable, 0)
WIN32_IMPL_LINK(uloc_getISOLanguages, 0)
WIN32_IMPL_LINK(uloc_getISOCountries, 0)
WIN32_IMPL_LINK(uloc_getParent, 16)
WIN32_IMPL_LINK(uloc_getBaseName, 16)
WIN32_IMPL_LINK(uloc_openKeywords, 8)
WIN32_IMPL_LINK(uloc_getKeywordValue, 20)
WIN32_IMPL_LINK(uloc_setKeywordValue, 20)
WIN32_IMPL_LINK(uloc_isRightToLeft, 4)
WIN32_IMPL_LINK(uloc_getCharacterOrientation, 8)
WIN32_IMPL_LINK(uloc_getLineOrientation, 8)
WIN32_IMPL_LINK(uloc_acceptLanguageFromHTTP, 24)
WIN32_IMPL_LINK(uloc_acceptLanguage, 28)
WIN32_IMPL_LINK(uloc_getLocaleForLCID, 16)
WIN32_IMPL_LINK(uloc_addLikelySubtags, 16)
WIN32_IMPL_LINK(uloc_minimizeSubtags, 16)
WIN32_IMPL_LINK(uloc_forLanguageTag, 20)
WIN32_IMPL_LINK(uloc_toLanguageTag, 20)
WIN32_IMPL_LINK(uloc_toUnicodeLocaleKey, 4)
WIN32_IMPL_LINK(uloc_toUnicodeLocaleType, 8)
WIN32_IMPL_LINK(uloc_toLegacyKey, 4)
WIN32_IMPL_LINK(uloc_toLegacyType, 8)
WIN32_IMPL_LINK(ures_open, 12)
WIN32_IMPL_LINK(ures_openDirect, 12)
WIN32_IMPL_LINK(ures_openU, 12)
WIN32_IMPL_LINK(ures_close, 4)
WIN32_IMPL_LINK(ures_getVersion, 8)
WIN32_IMPL_LINK(ures_getLocaleByType, 12)
WIN32_IMPL_LINK(ures_getString, 12)
WIN32_IMPL_LINK(ures_getUTF8String, 20)
WIN32_IMPL_LINK(ures_getBinary, 12)
WIN32_IMPL_LINK(ures_getIntVector, 12)
WIN32_IMPL_LINK(ures_getUInt, 8)
WIN32_IMPL_LINK(ures_getInt, 8)
WIN32_IMPL_LINK(ures_getSize, 4)
WIN32_IMPL_LINK(ures_getType, 4)
WIN32_IMPL_LINK(ures_getKey, 4)
WIN32_IMPL_LINK(ures_resetIterator, 4)
WIN32_IMPL_LINK(ures_hasNext, 4)
WIN32_IMPL_LINK(ures_getNextResource, 12)
WIN32_IMPL_LINK(ures_getNextString, 16)
WIN32_IMPL_LINK(ures_getByIndex, 16)
WIN32_IMPL_LINK(ures_getStringByIndex, 16)
WIN32_IMPL_LINK(ures_getUTF8StringByIndex, 24)
WIN32_IMPL_LINK(ures_getByKey, 16)
WIN32_IMPL_LINK(ures_getStringByKey, 16)
WIN32_IMPL_LINK(ures_getUTF8StringByKey, 24)
WIN32_IMPL_LINK(ures_openAvailableLocales, 8)
WIN32_IMPL_LINK(uldn_open, 12)
WIN32_IMPL_LINK(uldn_close, 4)
WIN32_IMPL_LINK(uldn_getLocale, 4)
WIN32_IMPL_LINK(uldn_getDialectHandling, 4)
WIN32_IMPL_LINK(uldn_localeDisplayName, 20)
WIN32_IMPL_LINK(uldn_languageDisplayName, 20)
WIN32_IMPL_LINK(uldn_scriptDisplayName, 20)
WIN32_IMPL_LINK(uldn_scriptCodeDisplayName, 20)
WIN32_IMPL_LINK(uldn_regionDisplayName, 20)
WIN32_IMPL_LINK(uldn_variantDisplayName, 20)
WIN32_IMPL_LINK(uldn_keyDisplayName, 20)
WIN32_IMPL_LINK(uldn_keyValueDisplayName, 24)
WIN32_IMPL_LINK(uldn_openForContext, 16)
WIN32_IMPL_LINK(uldn_getContext, 12)
WIN32_IMPL_LINK(ucurr_forLocale, 16)
WIN32_IMPL_LINK(ucurr_register, 12)
WIN32_IMPL_LINK(ucurr_unregister, 8)
WIN32_IMPL_LINK(ucurr_getName, 24)
WIN32_IMPL_LINK(ucurr_getPluralName, 24)
WIN32_IMPL_LINK(ucurr_getDefaultFractionDigits, 8)
WIN32_IMPL_LINK(ucurr_getDefaultFractionDigitsForUsage, 12)
WIN32_IMPL_LINK(ucurr_getRoundingIncrement, 8)
WIN32_IMPL_LINK(ucurr_getRoundingIncrementForUsage, 12)
WIN32_IMPL_LINK(ucurr_openISOCurrencies, 8)
WIN32_IMPL_LINK(ucurr_isAvailable, 24)
WIN32_IMPL_LINK(ucurr_countCurrencies, 16)
WIN32_IMPL_LINK(ucurr_forLocaleAndDate, 28)
WIN32_IMPL_LINK(ucurr_getKeywordValuesForLocale, 16)
WIN32_IMPL_LINK(ucurr_getNumericCode, 4)
WIN32_IMPL_LINK(UCNV_FROM_U_CALLBACK_STOP, 28)
WIN32_IMPL_LINK(UCNV_TO_U_CALLBACK_STOP, 24)
WIN32_IMPL_LINK(UCNV_FROM_U_CALLBACK_SKIP, 28)
WIN32_IMPL_LINK(UCNV_FROM_U_CALLBACK_SUBSTITUTE, 28)
WIN32_IMPL_LINK(UCNV_FROM_U_CALLBACK_ESCAPE, 28)
WIN32_IMPL_LINK(UCNV_TO_U_CALLBACK_SKIP, 24)
WIN32_IMPL_LINK(UCNV_TO_U_CALLBACK_SUBSTITUTE, 24)
WIN32_IMPL_LINK(UCNV_TO_U_CALLBACK_ESCAPE, 24)
WIN32_IMPL_LINK(ucnv_compareNames, 8)
WIN32_IMPL_LINK(ucnv_open, 8)
WIN32_IMPL_LINK(ucnv_openU, 8)
WIN32_IMPL_LINK(ucnv_openCCSID, 12)
WIN32_IMPL_LINK(ucnv_openPackage, 12)
WIN32_IMPL_LINK(ucnv_safeClone, 16)
WIN32_IMPL_LINK(ucnv_close, 4)
WIN32_IMPL_LINK(ucnv_getSubstChars, 16)
WIN32_IMPL_LINK(ucnv_setSubstChars, 16)
WIN32_IMPL_LINK(ucnv_setSubstString, 16)
WIN32_IMPL_LINK(ucnv_getInvalidChars, 16)
WIN32_IMPL_LINK(ucnv_getInvalidUChars, 16)
WIN32_IMPL_LINK(ucnv_reset, 4)
WIN32_IMPL_LINK(ucnv_resetToUnicode, 4)
WIN32_IMPL_LINK(ucnv_resetFromUnicode, 4)
WIN32_IMPL_LINK(ucnv_getMaxCharSize, 4)
WIN32_IMPL_LINK(ucnv_getMinCharSize, 4)
WIN32_IMPL_LINK(ucnv_getDisplayName, 20)
WIN32_IMPL_LINK(ucnv_getName, 8)
WIN32_IMPL_LINK(ucnv_getCCSID, 8)
WIN32_IMPL_LINK(ucnv_getPlatform, 8)
WIN32_IMPL_LINK(ucnv_getType, 4)
WIN32_IMPL_LINK(ucnv_getStarters, 12)
WIN32_IMPL_LINK(ucnv_getUnicodeSet, 16)
WIN32_IMPL_LINK(ucnv_getToUCallBack, 12)
WIN32_IMPL_LINK(ucnv_getFromUCallBack, 12)
WIN32_IMPL_LINK(ucnv_setToUCallBack, 24)
WIN32_IMPL_LINK(ucnv_setFromUCallBack, 24)
WIN32_IMPL_LINK(ucnv_fromUnicode, 32)
WIN32_IMPL_LINK(ucnv_toUnicode, 32)
WIN32_IMPL_LINK(ucnv_fromUChars, 24)
WIN32_IMPL_LINK(ucnv_toUChars, 24)
WIN32_IMPL_LINK(ucnv_getNextUChar, 16)
WIN32_IMPL_LINK(ucnv_convertEx, 52)
WIN32_IMPL_LINK(ucnv_convert, 28)
WIN32_IMPL_LINK(ucnv_toAlgorithmic, 28)
WIN32_IMPL_LINK(ucnv_fromAlgorithmic, 28)
WIN32_IMPL_LINK(ucnv_flushCache, 0)
WIN32_IMPL_LINK(ucnv_countAvailable, 0)
WIN32_IMPL_LINK(ucnv_getAvailableName, 4)
WIN32_IMPL_LINK(ucnv_openAllNames, 4)
WIN32_IMPL_LINK(ucnv_countAliases, 8)
WIN32_IMPL_LINK(ucnv_getAlias, 12)
WIN32_IMPL_LINK(ucnv_getAliases, 12)
WIN32_IMPL_LINK(ucnv_openStandardNames, 12)
WIN32_IMPL_LINK(ucnv_countStandards, 0)
WIN32_IMPL_LINK(ucnv_getStandard, 8)
WIN32_IMPL_LINK(ucnv_getStandardName, 12)
WIN32_IMPL_LINK(ucnv_getCanonicalName, 12)
WIN32_IMPL_LINK(ucnv_getDefaultName, 0)
WIN32_IMPL_LINK(ucnv_setDefaultName, 4)
WIN32_IMPL_LINK(ucnv_fixFileSeparator, 12)
WIN32_IMPL_LINK(ucnv_isAmbiguous, 4)
WIN32_IMPL_LINK(ucnv_setFallback, 8)
WIN32_IMPL_LINK(ucnv_usesFallback, 4)
WIN32_IMPL_LINK(ucnv_detectUnicodeSignature, 16)
WIN32_IMPL_LINK(ucnv_fromUCountPending, 8)
WIN32_IMPL_LINK(ucnv_toUCountPending, 8)
WIN32_IMPL_LINK(ucnv_isFixedWidth, 8)
WIN32_IMPL_LINK(ucnv_cbFromUWriteBytes, 20)
WIN32_IMPL_LINK(ucnv_cbFromUWriteSub, 12)
WIN32_IMPL_LINK(ucnv_cbFromUWriteUChars, 20)
WIN32_IMPL_LINK(ucnv_cbToUWriteUChars, 20)
WIN32_IMPL_LINK(ucnv_cbToUWriteSub, 12)
WIN32_IMPL_LINK(u_init, 4)
WIN32_IMPL_LINK(u_cleanup, 0)
WIN32_IMPL_LINK(u_setMemoryFunctions, 20)
WIN32_IMPL_LINK(u_catopen, 12)
WIN32_IMPL_LINK(u_catclose, 4)
WIN32_IMPL_LINK(u_catgets, 24)
WIN32_IMPL_LINK(u_hasBinaryProperty, 8)
WIN32_IMPL_LINK(u_isUAlphabetic, 4)
WIN32_IMPL_LINK(u_isULowercase, 4)
WIN32_IMPL_LINK(u_isUUppercase, 4)
WIN32_IMPL_LINK(u_isUWhiteSpace, 4)
WIN32_IMPL_LINK(u_getIntPropertyValue, 8)
WIN32_IMPL_LINK(u_getIntPropertyMinValue, 4)
WIN32_IMPL_LINK(u_getIntPropertyMaxValue, 4)
WIN32_IMPL_LINK(u_getNumericValue, 4)
WIN32_IMPL_LINK(u_islower, 4)
WIN32_IMPL_LINK(u_isupper, 4)
WIN32_IMPL_LINK(u_istitle, 4)
WIN32_IMPL_LINK(u_isdigit, 4)
WIN32_IMPL_LINK(u_isalpha, 4)
WIN32_IMPL_LINK(u_isalnum, 4)
WIN32_IMPL_LINK(u_isxdigit, 4)
WIN32_IMPL_LINK(u_ispunct, 4)
WIN32_IMPL_LINK(u_isgraph, 4)
WIN32_IMPL_LINK(u_isblank, 4)
WIN32_IMPL_LINK(u_isdefined, 4)
WIN32_IMPL_LINK(u_isspace, 4)
WIN32_IMPL_LINK(u_isJavaSpaceChar, 4)
WIN32_IMPL_LINK(u_isWhitespace, 4)
WIN32_IMPL_LINK(u_iscntrl, 4)
WIN32_IMPL_LINK(u_isISOControl, 4)
WIN32_IMPL_LINK(u_isprint, 4)
WIN32_IMPL_LINK(u_isbase, 4)
WIN32_IMPL_LINK(u_charDirection, 4)
WIN32_IMPL_LINK(u_isMirrored, 4)
WIN32_IMPL_LINK(u_charMirror, 4)
WIN32_IMPL_LINK(u_getBidiPairedBracket, 4)
WIN32_IMPL_LINK(u_charType, 4)
WIN32_IMPL_LINK(u_enumCharTypes, 8)
WIN32_IMPL_LINK(u_getCombiningClass, 4)
WIN32_IMPL_LINK(u_charDigitValue, 4)
WIN32_IMPL_LINK(ublock_getCode, 4)
WIN32_IMPL_LINK(u_charName, 20)
WIN32_IMPL_LINK(u_charFromName, 12)
WIN32_IMPL_LINK(u_enumCharNames, 24)
WIN32_IMPL_LINK(u_getPropertyName, 8)
WIN32_IMPL_LINK(u_getPropertyEnum, 4)
WIN32_IMPL_LINK(u_getPropertyValueName, 12)
WIN32_IMPL_LINK(u_getPropertyValueEnum, 8)
WIN32_IMPL_LINK(u_isIDStart, 4)
WIN32_IMPL_LINK(u_isIDPart, 4)
WIN32_IMPL_LINK(u_isIDIgnorable, 4)
WIN32_IMPL_LINK(u_isJavaIDStart, 4)
WIN32_IMPL_LINK(u_isJavaIDPart, 4)
WIN32_IMPL_LINK(u_tolower, 4)
WIN32_IMPL_LINK(u_toupper, 4)
WIN32_IMPL_LINK(u_totitle, 4)
WIN32_IMPL_LINK(u_foldCase, 8)
WIN32_IMPL_LINK(u_digit, 8)
WIN32_IMPL_LINK(u_forDigit, 8)
WIN32_IMPL_LINK(u_charAge, 8)
WIN32_IMPL_LINK(u_getUnicodeVersion, 4)
WIN32_IMPL_LINK(u_getFC_NFKC_Closure, 16)
WIN32_IMPL_LINK(ubidi_open, 0)
WIN32_IMPL_LINK(ubidi_openSized, 12)
WIN32_IMPL_LINK(ubidi_close, 4)
WIN32_IMPL_LINK(ubidi_setInverse, 8)
WIN32_IMPL_LINK(ubidi_isInverse, 4)
WIN32_IMPL_LINK(ubidi_orderParagraphsLTR, 8)
WIN32_IMPL_LINK(ubidi_isOrderParagraphsLTR, 4)
WIN32_IMPL_LINK(ubidi_setReorderingMode, 8)
WIN32_IMPL_LINK(ubidi_getReorderingMode, 4)
WIN32_IMPL_LINK(ubidi_setReorderingOptions, 8)
WIN32_IMPL_LINK(ubidi_getReorderingOptions, 4)
WIN32_IMPL_LINK(ubidi_setContext, 24)
WIN32_IMPL_LINK(ubidi_setPara, 24)
WIN32_IMPL_LINK(ubidi_setLine, 20)
WIN32_IMPL_LINK(ubidi_getDirection, 4)
WIN32_IMPL_LINK(ubidi_getBaseDirection, 8)
WIN32_IMPL_LINK(ubidi_getText, 4)
WIN32_IMPL_LINK(ubidi_getLength, 4)
WIN32_IMPL_LINK(ubidi_getParaLevel, 4)
WIN32_IMPL_LINK(ubidi_countParagraphs, 4)
WIN32_IMPL_LINK(ubidi_getParagraph, 24)
WIN32_IMPL_LINK(ubidi_getParagraphByIndex, 24)
WIN32_IMPL_LINK(ubidi_getLevelAt, 8)
WIN32_IMPL_LINK(ubidi_getLevels, 8)
WIN32_IMPL_LINK(ubidi_getLogicalRun, 16)
WIN32_IMPL_LINK(ubidi_countRuns, 8)
WIN32_IMPL_LINK(ubidi_getVisualRun, 16)
WIN32_IMPL_LINK(ubidi_getVisualIndex, 12)
WIN32_IMPL_LINK(ubidi_getLogicalIndex, 12)
WIN32_IMPL_LINK(ubidi_getLogicalMap, 12)
WIN32_IMPL_LINK(ubidi_getVisualMap, 12)
WIN32_IMPL_LINK(ubidi_reorderLogical, 12)
WIN32_IMPL_LINK(ubidi_reorderVisual, 12)
WIN32_IMPL_LINK(ubidi_invertMap, 12)
WIN32_IMPL_LINK(ubidi_getProcessedLength, 4)
WIN32_IMPL_LINK(ubidi_getResultLength, 4)
WIN32_IMPL_LINK(ubidi_getCustomizedClass, 8)
WIN32_IMPL_LINK(ubidi_setClassCallback, 24)
WIN32_IMPL_LINK(ubidi_getClassCallback, 12)
WIN32_IMPL_LINK(ubidi_writeReordered, 20)
WIN32_IMPL_LINK(ubidi_writeReverse, 24)
WIN32_IMPL_LINK(ubiditransform_transform, 48)
WIN32_IMPL_LINK(ubiditransform_open, 4)
WIN32_IMPL_LINK(ubiditransform_close, 4)
WIN32_IMPL_LINK(utext_close, 4)
WIN32_IMPL_LINK(utext_openUTF8, 20)
WIN32_IMPL_LINK(utext_openUChars, 20)
WIN32_IMPL_LINK(utext_clone, 20)
WIN32_IMPL_LINK(utext_equals, 8)
WIN32_IMPL_LINK(utext_nativeLength, 4)
WIN32_IMPL_LINK(utext_isLengthExpensive, 4)
WIN32_IMPL_LINK(utext_char32At, 12)
WIN32_IMPL_LINK(utext_current32, 4)
WIN32_IMPL_LINK(utext_next32, 4)
WIN32_IMPL_LINK(utext_previous32, 4)
WIN32_IMPL_LINK(utext_next32From, 12)
WIN32_IMPL_LINK(utext_previous32From, 12)
WIN32_IMPL_LINK(utext_getNativeIndex, 4)
WIN32_IMPL_LINK(utext_setNativeIndex, 12)
WIN32_IMPL_LINK(utext_moveIndex32, 8)
WIN32_IMPL_LINK(utext_getPreviousNativeIndex, 4)
WIN32_IMPL_LINK(utext_extract, 32)
WIN32_IMPL_LINK(utext_isWritable, 4)
WIN32_IMPL_LINK(utext_hasMetaData, 4)
WIN32_IMPL_LINK(utext_replace, 32)
WIN32_IMPL_LINK(utext_copy, 36)
WIN32_IMPL_LINK(utext_freeze, 4)
WIN32_IMPL_LINK(utext_setup, 12)
WIN32_IMPL_LINK(uset_openEmpty, 0)
WIN32_IMPL_LINK(uset_open, 8)
WIN32_IMPL_LINK(uset_openPattern, 12)
WIN32_IMPL_LINK(uset_openPatternOptions, 16)
WIN32_IMPL_LINK(uset_close, 4)
WIN32_IMPL_LINK(uset_clone, 4)
WIN32_IMPL_LINK(uset_isFrozen, 4)
WIN32_IMPL_LINK(uset_freeze, 4)
WIN32_IMPL_LINK(uset_cloneAsThawed, 4)
WIN32_IMPL_LINK(uset_set, 12)
WIN32_IMPL_LINK(uset_applyPattern, 20)
WIN32_IMPL_LINK(uset_applyIntPropertyValue, 16)
WIN32_IMPL_LINK(uset_applyPropertyAlias, 24)
WIN32_IMPL_LINK(uset_resemblesPattern, 12)
WIN32_IMPL_LINK(uset_toPattern, 20)
WIN32_IMPL_LINK(uset_add, 8)
WIN32_IMPL_LINK(uset_addAll, 8)
WIN32_IMPL_LINK(uset_addRange, 12)
WIN32_IMPL_LINK(uset_addString, 12)
WIN32_IMPL_LINK(uset_addAllCodePoints, 12)
WIN32_IMPL_LINK(uset_remove, 8)
WIN32_IMPL_LINK(uset_removeRange, 12)
WIN32_IMPL_LINK(uset_removeString, 12)
WIN32_IMPL_LINK(uset_removeAll, 8)
WIN32_IMPL_LINK(uset_retain, 12)
WIN32_IMPL_LINK(uset_retainAll, 8)
WIN32_IMPL_LINK(uset_compact, 4)
WIN32_IMPL_LINK(uset_complement, 4)
WIN32_IMPL_LINK(uset_complementAll, 8)
WIN32_IMPL_LINK(uset_clear, 4)
WIN32_IMPL_LINK(uset_closeOver, 8)
WIN32_IMPL_LINK(uset_removeAllStrings, 4)
WIN32_IMPL_LINK(uset_isEmpty, 4)
WIN32_IMPL_LINK(uset_contains, 8)
WIN32_IMPL_LINK(uset_containsRange, 12)
WIN32_IMPL_LINK(uset_containsString, 12)
WIN32_IMPL_LINK(uset_indexOf, 8)
WIN32_IMPL_LINK(uset_charAt, 8)
WIN32_IMPL_LINK(uset_size, 4)
WIN32_IMPL_LINK(uset_getItemCount, 4)
WIN32_IMPL_LINK(uset_getItem, 28)
WIN32_IMPL_LINK(uset_containsAll, 8)
WIN32_IMPL_LINK(uset_containsAllCodePoints, 12)
WIN32_IMPL_LINK(uset_containsNone, 8)
WIN32_IMPL_LINK(uset_containsSome, 8)
WIN32_IMPL_LINK(uset_span, 16)
WIN32_IMPL_LINK(uset_spanBack, 16)
WIN32_IMPL_LINK(uset_spanUTF8, 16)
WIN32_IMPL_LINK(uset_spanBackUTF8, 16)
WIN32_IMPL_LINK(uset_equals, 8)
WIN32_IMPL_LINK(uset_serialize, 16)
WIN32_IMPL_LINK(uset_getSerializedSet, 12)
WIN32_IMPL_LINK(uset_setSerializedToOne, 8)
WIN32_IMPL_LINK(uset_serializedContains, 8)
WIN32_IMPL_LINK(uset_getSerializedRangeCount, 4)
WIN32_IMPL_LINK(uset_getSerializedRange, 16)
WIN32_IMPL_LINK(unorm2_getNFCInstance, 4)
WIN32_IMPL_LINK(unorm2_getNFDInstance, 4)
WIN32_IMPL_LINK(unorm2_getNFKCInstance, 4)
WIN32_IMPL_LINK(unorm2_getNFKDInstance, 4)
WIN32_IMPL_LINK(unorm2_getNFKCCasefoldInstance, 4)
WIN32_IMPL_LINK(unorm2_getInstance, 16)
WIN32_IMPL_LINK(unorm2_openFiltered, 12)
WIN32_IMPL_LINK(unorm2_close, 4)
WIN32_IMPL_LINK(unorm2_normalize, 24)
WIN32_IMPL_LINK(unorm2_normalizeSecondAndAppend, 28)
WIN32_IMPL_LINK(unorm2_append, 28)
WIN32_IMPL_LINK(unorm2_getDecomposition, 20)
WIN32_IMPL_LINK(unorm2_getRawDecomposition, 20)
WIN32_IMPL_LINK(unorm2_composePair, 12)
WIN32_IMPL_LINK(unorm2_getCombiningClass, 8)
WIN32_IMPL_LINK(unorm2_isNormalized, 16)
WIN32_IMPL_LINK(unorm2_quickCheck, 16)
WIN32_IMPL_LINK(unorm2_spanQuickCheckYes, 16)
WIN32_IMPL_LINK(unorm2_hasBoundaryBefore, 8)
WIN32_IMPL_LINK(unorm2_hasBoundaryAfter, 8)
WIN32_IMPL_LINK(unorm2_isInert, 8)
WIN32_IMPL_LINK(unorm_compare, 24)
WIN32_IMPL_LINK(ucnvsel_open, 20)
WIN32_IMPL_LINK(ucnvsel_close, 4)
WIN32_IMPL_LINK(ucnvsel_openFromSerialized, 12)
WIN32_IMPL_LINK(ucnvsel_serialize, 16)
WIN32_IMPL_LINK(ucnvsel_selectForString, 16)
WIN32_IMPL_LINK(ucnvsel_selectForUTF8, 16)
WIN32_IMPL_LINK(u_charsToUChars, 12)
WIN32_IMPL_LINK(u_UCharsToChars, 12)
WIN32_IMPL_LINK(u_strlen, 4)
WIN32_IMPL_LINK(u_countChar32, 8)
WIN32_IMPL_LINK(u_strHasMoreChar32Than, 12)
WIN32_IMPL_LINK(u_strcat, 8)
WIN32_IMPL_LINK(u_strncat, 12)
WIN32_IMPL_LINK(u_strstr, 8)
WIN32_IMPL_LINK(u_strFindFirst, 16)
WIN32_IMPL_LINK(u_strchr, 8)
WIN32_IMPL_LINK(u_strchr32, 8)
WIN32_IMPL_LINK(u_strrstr, 8)
WIN32_IMPL_LINK(u_strFindLast, 16)
WIN32_IMPL_LINK(u_strrchr, 8)
WIN32_IMPL_LINK(u_strrchr32, 8)
WIN32_IMPL_LINK(u_strpbrk, 8)
WIN32_IMPL_LINK(u_strcspn, 8)
WIN32_IMPL_LINK(u_strspn, 8)
WIN32_IMPL_LINK(u_strtok_r, 12)
WIN32_IMPL_LINK(u_strcmp, 8)
WIN32_IMPL_LINK(u_strcmpCodePointOrder, 8)
WIN32_IMPL_LINK(u_strCompare, 20)
WIN32_IMPL_LINK(u_strCompareIter, 12)
WIN32_IMPL_LINK(u_strCaseCompare, 24)
WIN32_IMPL_LINK(u_strncmp, 12)
WIN32_IMPL_LINK(u_strncmpCodePointOrder, 12)
WIN32_IMPL_LINK(u_strcasecmp, 12)
WIN32_IMPL_LINK(u_strncasecmp, 16)
WIN32_IMPL_LINK(u_memcasecmp, 16)
WIN32_IMPL_LINK(u_strcpy, 8)
WIN32_IMPL_LINK(u_strncpy, 12)
WIN32_IMPL_LINK(u_uastrcpy, 8)
WIN32_IMPL_LINK(u_uastrncpy, 12)
WIN32_IMPL_LINK(u_austrcpy, 8)
WIN32_IMPL_LINK(u_austrncpy, 12)
WIN32_IMPL_LINK(u_memcpy, 12)
WIN32_IMPL_LINK(u_memmove, 12)
WIN32_IMPL_LINK(u_memset, 12)
WIN32_IMPL_LINK(u_memcmp, 12)
WIN32_IMPL_LINK(u_memcmpCodePointOrder, 12)
WIN32_IMPL_LINK(u_memchr, 12)
WIN32_IMPL_LINK(u_memchr32, 12)
WIN32_IMPL_LINK(u_memrchr, 12)
WIN32_IMPL_LINK(u_memrchr32, 12)
WIN32_IMPL_LINK(u_unescape, 12)
WIN32_IMPL_LINK(u_unescapeAt, 16)
WIN32_IMPL_LINK(u_strToUpper, 24)
WIN32_IMPL_LINK(u_strToLower, 24)
WIN32_IMPL_LINK(u_strToTitle, 28)
WIN32_IMPL_LINK(u_strFoldCase, 24)
WIN32_IMPL_LINK(u_strToWCS, 24)
WIN32_IMPL_LINK(u_strFromWCS, 24)
WIN32_IMPL_LINK(u_strToUTF8, 24)
WIN32_IMPL_LINK(u_strFromUTF8, 24)
WIN32_IMPL_LINK(u_strToUTF8WithSub, 32)
WIN32_IMPL_LINK(u_strFromUTF8WithSub, 32)
WIN32_IMPL_LINK(u_strFromUTF8Lenient, 24)
WIN32_IMPL_LINK(u_strToUTF32, 24)
WIN32_IMPL_LINK(u_strFromUTF32, 24)
WIN32_IMPL_LINK(u_strToUTF32WithSub, 32)
WIN32_IMPL_LINK(u_strFromUTF32WithSub, 32)
WIN32_IMPL_LINK(u_strToJavaModifiedUTF8, 24)
WIN32_IMPL_LINK(u_strFromJavaModifiedUTF8WithSub, 32)
WIN32_IMPL_LINK(ucasemap_open, 12)
WIN32_IMPL_LINK(ucasemap_close, 4)
WIN32_IMPL_LINK(ucasemap_getLocale, 4)
WIN32_IMPL_LINK(ucasemap_getOptions, 4)
WIN32_IMPL_LINK(ucasemap_setLocale, 12)
WIN32_IMPL_LINK(ucasemap_setOptions, 12)
WIN32_IMPL_LINK(ucasemap_getBreakIterator, 4)
WIN32_IMPL_LINK(ucasemap_setBreakIterator, 12)
WIN32_IMPL_LINK(ucasemap_toTitle, 24)
WIN32_IMPL_LINK(ucasemap_utf8ToLower, 24)
WIN32_IMPL_LINK(ucasemap_utf8ToUpper, 24)
WIN32_IMPL_LINK(ucasemap_utf8ToTitle, 24)
WIN32_IMPL_LINK(ucasemap_utf8FoldCase, 24)
WIN32_IMPL_LINK(usprep_open, 12)
WIN32_IMPL_LINK(usprep_openByType, 8)
WIN32_IMPL_LINK(usprep_close, 4)
WIN32_IMPL_LINK(usprep_prepare, 32)
WIN32_IMPL_LINK(uidna_openUTS46, 8)
WIN32_IMPL_LINK(uidna_close, 4)
WIN32_IMPL_LINK(uidna_labelToASCII, 28)
WIN32_IMPL_LINK(uidna_labelToUnicode, 28)
WIN32_IMPL_LINK(uidna_nameToASCII, 28)
WIN32_IMPL_LINK(uidna_nameToUnicode, 28)
WIN32_IMPL_LINK(uidna_labelToASCII_UTF8, 28)
WIN32_IMPL_LINK(uidna_labelToUnicodeUTF8, 28)
WIN32_IMPL_LINK(uidna_nameToASCII_UTF8, 28)
WIN32_IMPL_LINK(uidna_nameToUnicodeUTF8, 28)
WIN32_IMPL_LINK(ubrk_open, 20)
WIN32_IMPL_LINK(ubrk_openRules, 24)
WIN32_IMPL_LINK(ubrk_openBinaryRules, 20)
WIN32_IMPL_LINK(ubrk_safeClone, 16)
WIN32_IMPL_LINK(ubrk_close, 4)
WIN32_IMPL_LINK(ubrk_setText, 16)
WIN32_IMPL_LINK(ubrk_setUText, 12)
WIN32_IMPL_LINK(ubrk_current, 4)
WIN32_IMPL_LINK(ubrk_next, 4)
WIN32_IMPL_LINK(ubrk_previous, 4)
WIN32_IMPL_LINK(ubrk_first, 4)
WIN32_IMPL_LINK(ubrk_last, 4)
WIN32_IMPL_LINK(ubrk_preceding, 8)
WIN32_IMPL_LINK(ubrk_following, 8)
WIN32_IMPL_LINK(ubrk_getAvailable, 4)
WIN32_IMPL_LINK(ubrk_countAvailable, 0)
WIN32_IMPL_LINK(ubrk_isBoundary, 8)
WIN32_IMPL_LINK(ubrk_getRuleStatus, 4)
WIN32_IMPL_LINK(ubrk_getRuleStatusVec, 16)
WIN32_IMPL_LINK(ubrk_getLocaleByType, 12)
WIN32_IMPL_LINK(ubrk_refreshUText, 12)
WIN32_IMPL_LINK(ubrk_getBinaryRules, 16)
WIN32_IMPL_LINK(u_getDataVersion, 8)
WIN32_IMPL_LINK(ucal_openTimeZoneIDEnumeration, 16)
WIN32_IMPL_LINK(ucal_openTimeZones, 4)
WIN32_IMPL_LINK(ucal_openCountryTimeZones, 8)
WIN32_IMPL_LINK(ucal_getDefaultTimeZone, 12)
WIN32_IMPL_LINK(ucal_setDefaultTimeZone, 8)
WIN32_IMPL_LINK(ucal_getDSTSavings, 8)
WIN32_IMPL_LINK(ucal_getNow, 0)
WIN32_IMPL_LINK(ucal_open, 20)
WIN32_IMPL_LINK(ucal_close, 4)
WIN32_IMPL_LINK(ucal_clone, 8)
WIN32_IMPL_LINK(ucal_setTimeZone, 16)
WIN32_IMPL_LINK(ucal_getTimeZoneID, 16)
WIN32_IMPL_LINK(ucal_getTimeZoneDisplayName, 24)
WIN32_IMPL_LINK(ucal_inDaylightTime, 8)
WIN32_IMPL_LINK(ucal_setGregorianChange, 16)
WIN32_IMPL_LINK(ucal_getGregorianChange, 8)
WIN32_IMPL_LINK(ucal_getAttribute, 8)
WIN32_IMPL_LINK(ucal_setAttribute, 12)
WIN32_IMPL_LINK(ucal_getAvailable, 4)
WIN32_IMPL_LINK(ucal_countAvailable, 0)
WIN32_IMPL_LINK(ucal_getMillis, 8)
WIN32_IMPL_LINK(ucal_setMillis, 16)
WIN32_IMPL_LINK(ucal_setDate, 20)
WIN32_IMPL_LINK(ucal_setDateTime, 32)
WIN32_IMPL_LINK(ucal_equivalentTo, 8)
WIN32_IMPL_LINK(ucal_add, 16)
WIN32_IMPL_LINK(ucal_roll, 16)
WIN32_IMPL_LINK(ucal_get, 12)
WIN32_IMPL_LINK(ucal_set, 12)
WIN32_IMPL_LINK(ucal_isSet, 8)
WIN32_IMPL_LINK(ucal_clearField, 8)
WIN32_IMPL_LINK(ucal_clear, 4)
WIN32_IMPL_LINK(ucal_getLimit, 16)
WIN32_IMPL_LINK(ucal_getLocaleByType, 12)
WIN32_IMPL_LINK(ucal_getTZDataVersion, 4)
WIN32_IMPL_LINK(ucal_getCanonicalTimeZoneID, 24)
WIN32_IMPL_LINK(ucal_getType, 8)
WIN32_IMPL_LINK(ucal_getKeywordValuesForLocale, 16)
WIN32_IMPL_LINK(ucal_getDayOfWeekType, 12)
WIN32_IMPL_LINK(ucal_getWeekendTransition, 12)
WIN32_IMPL_LINK(ucal_isWeekend, 16)
WIN32_IMPL_LINK(ucal_getFieldDifference, 20)
WIN32_IMPL_LINK(ucal_getTimeZoneTransitionDate, 16)
WIN32_IMPL_LINK(ucal_getWindowsTimeZoneID, 20)
WIN32_IMPL_LINK(ucal_getTimeZoneIDForWindowsID, 24)
WIN32_IMPL_LINK(ucol_open, 8)
WIN32_IMPL_LINK(ucol_openRules, 24)
WIN32_IMPL_LINK(ucol_getContractionsAndExpansions, 20)
WIN32_IMPL_LINK(ucol_close, 4)
WIN32_IMPL_LINK(ucol_strcoll, 20)
WIN32_IMPL_LINK(ucol_strcollUTF8, 24)
WIN32_IMPL_LINK(ucol_greater, 20)
WIN32_IMPL_LINK(ucol_greaterOrEqual, 20)
WIN32_IMPL_LINK(ucol_equal, 20)
WIN32_IMPL_LINK(ucol_strcollIter, 16)
WIN32_IMPL_LINK(ucol_getStrength, 4)
WIN32_IMPL_LINK(ucol_setStrength, 8)
WIN32_IMPL_LINK(ucol_getReorderCodes, 16)
WIN32_IMPL_LINK(ucol_setReorderCodes, 16)
WIN32_IMPL_LINK(ucol_getEquivalentReorderCodes, 16)
WIN32_IMPL_LINK(ucol_getDisplayName, 20)
WIN32_IMPL_LINK(ucol_getAvailable, 4)
WIN32_IMPL_LINK(ucol_countAvailable, 0)
WIN32_IMPL_LINK(ucol_openAvailableLocales, 4)
WIN32_IMPL_LINK(ucol_getKeywords, 4)
WIN32_IMPL_LINK(ucol_getKeywordValues, 8)
WIN32_IMPL_LINK(ucol_getKeywordValuesForLocale, 16)
WIN32_IMPL_LINK(ucol_getFunctionalEquivalent, 24)
WIN32_IMPL_LINK(ucol_getRules, 8)
WIN32_IMPL_LINK(ucol_getSortKey, 20)
WIN32_IMPL_LINK(ucol_nextSortKeyPart, 24)
WIN32_IMPL_LINK(ucol_getBound, 28)
WIN32_IMPL_LINK(ucol_getVersion, 8)
WIN32_IMPL_LINK(ucol_getUCAVersion, 8)
WIN32_IMPL_LINK(ucol_mergeSortkeys, 24)
WIN32_IMPL_LINK(ucol_setAttribute, 16)
WIN32_IMPL_LINK(ucol_getAttribute, 12)
WIN32_IMPL_LINK(ucol_setMaxVariable, 12)
WIN32_IMPL_LINK(ucol_getMaxVariable, 4)
WIN32_IMPL_LINK(ucol_getVariableTop, 8)
WIN32_IMPL_LINK(ucol_safeClone, 16)
WIN32_IMPL_LINK(ucol_getRulesEx, 16)
WIN32_IMPL_LINK(ucol_getLocaleByType, 12)
WIN32_IMPL_LINK(ucol_getTailoredSet, 8)
WIN32_IMPL_LINK(ucol_cloneBinary, 16)
WIN32_IMPL_LINK(ucol_openBinary, 16)
WIN32_IMPL_LINK(ucol_openElements, 16)
WIN32_IMPL_LINK(ucol_keyHashCode, 8)
WIN32_IMPL_LINK(ucol_closeElements, 4)
WIN32_IMPL_LINK(ucol_reset, 4)
WIN32_IMPL_LINK(ucol_next, 8)
WIN32_IMPL_LINK(ucol_previous, 8)
WIN32_IMPL_LINK(ucol_getMaxExpansion, 8)
WIN32_IMPL_LINK(ucol_setText, 16)
WIN32_IMPL_LINK(ucol_getOffset, 4)
WIN32_IMPL_LINK(ucol_setOffset, 12)
WIN32_IMPL_LINK(ucol_primaryOrder, 4)
WIN32_IMPL_LINK(ucol_secondaryOrder, 4)
WIN32_IMPL_LINK(ucol_tertiaryOrder, 4)
WIN32_IMPL_LINK(ucsdet_open, 4)
WIN32_IMPL_LINK(ucsdet_close, 4)
WIN32_IMPL_LINK(ucsdet_setText, 16)
WIN32_IMPL_LINK(ucsdet_setDeclaredEncoding, 16)
WIN32_IMPL_LINK(ucsdet_detect, 8)
WIN32_IMPL_LINK(ucsdet_detectAll, 12)
WIN32_IMPL_LINK(ucsdet_getName, 8)
WIN32_IMPL_LINK(ucsdet_getConfidence, 8)
WIN32_IMPL_LINK(ucsdet_getLanguage, 8)
WIN32_IMPL_LINK(ucsdet_getUChars, 16)
WIN32_IMPL_LINK(ucsdet_getAllDetectableCharsets, 8)
WIN32_IMPL_LINK(ucsdet_isInputFilterEnabled, 4)
WIN32_IMPL_LINK(ucsdet_enableInputFilter, 8)
WIN32_IMPL_LINK(udatpg_open, 8)
WIN32_IMPL_LINK(udatpg_openEmpty, 4)
WIN32_IMPL_LINK(udatpg_close, 4)
WIN32_IMPL_LINK(udatpg_clone, 8)
WIN32_IMPL_LINK(udatpg_getBestPattern, 24)
WIN32_IMPL_LINK(udatpg_getBestPatternWithOptions, 28)
WIN32_IMPL_LINK(udatpg_getSkeleton, 24)
WIN32_IMPL_LINK(udatpg_getBaseSkeleton, 24)
WIN32_IMPL_LINK(udatpg_addPattern, 32)
WIN32_IMPL_LINK(udatpg_setAppendItemFormat, 16)
WIN32_IMPL_LINK(udatpg_getAppendItemFormat, 12)
WIN32_IMPL_LINK(udatpg_setAppendItemName, 16)
WIN32_IMPL_LINK(udatpg_getAppendItemName, 12)
WIN32_IMPL_LINK(udatpg_getFieldDisplayName, 24)
WIN32_IMPL_LINK(udatpg_setDateTimeFormat, 12)
WIN32_IMPL_LINK(udatpg_getDateTimeFormat, 8)
WIN32_IMPL_LINK(udatpg_setDecimal, 12)
WIN32_IMPL_LINK(udatpg_getDecimal, 8)
WIN32_IMPL_LINK(udatpg_replaceFieldTypes, 32)
WIN32_IMPL_LINK(udatpg_replaceFieldTypesWithOptions, 36)
WIN32_IMPL_LINK(udatpg_openSkeletons, 8)
WIN32_IMPL_LINK(udatpg_openBaseSkeletons, 8)
WIN32_IMPL_LINK(udatpg_getPatternForSkeleton, 16)
WIN32_IMPL_LINK(ufieldpositer_open, 4)
WIN32_IMPL_LINK(ufieldpositer_close, 4)
WIN32_IMPL_LINK(ufieldpositer_next, 12)
WIN32_IMPL_LINK(ufmt_open, 4)
WIN32_IMPL_LINK(ufmt_close, 4)
WIN32_IMPL_LINK(ufmt_getType, 8)
WIN32_IMPL_LINK(ufmt_isNumeric, 4)
WIN32_IMPL_LINK(ufmt_getDate, 8)
WIN32_IMPL_LINK(ufmt_getDouble, 8)
WIN32_IMPL_LINK(ufmt_getLong, 8)
WIN32_IMPL_LINK(ufmt_getInt64, 8)
WIN32_IMPL_LINK(ufmt_getObject, 8)
WIN32_IMPL_LINK(ufmt_getUChars, 12)
WIN32_IMPL_LINK(ufmt_getArrayLength, 8)
WIN32_IMPL_LINK(ufmt_getArrayItemByIndex, 12)
WIN32_IMPL_LINK(ufmt_getDecNumChars, 12)
WIN32_IMPL_LINK(udtitvfmt_open, 24)
WIN32_IMPL_LINK(udtitvfmt_close, 4)
WIN32_IMPL_LINK(udtitvfmt_format, 36)
WIN32_IMPL_LINK(ugender_getInstance, 8)
WIN32_IMPL_LINK(ugender_getListGender, 16)
WIN32_IMPL_LINK(ulistfmt_open, 8)
WIN32_IMPL_LINK(ulistfmt_close, 4)
WIN32_IMPL_LINK(ulistfmt_format, 28)
WIN32_IMPL_LINK(ulocdata_open, 8)
WIN32_IMPL_LINK(ulocdata_close, 4)
WIN32_IMPL_LINK(ulocdata_setNoSubstitute, 8)
WIN32_IMPL_LINK(ulocdata_getNoSubstitute, 4)
WIN32_IMPL_LINK(ulocdata_getExemplarSet, 20)
WIN32_IMPL_LINK(ulocdata_getDelimiter, 20)
WIN32_IMPL_LINK(ulocdata_getMeasurementSystem, 8)
WIN32_IMPL_LINK(ulocdata_getPaperSize, 16)
WIN32_IMPL_LINK(ulocdata_getCLDRVersion, 8)
WIN32_IMPL_LINK(ulocdata_getLocaleDisplayPattern, 16)
WIN32_IMPL_LINK(ulocdata_getLocaleSeparator, 16)
WIN32_IMPL_LINK(u_formatMessage, 24)
WIN32_IMPL_LINK(u_vformatMessage, 28)
WIN32_IMPL_LINK(u_parseMessage, 24)
WIN32_IMPL_LINK(u_vparseMessage, 28)
WIN32_IMPL_LINK(u_formatMessageWithError, 28)
WIN32_IMPL_LINK(u_vformatMessageWithError, 32)
WIN32_IMPL_LINK(u_parseMessageWithError, 28)
WIN32_IMPL_LINK(u_vparseMessageWithError, 32)
WIN32_IMPL_LINK(umsg_open, 20)
WIN32_IMPL_LINK(umsg_close, 4)
WIN32_IMPL_LINK(umsg_clone, 8)
WIN32_IMPL_LINK(umsg_setLocale, 8)
WIN32_IMPL_LINK(umsg_getLocale, 4)
WIN32_IMPL_LINK(umsg_applyPattern, 20)
WIN32_IMPL_LINK(umsg_toPattern, 16)
WIN32_IMPL_LINK(umsg_format, 16)
WIN32_IMPL_LINK(umsg_vformat, 20)
WIN32_IMPL_LINK(umsg_parse, 20)
WIN32_IMPL_LINK(umsg_vparse, 24)
WIN32_IMPL_LINK(umsg_autoQuoteApostrophe, 20)
WIN32_IMPL_LINK(unum_open, 24)
WIN32_IMPL_LINK(unum_close, 4)
WIN32_IMPL_LINK(unum_clone, 8)
WIN32_IMPL_LINK(unum_format, 24)
WIN32_IMPL_LINK(unum_formatInt64, 28)
WIN32_IMPL_LINK(unum_formatDouble, 28)
WIN32_IMPL_LINK(unum_formatDoubleForFields, 28)
WIN32_IMPL_LINK(unum_formatDecimal, 28)
WIN32_IMPL_LINK(unum_formatDoubleCurrency, 32)
WIN32_IMPL_LINK(unum_formatUFormattable, 24)
WIN32_IMPL_LINK(unum_parse, 20)
WIN32_IMPL_LINK(unum_parseInt64, 20)
WIN32_IMPL_LINK(unum_parseDouble, 20)
WIN32_IMPL_LINK(unum_parseDecimal, 28)
WIN32_IMPL_LINK(unum_parseDoubleCurrency, 24)
WIN32_IMPL_LINK(unum_parseToUFormattable, 24)
WIN32_IMPL_LINK(unum_applyPattern, 24)
WIN32_IMPL_LINK(unum_getAvailable, 4)
WIN32_IMPL_LINK(unum_countAvailable, 0)
WIN32_IMPL_LINK(unum_getAttribute, 8)
WIN32_IMPL_LINK(unum_setAttribute, 12)
WIN32_IMPL_LINK(unum_getDoubleAttribute, 8)
WIN32_IMPL_LINK(unum_setDoubleAttribute, 16)
WIN32_IMPL_LINK(unum_getTextAttribute, 20)
WIN32_IMPL_LINK(unum_setTextAttribute, 20)
WIN32_IMPL_LINK(unum_toPattern, 20)
WIN32_IMPL_LINK(unum_getSymbol, 20)
WIN32_IMPL_LINK(unum_setSymbol, 20)
WIN32_IMPL_LINK(unum_getLocaleByType, 12)
WIN32_IMPL_LINK(unum_setContext, 12)
WIN32_IMPL_LINK(unum_getContext, 12)
WIN32_IMPL_LINK(udat_toCalendarDateField, 4)
WIN32_IMPL_LINK(udat_open, 32)
WIN32_IMPL_LINK(udat_close, 4)
WIN32_IMPL_LINK(udat_getBooleanAttribute, 12)
WIN32_IMPL_LINK(udat_setBooleanAttribute, 16)
WIN32_IMPL_LINK(udat_clone, 8)
WIN32_IMPL_LINK(udat_format, 28)
WIN32_IMPL_LINK(udat_formatCalendar, 24)
WIN32_IMPL_LINK(udat_formatForFields, 28)
WIN32_IMPL_LINK(udat_formatCalendarForFields, 24)
WIN32_IMPL_LINK(udat_parse, 20)
WIN32_IMPL_LINK(udat_parseCalendar, 24)
WIN32_IMPL_LINK(udat_isLenient, 4)
WIN32_IMPL_LINK(udat_setLenient, 8)
WIN32_IMPL_LINK(udat_getCalendar, 4)
WIN32_IMPL_LINK(udat_setCalendar, 8)
WIN32_IMPL_LINK(udat_getNumberFormat, 4)
WIN32_IMPL_LINK(udat_getNumberFormatForField, 8)
WIN32_IMPL_LINK(udat_adoptNumberFormatForFields, 16)
WIN32_IMPL_LINK(udat_setNumberFormat, 8)
WIN32_IMPL_LINK(udat_adoptNumberFormat, 8)
WIN32_IMPL_LINK(udat_getAvailable, 4)
WIN32_IMPL_LINK(udat_countAvailable, 0)
WIN32_IMPL_LINK(udat_get2DigitYearStart, 8)
WIN32_IMPL_LINK(udat_set2DigitYearStart, 16)
WIN32_IMPL_LINK(udat_toPattern, 20)
WIN32_IMPL_LINK(udat_applyPattern, 16)
WIN32_IMPL_LINK(udat_getSymbols, 24)
WIN32_IMPL_LINK(udat_countSymbols, 8)
WIN32_IMPL_LINK(udat_setSymbols, 24)
WIN32_IMPL_LINK(udat_getLocaleByType, 12)
WIN32_IMPL_LINK(udat_setContext, 12)
WIN32_IMPL_LINK(udat_getContext, 12)
WIN32_IMPL_LINK(unumf_openForSkeletonAndLocale, 16)
WIN32_IMPL_LINK(unumf_openResult, 4)
WIN32_IMPL_LINK(unumf_formatInt, 20)
WIN32_IMPL_LINK(unumf_formatDouble, 20)
WIN32_IMPL_LINK(unumf_formatDecimal, 20)
WIN32_IMPL_LINK(unumf_resultToString, 16)
WIN32_IMPL_LINK(unumf_resultNextFieldPosition, 12)
WIN32_IMPL_LINK(unumf_resultGetAllFieldPositions, 12)
WIN32_IMPL_LINK(unumf_close, 4)
WIN32_IMPL_LINK(unumf_closeResult, 4)
WIN32_IMPL_LINK(unumsys_open, 8)
WIN32_IMPL_LINK(unumsys_openByName, 8)
WIN32_IMPL_LINK(unumsys_close, 4)
WIN32_IMPL_LINK(unumsys_openAvailableNames, 4)
WIN32_IMPL_LINK(unumsys_getName, 4)
WIN32_IMPL_LINK(unumsys_isAlgorithmic, 4)
WIN32_IMPL_LINK(unumsys_getRadix, 4)
WIN32_IMPL_LINK(unumsys_getDescription, 16)
WIN32_IMPL_LINK(uplrules_open, 8)
WIN32_IMPL_LINK(uplrules_openForType, 12)
WIN32_IMPL_LINK(uplrules_close, 4)
WIN32_IMPL_LINK(uplrules_select, 24)
WIN32_IMPL_LINK(uplrules_getKeywords, 8)
WIN32_IMPL_LINK(uregex_open, 20)
WIN32_IMPL_LINK(uregex_openUText, 16)
WIN32_IMPL_LINK(uregex_openC, 16)
WIN32_IMPL_LINK(uregex_close, 4)
WIN32_IMPL_LINK(uregex_clone, 8)
WIN32_IMPL_LINK(uregex_pattern, 12)
WIN32_IMPL_LINK(uregex_patternUText, 8)
WIN32_IMPL_LINK(uregex_flags, 8)
WIN32_IMPL_LINK(uregex_setText, 16)
WIN32_IMPL_LINK(uregex_setUText, 12)
WIN32_IMPL_LINK(uregex_getText, 12)
WIN32_IMPL_LINK(uregex_getUText, 12)
WIN32_IMPL_LINK(uregex_refreshUText, 12)
WIN32_IMPL_LINK(uregex_matches, 12)
WIN32_IMPL_LINK(uregex_matches64, 16)
WIN32_IMPL_LINK(uregex_lookingAt, 12)
WIN32_IMPL_LINK(uregex_lookingAt64, 16)
WIN32_IMPL_LINK(uregex_find, 12)
WIN32_IMPL_LINK(uregex_find64, 16)
WIN32_IMPL_LINK(uregex_findNext, 8)
WIN32_IMPL_LINK(uregex_groupCount, 8)
WIN32_IMPL_LINK(uregex_groupNumberFromName, 16)
WIN32_IMPL_LINK(uregex_groupNumberFromCName, 16)
WIN32_IMPL_LINK(uregex_group, 20)
WIN32_IMPL_LINK(uregex_groupUText, 20)
WIN32_IMPL_LINK(uregex_start, 12)
WIN32_IMPL_LINK(uregex_start64, 12)
WIN32_IMPL_LINK(uregex_end, 12)
WIN32_IMPL_LINK(uregex_end64, 12)
WIN32_IMPL_LINK(uregex_reset, 12)
WIN32_IMPL_LINK(uregex_reset64, 16)
WIN32_IMPL_LINK(uregex_setRegion, 16)
WIN32_IMPL_LINK(uregex_setRegion64, 24)
WIN32_IMPL_LINK(uregex_setRegionAndStart, 32)
WIN32_IMPL_LINK(uregex_regionStart, 8)
WIN32_IMPL_LINK(uregex_regionStart64, 8)
WIN32_IMPL_LINK(uregex_regionEnd, 8)
WIN32_IMPL_LINK(uregex_regionEnd64, 8)
WIN32_IMPL_LINK(uregex_hasTransparentBounds, 8)
WIN32_IMPL_LINK(uregex_useTransparentBounds, 12)
WIN32_IMPL_LINK(uregex_hasAnchoringBounds, 8)
WIN32_IMPL_LINK(uregex_useAnchoringBounds, 12)
WIN32_IMPL_LINK(uregex_hitEnd, 8)
WIN32_IMPL_LINK(uregex_requireEnd, 8)
WIN32_IMPL_LINK(uregex_replaceAll, 24)
WIN32_IMPL_LINK(uregex_replaceAllUText, 16)
WIN32_IMPL_LINK(uregex_replaceFirst, 24)
WIN32_IMPL_LINK(uregex_replaceFirstUText, 16)
WIN32_IMPL_LINK(uregex_appendReplacement, 24)
WIN32_IMPL_LINK(uregex_appendReplacementUText, 16)
WIN32_IMPL_LINK(uregex_appendTail, 16)
WIN32_IMPL_LINK(uregex_appendTailUText, 12)
WIN32_IMPL_LINK(uregex_split, 28)
WIN32_IMPL_LINK(uregex_splitUText, 16)
WIN32_IMPL_LINK(uregex_setTimeLimit, 12)
WIN32_IMPL_LINK(uregex_getTimeLimit, 8)
WIN32_IMPL_LINK(uregex_setStackLimit, 12)
WIN32_IMPL_LINK(uregex_getStackLimit, 8)
WIN32_IMPL_LINK(uregex_setMatchCallback, 16)
WIN32_IMPL_LINK(uregex_getMatchCallback, 16)
WIN32_IMPL_LINK(uregex_setFindProgressCallback, 16)
WIN32_IMPL_LINK(uregex_getFindProgressCallback, 16)
WIN32_IMPL_LINK(uregion_getRegionFromCode, 8)
WIN32_IMPL_LINK(uregion_getRegionFromNumericCode, 8)
WIN32_IMPL_LINK(uregion_getAvailable, 8)
WIN32_IMPL_LINK(uregion_areEqual, 8)
WIN32_IMPL_LINK(uregion_getContainingRegion, 4)
WIN32_IMPL_LINK(uregion_getContainingRegionOfType, 8)
WIN32_IMPL_LINK(uregion_getContainedRegions, 8)
WIN32_IMPL_LINK(uregion_getContainedRegionsOfType, 12)
WIN32_IMPL_LINK(uregion_contains, 8)
WIN32_IMPL_LINK(uregion_getPreferredValues, 8)
WIN32_IMPL_LINK(uregion_getRegionCode, 4)
WIN32_IMPL_LINK(uregion_getNumericCode, 4)
WIN32_IMPL_LINK(uregion_getType, 4)
WIN32_IMPL_LINK(ureldatefmt_open, 20)
WIN32_IMPL_LINK(ureldatefmt_close, 4)
WIN32_IMPL_LINK(ureldatefmt_formatNumeric, 28)
WIN32_IMPL_LINK(ureldatefmt_format, 28)
WIN32_IMPL_LINK(ureldatefmt_combineDateAndTime, 32)
WIN32_IMPL_LINK(usearch_open, 28)
WIN32_IMPL_LINK(usearch_openFromCollator, 28)
WIN32_IMPL_LINK(usearch_close, 4)
WIN32_IMPL_LINK(usearch_setOffset, 12)
WIN32_IMPL_LINK(usearch_getOffset, 4)
WIN32_IMPL_LINK(usearch_setAttribute, 16)
WIN32_IMPL_LINK(usearch_getAttribute, 8)
WIN32_IMPL_LINK(usearch_getMatchedStart, 4)
WIN32_IMPL_LINK(usearch_getMatchedLength, 4)
WIN32_IMPL_LINK(usearch_getMatchedText, 16)
WIN32_IMPL_LINK(usearch_setBreakIterator, 12)
WIN32_IMPL_LINK(usearch_getBreakIterator, 4)
WIN32_IMPL_LINK(usearch_setText, 16)
WIN32_IMPL_LINK(usearch_getText, 8)
WIN32_IMPL_LINK(usearch_getCollator, 4)
WIN32_IMPL_LINK(usearch_setCollator, 12)
WIN32_IMPL_LINK(usearch_setPattern, 16)
WIN32_IMPL_LINK(usearch_getPattern, 8)
WIN32_IMPL_LINK(usearch_first, 8)
WIN32_IMPL_LINK(usearch_following, 12)
WIN32_IMPL_LINK(usearch_last, 8)
WIN32_IMPL_LINK(usearch_preceding, 12)
WIN32_IMPL_LINK(usearch_next, 8)
WIN32_IMPL_LINK(usearch_previous, 8)
WIN32_IMPL_LINK(usearch_reset, 4)
WIN32_IMPL_LINK(uspoof_open, 4)
WIN32_IMPL_LINK(uspoof_openFromSerialized, 16)
WIN32_IMPL_LINK(uspoof_openFromSource, 28)
WIN32_IMPL_LINK(uspoof_close, 4)
WIN32_IMPL_LINK(uspoof_clone, 8)
WIN32_IMPL_LINK(uspoof_setChecks, 12)
WIN32_IMPL_LINK(uspoof_getChecks, 8)
WIN32_IMPL_LINK(uspoof_setRestrictionLevel, 8)
WIN32_IMPL_LINK(uspoof_getRestrictionLevel, 4)
WIN32_IMPL_LINK(uspoof_setAllowedLocales, 12)
WIN32_IMPL_LINK(uspoof_getAllowedLocales, 8)
WIN32_IMPL_LINK(uspoof_setAllowedChars, 12)
WIN32_IMPL_LINK(uspoof_getAllowedChars, 8)
WIN32_IMPL_LINK(uspoof_check, 20)
WIN32_IMPL_LINK(uspoof_checkUTF8, 20)
WIN32_IMPL_LINK(uspoof_check2, 20)
WIN32_IMPL_LINK(uspoof_check2UTF8, 20)
WIN32_IMPL_LINK(uspoof_openCheckResult, 4)
WIN32_IMPL_LINK(uspoof_closeCheckResult, 4)
WIN32_IMPL_LINK(uspoof_getCheckResultChecks, 8)
WIN32_IMPL_LINK(uspoof_getCheckResultRestrictionLevel, 8)
WIN32_IMPL_LINK(uspoof_getCheckResultNumerics, 8)
WIN32_IMPL_LINK(uspoof_areConfusable, 24)
WIN32_IMPL_LINK(uspoof_areConfusableUTF8, 24)
WIN32_IMPL_LINK(uspoof_getSkeleton, 28)
WIN32_IMPL_LINK(uspoof_getSkeletonUTF8, 28)
WIN32_IMPL_LINK(uspoof_getInclusionSet, 4)
WIN32_IMPL_LINK(uspoof_getRecommendedSet, 4)
WIN32_IMPL_LINK(uspoof_serialize, 16)
WIN32_IMPL_LINK(utmscale_getTimeScaleValue, 12)
WIN32_IMPL_LINK(utmscale_fromInt64, 16)
WIN32_IMPL_LINK(utmscale_toInt64, 16)
WIN32_IMPL_LINK(utrans_openU, 28)
WIN32_IMPL_LINK(utrans_openInverse, 8)
WIN32_IMPL_LINK(utrans_clone, 8)
WIN32_IMPL_LINK(utrans_close, 4)
WIN32_IMPL_LINK(utrans_getUnicodeID, 8)
WIN32_IMPL_LINK(utrans_register, 8)
WIN32_IMPL_LINK(utrans_unregisterID, 8)
WIN32_IMPL_LINK(utrans_setFilter, 16)
WIN32_IMPL_LINK(utrans_countAvailableIDs, 0)
WIN32_IMPL_LINK(utrans_openIDs, 4)
WIN32_IMPL_LINK(utrans_trans, 24)
WIN32_IMPL_LINK(utrans_transIncremental, 20)
WIN32_IMPL_LINK(utrans_transUChars, 28)
WIN32_IMPL_LINK(utrans_transIncrementalUChars, 24)
WIN32_IMPL_LINK(utrans_toRules, 20)
WIN32_IMPL_LINK(utrans_getSourceSet, 16)
WIN32_IMPL_LINK(FindStringOrdinal, 24)
WIN32_IMPL_LINK(IsTextUnicode, 12)

#pragma endregion abi_methods

#endif
