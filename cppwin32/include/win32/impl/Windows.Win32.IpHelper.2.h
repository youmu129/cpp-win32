// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_IpHelper_2_H
#define WIN32_Windows_Win32_IpHelper_2_H
#include "win32/impl/Windows.Win32.IpHelper.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIfEntry2(win32::Windows::Win32::Mib::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIfEntry2Ex(win32::Windows::Win32::IpHelper::MIB_IF_ENTRY_LEVEL Level, win32::Windows::Win32::Mib::MIB_IF_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIfTable2(win32::Windows::Win32::Mib::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIfTable2Ex(win32::Windows::Win32::NetworkDrivers::MIB_IF_TABLE_LEVEL Level, win32::Windows::Win32::Mib::MIB_IF_TABLE2** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIfStackTable(win32::Windows::Win32::Mib::MIB_IFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetInvertedIfStackTable(win32::Windows::Win32::Mib::MIB_INVERTEDIFSTACK_TABLE** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpInterfaceEntry(win32::Windows::Win32::Mib::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpInterfaceTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_IPINTERFACE_TABLE** Table) noexcept;
    void __stdcall WIN32_IMPL_InitializeIpInterfaceEntry(win32::Windows::Win32::Mib::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyIpInterfaceChange(uint16_t Family, win32::Windows::Win32::IpHelper::PIPINTERFACE_CHANGE_CALLBACK* Callback, void* CallerContext, uint8_t InitialNotification, win32::Windows::Win32::SystemServices::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetIpInterfaceEntry(win32::Windows::Win32::Mib::MIB_IPINTERFACE_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpNetworkConnectionBandwidthEstimates(uint32_t InterfaceIndex, uint16_t AddressFamily, win32::Windows::Win32::Mib::MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES* BandwidthEstimates) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CreateUnicastIpAddressEntry(win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_DeleteUnicastIpAddressEntry(win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetUnicastIpAddressEntry(win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetUnicastIpAddressTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_TABLE** Table) noexcept;
    void __stdcall WIN32_IMPL_InitializeUnicastIpAddressEntry(win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyUnicastIpAddressChange(uint16_t Family, win32::Windows::Win32::IpHelper::PUNICAST_IPADDRESS_CHANGE_CALLBACK* Callback, void* CallerContext, uint8_t InitialNotification, win32::Windows::Win32::SystemServices::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyStableUnicastIpAddressTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_TABLE** Table, win32::Windows::Win32::IpHelper::PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK* CallerCallback, void* CallerContext, win32::Windows::Win32::SystemServices::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetUnicastIpAddressEntry(win32::Windows::Win32::Mib::MIB_UNICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CreateAnycastIpAddressEntry(win32::Windows::Win32::Mib::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_DeleteAnycastIpAddressEntry(win32::Windows::Win32::Mib::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetAnycastIpAddressEntry(win32::Windows::Win32::Mib::MIB_ANYCASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetAnycastIpAddressTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_ANYCASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetMulticastIpAddressEntry(win32::Windows::Win32::Mib::MIB_MULTICASTIPADDRESS_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetMulticastIpAddressTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_MULTICASTIPADDRESS_TABLE** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CreateIpForwardEntry2(win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_DeleteIpForwardEntry2(win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetBestRoute2(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t InterfaceIndex, win32::Windows::Win32::IpHelper::SOCKADDR_INET* SourceAddress, win32::Windows::Win32::IpHelper::SOCKADDR_INET* DestinationAddress, uint32_t AddressSortOptions, win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* BestRoute, win32::Windows::Win32::IpHelper::SOCKADDR_INET* BestSourceAddress) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpForwardEntry2(win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpForwardTable2(uint16_t Family, win32::Windows::Win32::Mib::MIB_IPFORWARD_TABLE2** Table) noexcept;
    void __stdcall WIN32_IMPL_InitializeIpForwardEntry(win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyRouteChange2(uint16_t AddressFamily, win32::Windows::Win32::IpHelper::PIPFORWARD_CHANGE_CALLBACK* Callback, void* CallerContext, uint8_t InitialNotification, win32::Windows::Win32::SystemServices::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetIpForwardEntry2(win32::Windows::Win32::Mib::MIB_IPFORWARD_ROW2* Route) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_FlushIpPathTable(uint16_t Family) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpPathEntry(win32::Windows::Win32::Mib::MIB_IPPATH_ROW* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpPathTable(uint16_t Family, win32::Windows::Win32::Mib::MIB_IPPATH_TABLE** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CreateIpNetEntry2(win32::Windows::Win32::Mib::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_DeleteIpNetEntry2(win32::Windows::Win32::Mib::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_FlushIpNetTable2(uint16_t Family, uint32_t InterfaceIndex) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpNetEntry2(win32::Windows::Win32::Mib::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetIpNetTable2(uint16_t Family, win32::Windows::Win32::Mib::MIB_IPNET_TABLE2** Table) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ResolveIpNetEntry2(win32::Windows::Win32::Mib::MIB_IPNET_ROW2* Row, win32::Windows::Win32::IpHelper::SOCKADDR_INET* SourceAddress) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetIpNetEntry2(win32::Windows::Win32::Mib::MIB_IPNET_ROW2* Row) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyTeredoPortChange(win32::Windows::Win32::IpHelper::PTEREDO_PORT_CHANGE_CALLBACK* Callback, void* CallerContext, uint8_t InitialNotification, win32::Windows::Win32::SystemServices::HANDLE* NotificationHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetTeredoPort(uint16_t* Port) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CancelMibChangeNotify2(win32::Windows::Win32::SystemServices::HANDLE NotificationHandle) noexcept;
    void __stdcall WIN32_IMPL_FreeMibTable(void* Memory) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_CreateSortedAddressPairs(win32::Windows::Win32::NetworkDrivers::SOCKADDR_IN6_LH* SourceAddressList, uint32_t SourceAddressCount, win32::Windows::Win32::NetworkDrivers::SOCKADDR_IN6_LH* DestinationAddressList, uint32_t DestinationAddressCount, uint32_t AddressSortOptions, win32::Windows::Win32::IpHelper::SOCKADDR_IN6_PAIR** SortedAddressPairList, uint32_t* SortedAddressPairCount) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertCompartmentGuidToId(::win32::guid* CompartmentGuid, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertCompartmentIdToGuid(uint32_t CompartmentId, ::win32::guid* CompartmentGuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceNameToLuidA(int8_t* InterfaceName, win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceNameToLuidW(uint16_t* InterfaceName, win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceLuidToNameA(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, int8_t* InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceLuidToNameW(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, uint16_t* InterfaceName, size_t Length) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceLuidToIndex(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, uint32_t* InterfaceIndex) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceIndexToLuid(uint32_t InterfaceIndex, win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceLuidToAlias(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, uint16_t* InterfaceAlias, size_t Length) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceAliasToLuid(uint16_t* InterfaceAlias, win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceLuidToGuid(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, ::win32::guid* InterfaceGuid) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertInterfaceGuidToLuid(::win32::guid* InterfaceGuid, win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid) noexcept;
    uint32_t __stdcall WIN32_IMPL_if_nametoindex(int8_t* InterfaceName) noexcept;
    int8_t* __stdcall WIN32_IMPL_if_indextoname(uint32_t InterfaceIndex, int8_t* InterfaceName) noexcept;
    void __stdcall WIN32_IMPL_GetCurrentThreadCompartmentScope(uint32_t* CompartmentScope, uint32_t* CompartmentId) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetCurrentThreadCompartmentScope(uint32_t CompartmentScope) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetJobCompartmentId(win32::Windows::Win32::SystemServices::HANDLE JobHandle) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetJobCompartmentId(win32::Windows::Win32::SystemServices::HANDLE JobHandle, uint32_t CompartmentId) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetDefaultCompartmentId() noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertLengthToIpv4Mask(uint32_t MaskLength, uint32_t* Mask) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_ConvertIpv4MaskToLength(uint32_t Mask, uint8_t* MaskLength) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetDnsSettings(win32::Windows::Win32::IpHelper::DNS_SETTINGS* Settings) noexcept;
    void __stdcall WIN32_IMPL_FreeDnsSettings(win32::Windows::Win32::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetDnsSettings(win32::Windows::Win32::IpHelper::DNS_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetInterfaceDnsSettings(::win32::guid Interface, win32::Windows::Win32::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    void __stdcall WIN32_IMPL_FreeInterfaceDnsSettings(win32::Windows::Win32::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SetInterfaceDnsSettings(::win32::guid Interface, win32::Windows::Win32::IpHelper::DNS_INTERFACE_SETTINGS* Settings) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetNetworkConnectivityHint(win32::Windows::Win32::IpHelper::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_GetNetworkConnectivityHintForInterface(uint32_t InterfaceIndex, win32::Windows::Win32::IpHelper::NL_NETWORK_CONNECTIVITY_HINT* ConnectivityHint) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_NotifyNetworkConnectivityHintChange(win32::Windows::Win32::IpHelper::PNETWORK_CONNECTIVITY_HINT_CHANGE_CALLBACK* Callback, void* CallerContext, uint8_t InitialNotification, intptr_t* NotificationHandle) noexcept;
    win32::Windows::Win32::IpHelper::IcmpHandle __stdcall WIN32_IMPL_IcmpCreateFile() noexcept;
    win32::Windows::Win32::IpHelper::IcmpHandle __stdcall WIN32_IMPL_Icmp6CreateFile() noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_IcmpCloseHandle(win32::Windows::Win32::SystemServices::HANDLE IcmpHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_IcmpSendEcho(win32::Windows::Win32::SystemServices::HANDLE IcmpHandle, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall WIN32_IMPL_IcmpSendEcho2(win32::Windows::Win32::SystemServices::HANDLE IcmpHandle, win32::Windows::Win32::SystemServices::HANDLE Event, win32::Windows::Win32::SystemServices::FARPROC* ApcRoutine, void* ApcContext, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall WIN32_IMPL_IcmpSendEcho2Ex(win32::Windows::Win32::SystemServices::HANDLE IcmpHandle, win32::Windows::Win32::SystemServices::HANDLE Event, win32::Windows::Win32::SystemServices::FARPROC* ApcRoutine, void* ApcContext, uint32_t SourceAddress, uint32_t DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall WIN32_IMPL_Icmp6SendEcho2(win32::Windows::Win32::SystemServices::HANDLE IcmpHandle, win32::Windows::Win32::SystemServices::HANDLE Event, win32::Windows::Win32::SystemServices::FARPROC* ApcRoutine, void* ApcContext, win32::Windows::Win32::NetworkDrivers::SOCKADDR_IN6_LH* SourceAddress, win32::Windows::Win32::NetworkDrivers::SOCKADDR_IN6_LH* DestinationAddress, void* RequestData, uint16_t RequestSize, win32::Windows::Win32::IpHelper::ip_option_information* RequestOptions, void* ReplyBuffer, uint32_t ReplySize, uint32_t Timeout) noexcept;
    uint32_t __stdcall WIN32_IMPL_IcmpParseReplies(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t __stdcall WIN32_IMPL_Icmp6ParseReplies(void* ReplyBuffer, uint32_t ReplySize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetNumberOfInterfaces(uint32_t* pdwNumIf) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIfEntry(win32::Windows::Win32::Mib::MIB_IFROW* pIfRow) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIfTable(win32::Windows::Win32::Mib::MIB_IFTABLE* pIfTable, uint32_t* pdwSize, win32::Windows::Win32::SystemServices::BOOL bOrder) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpAddrTable(win32::Windows::Win32::Mib::MIB_IPADDRTABLE* pIpAddrTable, uint32_t* pdwSize, win32::Windows::Win32::SystemServices::BOOL bOrder) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpNetTable(win32::Windows::Win32::Mib::MIB_IPNETTABLE* IpNetTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpForwardTable(win32::Windows::Win32::Mib::MIB_IPFORWARDTABLE* pIpForwardTable, uint32_t* pdwSize, win32::Windows::Win32::SystemServices::BOOL bOrder) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcpTable(win32::Windows::Win32::Mib::MIB_TCPTABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetExtendedTcpTable(void* pTcpTable, uint32_t* pdwSize, win32::Windows::Win32::SystemServices::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::IpHelper::TCP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOwnerModuleFromTcpEntry(win32::Windows::Win32::Mib::MIB_TCPROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUdpTable(win32::Windows::Win32::Mib::MIB_UDPTABLE* UdpTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetExtendedUdpTable(void* pUdpTable, uint32_t* pdwSize, win32::Windows::Win32::SystemServices::BOOL bOrder, uint32_t ulAf, win32::Windows::Win32::IpHelper::UDP_TABLE_CLASS TableClass, uint32_t Reserved) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOwnerModuleFromUdpEntry(win32::Windows::Win32::Mib::MIB_UDPROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcpTable2(win32::Windows::Win32::Mib::MIB_TCPTABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcp6Table(win32::Windows::Win32::Mib::MIB_TCP6TABLE* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcp6Table2(win32::Windows::Win32::Mib::MIB_TCP6TABLE2* TcpTable, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetPerTcpConnectionEStats(win32::Windows::Win32::Mib::MIB_TCPROW_LH* Row, win32::Windows::Win32::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetPerTcpConnectionEStats(win32::Windows::Win32::Mib::MIB_TCPROW_LH* Row, win32::Windows::Win32::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetPerTcp6ConnectionEStats(win32::Windows::Win32::Mib::MIB_TCP6ROW* Row, win32::Windows::Win32::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint8_t* Ros, uint32_t RosVersion, uint32_t RosSize, uint8_t* Rod, uint32_t RodVersion, uint32_t RodSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetPerTcp6ConnectionEStats(win32::Windows::Win32::Mib::MIB_TCP6ROW* Row, win32::Windows::Win32::IpHelper::TCP_ESTATS_TYPE EstatsType, uint8_t* Rw, uint32_t RwVersion, uint32_t RwSize, uint32_t Offset) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOwnerModuleFromTcp6Entry(win32::Windows::Win32::Mib::MIB_TCP6ROW_OWNER_MODULE* pTcpEntry, win32::Windows::Win32::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUdp6Table(win32::Windows::Win32::Mib::MIB_UDP6TABLE* Udp6Table, uint32_t* SizePointer, win32::Windows::Win32::SystemServices::BOOL Order) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOwnerModuleFromUdp6Entry(win32::Windows::Win32::Mib::MIB_UDP6ROW_OWNER_MODULE* pUdpEntry, win32::Windows::Win32::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetOwnerModuleFromPidAndInfo(uint32_t ulPid, uint64_t* pInfo, win32::Windows::Win32::IpHelper::TCPIP_OWNER_MODULE_INFO_CLASS Class, void* pBuffer, uint32_t* pdwSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpStatistics(win32::Windows::Win32::Mib::MIB_IPSTATS_LH* Statistics) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIcmpStatistics(win32::Windows::Win32::Mib::MIB_ICMP* Statistics) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcpStatistics(win32::Windows::Win32::Mib::MIB_TCPSTATS_LH* Statistics) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUdpStatistics(win32::Windows::Win32::Mib::MIB_UDPSTATS* Stats) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIpStatisticsEx(win32::Windows::Win32::Mib::MIB_IPSTATS_LH* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpStatisticsEx(win32::Windows::Win32::Mib::MIB_IPSTATS_LH* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIcmpStatisticsEx(win32::Windows::Win32::Mib::MIB_ICMP_EX_XPSP1* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcpStatisticsEx(win32::Windows::Win32::Mib::MIB_TCPSTATS_LH* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUdpStatisticsEx(win32::Windows::Win32::Mib::MIB_UDPSTATS* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetTcpStatisticsEx2(win32::Windows::Win32::Mib::MIB_TCPSTATS2* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUdpStatisticsEx2(win32::Windows::Win32::Mib::MIB_UDPSTATS2* Statistics, uint32_t Family) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIfEntry(win32::Windows::Win32::Mib::MIB_IFROW* pIfRow) noexcept;
    uint32_t __stdcall WIN32_IMPL_CreateIpForwardEntry(win32::Windows::Win32::Mib::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIpForwardEntry(win32::Windows::Win32::Mib::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeleteIpForwardEntry(win32::Windows::Win32::Mib::MIB_IPFORWARDROW* pRoute) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIpStatistics(win32::Windows::Win32::Mib::MIB_IPSTATS_LH* pIpStats) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIpTTL(uint32_t nTTL) noexcept;
    uint32_t __stdcall WIN32_IMPL_CreateIpNetEntry(win32::Windows::Win32::Mib::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetIpNetEntry(win32::Windows::Win32::Mib::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeleteIpNetEntry(win32::Windows::Win32::Mib::MIB_IPNETROW_LH* pArpEntry) noexcept;
    uint32_t __stdcall WIN32_IMPL_FlushIpNetTable(uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_CreateProxyArpEntry(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeleteProxyArpEntry(uint32_t dwAddress, uint32_t dwMask, uint32_t dwIfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_SetTcpEntry(win32::Windows::Win32::Mib::MIB_TCPROW_LH* pTcpRow) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetInterfaceInfo(win32::Windows::Win32::IpHelper::IP_INTERFACE_INFO* pIfTable, uint32_t* dwOutBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetUniDirectionalAdapterInfo(win32::Windows::Win32::IpHelper::IP_UNIDIRECTIONAL_ADAPTER_ADDRESS* pIPIfInfo, uint32_t* dwOutBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_NhpAllocateAndGetInterfaceInfoFromStack(win32::Windows::Win32::IpHelper::ip_interface_name_info_w2ksp1** ppTable, uint32_t* pdwCount, win32::Windows::Win32::SystemServices::BOOL bOrder, win32::Windows::Win32::SystemServices::HANDLE hHeap, uint32_t dwFlags) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetBestInterface(uint32_t dwDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetBestInterfaceEx(win32::Windows::Win32::WinSock::SOCKADDR* pDestAddr, uint32_t* pdwBestIfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetBestRoute(uint32_t dwDestAddr, uint32_t dwSourceAddr, win32::Windows::Win32::Mib::MIB_IPFORWARDROW* pBestRoute) noexcept;
    uint32_t __stdcall WIN32_IMPL_NotifyAddrChange(intptr_t* Handle, win32::Windows::Win32::SystemServices::OVERLAPPED* overlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_NotifyRouteChange(intptr_t* Handle, win32::Windows::Win32::SystemServices::OVERLAPPED* overlapped) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_CancelIPChangeNotify(win32::Windows::Win32::SystemServices::OVERLAPPED* notifyOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetAdapterIndex(uint16_t* AdapterName, uint32_t* IfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_AddIPAddress(uint32_t Address, uint32_t IpMask, uint32_t IfIndex, uint32_t* NTEContext, uint32_t* NTEInstance) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeleteIPAddress(uint32_t NTEContext) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetNetworkParams(win32::Windows::Win32::IpHelper::FIXED_INFO_W2KSP1* pFixedInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetAdaptersInfo(win32::Windows::Win32::IpHelper::IP_ADAPTER_INFO* AdapterInfo, uint32_t* SizePointer) noexcept;
    win32::Windows::Win32::IpHelper::IP_ADAPTER_ORDER_MAP* __stdcall WIN32_IMPL_GetAdapterOrderMap() noexcept;
    uint32_t __stdcall WIN32_IMPL_GetAdaptersAddresses(uint32_t Family, uint32_t Flags, void* Reserved, win32::Windows::Win32::IpHelper::IP_ADAPTER_ADDRESSES_LH* AdapterAddresses, uint32_t* SizePointer) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetPerAdapterInfo(uint32_t IfIndex, win32::Windows::Win32::IpHelper::IP_PER_ADAPTER_INFO_W2KSP1* pPerAdapterInfo, uint32_t* pOutBufLen) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetInterfaceCurrentTimestampCapabilities(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetInterfaceHardwareTimestampCapabilities(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::IpHelper::INTERFACE_TIMESTAMP_CAPABILITIES* TimestampCapabilites) noexcept;
    uint32_t __stdcall WIN32_IMPL_CaptureInterfaceHardwareCrossTimestamp(win32::Windows::Win32::IpHelper::NET_LUID_LH* InterfaceLuid, win32::Windows::Win32::IpHelper::INTERFACE_HARDWARE_CROSSTIMESTAMP* CrossTimestamp) noexcept;
    uint32_t __stdcall WIN32_IMPL_NotifyIfTimestampConfigChange(void* CallerContext, win32::Windows::Win32::IpHelper::PINTERFACE_TIMESTAMP_CONFIG_CHANGE_CALLBACK* Callback, win32::Windows::Win32::IpHelper::HIFTIMESTAMPCHANGE__** NotificationHandle) noexcept;
    void __stdcall WIN32_IMPL_CancelIfTimestampConfigChange(win32::Windows::Win32::IpHelper::HIFTIMESTAMPCHANGE__* NotificationHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_IpReleaseAddress(win32::Windows::Win32::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t __stdcall WIN32_IMPL_IpRenewAddress(win32::Windows::Win32::IpHelper::IP_ADAPTER_INDEX_MAP* AdapterInfo) noexcept;
    uint32_t __stdcall WIN32_IMPL_SendARP(uint32_t DestIP, uint32_t SrcIP, void* pMacAddr, uint32_t* PhyAddrLen) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_GetRTTAndHopCount(uint32_t DestIpAddress, uint32_t* HopCount, uint32_t MaxHops, uint32_t* RTT) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetFriendlyIfIndex(uint32_t IfIndex) noexcept;
    uint32_t __stdcall WIN32_IMPL_EnableRouter(win32::Windows::Win32::SystemServices::HANDLE* pHandle, win32::Windows::Win32::SystemServices::OVERLAPPED* pOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_UnenableRouter(win32::Windows::Win32::SystemServices::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t __stdcall WIN32_IMPL_DisableMediaSense(win32::Windows::Win32::SystemServices::HANDLE* pHandle, win32::Windows::Win32::SystemServices::OVERLAPPED* pOverLapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_RestoreMediaSense(win32::Windows::Win32::SystemServices::OVERLAPPED* pOverlapped, uint32_t* lpdwEnableCount) noexcept;
    uint32_t __stdcall WIN32_IMPL_GetIpErrorString(uint32_t ErrorCode, uint16_t* Buffer, uint32_t* Size) noexcept;
    uint32_t __stdcall WIN32_IMPL_ResolveNeighbor(win32::Windows::Win32::WinSock::SOCKADDR* NetworkAddress, void* PhysicalAddress, uint32_t* PhysicalAddressLength) noexcept;
    uint32_t __stdcall WIN32_IMPL_CreatePersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall WIN32_IMPL_CreatePersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeletePersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t __stdcall WIN32_IMPL_DeletePersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts) noexcept;
    uint32_t __stdcall WIN32_IMPL_LookupPersistentTcpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    uint32_t __stdcall WIN32_IMPL_LookupPersistentUdpPortReservation(uint16_t StartPort, uint16_t NumberOfPorts, uint64_t* Token) noexcept;
    int8_t* __stdcall WIN32_IMPL_RtlIpv4AddressToStringA(win32::Windows::Win32::WinSock::in_addr* Addr, int8_t* S) noexcept;
    uint16_t* __stdcall WIN32_IMPL_RtlIpv4AddressToStringW(win32::Windows::Win32::WinSock::in_addr* Addr, uint16_t* S) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv4AddressToStringExW(win32::Windows::Win32::WinSock::in_addr* Address, uint16_t Port, uint16_t* AddressString, uint32_t* AddressStringLength) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv4StringToAddressA(int8_t* S, uint8_t Strict, int8_t** Terminator, win32::Windows::Win32::WinSock::in_addr* Addr) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv4StringToAddressW(uint16_t* S, uint8_t Strict, uint16_t** Terminator, win32::Windows::Win32::WinSock::in_addr* Addr) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv4StringToAddressExW(uint16_t* AddressString, uint8_t Strict, win32::Windows::Win32::WinSock::in_addr* Address, uint16_t* Port) noexcept;
    int8_t* __stdcall WIN32_IMPL_RtlIpv6AddressToStringA(win32::Windows::Win32::WinSock::in6_addr* Addr, int8_t* S) noexcept;
    uint16_t* __stdcall WIN32_IMPL_RtlIpv6AddressToStringW(win32::Windows::Win32::WinSock::in6_addr* Addr, uint16_t* S) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv6AddressToStringExW(win32::Windows::Win32::WinSock::in6_addr* Address, uint32_t ScopeId, uint16_t Port, uint16_t* AddressString, uint32_t* AddressStringLength) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv6StringToAddressA(int8_t* S, int8_t** Terminator, win32::Windows::Win32::WinSock::in6_addr* Addr) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv6StringToAddressW(uint16_t* S, uint16_t** Terminator, win32::Windows::Win32::WinSock::in6_addr* Addr) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlIpv6StringToAddressExW(uint16_t* AddressString, win32::Windows::Win32::WinSock::in6_addr* Address, uint32_t* ScopeId, uint16_t* Port) noexcept;
    int8_t* __stdcall WIN32_IMPL_RtlEthernetAddressToStringA(win32::Windows::Win32::WindowsFiltering::DL_EUI48* Addr, int8_t* S) noexcept;
    uint16_t* __stdcall WIN32_IMPL_RtlEthernetAddressToStringW(win32::Windows::Win32::WindowsFiltering::DL_EUI48* Addr, uint16_t* S) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlEthernetStringToAddressA(int8_t* S, int8_t** Terminator, win32::Windows::Win32::WindowsFiltering::DL_EUI48* Addr) noexcept;
    int32_t __stdcall WIN32_IMPL_RtlEthernetStringToAddressW(uint16_t* S, uint16_t** Terminator, win32::Windows::Win32::WindowsFiltering::DL_EUI48* Addr) noexcept;
}
WIN32_IMPL_LINK(GetIfEntry2, 4)
WIN32_IMPL_LINK(GetIfEntry2Ex, 8)
WIN32_IMPL_LINK(GetIfTable2, 4)
WIN32_IMPL_LINK(GetIfTable2Ex, 8)
WIN32_IMPL_LINK(GetIfStackTable, 4)
WIN32_IMPL_LINK(GetInvertedIfStackTable, 4)
WIN32_IMPL_LINK(GetIpInterfaceEntry, 4)
WIN32_IMPL_LINK(GetIpInterfaceTable, 8)
WIN32_IMPL_LINK(InitializeIpInterfaceEntry, 4)
WIN32_IMPL_LINK(NotifyIpInterfaceChange, 20)
WIN32_IMPL_LINK(SetIpInterfaceEntry, 4)
WIN32_IMPL_LINK(GetIpNetworkConnectionBandwidthEstimates, 12)
WIN32_IMPL_LINK(CreateUnicastIpAddressEntry, 4)
WIN32_IMPL_LINK(DeleteUnicastIpAddressEntry, 4)
WIN32_IMPL_LINK(GetUnicastIpAddressEntry, 4)
WIN32_IMPL_LINK(GetUnicastIpAddressTable, 8)
WIN32_IMPL_LINK(InitializeUnicastIpAddressEntry, 4)
WIN32_IMPL_LINK(NotifyUnicastIpAddressChange, 20)
WIN32_IMPL_LINK(NotifyStableUnicastIpAddressTable, 20)
WIN32_IMPL_LINK(SetUnicastIpAddressEntry, 4)
WIN32_IMPL_LINK(CreateAnycastIpAddressEntry, 4)
WIN32_IMPL_LINK(DeleteAnycastIpAddressEntry, 4)
WIN32_IMPL_LINK(GetAnycastIpAddressEntry, 4)
WIN32_IMPL_LINK(GetAnycastIpAddressTable, 8)
WIN32_IMPL_LINK(GetMulticastIpAddressEntry, 4)
WIN32_IMPL_LINK(GetMulticastIpAddressTable, 8)
WIN32_IMPL_LINK(CreateIpForwardEntry2, 4)
WIN32_IMPL_LINK(DeleteIpForwardEntry2, 4)
WIN32_IMPL_LINK(GetBestRoute2, 28)
WIN32_IMPL_LINK(GetIpForwardEntry2, 4)
WIN32_IMPL_LINK(GetIpForwardTable2, 8)
WIN32_IMPL_LINK(InitializeIpForwardEntry, 4)
WIN32_IMPL_LINK(NotifyRouteChange2, 20)
WIN32_IMPL_LINK(SetIpForwardEntry2, 4)
WIN32_IMPL_LINK(FlushIpPathTable, 4)
WIN32_IMPL_LINK(GetIpPathEntry, 4)
WIN32_IMPL_LINK(GetIpPathTable, 8)
WIN32_IMPL_LINK(CreateIpNetEntry2, 4)
WIN32_IMPL_LINK(DeleteIpNetEntry2, 4)
WIN32_IMPL_LINK(FlushIpNetTable2, 8)
WIN32_IMPL_LINK(GetIpNetEntry2, 4)
WIN32_IMPL_LINK(GetIpNetTable2, 8)
WIN32_IMPL_LINK(ResolveIpNetEntry2, 8)
WIN32_IMPL_LINK(SetIpNetEntry2, 4)
WIN32_IMPL_LINK(NotifyTeredoPortChange, 16)
WIN32_IMPL_LINK(GetTeredoPort, 4)
WIN32_IMPL_LINK(CancelMibChangeNotify2, 4)
WIN32_IMPL_LINK(FreeMibTable, 4)
WIN32_IMPL_LINK(CreateSortedAddressPairs, 28)
WIN32_IMPL_LINK(ConvertCompartmentGuidToId, 8)
WIN32_IMPL_LINK(ConvertCompartmentIdToGuid, 8)
WIN32_IMPL_LINK(ConvertInterfaceNameToLuidA, 8)
WIN32_IMPL_LINK(ConvertInterfaceNameToLuidW, 8)
WIN32_IMPL_LINK(ConvertInterfaceLuidToNameA, 12)
WIN32_IMPL_LINK(ConvertInterfaceLuidToNameW, 12)
WIN32_IMPL_LINK(ConvertInterfaceLuidToIndex, 8)
WIN32_IMPL_LINK(ConvertInterfaceIndexToLuid, 8)
WIN32_IMPL_LINK(ConvertInterfaceLuidToAlias, 12)
WIN32_IMPL_LINK(ConvertInterfaceAliasToLuid, 8)
WIN32_IMPL_LINK(ConvertInterfaceLuidToGuid, 8)
WIN32_IMPL_LINK(ConvertInterfaceGuidToLuid, 8)
WIN32_IMPL_LINK(if_nametoindex, 4)
WIN32_IMPL_LINK(if_indextoname, 8)
WIN32_IMPL_LINK(GetCurrentThreadCompartmentScope, 8)
WIN32_IMPL_LINK(SetCurrentThreadCompartmentScope, 4)
WIN32_IMPL_LINK(GetJobCompartmentId, 4)
WIN32_IMPL_LINK(SetJobCompartmentId, 8)
WIN32_IMPL_LINK(GetDefaultCompartmentId, 0)
WIN32_IMPL_LINK(ConvertLengthToIpv4Mask, 8)
WIN32_IMPL_LINK(ConvertIpv4MaskToLength, 8)
WIN32_IMPL_LINK(GetDnsSettings, 4)
WIN32_IMPL_LINK(FreeDnsSettings, 4)
WIN32_IMPL_LINK(SetDnsSettings, 4)
WIN32_IMPL_LINK(GetInterfaceDnsSettings, 8)
WIN32_IMPL_LINK(FreeInterfaceDnsSettings, 4)
WIN32_IMPL_LINK(SetInterfaceDnsSettings, 8)
WIN32_IMPL_LINK(GetNetworkConnectivityHint, 4)
WIN32_IMPL_LINK(GetNetworkConnectivityHintForInterface, 8)
WIN32_IMPL_LINK(NotifyNetworkConnectivityHintChange, 16)
WIN32_IMPL_LINK(IcmpCreateFile, 0)
WIN32_IMPL_LINK(Icmp6CreateFile, 0)
WIN32_IMPL_LINK(IcmpCloseHandle, 4)
WIN32_IMPL_LINK(IcmpSendEcho, 32)
WIN32_IMPL_LINK(IcmpSendEcho2, 44)
WIN32_IMPL_LINK(IcmpSendEcho2Ex, 48)
WIN32_IMPL_LINK(Icmp6SendEcho2, 48)
WIN32_IMPL_LINK(IcmpParseReplies, 8)
WIN32_IMPL_LINK(Icmp6ParseReplies, 8)
WIN32_IMPL_LINK(GetNumberOfInterfaces, 4)
WIN32_IMPL_LINK(GetIfEntry, 4)
WIN32_IMPL_LINK(GetIfTable, 12)
WIN32_IMPL_LINK(GetIpAddrTable, 12)
WIN32_IMPL_LINK(GetIpNetTable, 12)
WIN32_IMPL_LINK(GetIpForwardTable, 12)
WIN32_IMPL_LINK(GetTcpTable, 12)
WIN32_IMPL_LINK(GetExtendedTcpTable, 24)
WIN32_IMPL_LINK(GetOwnerModuleFromTcpEntry, 16)
WIN32_IMPL_LINK(GetUdpTable, 12)
WIN32_IMPL_LINK(GetExtendedUdpTable, 24)
WIN32_IMPL_LINK(GetOwnerModuleFromUdpEntry, 16)
WIN32_IMPL_LINK(GetTcpTable2, 12)
WIN32_IMPL_LINK(GetTcp6Table, 12)
WIN32_IMPL_LINK(GetTcp6Table2, 12)
WIN32_IMPL_LINK(GetPerTcpConnectionEStats, 44)
WIN32_IMPL_LINK(SetPerTcpConnectionEStats, 24)
WIN32_IMPL_LINK(GetPerTcp6ConnectionEStats, 44)
WIN32_IMPL_LINK(SetPerTcp6ConnectionEStats, 24)
WIN32_IMPL_LINK(GetOwnerModuleFromTcp6Entry, 16)
WIN32_IMPL_LINK(GetUdp6Table, 12)
WIN32_IMPL_LINK(GetOwnerModuleFromUdp6Entry, 16)
WIN32_IMPL_LINK(GetOwnerModuleFromPidAndInfo, 20)
WIN32_IMPL_LINK(GetIpStatistics, 4)
WIN32_IMPL_LINK(GetIcmpStatistics, 4)
WIN32_IMPL_LINK(GetTcpStatistics, 4)
WIN32_IMPL_LINK(GetUdpStatistics, 4)
WIN32_IMPL_LINK(SetIpStatisticsEx, 8)
WIN32_IMPL_LINK(GetIpStatisticsEx, 8)
WIN32_IMPL_LINK(GetIcmpStatisticsEx, 8)
WIN32_IMPL_LINK(GetTcpStatisticsEx, 8)
WIN32_IMPL_LINK(GetUdpStatisticsEx, 8)
WIN32_IMPL_LINK(GetTcpStatisticsEx2, 8)
WIN32_IMPL_LINK(GetUdpStatisticsEx2, 8)
WIN32_IMPL_LINK(SetIfEntry, 4)
WIN32_IMPL_LINK(CreateIpForwardEntry, 4)
WIN32_IMPL_LINK(SetIpForwardEntry, 4)
WIN32_IMPL_LINK(DeleteIpForwardEntry, 4)
WIN32_IMPL_LINK(SetIpStatistics, 4)
WIN32_IMPL_LINK(SetIpTTL, 4)
WIN32_IMPL_LINK(CreateIpNetEntry, 4)
WIN32_IMPL_LINK(SetIpNetEntry, 4)
WIN32_IMPL_LINK(DeleteIpNetEntry, 4)
WIN32_IMPL_LINK(FlushIpNetTable, 4)
WIN32_IMPL_LINK(CreateProxyArpEntry, 12)
WIN32_IMPL_LINK(DeleteProxyArpEntry, 12)
WIN32_IMPL_LINK(SetTcpEntry, 4)
WIN32_IMPL_LINK(GetInterfaceInfo, 8)
WIN32_IMPL_LINK(GetUniDirectionalAdapterInfo, 8)
WIN32_IMPL_LINK(NhpAllocateAndGetInterfaceInfoFromStack, 20)
WIN32_IMPL_LINK(GetBestInterface, 8)
WIN32_IMPL_LINK(GetBestInterfaceEx, 8)
WIN32_IMPL_LINK(GetBestRoute, 12)
WIN32_IMPL_LINK(NotifyAddrChange, 8)
WIN32_IMPL_LINK(NotifyRouteChange, 8)
WIN32_IMPL_LINK(CancelIPChangeNotify, 4)
WIN32_IMPL_LINK(GetAdapterIndex, 8)
WIN32_IMPL_LINK(AddIPAddress, 20)
WIN32_IMPL_LINK(DeleteIPAddress, 4)
WIN32_IMPL_LINK(GetNetworkParams, 8)
WIN32_IMPL_LINK(GetAdaptersInfo, 8)
WIN32_IMPL_LINK(GetAdapterOrderMap, 0)
WIN32_IMPL_LINK(GetAdaptersAddresses, 20)
WIN32_IMPL_LINK(GetPerAdapterInfo, 12)
WIN32_IMPL_LINK(GetInterfaceCurrentTimestampCapabilities, 8)
WIN32_IMPL_LINK(GetInterfaceHardwareTimestampCapabilities, 8)
WIN32_IMPL_LINK(CaptureInterfaceHardwareCrossTimestamp, 8)
WIN32_IMPL_LINK(NotifyIfTimestampConfigChange, 12)
WIN32_IMPL_LINK(CancelIfTimestampConfigChange, 4)
WIN32_IMPL_LINK(IpReleaseAddress, 4)
WIN32_IMPL_LINK(IpRenewAddress, 4)
WIN32_IMPL_LINK(SendARP, 16)
WIN32_IMPL_LINK(GetRTTAndHopCount, 16)
WIN32_IMPL_LINK(GetFriendlyIfIndex, 4)
WIN32_IMPL_LINK(EnableRouter, 8)
WIN32_IMPL_LINK(UnenableRouter, 8)
WIN32_IMPL_LINK(DisableMediaSense, 8)
WIN32_IMPL_LINK(RestoreMediaSense, 8)
WIN32_IMPL_LINK(GetIpErrorString, 12)
WIN32_IMPL_LINK(ResolveNeighbor, 12)
WIN32_IMPL_LINK(CreatePersistentTcpPortReservation, 12)
WIN32_IMPL_LINK(CreatePersistentUdpPortReservation, 12)
WIN32_IMPL_LINK(DeletePersistentTcpPortReservation, 8)
WIN32_IMPL_LINK(DeletePersistentUdpPortReservation, 8)
WIN32_IMPL_LINK(LookupPersistentTcpPortReservation, 12)
WIN32_IMPL_LINK(LookupPersistentUdpPortReservation, 12)
WIN32_IMPL_LINK(RtlIpv4AddressToStringA, 8)
WIN32_IMPL_LINK(RtlIpv4AddressToStringW, 8)
WIN32_IMPL_LINK(RtlIpv4AddressToStringExW, 16)
WIN32_IMPL_LINK(RtlIpv4StringToAddressA, 16)
WIN32_IMPL_LINK(RtlIpv4StringToAddressW, 16)
WIN32_IMPL_LINK(RtlIpv4StringToAddressExW, 16)
WIN32_IMPL_LINK(RtlIpv6AddressToStringA, 8)
WIN32_IMPL_LINK(RtlIpv6AddressToStringW, 8)
WIN32_IMPL_LINK(RtlIpv6AddressToStringExW, 20)
WIN32_IMPL_LINK(RtlIpv6StringToAddressA, 12)
WIN32_IMPL_LINK(RtlIpv6StringToAddressW, 12)
WIN32_IMPL_LINK(RtlIpv6StringToAddressExW, 16)
WIN32_IMPL_LINK(RtlEthernetAddressToStringA, 8)
WIN32_IMPL_LINK(RtlEthernetAddressToStringW, 8)
WIN32_IMPL_LINK(RtlEthernetStringToAddressA, 12)
WIN32_IMPL_LINK(RtlEthernetStringToAddressW, 12)

#pragma endregion abi_methods

#endif
