// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_MachineLearning_0_H
#define WIN32_Windows_Win32_MachineLearning_0_H
WIN32_EXPORT namespace win32::Windows::Win32::MachineLearning
{
#pragma region enums
    enum class MLOperatorAttributeType : uint32_t
    {
        Undefined = 0x0,
        Float = 0x2,
        Int = 0x3,
        String = 0x4,
        FloatArray = 0x7,
        IntArray = 0x8,
        StringArray = 0x9,
    };
    enum class MLOperatorEdgeType : uint32_t
    {
        Undefined = 0x0,
        Tensor = 0x1,
    };
    enum class MLOperatorExecutionType : uint32_t
    {
        Undefined = 0x0,
        Cpu = 0x1,
        D3D12 = 0x2,
    };
    enum class MLOperatorKernelOptions : uint32_t
    {
        None = 0x0,
        AllowDynamicInputShapes = 0x1,
    };
    enum class MLOperatorParameterOptions : uint32_t
    {
        Single = 0x0,
        Optional = 0x1,
        Variadic = 0x2,
    };
    enum class MLOperatorSchemaEdgeTypeFormat : int32_t
    {
        EdgeDescription = 0,
        Label = 1,
    };
    enum class MLOperatorTensorDataType : uint32_t
    {
        Undefined = 0x0,
        Float = 0x1,
        UInt8 = 0x2,
        Int8 = 0x3,
        UInt16 = 0x4,
        Int16 = 0x5,
        Int32 = 0x6,
        Int64 = 0x7,
        String = 0x8,
        Bool = 0x9,
        Float16 = 0xa,
        Double = 0xb,
        UInt32 = 0xc,
        UInt64 = 0xd,
        Complex64 = 0xe,
        Complex128 = 0xf,
    };
    enum class WINML_BINDING_TYPE : int32_t
    {
        WINML_BINDING_UNDEFINED = 0,
        WINML_BINDING_TENSOR = 1,
        WINML_BINDING_SEQUENCE = 2,
        WINML_BINDING_MAP = 3,
        WINML_BINDING_IMAGE = 4,
        WINML_BINDING_RESOURCE = 5,
    };
    enum class WINML_FEATURE_TYPE : int32_t
    {
        WINML_FEATURE_UNDEFINED = 0,
        WINML_FEATURE_TENSOR = 1,
        WINML_FEATURE_SEQUENCE = 2,
        WINML_FEATURE_MAP = 3,
        WINML_FEATURE_IMAGE = 4,
    };
    enum class WINML_RUNTIME_TYPE : int32_t
    {
        WINML_RUNTIME_CNTK = 0,
    };
    enum class WINML_TENSOR_DATA_TYPE : int32_t
    {
        WINML_TENSOR_UNDEFINED = 0,
        WINML_TENSOR_FLOAT = 1,
        WINML_TENSOR_UINT8 = 2,
        WINML_TENSOR_INT8 = 3,
        WINML_TENSOR_UINT16 = 4,
        WINML_TENSOR_INT16 = 5,
        WINML_TENSOR_INT32 = 6,
        WINML_TENSOR_INT64 = 7,
        WINML_TENSOR_STRING = 8,
        WINML_TENSOR_BOOLEAN = 9,
        WINML_TENSOR_FLOAT16 = 10,
        WINML_TENSOR_DOUBLE = 11,
        WINML_TENSOR_UINT32 = 12,
        WINML_TENSOR_UINT64 = 13,
        WINML_TENSOR_COMPLEX64 = 14,
        WINML_TENSOR_COMPLEX128 = 15,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct MLOperatorAttribute;
    struct MLOperatorAttributeNameValue;
    struct MLOperatorEdgeDescription;
    struct MLOperatorEdgeTypeConstraint;
    struct MLOperatorKernelDescription;
    struct MLOperatorSchemaDescription;
    struct MLOperatorSchemaEdgeDescription;
    struct MLOperatorSetId;
    struct WINML_BINDING_DESC;
    struct WINML_IMAGE_BINDING_DESC;
    struct WINML_IMAGE_VARIABLE_DESC;
    struct WINML_MAP_BINDING_DESC;
    struct WINML_MAP_VARIABLE_DESC;
    struct WINML_MODEL_DESC;
    struct WINML_RESOURCE_BINDING_DESC;
    struct WINML_SEQUENCE_BINDING_DESC;
    struct WINML_SEQUENCE_VARIABLE_DESC;
    struct WINML_TENSOR_BINDING_DESC;
    struct WINML_TENSOR_VARIABLE_DESC;
    struct WINML_VARIABLE_DESC;
    struct IMLOperatorAttributes;
    struct IMLOperatorKernel;
    struct IMLOperatorKernelContext;
    struct IMLOperatorKernelCreationContext;
    struct IMLOperatorKernelFactory;
    struct IMLOperatorRegistry;
    struct IMLOperatorShapeInferenceContext;
    struct IMLOperatorShapeInferrer;
    struct IMLOperatorTensor;
    struct IMLOperatorTensorShapeDescription;
    struct IMLOperatorTypeInferenceContext;
    struct IMLOperatorTypeInferrer;
    struct IWinMLEvaluationContext;
    struct IWinMLModel;
    struct IWinMLRuntime;
    struct IWinMLRuntimeFactory;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorAttributes>{ 0x4B1B1759,0xEC40,0x466C,{ 0xAA,0xB4,0xBE,0xB5,0x34,0x7F,0xD2,0x4C } }; // 4B1B1759-EC40-466C-AAB4-BEB5347FD24C
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorKernel>{ 0x11C4B4A0,0xB467,0x4EAA,{ 0xA1,0xA6,0xB9,0x61,0xD8,0xD0,0xED,0x79 } }; // 11C4B4A0-B467-4EAA-A1A6-B961D8D0ED79
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorKernelContext>{ 0x82536A28,0xF022,0x4769,{ 0x9D,0x3F,0x8B,0x27,0x8F,0x84,0xC0,0xC3 } }; // 82536A28-F022-4769-9D3F-8B278F84C0C3
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorKernelCreationContext>{ 0x5459B53D,0xA0FC,0x4665,{ 0xAD,0xDD,0x70,0x17,0x1E,0xF7,0xE6,0x31 } }; // 5459B53D-A0FC-4665-ADDD-70171EF7E631
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorKernelFactory>{ 0xEF15AD6F,0x0DC9,0x4908,{ 0xAB,0x35,0xA5,0x75,0xA3,0x0D,0xFB,0xF8 } }; // EF15AD6F-0DC9-4908-AB35-A575A30DFBF8
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorRegistry>{ 0x2AF9DD2D,0xB516,0x4672,{ 0x9A,0xB5,0x53,0x0C,0x20,0x84,0x93,0xAD } }; // 2AF9DD2D-B516-4672-9AB5-530C208493AD
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorShapeInferenceContext>{ 0x105B6B29,0x5408,0x4A68,{ 0x99,0x59,0x09,0xB5,0x95,0x5A,0x34,0x92 } }; // 105B6B29-5408-4A68-9959-09B5955A3492
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorShapeInferrer>{ 0x540BE5BE,0xA6C9,0x40EE,{ 0x83,0xF6,0xD2,0xB8,0xB4,0x0A,0x77,0x98 } }; // 540BE5BE-A6C9-40EE-83F6-D2B8B40A7798
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorTensor>{ 0x7FE41F41,0xF430,0x440E,{ 0xAE,0xCE,0x54,0x41,0x6D,0xC8,0xB9,0xDB } }; // 7FE41F41-F430-440E-AECE-54416DC8B9DB
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorTensorShapeDescription>{ 0xF20E8CBE,0x3B28,0x4248,{ 0xBE,0x95,0xF9,0x6F,0xBC,0x6E,0x46,0x43 } }; // F20E8CBE-3B28-4248-BE95-F96FBC6E4643
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorTypeInferenceContext>{ 0xEC893BB1,0xF938,0x427B,{ 0x84,0x88,0xC8,0xDC,0xF7,0x75,0xF1,0x38 } }; // EC893BB1-F938-427B-8488-C8DCF775F138
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IMLOperatorTypeInferrer>{ 0x781AEB48,0x9BCB,0x4797,{ 0xBF,0x77,0x8B,0xF4,0x55,0x21,0x7B,0xEB } }; // 781AEB48-9BCB-4797-BF77-8BF455217BEB
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IWinMLEvaluationContext>{ 0x95848F9E,0x583D,0x4054,{ 0xAF,0x12,0x91,0x63,0x87,0xCD,0x84,0x26 } }; // 95848F9E-583D-4054-AF12-916387CD8426
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IWinMLModel>{ 0xE2EEB6A9,0xF31F,0x4055,{ 0xA5,0x21,0xE3,0x0B,0x5B,0x33,0x66,0x4A } }; // E2EEB6A9-F31F-4055-A521-E30B5B33664A
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IWinMLRuntime>{ 0xA0425329,0x40AE,0x48D9,{ 0xBC,0xE3,0x82,0x9E,0xF7,0xB8,0xA4,0x1A } }; // A0425329-40AE-48D9-BCE3-829EF7B8A41A
    template <> inline constexpr guid guid_v<Windows::Win32::MachineLearning::IWinMLRuntimeFactory>{ 0xA807B84D,0x4AE5,0x4BC0,{ 0xA7,0x6A,0x94,0x1A,0xA2,0x46,0xBD,0x41 } }; // A807B84D-4AE5-4BC0-A76A-941AA246BD41
#pragma endregion guids

}
#endif
