// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Mapi_0_H
#define WIN32_Windows_Win32_Mapi_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Mapi
{
#pragma region enums
#pragma endregion enums

#pragma region forward_declarations
    struct MapiFileDesc;
    struct MapiFileDescW;
    struct MapiFileTagExt;
    struct MapiMessage;
    struct MapiMessageW;
    struct MapiRecipDesc;
    struct MapiRecipDescW;
#pragma endregion forward_declarations

#pragma region delegates
    using MAPILOGON = uint32_t __stdcall(size_t, int8_t*, int8_t*, uint32_t, uint32_t, size_t*);
    using MAPILOGOFF = uint32_t __stdcall(size_t, size_t, uint32_t, uint32_t);
    using MAPISENDMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::Mapi::MapiMessage*, uint32_t, uint32_t);
    using MAPISENDMAILW = uint32_t __stdcall(size_t, size_t, Windows::Win32::Mapi::MapiMessageW*, uint32_t, uint32_t);
    using MAPISENDDOCUMENTS = uint32_t __stdcall(size_t, int8_t*, int8_t*, int8_t*, uint32_t);
    using MAPIFINDNEXT = uint32_t __stdcall(size_t, size_t, int8_t*, int8_t*, uint32_t, uint32_t, int8_t*);
    using MAPIREADMAIL = uint32_t __stdcall(size_t, size_t, int8_t*, uint32_t, uint32_t, Windows::Win32::Mapi::MapiMessage**);
    using MAPISAVEMAIL = uint32_t __stdcall(size_t, size_t, Windows::Win32::Mapi::MapiMessage*, uint32_t, uint32_t, int8_t*);
    using MAPIDELETEMAIL = uint32_t __stdcall(size_t, size_t, int8_t*, uint32_t, uint32_t);
    using MAPIADDRESS = uint32_t __stdcall(size_t, size_t, int8_t*, uint32_t, int8_t*, uint32_t, Windows::Win32::Mapi::MapiRecipDesc*, uint32_t, uint32_t, uint32_t*, Windows::Win32::Mapi::MapiRecipDesc**);
    using MAPIDETAILS = uint32_t __stdcall(size_t, size_t, Windows::Win32::Mapi::MapiRecipDesc*, uint32_t, uint32_t);
    using MAPIRESOLVENAME = uint32_t __stdcall(size_t, size_t, int8_t*, uint32_t, uint32_t, Windows::Win32::Mapi::MapiRecipDesc**);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
