// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_MediaFoundation_0_H
#define WIN32_Windows_Win32_MediaFoundation_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Com
{
    struct IUnknown;
}
WIN32_EXPORT namespace win32::Windows::Win32::Direct2D
{
    struct IDirect3DDevice9Ex;
    struct IDirect3DSurface9;
}
WIN32_EXPORT namespace win32::Windows::Win32::Direct3D9
{
    enum class D3DFORMAT : uint32_t;
}
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct HANDLE;
}
WIN32_EXPORT namespace win32::Windows::Win32::MediaFoundation
{
#pragma region enums
    enum class AEC_INPUT_STREAM : int32_t
    {
        AEC_CAPTURE_STREAM = 0,
        AEC_REFERENCE_STREAM = 1,
    };
    enum class AEC_SYSTEM_MODE : int32_t
    {
        SINGLE_CHANNEL_AEC = 0,
        ADAPTIVE_ARRAY_ONLY = 1,
        OPTIBEAM_ARRAY_ONLY = 2,
        ADAPTIVE_ARRAY_AND_AEC = 3,
        OPTIBEAM_ARRAY_AND_AEC = 4,
        SINGLE_CHANNEL_NSAGC = 5,
        MODE_NOT_SET = 6,
    };
    enum class AEC_VAD_MODE : int32_t
    {
        AEC_VAD_DISABLED = 0,
        AEC_VAD_NORMAL = 1,
        AEC_VAD_FOR_AGC = 2,
        AEC_VAD_FOR_SILENCE_SUPPRESSION = 3,
    };
    enum class ASF_SELECTION_STATUS : int32_t
    {
        ASF_STATUS_NOTSELECTED = 0,
        ASF_STATUS_CLEANPOINTSONLY = 1,
        ASF_STATUS_ALLDATAUNITS = 2,
    };
    enum class ASF_STATUSFLAGS : int32_t
    {
        ASF_STATUSFLAGS_INCOMPLETE = 1,
        ASF_STATUSFLAGS_NONFATAL_ERROR = 2,
    };
    enum class D3D11_AUTHENTICATED_CHANNEL_TYPE : int32_t
    {
        D3D11_AUTHENTICATED_CHANNEL_D3D11 = 1,
        D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE = 2,
        D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE = 3,
    };
    enum class D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE : int32_t
    {
        D3D11_PROCESSIDTYPE_UNKNOWN = 0,
        D3D11_PROCESSIDTYPE_DWM = 1,
        D3D11_PROCESSIDTYPE_HANDLE = 2,
    };
    enum class D3D11_BUS_TYPE : int32_t
    {
        D3D11_BUS_TYPE_OTHER = 0,
        D3D11_BUS_TYPE_PCI = 1,
        D3D11_BUS_TYPE_PCIX = 2,
        D3D11_BUS_TYPE_PCIEXPRESS = 3,
        D3D11_BUS_TYPE_AGP = 4,
        D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET = 65536,
        D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072,
        D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608,
        D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144,
        D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680,
        D3D11_BUS_IMPL_MODIFIER_NON_STANDARD = -2147483648,
    };
    enum class D3D11_CONTENT_PROTECTION_CAPS : int32_t
    {
        D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE = 1,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE = 2,
        D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON = 4,
        D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION = 8,
        D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY = 16,
        D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY = 32,
        D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK = 64,
        D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY = 128,
        D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV = 256,
        D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY = 512,
        D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT = 1024,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED = 2048,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE = 4096,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN = 8192,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION = 16384,
        D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION_MULTI_THREADED = 32768,
    };
    enum class D3D11_CRYPTO_SESSION_STATUS : int32_t
    {
        D3D11_CRYPTO_SESSION_STATUS_OK = 0,
        D3D11_CRYPTO_SESSION_STATUS_KEY_LOST = 1,
        D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST = 2,
    };
    enum class D3D11_FEATURE_VIDEO : int32_t
    {
        D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM = 0,
    };
    enum class D3D11_VDOV_DIMENSION : int32_t
    {
        D3D11_VDOV_DIMENSION_UNKNOWN = 0,
        D3D11_VDOV_DIMENSION_TEXTURE2D = 1,
    };
    enum class D3D11_VIDEO_DECODER_BUFFER_TYPE : int32_t
    {
        D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS = 0,
        D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL = 1,
        D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE = 2,
        D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL = 3,
        D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX = 4,
        D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL = 5,
        D3D11_VIDEO_DECODER_BUFFER_BITSTREAM = 6,
        D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR = 7,
        D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN = 8,
    };
    enum class D3D11_VIDEO_DECODER_CAPS : int32_t
    {
        D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE = 1,
        D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME = 2,
        D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC = 4,
        D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED = 8,
        D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED = 16,
    };
    enum class D3D11_VIDEO_FRAME_FORMAT : int32_t
    {
        D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE = 0,
        D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1,
        D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2,
    };
    enum class D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE : int32_t
    {
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE = 0,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND = 1,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION = 2,
        D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
    };
    enum class D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE = 1,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING = 2,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT = 4,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION = 8,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING = 16,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION = 32,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION = 64,
        D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING = 128,
    };
    enum class D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION = 1,
        D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE = 2,
        D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION = 4,
        D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT = 8,
    };
    enum class D3D11_VIDEO_PROCESSOR_DEVICE_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE = 1,
        D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC = 2,
        D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION = 4,
        D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 8,
        D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE = 16,
    };
    enum class D3D11_VIDEO_PROCESSOR_FEATURE_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL = 1,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION = 2,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY = 4,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE = 8,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY = 16,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO = 32,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION = 64,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM = 128,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO = 256,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR = 512,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE = 1024,
        D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_METADATA_HDR10 = 2048,
    };
    enum class D3D11_VIDEO_PROCESSOR_FILTER : int32_t
    {
        D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS = 0,
        D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST = 1,
        D3D11_VIDEO_PROCESSOR_FILTER_HUE = 2,
        D3D11_VIDEO_PROCESSOR_FILTER_SATURATION = 3,
        D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION = 4,
        D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT = 5,
        D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING = 6,
        D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT = 7,
    };
    enum class D3D11_VIDEO_PROCESSOR_FILTER_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS = 1,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST = 2,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE = 4,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION = 8,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION = 16,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT = 32,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING = 64,
        D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT = 128,
    };
    enum class D3D11_VIDEO_PROCESSOR_FORMAT_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED = 1,
        D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP = 2,
        D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY = 4,
        D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED = 8,
    };
    enum class D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT : int32_t
    {
        D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT = 1,
        D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT = 2,
    };
    enum class D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32 = 1,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22 = 2,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224 = 4,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332 = 8,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322 = 16,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55 = 32,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64 = 64,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87 = 128,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223 = 256,
        D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER = -2147483648,
    };
    enum class D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE : int32_t
    {
        D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED = 0,
        D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235 = 1,
        D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255 = 2,
    };
    enum class D3D11_VIDEO_PROCESSOR_OUTPUT_RATE : int32_t
    {
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL = 0,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF = 1,
        D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM = 2,
    };
    enum class D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND = 1,
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB = 2,
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE = 4,
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 8,
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE = 16,
        D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION = 32,
    };
    enum class D3D11_VIDEO_PROCESSOR_ROTATION : int32_t
    {
        D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY = 0,
        D3D11_VIDEO_PROCESSOR_ROTATION_90 = 1,
        D3D11_VIDEO_PROCESSOR_ROTATION_180 = 2,
        D3D11_VIDEO_PROCESSOR_ROTATION_270 = 3,
    };
    enum class D3D11_VIDEO_PROCESSOR_STEREO_CAPS : int32_t
    {
        D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET = 1,
        D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED = 2,
        D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED = 4,
        D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD = 8,
        D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE = 16,
    };
    enum class D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE : int32_t
    {
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE = 0,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0 = 1,
        D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1 = 2,
    };
    enum class D3D11_VIDEO_PROCESSOR_STEREO_FORMAT : int32_t
    {
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO = 0,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL = 1,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL = 2,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE = 3,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET = 4,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED = 5,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED = 6,
        D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD = 7,
    };
    enum class D3D11_VIDEO_USAGE : int32_t
    {
        D3D11_VIDEO_USAGE_PLAYBACK_NORMAL = 0,
        D3D11_VIDEO_USAGE_OPTIMAL_SPEED = 1,
        D3D11_VIDEO_USAGE_OPTIMAL_QUALITY = 2,
    };
    enum class D3D11_VPIV_DIMENSION : int32_t
    {
        D3D11_VPIV_DIMENSION_UNKNOWN = 0,
        D3D11_VPIV_DIMENSION_TEXTURE2D = 1,
    };
    enum class D3D11_VPOV_DIMENSION : int32_t
    {
        D3D11_VPOV_DIMENSION_UNKNOWN = 0,
        D3D11_VPOV_DIMENSION_TEXTURE2D = 1,
        D3D11_VPOV_DIMENSION_TEXTURE2DARRAY = 2,
    };
    enum class D3D12_BITSTREAM_ENCRYPTION_TYPE : int32_t
    {
        D3D12_BITSTREAM_ENCRYPTION_TYPE_NONE = 0,
    };
    enum class D3D12_FEATURE_VIDEO : int32_t
    {
        D3D12_FEATURE_VIDEO_DECODE_SUPPORT = 0,
        D3D12_FEATURE_VIDEO_DECODE_PROFILES = 1,
        D3D12_FEATURE_VIDEO_DECODE_FORMATS = 2,
        D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT = 3,
        D3D12_FEATURE_VIDEO_PROCESS_SUPPORT = 5,
        D3D12_FEATURE_VIDEO_PROCESS_MAX_INPUT_STREAMS = 6,
        D3D12_FEATURE_VIDEO_PROCESS_REFERENCE_INFO = 7,
        D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE = 8,
        D3D12_FEATURE_VIDEO_PROCESSOR_SIZE = 9,
        D3D12_FEATURE_VIDEO_DECODE_PROFILE_COUNT = 10,
        D3D12_FEATURE_VIDEO_DECODE_FORMAT_COUNT = 11,
        D3D12_FEATURE_VIDEO_ARCHITECTURE = 17,
        D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM = 18,
        D3D12_FEATURE_VIDEO_FEATURE_AREA_SUPPORT = 19,
        D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR = 20,
        D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_SIZE = 21,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_COUNT = 22,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMANDS = 23,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT = 24,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETERS = 25,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SUPPORT = 26,
        D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SIZE = 27,
        D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES = 28,
        D3D12_FEATURE_VIDEO_PROCESS_PROTECTED_RESOURCES = 29,
        D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES = 30,
        D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE1 = 31,
        D3D12_FEATURE_VIDEO_PROCESSOR_SIZE1 = 32,
    };
    enum class D3D12_VIDEO_DECODE_ARGUMENT_TYPE : int32_t
    {
        D3D12_VIDEO_DECODE_ARGUMENT_TYPE_PICTURE_PARAMETERS = 0,
        D3D12_VIDEO_DECODE_ARGUMENT_TYPE_INVERSE_QUANTIZATION_MATRIX = 1,
        D3D12_VIDEO_DECODE_ARGUMENT_TYPE_SLICE_CONTROL = 2,
        D3D12_VIDEO_DECODE_ARGUMENT_TYPE_MAX_VALID = 3,
    };
    enum class D3D12_VIDEO_DECODE_CONFIGURATION_FLAGS : int32_t
    {
        D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_NONE = 0,
        D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED = 1,
        D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_POST_PROCESSING_SUPPORTED = 2,
        D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_REFERENCE_ONLY_ALLOCATIONS_REQUIRED = 4,
        D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_ALLOW_RESOLUTION_CHANGE_ON_NON_KEY_FRAME = 8,
    };
    enum class D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAGS : int32_t
    {
        D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_NONE = 0,
        D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_SUPPORTED = 1,
    };
    enum class D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT : int32_t
    {
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_Y = 0,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_U = 1,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_V = 2,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_R = 0,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_G = 1,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_B = 2,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_A = 3,
    };
    enum class D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS : int32_t
    {
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_NONE = 0,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_Y = 1,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_U = 2,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_V = 4,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_R = 1,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_G = 2,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_B = 4,
        D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_A = 8,
    };
    enum class D3D12_VIDEO_DECODE_STATUS : int32_t
    {
        D3D12_VIDEO_DECODE_STATUS_OK = 0,
        D3D12_VIDEO_DECODE_STATUS_CONTINUE = 1,
        D3D12_VIDEO_DECODE_STATUS_CONTINUE_SKIP_DISPLAY = 2,
        D3D12_VIDEO_DECODE_STATUS_RESTART = 3,
        D3D12_VIDEO_DECODE_STATUS_RATE_EXCEEDED = 4,
    };
    enum class D3D12_VIDEO_DECODE_SUPPORT_FLAGS : int32_t
    {
        D3D12_VIDEO_DECODE_SUPPORT_FLAG_NONE = 0,
        D3D12_VIDEO_DECODE_SUPPORT_FLAG_SUPPORTED = 1,
    };
    enum class D3D12_VIDEO_DECODE_TIER : int32_t
    {
        D3D12_VIDEO_DECODE_TIER_NOT_SUPPORTED = 0,
        D3D12_VIDEO_DECODE_TIER_1 = 1,
        D3D12_VIDEO_DECODE_TIER_2 = 2,
        D3D12_VIDEO_DECODE_TIER_3 = 3,
    };
    enum class D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAGS : int32_t
    {
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_NONE = 0,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_READ = 1,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_WRITE = 2,
    };
    enum class D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE : int32_t
    {
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CREATION = 0,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_INITIALIZATION = 1,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_EXECUTION = 2,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_INPUT = 3,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_OUTPUT = 4,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_INPUT = 5,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_OUTPUT = 6,
    };
    enum class D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE : int32_t
    {
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT8 = 0,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT16 = 1,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT32 = 2,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT64 = 3,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT8 = 4,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT16 = 5,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT32 = 6,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT64 = 7,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_FLOAT = 8,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_DOUBLE = 9,
        D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_RESOURCE = 10,
    };
    enum class D3D12_VIDEO_FIELD_TYPE : int32_t
    {
        D3D12_VIDEO_FIELD_TYPE_NONE = 0,
        D3D12_VIDEO_FIELD_TYPE_INTERLACED_TOP_FIELD_FIRST = 1,
        D3D12_VIDEO_FIELD_TYPE_INTERLACED_BOTTOM_FIELD_FIRST = 2,
    };
    enum class D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE : int32_t
    {
        D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_NONE = 0,
        D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_FIELD_BASED = 1,
    };
    enum class D3D12_VIDEO_FRAME_STEREO_FORMAT : int32_t
    {
        D3D12_VIDEO_FRAME_STEREO_FORMAT_NONE = 0,
        D3D12_VIDEO_FRAME_STEREO_FORMAT_MONO = 1,
        D3D12_VIDEO_FRAME_STEREO_FORMAT_HORIZONTAL = 2,
        D3D12_VIDEO_FRAME_STEREO_FORMAT_VERTICAL = 3,
        D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE = 4,
    };
    enum class D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE : int32_t
    {
        D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8 = 0,
        D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16 = 1,
    };
    enum class D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS : int32_t
    {
        D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_NONE = 0,
        D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_8X8 = 1,
        D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_16X16 = 2,
    };
    enum class D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION : int32_t
    {
        D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL = 0,
    };
    enum class D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS : int32_t
    {
        D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_NONE = 0,
        D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_QUARTER_PEL = 1,
    };
    enum class D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE : int32_t
    {
        D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_OPAQUE = 0,
        D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_BACKGROUND = 1,
        D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_DESTINATION = 2,
        D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
    };
    enum class D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DENOISE = 1,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DERINGING = 2,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_EDGE_ENHANCEMENT = 4,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_COLOR_CORRECTION = 8,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_FLESH_TONE_MAPPING = 16,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_IMAGE_STABILIZATION = 32,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_SUPER_RESOLUTION = 64,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_ANAMORPHIC_SCALING = 128,
        D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_CUSTOM = -2147483648,
    };
    enum class D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_BOB = 1,
        D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_CUSTOM = -2147483648,
    };
    enum class D3D12_VIDEO_PROCESS_FEATURE_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_FILL = 1,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_LUMA_KEY = 2,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_STEREO = 4,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_ROTATION = 8,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_FLIP = 16,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_BLENDING = 32,
        D3D12_VIDEO_PROCESS_FEATURE_FLAG_PIXEL_ASPECT_RATIO = 64,
    };
    enum class D3D12_VIDEO_PROCESS_FILTER : int32_t
    {
        D3D12_VIDEO_PROCESS_FILTER_BRIGHTNESS = 0,
        D3D12_VIDEO_PROCESS_FILTER_CONTRAST = 1,
        D3D12_VIDEO_PROCESS_FILTER_HUE = 2,
        D3D12_VIDEO_PROCESS_FILTER_SATURATION = 3,
        D3D12_VIDEO_PROCESS_FILTER_NOISE_REDUCTION = 4,
        D3D12_VIDEO_PROCESS_FILTER_EDGE_ENHANCEMENT = 5,
        D3D12_VIDEO_PROCESS_FILTER_ANAMORPHIC_SCALING = 6,
        D3D12_VIDEO_PROCESS_FILTER_STEREO_ADJUSTMENT = 7,
    };
    enum class D3D12_VIDEO_PROCESS_FILTER_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_FILTER_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_BRIGHTNESS = 1,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_CONTRAST = 2,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_HUE = 4,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_SATURATION = 8,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_NOISE_REDUCTION = 16,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_EDGE_ENHANCEMENT = 32,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_ANAMORPHIC_SCALING = 64,
        D3D12_VIDEO_PROCESS_FILTER_FLAG_STEREO_ADJUSTMENT = 128,
    };
    enum class D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_DISCONTINUITY = 1,
        D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_REPEAT = 2,
    };
    enum class D3D12_VIDEO_PROCESS_ORIENTATION : int32_t
    {
        D3D12_VIDEO_PROCESS_ORIENTATION_DEFAULT = 0,
        D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_HORIZONTAL = 1,
        D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90 = 2,
        D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90_FLIP_HORIZONTAL = 3,
        D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_180 = 4,
        D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_VERTICAL = 5,
        D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270 = 6,
        D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270_FLIP_HORIZONTAL = 7,
    };
    enum class D3D12_VIDEO_PROCESS_SUPPORT_FLAGS : int32_t
    {
        D3D12_VIDEO_PROCESS_SUPPORT_FLAG_NONE = 0,
        D3D12_VIDEO_PROCESS_SUPPORT_FLAG_SUPPORTED = 1,
    };
    enum class D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS : int32_t
    {
        D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_NONE = 0,
        D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_SUPPORTED = 1,
    };
    enum class D3D12_VIDEO_SCALE_SUPPORT_FLAGS : int32_t
    {
        D3D12_VIDEO_SCALE_SUPPORT_FLAG_NONE = 0,
        D3D12_VIDEO_SCALE_SUPPORT_FLAG_POW2_ONLY = 1,
        D3D12_VIDEO_SCALE_SUPPORT_FLAG_EVEN_DIMENSIONS_ONLY = 2,
    };
    enum class DXVA2_NominalRange : int32_t
    {
        DXVA2_NominalRangeMask = 7,
        DXVA2_NominalRange_Unknown = 0,
        DXVA2_NominalRange_Normal = 1,
        DXVA2_NominalRange_Wide = 2,
        DXVA2_NominalRange_0_255 = 1,
        DXVA2_NominalRange_16_235 = 2,
        DXVA2_NominalRange_48_208 = 3,
    };
    enum class DXVA2_SampleFormat : int32_t
    {
        DXVA2_SampleFormatMask = 255,
        DXVA2_SampleUnknown = 0,
        DXVA2_SampleProgressiveFrame = 2,
        DXVA2_SampleFieldInterleavedEvenFirst = 3,
        DXVA2_SampleFieldInterleavedOddFirst = 4,
        DXVA2_SampleFieldSingleEven = 5,
        DXVA2_SampleFieldSingleOdd = 6,
        DXVA2_SampleSubStream = 7,
    };
    enum class DXVA2_SurfaceType : int32_t
    {
        DXVA2_SurfaceType_DecoderRenderTarget = 0,
        DXVA2_SurfaceType_ProcessorRenderTarget = 1,
        DXVA2_SurfaceType_D3DRenderTargetTexture = 2,
    };
    enum class DXVA2_VideoChromaSubSampling : int32_t
    {
        DXVA2_VideoChromaSubsamplingMask = 15,
        DXVA2_VideoChromaSubsampling_Unknown = 0,
        DXVA2_VideoChromaSubsampling_ProgressiveChroma = 8,
        DXVA2_VideoChromaSubsampling_Horizontally_Cosited = 4,
        DXVA2_VideoChromaSubsampling_Vertically_Cosited = 2,
        DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
        DXVA2_VideoChromaSubsampling_MPEG2 = 5,
        DXVA2_VideoChromaSubsampling_MPEG1 = 1,
        DXVA2_VideoChromaSubsampling_DV_PAL = 6,
        DXVA2_VideoChromaSubsampling_Cosited = 7,
    };
    enum class DXVA2_VideoLighting : int32_t
    {
        DXVA2_VideoLightingMask = 15,
        DXVA2_VideoLighting_Unknown = 0,
        DXVA2_VideoLighting_bright = 1,
        DXVA2_VideoLighting_office = 2,
        DXVA2_VideoLighting_dim = 3,
        DXVA2_VideoLighting_dark = 4,
    };
    enum class DXVA2_VideoPrimaries : int32_t
    {
        DXVA2_VideoPrimariesMask = 31,
        DXVA2_VideoPrimaries_Unknown = 0,
        DXVA2_VideoPrimaries_reserved = 1,
        DXVA2_VideoPrimaries_BT709 = 2,
        DXVA2_VideoPrimaries_BT470_2_SysM = 3,
        DXVA2_VideoPrimaries_BT470_2_SysBG = 4,
        DXVA2_VideoPrimaries_SMPTE170M = 5,
        DXVA2_VideoPrimaries_SMPTE240M = 6,
        DXVA2_VideoPrimaries_EBU3213 = 7,
        DXVA2_VideoPrimaries_SMPTE_C = 8,
    };
    enum class DXVA2_VideoTransferFunction : int32_t
    {
        DXVA2_VideoTransFuncMask = 31,
        DXVA2_VideoTransFunc_Unknown = 0,
        DXVA2_VideoTransFunc_10 = 1,
        DXVA2_VideoTransFunc_18 = 2,
        DXVA2_VideoTransFunc_20 = 3,
        DXVA2_VideoTransFunc_22 = 4,
        DXVA2_VideoTransFunc_709 = 5,
        DXVA2_VideoTransFunc_240M = 6,
        DXVA2_VideoTransFunc_sRGB = 7,
        DXVA2_VideoTransFunc_28 = 8,
    };
    enum class DXVA2_VideoTransferMatrix : int32_t
    {
        DXVA2_VideoTransferMatrixMask = 7,
        DXVA2_VideoTransferMatrix_Unknown = 0,
        DXVA2_VideoTransferMatrix_BT709 = 1,
        DXVA2_VideoTransferMatrix_BT601 = 2,
        DXVA2_VideoTransferMatrix_SMPTE240M = 3,
    };
    enum class DXVAHD_ALPHA_FILL_MODE : int32_t
    {
        DXVAHD_ALPHA_FILL_MODE_OPAQUE = 0,
        DXVAHD_ALPHA_FILL_MODE_BACKGROUND = 1,
        DXVAHD_ALPHA_FILL_MODE_DESTINATION = 2,
        DXVAHD_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
    };
    enum class DXVAHD_BLT_STATE : int32_t
    {
        DXVAHD_BLT_STATE_TARGET_RECT = 0,
        DXVAHD_BLT_STATE_BACKGROUND_COLOR = 1,
        DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE = 2,
        DXVAHD_BLT_STATE_ALPHA_FILL = 3,
        DXVAHD_BLT_STATE_CONSTRICTION = 4,
        DXVAHD_BLT_STATE_PRIVATE = 1000,
    };
    enum class DXVAHD_DEVICE_CAPS : int32_t
    {
        DXVAHD_DEVICE_CAPS_LINEAR_SPACE = 1,
        DXVAHD_DEVICE_CAPS_xvYCC = 2,
        DXVAHD_DEVICE_CAPS_RGB_RANGE_CONVERSION = 4,
        DXVAHD_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 8,
    };
    enum class DXVAHD_DEVICE_TYPE : int32_t
    {
        DXVAHD_DEVICE_TYPE_HARDWARE = 0,
        DXVAHD_DEVICE_TYPE_SOFTWARE = 1,
        DXVAHD_DEVICE_TYPE_REFERENCE = 2,
        DXVAHD_DEVICE_TYPE_OTHER = 3,
    };
    enum class DXVAHD_DEVICE_USAGE : int32_t
    {
        DXVAHD_DEVICE_USAGE_PLAYBACK_NORMAL = 0,
        DXVAHD_DEVICE_USAGE_OPTIMAL_SPEED = 1,
        DXVAHD_DEVICE_USAGE_OPTIMAL_QUALITY = 2,
    };
    enum class DXVAHD_FEATURE_CAPS : int32_t
    {
        DXVAHD_FEATURE_CAPS_ALPHA_FILL = 1,
        DXVAHD_FEATURE_CAPS_CONSTRICTION = 2,
        DXVAHD_FEATURE_CAPS_LUMA_KEY = 4,
        DXVAHD_FEATURE_CAPS_ALPHA_PALETTE = 8,
    };
    enum class DXVAHD_FILTER : int32_t
    {
        DXVAHD_FILTER_BRIGHTNESS = 0,
        DXVAHD_FILTER_CONTRAST = 1,
        DXVAHD_FILTER_HUE = 2,
        DXVAHD_FILTER_SATURATION = 3,
        DXVAHD_FILTER_NOISE_REDUCTION = 4,
        DXVAHD_FILTER_EDGE_ENHANCEMENT = 5,
        DXVAHD_FILTER_ANAMORPHIC_SCALING = 6,
    };
    enum class DXVAHD_FILTER_CAPS : int32_t
    {
        DXVAHD_FILTER_CAPS_BRIGHTNESS = 1,
        DXVAHD_FILTER_CAPS_CONTRAST = 2,
        DXVAHD_FILTER_CAPS_HUE = 4,
        DXVAHD_FILTER_CAPS_SATURATION = 8,
        DXVAHD_FILTER_CAPS_NOISE_REDUCTION = 16,
        DXVAHD_FILTER_CAPS_EDGE_ENHANCEMENT = 32,
        DXVAHD_FILTER_CAPS_ANAMORPHIC_SCALING = 64,
    };
    enum class DXVAHD_FRAME_FORMAT : int32_t
    {
        DXVAHD_FRAME_FORMAT_PROGRESSIVE = 0,
        DXVAHD_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1,
        DXVAHD_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2,
    };
    enum class DXVAHD_INPUT_FORMAT_CAPS : int32_t
    {
        DXVAHD_INPUT_FORMAT_CAPS_RGB_INTERLACED = 1,
        DXVAHD_INPUT_FORMAT_CAPS_RGB_PROCAMP = 2,
        DXVAHD_INPUT_FORMAT_CAPS_RGB_LUMA_KEY = 4,
        DXVAHD_INPUT_FORMAT_CAPS_PALETTE_INTERLACED = 8,
    };
    enum class DXVAHD_ITELECINE_CAPS : int32_t
    {
        DXVAHD_ITELECINE_CAPS_32 = 1,
        DXVAHD_ITELECINE_CAPS_22 = 2,
        DXVAHD_ITELECINE_CAPS_2224 = 4,
        DXVAHD_ITELECINE_CAPS_2332 = 8,
        DXVAHD_ITELECINE_CAPS_32322 = 16,
        DXVAHD_ITELECINE_CAPS_55 = 32,
        DXVAHD_ITELECINE_CAPS_64 = 64,
        DXVAHD_ITELECINE_CAPS_87 = 128,
        DXVAHD_ITELECINE_CAPS_222222222223 = 256,
        DXVAHD_ITELECINE_CAPS_OTHER = -2147483648,
    };
    enum class DXVAHD_OUTPUT_RATE : int32_t
    {
        DXVAHD_OUTPUT_RATE_NORMAL = 0,
        DXVAHD_OUTPUT_RATE_HALF = 1,
        DXVAHD_OUTPUT_RATE_CUSTOM = 2,
    };
    enum class DXVAHD_PROCESSOR_CAPS : int32_t
    {
        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BLEND = 1,
        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BOB = 2,
        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE = 4,
        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 8,
        DXVAHD_PROCESSOR_CAPS_INVERSE_TELECINE = 16,
        DXVAHD_PROCESSOR_CAPS_FRAME_RATE_CONVERSION = 32,
    };
    enum class DXVAHD_STREAM_STATE : int32_t
    {
        DXVAHD_STREAM_STATE_D3DFORMAT = 0,
        DXVAHD_STREAM_STATE_FRAME_FORMAT = 1,
        DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE = 2,
        DXVAHD_STREAM_STATE_OUTPUT_RATE = 3,
        DXVAHD_STREAM_STATE_SOURCE_RECT = 4,
        DXVAHD_STREAM_STATE_DESTINATION_RECT = 5,
        DXVAHD_STREAM_STATE_ALPHA = 6,
        DXVAHD_STREAM_STATE_PALETTE = 7,
        DXVAHD_STREAM_STATE_LUMA_KEY = 8,
        DXVAHD_STREAM_STATE_ASPECT_RATIO = 9,
        DXVAHD_STREAM_STATE_FILTER_BRIGHTNESS = 100,
        DXVAHD_STREAM_STATE_FILTER_CONTRAST = 101,
        DXVAHD_STREAM_STATE_FILTER_HUE = 102,
        DXVAHD_STREAM_STATE_FILTER_SATURATION = 103,
        DXVAHD_STREAM_STATE_FILTER_NOISE_REDUCTION = 104,
        DXVAHD_STREAM_STATE_FILTER_EDGE_ENHANCEMENT = 105,
        DXVAHD_STREAM_STATE_FILTER_ANAMORPHIC_SCALING = 106,
        DXVAHD_STREAM_STATE_PRIVATE = 1000,
    };
    enum class DXVAHD_SURFACE_TYPE : int32_t
    {
        DXVAHD_SURFACE_TYPE_VIDEO_INPUT = 0,
        DXVAHD_SURFACE_TYPE_VIDEO_INPUT_PRIVATE = 1,
        DXVAHD_SURFACE_TYPE_VIDEO_OUTPUT = 2,
    };
    enum class DXVA_DeinterlaceTech : int32_t
    {
        DXVA_DeinterlaceTech_Unknown = 0,
        DXVA_DeinterlaceTech_BOBLineReplicate = 1,
        DXVA_DeinterlaceTech_BOBVerticalStretch = 2,
        DXVA_DeinterlaceTech_BOBVerticalStretch4Tap = 256,
        DXVA_DeinterlaceTech_MedianFiltering = 4,
        DXVA_DeinterlaceTech_EdgeFiltering = 16,
        DXVA_DeinterlaceTech_FieldAdaptive = 32,
        DXVA_DeinterlaceTech_PixelAdaptive = 64,
        DXVA_DeinterlaceTech_MotionVectorSteered = 128,
    };
    enum class DXVA_DestinationFlags : int32_t
    {
        DXVA_DestinationFlagMask = 15,
        DXVA_DestinationFlag_Background_Changed = 1,
        DXVA_DestinationFlag_TargetRect_Changed = 2,
        DXVA_DestinationFlag_ColorData_Changed = 4,
        DXVA_DestinationFlag_Alpha_Changed = 8,
    };
    enum class DXVA_NominalRange : int32_t
    {
        DXVA_NominalRangeShift = 12,
        DXVA_NominalRangeMask = 28672,
        DXVA_NominalRange_Unknown = 0,
        DXVA_NominalRange_Normal = 1,
        DXVA_NominalRange_Wide = 2,
        DXVA_NominalRange_0_255 = 1,
        DXVA_NominalRange_16_235 = 2,
        DXVA_NominalRange_48_208 = 3,
    };
    enum class DXVA_ProcAmpControlProp : int32_t
    {
        DXVA_ProcAmp_None = 0,
        DXVA_ProcAmp_Brightness = 1,
        DXVA_ProcAmp_Contrast = 2,
        DXVA_ProcAmp_Hue = 4,
        DXVA_ProcAmp_Saturation = 8,
    };
    enum class DXVA_SampleFlags : int32_t
    {
        DXVA_SampleFlagsMask = 15,
        DXVA_SampleFlag_Palette_Changed = 1,
        DXVA_SampleFlag_SrcRect_Changed = 2,
        DXVA_SampleFlag_DstRect_Changed = 4,
        DXVA_SampleFlag_ColorData_Changed = 8,
    };
    enum class DXVA_SampleFormat : int32_t
    {
        DXVA_SampleFormatMask = 255,
        DXVA_SampleUnknown = 0,
        DXVA_SamplePreviousFrame = 1,
        DXVA_SampleProgressiveFrame = 2,
        DXVA_SampleFieldInterleavedEvenFirst = 3,
        DXVA_SampleFieldInterleavedOddFirst = 4,
        DXVA_SampleFieldSingleEven = 5,
        DXVA_SampleFieldSingleOdd = 6,
        DXVA_SampleSubStream = 7,
    };
    enum class DXVA_VideoChromaSubsampling : int32_t
    {
        DXVA_VideoChromaSubsamplingShift = 8,
        DXVA_VideoChromaSubsamplingMask = 3840,
        DXVA_VideoChromaSubsampling_Unknown = 0,
        DXVA_VideoChromaSubsampling_ProgressiveChroma = 8,
        DXVA_VideoChromaSubsampling_Horizontally_Cosited = 4,
        DXVA_VideoChromaSubsampling_Vertically_Cosited = 2,
        DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
        DXVA_VideoChromaSubsampling_MPEG2 = 5,
        DXVA_VideoChromaSubsampling_MPEG1 = 1,
        DXVA_VideoChromaSubsampling_DV_PAL = 6,
        DXVA_VideoChromaSubsampling_Cosited = 7,
    };
    enum class DXVA_VideoLighting : int32_t
    {
        DXVA_VideoLightingShift = 18,
        DXVA_VideoLightingMask = 3932160,
        DXVA_VideoLighting_Unknown = 0,
        DXVA_VideoLighting_bright = 1,
        DXVA_VideoLighting_office = 2,
        DXVA_VideoLighting_dim = 3,
        DXVA_VideoLighting_dark = 4,
    };
    enum class DXVA_VideoPrimaries : int32_t
    {
        DXVA_VideoPrimariesShift = 22,
        DXVA_VideoPrimariesMask = 130023424,
        DXVA_VideoPrimaries_Unknown = 0,
        DXVA_VideoPrimaries_reserved = 1,
        DXVA_VideoPrimaries_BT709 = 2,
        DXVA_VideoPrimaries_BT470_2_SysM = 3,
        DXVA_VideoPrimaries_BT470_2_SysBG = 4,
        DXVA_VideoPrimaries_SMPTE170M = 5,
        DXVA_VideoPrimaries_SMPTE240M = 6,
        DXVA_VideoPrimaries_EBU3213 = 7,
        DXVA_VideoPrimaries_SMPTE_C = 8,
    };
    enum class DXVA_VideoProcessCaps : int32_t
    {
        DXVA_VideoProcess_None = 0,
        DXVA_VideoProcess_YUV2RGB = 1,
        DXVA_VideoProcess_StretchX = 2,
        DXVA_VideoProcess_StretchY = 4,
        DXVA_VideoProcess_AlphaBlend = 8,
        DXVA_VideoProcess_SubRects = 16,
        DXVA_VideoProcess_SubStreams = 32,
        DXVA_VideoProcess_SubStreamsExtended = 64,
        DXVA_VideoProcess_YUV2RGBExtended = 128,
        DXVA_VideoProcess_AlphaBlendExtended = 256,
    };
    enum class DXVA_VideoTransferFunction : int32_t
    {
        DXVA_VideoTransFuncShift = 27,
        DXVA_VideoTransFuncMask = -134217728,
        DXVA_VideoTransFunc_Unknown = 0,
        DXVA_VideoTransFunc_10 = 1,
        DXVA_VideoTransFunc_18 = 2,
        DXVA_VideoTransFunc_20 = 3,
        DXVA_VideoTransFunc_22 = 4,
        DXVA_VideoTransFunc_22_709 = 5,
        DXVA_VideoTransFunc_22_240M = 6,
        DXVA_VideoTransFunc_22_8bit_sRGB = 7,
        DXVA_VideoTransFunc_28 = 8,
    };
    enum class DXVA_VideoTransferMatrix : int32_t
    {
        DXVA_VideoTransferMatrixShift = 15,
        DXVA_VideoTransferMatrixMask = 229376,
        DXVA_VideoTransferMatrix_Unknown = 0,
        DXVA_VideoTransferMatrix_BT709 = 1,
        DXVA_VideoTransferMatrix_BT601 = 2,
        DXVA_VideoTransferMatrix_SMPTE240M = 3,
    };
    enum class DeviceStreamState : int32_t
    {
        DeviceStreamState_Stop = 0,
        DeviceStreamState_Pause = 1,
        DeviceStreamState_Run = 2,
        DeviceStreamState_Disabled = 3,
    };
    enum class EAllocationType : int32_t
    {
        eAllocationTypeDynamic = 0,
        eAllocationTypeRT = 1,
        eAllocationTypePageable = 2,
        eAllocationTypeIgnore = 3,
    };
    enum class EVRFilterConfigPrefs : int32_t
    {
        EVRFilterConfigPrefs_EnableQoS = 1,
        EVRFilterConfigPrefs_Mask = 1,
    };
    enum class FILE_ACCESSMODE : int32_t
    {
        ACCESSMODE_READ = 1,
        ACCESSMODE_WRITE = 2,
        ACCESSMODE_READWRITE = 3,
        ACCESSMODE_WRITE_EXCLUSIVE = 4,
    };
    enum class FILE_OPENMODE : int32_t
    {
        OPENMODE_FAIL_IF_NOT_EXIST = 0,
        OPENMODE_FAIL_IF_EXIST = 1,
        OPENMODE_RESET_IF_EXIST = 2,
        OPENMODE_APPEND_IF_EXIST = 3,
        OPENMODE_DELETE_IF_EXIST = 4,
    };
    enum class KSMETHOD_OPMVIDEOOUTPUT : int32_t
    {
        KSMETHOD_OPMVIDEOOUTPUT_STARTINITIALIZATION = 0,
        KSMETHOD_OPMVIDEOOUTPUT_FINISHINITIALIZATION = 1,
        KSMETHOD_OPMVIDEOOUTPUT_GETINFORMATION = 2,
    };
    enum class MF2DBuffer_LockFlags : int32_t
    {
        MF2DBuffer_LockFlags_LockTypeMask = 3,
        MF2DBuffer_LockFlags_Read = 1,
        MF2DBuffer_LockFlags_Write = 2,
        MF2DBuffer_LockFlags_ReadWrite = 3,
        MF2DBuffer_LockFlags_ForceDWORD = 2147483647,
    };
    enum class MF3DVideoOutputType : int32_t
    {
        MF3DVideoOutputType_BaseView = 0,
        MF3DVideoOutputType_Stereo = 1,
    };
    enum class MFASF_INDEXER_FLAGS : int32_t
    {
        MFASF_INDEXER_WRITE_NEW_INDEX = 1,
        MFASF_INDEXER_READ_FOR_REVERSEPLAYBACK = 2,
        MFASF_INDEXER_WRITE_FOR_LIVEREAD = 4,
    };
    enum class MFASF_MULTIPLEXERFLAGS : int32_t
    {
        MFASF_MULTIPLEXER_AUTOADJUST_BITRATE = 1,
    };
    enum class MFASF_SPLITTERFLAGS : int32_t
    {
        MFASF_SPLITTER_REVERSE = 1,
        MFASF_SPLITTER_WMDRM = 2,
    };
    enum class MFASF_STREAMSELECTOR_FLAGS : int32_t
    {
        MFASF_STREAMSELECTOR_DISABLE_THINNING = 1,
        MFASF_STREAMSELECTOR_USE_AVERAGE_BITRATE = 2,
    };
    enum class MFASYNC_WORKQUEUE_TYPE : int32_t
    {
        MF_STANDARD_WORKQUEUE = 0,
        MF_WINDOW_WORKQUEUE = 1,
        MF_MULTITHREADED_WORKQUEUE = 2,
    };
    enum class MFAudioConstriction : int32_t
    {
        MFaudioConstrictionOff = 0,
        MFaudioConstriction48_16 = 1,
        MFaudioConstriction44_16 = 2,
        MFaudioConstriction14_14 = 3,
        MFaudioConstrictionMute = 4,
    };
    enum class MFBYTESTREAM_SEEK_ORIGIN : int32_t
    {
        msoBegin = 0,
        msoCurrent = 1,
    };
    enum class MFCLOCK_CHARACTERISTICS_FLAGS : int32_t
    {
        MFCLOCK_CHARACTERISTICS_FLAG_FREQUENCY_10MHZ = 2,
        MFCLOCK_CHARACTERISTICS_FLAG_ALWAYS_RUNNING = 4,
        MFCLOCK_CHARACTERISTICS_FLAG_IS_SYSTEM_CLOCK = 8,
    };
    enum class MFCLOCK_RELATIONAL_FLAGS : int32_t
    {
        MFCLOCK_RELATIONAL_FLAG_JITTER_NEVER_AHEAD = 1,
    };
    enum class MFCLOCK_STATE : int32_t
    {
        MFCLOCK_STATE_INVALID = 0,
        MFCLOCK_STATE_RUNNING = 1,
        MFCLOCK_STATE_STOPPED = 2,
        MFCLOCK_STATE_PAUSED = 3,
    };
    enum class MFCameraIntrinsic_DistortionModelType : int32_t
    {
        MFCameraIntrinsic_DistortionModelType_6KT = 0,
        MFCameraIntrinsic_DistortionModelType_ArcTan = 1,
    };
    enum class MFDepthMeasurement : int32_t
    {
        DistanceToFocalPlane = 0,
        DistanceToOpticalCenter = 1,
    };
    enum class MFFrameSourceTypes : int32_t
    {
        MFFrameSourceTypes_Color = 1,
        MFFrameSourceTypes_Infrared = 2,
        MFFrameSourceTypes_Depth = 4,
        MFFrameSourceTypes_Image = 8,
        MFFrameSourceTypes_Custom = 128,
    };
    enum class MFMEDIASOURCE_CHARACTERISTICS : int32_t
    {
        MFMEDIASOURCE_IS_LIVE = 1,
        MFMEDIASOURCE_CAN_SEEK = 2,
        MFMEDIASOURCE_CAN_PAUSE = 4,
        MFMEDIASOURCE_HAS_SLOW_SEEK = 8,
        MFMEDIASOURCE_HAS_MULTIPLE_PRESENTATIONS = 16,
        MFMEDIASOURCE_CAN_SKIPFORWARD = 32,
        MFMEDIASOURCE_CAN_SKIPBACKWARD = 64,
        MFMEDIASOURCE_DOES_NOT_USE_NETWORK = 128,
    };
    enum class MFNETSOURCE_CACHE_STATE : int32_t
    {
        MFNETSOURCE_CACHE_UNAVAILABLE = 0,
        MFNETSOURCE_CACHE_ACTIVE_WRITING = 1,
        MFNETSOURCE_CACHE_ACTIVE_COMPLETE = 2,
    };
    enum class MFNETSOURCE_PROTOCOL_TYPE : int32_t
    {
        MFNETSOURCE_UNDEFINED = 0,
        MFNETSOURCE_HTTP = 1,
        MFNETSOURCE_RTSP = 2,
        MFNETSOURCE_FILE = 3,
        MFNETSOURCE_MULTICAST = 4,
    };
    enum class MFNETSOURCE_STATISTICS_IDS : int32_t
    {
        MFNETSOURCE_RECVPACKETS_ID = 0,
        MFNETSOURCE_LOSTPACKETS_ID = 1,
        MFNETSOURCE_RESENDSREQUESTED_ID = 2,
        MFNETSOURCE_RESENDSRECEIVED_ID = 3,
        MFNETSOURCE_RECOVEREDBYECCPACKETS_ID = 4,
        MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID = 5,
        MFNETSOURCE_OUTPACKETS_ID = 6,
        MFNETSOURCE_RECVRATE_ID = 7,
        MFNETSOURCE_AVGBANDWIDTHBPS_ID = 8,
        MFNETSOURCE_BYTESRECEIVED_ID = 9,
        MFNETSOURCE_PROTOCOL_ID = 10,
        MFNETSOURCE_TRANSPORT_ID = 11,
        MFNETSOURCE_CACHE_STATE_ID = 12,
        MFNETSOURCE_LINKBANDWIDTH_ID = 13,
        MFNETSOURCE_CONTENTBITRATE_ID = 14,
        MFNETSOURCE_SPEEDFACTOR_ID = 15,
        MFNETSOURCE_BUFFERSIZE_ID = 16,
        MFNETSOURCE_BUFFERPROGRESS_ID = 17,
        MFNETSOURCE_LASTBWSWITCHTS_ID = 18,
        MFNETSOURCE_SEEKRANGESTART_ID = 19,
        MFNETSOURCE_SEEKRANGEEND_ID = 20,
        MFNETSOURCE_BUFFERINGCOUNT_ID = 21,
        MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID = 22,
        MFNETSOURCE_SIGNEDSESSION_ID = 23,
        MFNETSOURCE_MAXBITRATE_ID = 24,
        MFNETSOURCE_RECEPTION_QUALITY_ID = 25,
        MFNETSOURCE_RECOVEREDPACKETS_ID = 26,
        MFNETSOURCE_VBR_ID = 27,
        MFNETSOURCE_DOWNLOADPROGRESS_ID = 28,
        MFNETSOURCE_UNPREDEFINEDPROTOCOLNAME_ID = 29,
    };
    enum class MFNETSOURCE_TRANSPORT_TYPE : int32_t
    {
        MFNETSOURCE_UDP = 0,
        MFNETSOURCE_TCP = 1,
    };
    enum class MFNET_PROXYSETTINGS : int32_t
    {
        MFNET_PROXYSETTING_NONE = 0,
        MFNET_PROXYSETTING_MANUAL = 1,
        MFNET_PROXYSETTING_AUTO = 2,
        MFNET_PROXYSETTING_BROWSER = 3,
    };
    enum class MFNetAuthenticationFlags : int32_t
    {
        MFNET_AUTHENTICATION_PROXY = 1,
        MFNET_AUTHENTICATION_CLEAR_TEXT = 2,
        MFNET_AUTHENTICATION_LOGGED_ON_USER = 4,
    };
    enum class MFNetCredentialOptions : int32_t
    {
        MFNET_CREDENTIAL_SAVE = 1,
        MFNET_CREDENTIAL_DONT_CACHE = 2,
        MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT = 4,
    };
    enum class MFNetCredentialRequirements : int32_t
    {
        REQUIRE_PROMPT = 1,
        REQUIRE_SAVE_SELECTED = 2,
    };
    enum class MFNominalRange : int32_t
    {
        MFNominalRange_Unknown = 0,
        MFNominalRange_Normal = 1,
        MFNominalRange_Wide = 2,
        MFNominalRange_0_255 = 1,
        MFNominalRange_16_235 = 2,
        MFNominalRange_48_208 = 3,
        MFNominalRange_64_127 = 4,
        MFNominalRange_Last = 5,
        MFNominalRange_ForceDWORD = 2147483647,
    };
    enum class MFPMPSESSION_CREATION_FLAGS : int32_t
    {
        MFPMPSESSION_UNPROTECTED_PROCESS = 1,
        MFPMPSESSION_IN_PROCESS = 2,
    };
    enum class MFPOLICYMANAGER_ACTION : int32_t
    {
        PEACTION_NO = 0,
        PEACTION_PLAY = 1,
        PEACTION_COPY = 2,
        PEACTION_EXPORT = 3,
        PEACTION_EXTRACT = 4,
        PEACTION_RESERVED1 = 5,
        PEACTION_RESERVED2 = 6,
        PEACTION_RESERVED3 = 7,
        PEACTION_LAST = 7,
    };
    enum class MFP_CREATION_OPTIONS : int32_t
    {
        MFP_OPTION_NONE = 0,
        MFP_OPTION_FREE_THREADED_CALLBACK = 1,
        MFP_OPTION_NO_MMCSS = 2,
        MFP_OPTION_NO_REMOTE_DESKTOP_OPTIMIZATION = 4,
    };
    enum class MFP_EVENT_TYPE : int32_t
    {
        MFP_EVENT_TYPE_PLAY = 0,
        MFP_EVENT_TYPE_PAUSE = 1,
        MFP_EVENT_TYPE_STOP = 2,
        MFP_EVENT_TYPE_POSITION_SET = 3,
        MFP_EVENT_TYPE_RATE_SET = 4,
        MFP_EVENT_TYPE_MEDIAITEM_CREATED = 5,
        MFP_EVENT_TYPE_MEDIAITEM_SET = 6,
        MFP_EVENT_TYPE_FRAME_STEP = 7,
        MFP_EVENT_TYPE_MEDIAITEM_CLEARED = 8,
        MFP_EVENT_TYPE_MF = 9,
        MFP_EVENT_TYPE_ERROR = 10,
        MFP_EVENT_TYPE_PLAYBACK_ENDED = 11,
        MFP_EVENT_TYPE_ACQUIRE_USER_CREDENTIAL = 12,
    };
    enum class MFP_MEDIAPLAYER_STATE : int32_t
    {
        MFP_MEDIAPLAYER_STATE_EMPTY = 0,
        MFP_MEDIAPLAYER_STATE_STOPPED = 1,
        MFP_MEDIAPLAYER_STATE_PLAYING = 2,
        MFP_MEDIAPLAYER_STATE_PAUSED = 3,
        MFP_MEDIAPLAYER_STATE_SHUTDOWN = 4,
    };
    enum class MFRATE_DIRECTION : int32_t
    {
        MFRATE_FORWARD = 0,
        MFRATE_REVERSE = 1,
    };
    enum class MFSESSION_GETFULLTOPOLOGY_FLAGS : int32_t
    {
        MFSESSION_GETFULLTOPOLOGY_CURRENT = 1,
    };
    enum class MFSESSION_SETTOPOLOGY_FLAGS : int32_t
    {
        MFSESSION_SETTOPOLOGY_IMMEDIATE = 1,
        MFSESSION_SETTOPOLOGY_NORESOLUTION = 2,
        MFSESSION_SETTOPOLOGY_CLEAR_CURRENT = 4,
    };
    enum class MFSHUTDOWN_STATUS : int32_t
    {
        MFSHUTDOWN_INITIATED = 0,
        MFSHUTDOWN_COMPLETED = 1,
    };
    enum class MFSINK_WMDRMACTION : int32_t
    {
        MFSINK_WMDRMACTION_UNDEFINED = 0,
        MFSINK_WMDRMACTION_ENCODE = 1,
        MFSINK_WMDRMACTION_TRANSCODE = 2,
        MFSINK_WMDRMACTION_TRANSCRYPT = 3,
        MFSINK_WMDRMACTION_LAST = 3,
    };
    enum class MFSTREAMSINK_MARKER_TYPE : int32_t
    {
        MFSTREAMSINK_MARKER_DEFAULT = 0,
        MFSTREAMSINK_MARKER_ENDOFSEGMENT = 1,
        MFSTREAMSINK_MARKER_TICK = 2,
        MFSTREAMSINK_MARKER_EVENT = 3,
    };
    enum class MFSampleAllocatorUsage : int32_t
    {
        MFSampleAllocatorUsage_UsesProvidedAllocator = 0,
        MFSampleAllocatorUsage_UsesCustomAllocator = 1,
        MFSampleAllocatorUsage_DoesNotAllocate = 2,
    };
    enum class MFSampleEncryptionProtectionScheme : int32_t
    {
        MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_NONE = 0,
        MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CTR = 1,
        MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CBC = 2,
    };
    enum class MFSensorDeviceMode : int32_t
    {
        MFSensorDeviceMode_Controller = 0,
        MFSensorDeviceMode_Shared = 1,
    };
    enum class MFSensorDeviceType : int32_t
    {
        MFSensorDeviceType_Unknown = 0,
        MFSensorDeviceType_Device = 1,
        MFSensorDeviceType_MediaSource = 2,
        MFSensorDeviceType_FrameProvider = 3,
        MFSensorDeviceType_SensorTransform = 4,
    };
    enum class MFSensorStreamType : int32_t
    {
        MFSensorStreamType_Unknown = 0,
        MFSensorStreamType_Input = 1,
        MFSensorStreamType_Output = 2,
    };
    enum class MFSequencerTopologyFlags : int32_t
    {
        SequencerTopologyFlags_Last = 1,
    };
    enum class MFStandardVideoFormat : int32_t
    {
        MFStdVideoFormat_reserved = 0,
        MFStdVideoFormat_NTSC = 1,
        MFStdVideoFormat_PAL = 2,
        MFStdVideoFormat_DVD_NTSC = 3,
        MFStdVideoFormat_DVD_PAL = 4,
        MFStdVideoFormat_DV_PAL = 5,
        MFStdVideoFormat_DV_NTSC = 6,
        MFStdVideoFormat_ATSC_SD480i = 7,
        MFStdVideoFormat_ATSC_HD1080i = 8,
        MFStdVideoFormat_ATSC_HD720p = 9,
    };
    enum class MFTIMER_FLAGS : int32_t
    {
        MFTIMER_RELATIVE = 1,
    };
    enum class MFTOPOLOGY_DXVA_MODE : int32_t
    {
        MFTOPOLOGY_DXVA_DEFAULT = 0,
        MFTOPOLOGY_DXVA_NONE = 1,
        MFTOPOLOGY_DXVA_FULL = 2,
    };
    enum class MFTOPOLOGY_HARDWARE_MODE : int32_t
    {
        MFTOPOLOGY_HWMODE_SOFTWARE_ONLY = 0,
        MFTOPOLOGY_HWMODE_USE_HARDWARE = 1,
        MFTOPOLOGY_HWMODE_USE_ONLY_HARDWARE = 2,
    };
    enum class MFT_AUDIO_DECODER_DEGRADATION_REASON : int32_t
    {
        MFT_AUDIO_DECODER_DEGRADATION_REASON_NONE = 0,
        MFT_AUDIO_DECODER_DEGRADATION_REASON_LICENSING_REQUIREMENT = 1,
    };
    enum class MFT_AUDIO_DECODER_DEGRADATION_TYPE : int32_t
    {
        MFT_AUDIO_DECODER_DEGRADATION_TYPE_NONE = 0,
        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX2CHANNEL = 1,
        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX6CHANNEL = 2,
        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX8CHANNEL = 3,
    };
    enum class MFT_DRAIN_TYPE : int32_t
    {
        MFT_DRAIN_PRODUCE_TAILS = 0,
        MFT_DRAIN_NO_TAILS = 1,
    };
    enum class MFT_MESSAGE_TYPE : int32_t
    {
        MFT_MESSAGE_COMMAND_FLUSH = 0,
        MFT_MESSAGE_COMMAND_DRAIN = 1,
        MFT_MESSAGE_SET_D3D_MANAGER = 2,
        MFT_MESSAGE_DROP_SAMPLES = 3,
        MFT_MESSAGE_COMMAND_TICK = 4,
        MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 268435456,
        MFT_MESSAGE_NOTIFY_END_STREAMING = 268435457,
        MFT_MESSAGE_NOTIFY_END_OF_STREAM = 268435458,
        MFT_MESSAGE_NOTIFY_START_OF_STREAM = 268435459,
        MFT_MESSAGE_NOTIFY_RELEASE_RESOURCES = 268435460,
        MFT_MESSAGE_NOTIFY_REACQUIRE_RESOURCES = 268435461,
        MFT_MESSAGE_NOTIFY_EVENT = 268435462,
        MFT_MESSAGE_COMMAND_SET_OUTPUT_STREAM_STATE = 268435463,
        MFT_MESSAGE_COMMAND_FLUSH_OUTPUT_STREAM = 268435464,
        MFT_MESSAGE_COMMAND_MARKER = 536870912,
    };
    enum class MFVP_MESSAGE_TYPE : int32_t
    {
        MFVP_MESSAGE_FLUSH = 0,
        MFVP_MESSAGE_INVALIDATEMEDIATYPE = 1,
        MFVP_MESSAGE_PROCESSINPUTNOTIFY = 2,
        MFVP_MESSAGE_BEGINSTREAMING = 3,
        MFVP_MESSAGE_ENDSTREAMING = 4,
        MFVP_MESSAGE_ENDOFSTREAM = 5,
        MFVP_MESSAGE_STEP = 6,
        MFVP_MESSAGE_CANCELSTEP = 7,
    };
    enum class MFVideo3DFormat : int32_t
    {
        MFVideo3DSampleFormat_BaseView = 0,
        MFVideo3DSampleFormat_MultiView = 1,
        MFVideo3DSampleFormat_Packed_LeftRight = 2,
        MFVideo3DSampleFormat_Packed_TopBottom = 3,
    };
    enum class MFVideo3DSampleFormat : int32_t
    {
        MFSampleExtension_3DVideo_MultiView = 1,
        MFSampleExtension_3DVideo_Packed = 0,
    };
    enum class MFVideoAlphaBitmapFlags : int32_t
    {
        MFVideoAlphaBitmap_EntireDDS = 1,
        MFVideoAlphaBitmap_SrcColorKey = 2,
        MFVideoAlphaBitmap_SrcRect = 4,
        MFVideoAlphaBitmap_DestRect = 8,
        MFVideoAlphaBitmap_FilterMode = 16,
        MFVideoAlphaBitmap_Alpha = 32,
        MFVideoAlphaBitmap_BitMask = 63,
    };
    enum class MFVideoAspectRatioMode : int32_t
    {
        MFVideoARMode_None = 0,
        MFVideoARMode_PreservePicture = 1,
        MFVideoARMode_PreservePixel = 2,
        MFVideoARMode_NonLinearStretch = 4,
        MFVideoARMode_Mask = 7,
    };
    enum class MFVideoChromaSubsampling : int32_t
    {
        MFVideoChromaSubsampling_Unknown = 0,
        MFVideoChromaSubsampling_ProgressiveChroma = 8,
        MFVideoChromaSubsampling_Horizontally_Cosited = 4,
        MFVideoChromaSubsampling_Vertically_Cosited = 2,
        MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
        MFVideoChromaSubsampling_MPEG2 = 5,
        MFVideoChromaSubsampling_MPEG1 = 1,
        MFVideoChromaSubsampling_DV_PAL = 6,
        MFVideoChromaSubsampling_Cosited = 7,
        MFVideoChromaSubsampling_Last = 8,
        MFVideoChromaSubsampling_ForceDWORD = 2147483647,
    };
    enum class MFVideoDRMFlags : int32_t
    {
        MFVideoDRMFlag_None = 0,
        MFVideoDRMFlag_AnalogProtected = 1,
        MFVideoDRMFlag_DigitallyProtected = 2,
    };
    enum class MFVideoDSPMode : int32_t
    {
        MFVideoDSPMode_Passthrough = 1,
        MFVideoDSPMode_Stabilization = 4,
    };
    enum class MFVideoFlags : int32_t
    {
        MFVideoFlag_PAD_TO_Mask = 3,
        MFVideoFlag_PAD_TO_None = 0,
        MFVideoFlag_PAD_TO_4x3 = 1,
        MFVideoFlag_PAD_TO_16x9 = 2,
        MFVideoFlag_SrcContentHintMask = 28,
        MFVideoFlag_SrcContentHintNone = 0,
        MFVideoFlag_SrcContentHint16x9 = 4,
        MFVideoFlag_SrcContentHint235_1 = 8,
        MFVideoFlag_AnalogProtected = 32,
        MFVideoFlag_DigitallyProtected = 64,
        MFVideoFlag_ProgressiveContent = 128,
        MFVideoFlag_FieldRepeatCountMask = 1792,
        MFVideoFlag_FieldRepeatCountShift = 8,
        MFVideoFlag_ProgressiveSeqReset = 2048,
        MFVideoFlag_PanScanEnabled = 131072,
        MFVideoFlag_LowerFieldFirst = 262144,
        MFVideoFlag_BottomUpLinearRep = 524288,
        MFVideoFlags_DXVASurface = 1048576,
        MFVideoFlags_RenderTargetSurface = 4194304,
        MFVideoFlags_ForceQWORD = 2147483647,
    };
    enum class MFVideoInterlaceMode : int32_t
    {
        MFVideoInterlace_Unknown = 0,
        MFVideoInterlace_Progressive = 2,
        MFVideoInterlace_FieldInterleavedUpperFirst = 3,
        MFVideoInterlace_FieldInterleavedLowerFirst = 4,
        MFVideoInterlace_FieldSingleUpper = 5,
        MFVideoInterlace_FieldSingleLower = 6,
        MFVideoInterlace_MixedInterlaceOrProgressive = 7,
        MFVideoInterlace_Last = 8,
        MFVideoInterlace_ForceDWORD = 2147483647,
    };
    enum class MFVideoLighting : int32_t
    {
        MFVideoLighting_Unknown = 0,
        MFVideoLighting_bright = 1,
        MFVideoLighting_office = 2,
        MFVideoLighting_dim = 3,
        MFVideoLighting_dark = 4,
        MFVideoLighting_Last = 5,
        MFVideoLighting_ForceDWORD = 2147483647,
    };
    enum class MFVideoMixPrefs : int32_t
    {
        MFVideoMixPrefs_ForceHalfInterlace = 1,
        MFVideoMixPrefs_AllowDropToHalfInterlace = 2,
        MFVideoMixPrefs_AllowDropToBob = 4,
        MFVideoMixPrefs_ForceBob = 8,
        MFVideoMixPrefs_EnableRotation = 16,
        MFVideoMixPrefs_Mask = 31,
    };
    enum class MFVideoPadFlags : int32_t
    {
        MFVideoPadFlag_PAD_TO_None = 0,
        MFVideoPadFlag_PAD_TO_4x3 = 1,
        MFVideoPadFlag_PAD_TO_16x9 = 2,
    };
    enum class MFVideoPrimaries : int32_t
    {
        MFVideoPrimaries_Unknown = 0,
        MFVideoPrimaries_reserved = 1,
        MFVideoPrimaries_BT709 = 2,
        MFVideoPrimaries_BT470_2_SysM = 3,
        MFVideoPrimaries_BT470_2_SysBG = 4,
        MFVideoPrimaries_SMPTE170M = 5,
        MFVideoPrimaries_SMPTE240M = 6,
        MFVideoPrimaries_EBU3213 = 7,
        MFVideoPrimaries_SMPTE_C = 8,
        MFVideoPrimaries_BT2020 = 9,
        MFVideoPrimaries_XYZ = 10,
        MFVideoPrimaries_DCI_P3 = 11,
        MFVideoPrimaries_ACES = 12,
        MFVideoPrimaries_Last = 13,
        MFVideoPrimaries_ForceDWORD = 2147483647,
    };
    enum class MFVideoRenderPrefs : int32_t
    {
        MFVideoRenderPrefs_DoNotRenderBorder = 1,
        MFVideoRenderPrefs_DoNotClipToDevice = 2,
        MFVideoRenderPrefs_AllowOutputThrottling = 4,
        MFVideoRenderPrefs_ForceOutputThrottling = 8,
        MFVideoRenderPrefs_ForceBatching = 16,
        MFVideoRenderPrefs_AllowBatching = 32,
        MFVideoRenderPrefs_ForceScaling = 64,
        MFVideoRenderPrefs_AllowScaling = 128,
        MFVideoRenderPrefs_DoNotRepaintOnStop = 256,
        MFVideoRenderPrefs_Mask = 511,
    };
    enum class MFVideoRotationFormat : int32_t
    {
        MFVideoRotationFormat_0 = 0,
        MFVideoRotationFormat_90 = 90,
        MFVideoRotationFormat_180 = 180,
        MFVideoRotationFormat_270 = 270,
    };
    enum class MFVideoSphericalFormat : int32_t
    {
        MFVideoSphericalFormat_Unsupported = 0,
        MFVideoSphericalFormat_Equirectangular = 1,
        MFVideoSphericalFormat_CubeMap = 2,
        MFVideoSphericalFormat_3DMesh = 3,
    };
    enum class MFVideoSphericalProjectionMode : int32_t
    {
        MFVideoSphericalProjectionMode_Spherical = 0,
        MFVideoSphericalProjectionMode_Flat = 1,
    };
    enum class MFVideoSrcContentHintFlags : int32_t
    {
        MFVideoSrcContentHintFlag_None = 0,
        MFVideoSrcContentHintFlag_16x9 = 1,
        MFVideoSrcContentHintFlag_235_1 = 2,
    };
    enum class MFVideoTransferFunction : int32_t
    {
        MFVideoTransFunc_Unknown = 0,
        MFVideoTransFunc_10 = 1,
        MFVideoTransFunc_18 = 2,
        MFVideoTransFunc_20 = 3,
        MFVideoTransFunc_22 = 4,
        MFVideoTransFunc_709 = 5,
        MFVideoTransFunc_240M = 6,
        MFVideoTransFunc_sRGB = 7,
        MFVideoTransFunc_28 = 8,
        MFVideoTransFunc_Log_100 = 9,
        MFVideoTransFunc_Log_316 = 10,
        MFVideoTransFunc_709_sym = 11,
        MFVideoTransFunc_2020_const = 12,
        MFVideoTransFunc_2020 = 13,
        MFVideoTransFunc_26 = 14,
        MFVideoTransFunc_2084 = 15,
        MFVideoTransFunc_HLG = 16,
        MFVideoTransFunc_10_rel = 17,
        MFVideoTransFunc_Last = 18,
        MFVideoTransFunc_ForceDWORD = 2147483647,
    };
    enum class MFVideoTransferMatrix : int32_t
    {
        MFVideoTransferMatrix_Unknown = 0,
        MFVideoTransferMatrix_BT709 = 1,
        MFVideoTransferMatrix_BT601 = 2,
        MFVideoTransferMatrix_SMPTE240M = 3,
        MFVideoTransferMatrix_BT2020_10 = 4,
        MFVideoTransferMatrix_BT2020_12 = 5,
        MFVideoTransferMatrix_Last = 6,
        MFVideoTransferMatrix_ForceDWORD = 2147483647,
    };
    enum class MFWaveFormatExConvertFlags : int32_t
    {
        MFWaveFormatExConvertFlag_Normal = 0,
        MFWaveFormatExConvertFlag_ForceExtensible = 1,
    };
    enum class MF_ATTRIBUTES_MATCH_TYPE : int32_t
    {
        MF_ATTRIBUTES_MATCH_OUR_ITEMS = 0,
        MF_ATTRIBUTES_MATCH_THEIR_ITEMS = 1,
        MF_ATTRIBUTES_MATCH_ALL_ITEMS = 2,
        MF_ATTRIBUTES_MATCH_INTERSECTION = 3,
        MF_ATTRIBUTES_MATCH_SMALLER = 4,
    };
    enum class MF_ATTRIBUTE_SERIALIZE_OPTIONS : int32_t
    {
        MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF = 1,
    };
    enum class MF_ATTRIBUTE_TYPE : int32_t
    {
        MF_ATTRIBUTE_UINT32 = 19,
        MF_ATTRIBUTE_UINT64 = 21,
        MF_ATTRIBUTE_DOUBLE = 5,
        MF_ATTRIBUTE_GUID = 72,
        MF_ATTRIBUTE_STRING = 31,
        MF_ATTRIBUTE_BLOB = 4113,
        MF_ATTRIBUTE_IUNKNOWN = 13,
    };
    enum class MF_AUVRHP_ROOMMODEL : int32_t
    {
        VRHP_SMALLROOM = 0,
        VRHP_MEDIUMROOM = 1,
        VRHP_BIGROOM = 2,
        VRHP_CUSTUMIZEDROOM = 3,
    };
    enum class MF_CAPTURE_ENGINE_AUDIO_PROCESSING_MODE : int32_t
    {
        MF_CAPTURE_ENGINE_AUDIO_PROCESSING_DEFAULT = 0,
        MF_CAPTURE_ENGINE_AUDIO_PROCESSING_RAW = 1,
    };
    enum class MF_CAPTURE_ENGINE_DEVICE_TYPE : int32_t
    {
        MF_CAPTURE_ENGINE_DEVICE_TYPE_AUDIO = 0,
        MF_CAPTURE_ENGINE_DEVICE_TYPE_VIDEO = 1,
    };
    enum class MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE : int32_t
    {
        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_OTHER = 0,
        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_COMMUNICATIONS = 1,
        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_MEDIA = 2,
        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_GAMECHAT = 3,
        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_SPEECH = 4,
    };
    enum class MF_CAPTURE_ENGINE_SINK_TYPE : int32_t
    {
        MF_CAPTURE_ENGINE_SINK_TYPE_RECORD = 0,
        MF_CAPTURE_ENGINE_SINK_TYPE_PREVIEW = 1,
        MF_CAPTURE_ENGINE_SINK_TYPE_PHOTO = 2,
    };
    enum class MF_CAPTURE_ENGINE_STREAM_CATEGORY : int32_t
    {
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_PREVIEW = 0,
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_CAPTURE = 1,
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_INDEPENDENT = 2,
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_DEPENDENT = 3,
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_AUDIO = 4,
        MF_CAPTURE_ENGINE_STREAM_CATEGORY_UNSUPPORTED = 5,
    };
    enum class MF_CONNECT_METHOD : int32_t
    {
        MF_CONNECT_DIRECT = 0,
        MF_CONNECT_ALLOW_CONVERTER = 1,
        MF_CONNECT_ALLOW_DECODER = 3,
        MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES = 4,
        MF_CONNECT_AS_OPTIONAL = 65536,
        MF_CONNECT_AS_OPTIONAL_BRANCH = 131072,
    };
    enum class MF_CROSS_ORIGIN_POLICY : int32_t
    {
        MF_CROSS_ORIGIN_POLICY_NONE = 0,
        MF_CROSS_ORIGIN_POLICY_ANONYMOUS = 1,
        MF_CROSS_ORIGIN_POLICY_USE_CREDENTIALS = 2,
    };
    enum class MF_CUSTOM_DECODE_UNIT_TYPE : int32_t
    {
        MF_DECODE_UNIT_NAL = 0,
        MF_DECODE_UNIT_SEI = 1,
    };
    enum class MF_FILE_ACCESSMODE : int32_t
    {
        MF_ACCESSMODE_READ = 1,
        MF_ACCESSMODE_WRITE = 2,
        MF_ACCESSMODE_READWRITE = 3,
    };
    enum class MF_FILE_FLAGS : int32_t
    {
        MF_FILEFLAGS_NONE = 0,
        MF_FILEFLAGS_NOBUFFERING = 1,
        MF_FILEFLAGS_ALLOW_WRITE_SHARING = 2,
    };
    enum class MF_FILE_OPENMODE : int32_t
    {
        MF_OPENMODE_FAIL_IF_NOT_EXIST = 0,
        MF_OPENMODE_FAIL_IF_EXIST = 1,
        MF_OPENMODE_RESET_IF_EXIST = 2,
        MF_OPENMODE_APPEND_IF_EXIST = 3,
        MF_OPENMODE_DELETE_IF_EXIST = 4,
    };
    enum class MF_HDCP_STATUS : int32_t
    {
        MF_HDCP_STATUS_ON = 0,
        MF_HDCP_STATUS_OFF = 1,
        MF_HDCP_STATUS_ON_WITH_TYPE_ENFORCEMENT = 2,
    };
    enum class MF_MEDIAKEYSESSION_MESSAGETYPE : int32_t
    {
        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_REQUEST = 0,
        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RENEWAL = 1,
        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RELEASE = 2,
        MF_MEDIAKEYSESSION_MESSAGETYPE_INDIVIDUALIZATION_REQUEST = 3,
    };
    enum class MF_MEDIAKEYSESSION_TYPE : int32_t
    {
        MF_MEDIAKEYSESSION_TYPE_TEMPORARY = 0,
        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_LICENSE = 1,
        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_RELEASE_MESSAGE = 2,
        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_USAGE_RECORD = 3,
    };
    enum class MF_MEDIAKEYS_REQUIREMENT : int32_t
    {
        MF_MEDIAKEYS_REQUIREMENT_REQUIRED = 1,
        MF_MEDIAKEYS_REQUIREMENT_OPTIONAL = 2,
        MF_MEDIAKEYS_REQUIREMENT_NOT_ALLOWED = 3,
    };
    enum class MF_MEDIAKEY_STATUS : int32_t
    {
        MF_MEDIAKEY_STATUS_USABLE = 0,
        MF_MEDIAKEY_STATUS_EXPIRED = 1,
        MF_MEDIAKEY_STATUS_OUTPUT_DOWNSCALED = 2,
        MF_MEDIAKEY_STATUS_OUTPUT_NOT_ALLOWED = 3,
        MF_MEDIAKEY_STATUS_STATUS_PENDING = 4,
        MF_MEDIAKEY_STATUS_INTERNAL_ERROR = 5,
        MF_MEDIAKEY_STATUS_RELEASED = 6,
        MF_MEDIAKEY_STATUS_OUTPUT_RESTRICTED = 7,
    };
    enum class MF_MEDIA_ENGINE_CANPLAY : int32_t
    {
        MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED = 0,
        MF_MEDIA_ENGINE_CANPLAY_MAYBE = 1,
        MF_MEDIA_ENGINE_CANPLAY_PROBABLY = 2,
    };
    enum class MF_MEDIA_ENGINE_CREATEFLAGS : int32_t
    {
        MF_MEDIA_ENGINE_AUDIOONLY = 1,
        MF_MEDIA_ENGINE_WAITFORSTABLE_STATE = 2,
        MF_MEDIA_ENGINE_FORCEMUTE = 4,
        MF_MEDIA_ENGINE_REAL_TIME_MODE = 8,
        MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS = 16,
        MF_MEDIA_ENGINE_CREATEFLAGS_MASK = 31,
    };
    enum class MF_MEDIA_ENGINE_ERR : int32_t
    {
        MF_MEDIA_ENGINE_ERR_NOERROR = 0,
        MF_MEDIA_ENGINE_ERR_ABORTED = 1,
        MF_MEDIA_ENGINE_ERR_NETWORK = 2,
        MF_MEDIA_ENGINE_ERR_DECODE = 3,
        MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED = 4,
        MF_MEDIA_ENGINE_ERR_ENCRYPTED = 5,
    };
    enum class MF_MEDIA_ENGINE_EVENT : int32_t
    {
        MF_MEDIA_ENGINE_EVENT_LOADSTART = 1,
        MF_MEDIA_ENGINE_EVENT_PROGRESS = 2,
        MF_MEDIA_ENGINE_EVENT_SUSPEND = 3,
        MF_MEDIA_ENGINE_EVENT_ABORT = 4,
        MF_MEDIA_ENGINE_EVENT_ERROR = 5,
        MF_MEDIA_ENGINE_EVENT_EMPTIED = 6,
        MF_MEDIA_ENGINE_EVENT_STALLED = 7,
        MF_MEDIA_ENGINE_EVENT_PLAY = 8,
        MF_MEDIA_ENGINE_EVENT_PAUSE = 9,
        MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA = 10,
        MF_MEDIA_ENGINE_EVENT_LOADEDDATA = 11,
        MF_MEDIA_ENGINE_EVENT_WAITING = 12,
        MF_MEDIA_ENGINE_EVENT_PLAYING = 13,
        MF_MEDIA_ENGINE_EVENT_CANPLAY = 14,
        MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH = 15,
        MF_MEDIA_ENGINE_EVENT_SEEKING = 16,
        MF_MEDIA_ENGINE_EVENT_SEEKED = 17,
        MF_MEDIA_ENGINE_EVENT_TIMEUPDATE = 18,
        MF_MEDIA_ENGINE_EVENT_ENDED = 19,
        MF_MEDIA_ENGINE_EVENT_RATECHANGE = 20,
        MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE = 21,
        MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE = 22,
        MF_MEDIA_ENGINE_EVENT_FORMATCHANGE = 1000,
        MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS = 1001,
        MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER = 1002,
        MF_MEDIA_ENGINE_EVENT_BALANCECHANGE = 1003,
        MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE = 1004,
        MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED = 1005,
        MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED = 1006,
        MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED = 1007,
        MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE = 1008,
        MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY = 1009,
        MF_MEDIA_ENGINE_EVENT_TRACKSCHANGE = 1010,
        MF_MEDIA_ENGINE_EVENT_OPMINFO = 1011,
        MF_MEDIA_ENGINE_EVENT_RESOURCELOST = 1012,
        MF_MEDIA_ENGINE_EVENT_DELAYLOADEVENT_CHANGED = 1013,
        MF_MEDIA_ENGINE_EVENT_STREAMRENDERINGERROR = 1014,
        MF_MEDIA_ENGINE_EVENT_SUPPORTEDRATES_CHANGED = 1015,
        MF_MEDIA_ENGINE_EVENT_AUDIOENDPOINTCHANGE = 1016,
    };
    enum class MF_MEDIA_ENGINE_EXTENSION_TYPE : int32_t
    {
        MF_MEDIA_ENGINE_EXTENSION_TYPE_MEDIASOURCE = 0,
        MF_MEDIA_ENGINE_EXTENSION_TYPE_BYTESTREAM = 1,
    };
    enum class MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAGS : int32_t
    {
        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_PROTECTED = 1,
        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_SURFACE_PROTECTION = 2,
        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_ANTI_SCREEN_SCRAPE_PROTECTION = 4,
    };
    enum class MF_MEDIA_ENGINE_KEYERR : int32_t
    {
        MF_MEDIAENGINE_KEYERR_UNKNOWN = 1,
        MF_MEDIAENGINE_KEYERR_CLIENT = 2,
        MF_MEDIAENGINE_KEYERR_SERVICE = 3,
        MF_MEDIAENGINE_KEYERR_OUTPUT = 4,
        MF_MEDIAENGINE_KEYERR_HARDWARECHANGE = 5,
        MF_MEDIAENGINE_KEYERR_DOMAIN = 6,
    };
    enum class MF_MEDIA_ENGINE_NETWORK : int32_t
    {
        MF_MEDIA_ENGINE_NETWORK_EMPTY = 0,
        MF_MEDIA_ENGINE_NETWORK_IDLE = 1,
        MF_MEDIA_ENGINE_NETWORK_LOADING = 2,
        MF_MEDIA_ENGINE_NETWORK_NO_SOURCE = 3,
    };
    enum class MF_MEDIA_ENGINE_OPM_STATUS : int32_t
    {
        MF_MEDIA_ENGINE_OPM_NOT_REQUESTED = 0,
        MF_MEDIA_ENGINE_OPM_ESTABLISHED = 1,
        MF_MEDIA_ENGINE_OPM_FAILED_VM = 2,
        MF_MEDIA_ENGINE_OPM_FAILED_BDA = 3,
        MF_MEDIA_ENGINE_OPM_FAILED_UNSIGNED_DRIVER = 4,
        MF_MEDIA_ENGINE_OPM_FAILED = 5,
    };
    enum class MF_MEDIA_ENGINE_PRELOAD : int32_t
    {
        MF_MEDIA_ENGINE_PRELOAD_MISSING = 0,
        MF_MEDIA_ENGINE_PRELOAD_EMPTY = 1,
        MF_MEDIA_ENGINE_PRELOAD_NONE = 2,
        MF_MEDIA_ENGINE_PRELOAD_METADATA = 3,
        MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC = 4,
    };
    enum class MF_MEDIA_ENGINE_PROTECTION_FLAGS : int32_t
    {
        MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT = 1,
        MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT = 2,
        MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP = 4,
    };
    enum class MF_MEDIA_ENGINE_READY : int32_t
    {
        MF_MEDIA_ENGINE_READY_HAVE_NOTHING = 0,
        MF_MEDIA_ENGINE_READY_HAVE_METADATA = 1,
        MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA = 2,
        MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA = 3,
        MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA = 4,
    };
    enum class MF_MEDIA_ENGINE_S3D_PACKING_MODE : int32_t
    {
        MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE = 0,
        MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE = 1,
        MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM = 2,
    };
    enum class MF_MEDIA_ENGINE_SEEK_MODE : int32_t
    {
        MF_MEDIA_ENGINE_SEEK_MODE_NORMAL = 0,
        MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE = 1,
    };
    enum class MF_MEDIA_ENGINE_STATISTIC : int32_t
    {
        MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED = 0,
        MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED = 1,
        MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED = 2,
        MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS = 3,
        MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND = 4,
        MF_MEDIA_ENGINE_STATISTIC_PLAYBACK_JITTER = 5,
        MF_MEDIA_ENGINE_STATISTIC_FRAMES_CORRUPTED = 6,
        MF_MEDIA_ENGINE_STATISTIC_TOTAL_FRAME_DELAY = 7,
    };
    enum class MF_MEDIA_ENGINE_STREAMTYPE_FAILED : int32_t
    {
        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_UNKNOWN = 0,
        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_AUDIO = 1,
        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_VIDEO = 2,
    };
    enum class MF_MEDIA_SHARING_ENGINE_EVENT : int32_t
    {
        MF_MEDIA_SHARING_ENGINE_EVENT_DISCONNECT = 2000,
    };
    enum class MF_MSE_APPEND_MODE : int32_t
    {
        MF_MSE_APPEND_MODE_SEGMENTS = 0,
        MF_MSE_APPEND_MODE_SEQUENCE = 1,
    };
    enum class MF_MSE_ERROR : int32_t
    {
        MF_MSE_ERROR_NOERROR = 0,
        MF_MSE_ERROR_NETWORK = 1,
        MF_MSE_ERROR_DECODE = 2,
        MF_MSE_ERROR_UNKNOWN_ERROR = 3,
    };
    enum class MF_MSE_OPUS_SUPPORT_TYPE : int32_t
    {
        MF_MSE_OPUS_SUPPORT_ON = 0,
        MF_MSE_OPUS_SUPPORT_OFF = 1,
    };
    enum class MF_MSE_READY : int32_t
    {
        MF_MSE_READY_CLOSED = 1,
        MF_MSE_READY_OPEN = 2,
        MF_MSE_READY_ENDED = 3,
    };
    enum class MF_MSE_VP9_SUPPORT_TYPE : int32_t
    {
        MF_MSE_VP9_SUPPORT_DEFAULT = 0,
        MF_MSE_VP9_SUPPORT_ON = 1,
        MF_MSE_VP9_SUPPORT_OFF = 2,
    };
    enum class MF_OBJECT_TYPE : int32_t
    {
        MF_OBJECT_MEDIASOURCE = 0,
        MF_OBJECT_BYTESTREAM = 1,
        MF_OBJECT_INVALID = 2,
    };
    enum class MF_OPM_ACP_PROTECTION_LEVEL : int32_t
    {
        MF_OPM_ACP_OFF = 0,
        MF_OPM_ACP_LEVEL_ONE = 1,
        MF_OPM_ACP_LEVEL_TWO = 2,
        MF_OPM_ACP_LEVEL_THREE = 3,
        MF_OPM_ACP_FORCE_ULONG = 2147483647,
    };
    enum class MF_OPM_CGMSA_PROTECTION_LEVEL : int32_t
    {
        MF_OPM_CGMSA_OFF = 0,
        MF_OPM_CGMSA_COPY_FREELY = 1,
        MF_OPM_CGMSA_COPY_NO_MORE = 2,
        MF_OPM_CGMSA_COPY_ONE_GENERATION = 3,
        MF_OPM_CGMSA_COPY_NEVER = 4,
        MF_OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED = 8,
    };
    enum class MF_PLUGIN_CONTROL_POLICY : int32_t
    {
        MF_PLUGIN_CONTROL_POLICY_USE_ALL_PLUGINS = 0,
        MF_PLUGIN_CONTROL_POLICY_USE_APPROVED_PLUGINS = 1,
        MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS = 2,
        MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS_EDGEMODE = 3,
    };
    enum class MF_Plugin_Type : int32_t
    {
        MF_Plugin_Type_MFT = 0,
        MF_Plugin_Type_MediaSource = 1,
        MF_Plugin_Type_MFT_MatchOutputType = 2,
        MF_Plugin_Type_Other = -1,
    };
    enum class MF_QUALITY_ADVISE_FLAGS : int32_t
    {
        MF_QUALITY_CANNOT_KEEP_UP = 1,
    };
    enum class MF_QUALITY_DROP_MODE : int32_t
    {
        MF_DROP_MODE_NONE = 0,
        MF_DROP_MODE_1 = 1,
        MF_DROP_MODE_2 = 2,
        MF_DROP_MODE_3 = 3,
        MF_DROP_MODE_4 = 4,
        MF_DROP_MODE_5 = 5,
        MF_NUM_DROP_MODES = 6,
    };
    enum class MF_QUALITY_LEVEL : int32_t
    {
        MF_QUALITY_NORMAL = 0,
        MF_QUALITY_NORMAL_MINUS_1 = 1,
        MF_QUALITY_NORMAL_MINUS_2 = 2,
        MF_QUALITY_NORMAL_MINUS_3 = 3,
        MF_QUALITY_NORMAL_MINUS_4 = 4,
        MF_QUALITY_NORMAL_MINUS_5 = 5,
        MF_NUM_QUALITY_LEVELS = 6,
    };
    enum class MF_SERVICE_LOOKUP_TYPE : int32_t
    {
        MF_SERVICE_LOOKUP_UPSTREAM = 0,
        MF_SERVICE_LOOKUP_UPSTREAM_DIRECT = 1,
        MF_SERVICE_LOOKUP_DOWNSTREAM = 2,
        MF_SERVICE_LOOKUP_DOWNSTREAM_DIRECT = 3,
        MF_SERVICE_LOOKUP_ALL = 4,
        MF_SERVICE_LOOKUP_GLOBAL = 5,
    };
    enum class MF_SHARING_ENGINE_EVENT : int32_t
    {
        MF_SHARING_ENGINE_EVENT_DISCONNECT = 2000,
        MF_SHARING_ENGINE_EVENT_LOCALRENDERINGSTARTED = 2001,
        MF_SHARING_ENGINE_EVENT_LOCALRENDERINGENDED = 2002,
        MF_SHARING_ENGINE_EVENT_STOPPED = 2003,
        MF_SHARING_ENGINE_EVENT_ERROR = 2501,
    };
    enum class MF_SOURCE_READER_CONTROL_FLAG : int32_t
    {
        MF_SOURCE_READER_CONTROLF_DRAIN = 1,
    };
    enum class MF_SOURCE_READER_FLAG : int32_t
    {
        MF_SOURCE_READERF_ERROR = 1,
        MF_SOURCE_READERF_ENDOFSTREAM = 2,
        MF_SOURCE_READERF_NEWSTREAM = 4,
        MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED = 16,
        MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED = 32,
        MF_SOURCE_READERF_STREAMTICK = 256,
        MF_SOURCE_READERF_ALLEFFECTSREMOVED = 512,
    };
    enum class MF_STREAM_STATE : int32_t
    {
        MF_STREAM_STATE_STOPPED = 0,
        MF_STREAM_STATE_PAUSED = 1,
        MF_STREAM_STATE_RUNNING = 2,
    };
    enum class MF_TIMED_TEXT_ALIGNMENT : int32_t
    {
        MF_TIMED_TEXT_ALIGNMENT_START = 0,
        MF_TIMED_TEXT_ALIGNMENT_END = 1,
        MF_TIMED_TEXT_ALIGNMENT_CENTER = 2,
    };
    enum class MF_TIMED_TEXT_CUE_EVENT : int32_t
    {
        MF_TIMED_TEXT_CUE_EVENT_ACTIVE = 0,
        MF_TIMED_TEXT_CUE_EVENT_INACTIVE = 1,
        MF_TIMED_TEXT_CUE_EVENT_CLEAR = 2,
    };
    enum class MF_TIMED_TEXT_DECORATION : int32_t
    {
        MF_TIMED_TEXT_DECORATION_NONE = 0,
        MF_TIMED_TEXT_DECORATION_UNDERLINE = 1,
        MF_TIMED_TEXT_DECORATION_LINE_THROUGH = 2,
        MF_TIMED_TEXT_DECORATION_OVERLINE = 4,
    };
    enum class MF_TIMED_TEXT_DISPLAY_ALIGNMENT : int32_t
    {
        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_BEFORE = 0,
        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_AFTER = 1,
        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_CENTER = 2,
    };
    enum class MF_TIMED_TEXT_ERROR_CODE : int32_t
    {
        MF_TIMED_TEXT_ERROR_CODE_NOERROR = 0,
        MF_TIMED_TEXT_ERROR_CODE_FATAL = 1,
        MF_TIMED_TEXT_ERROR_CODE_DATA_FORMAT = 2,
        MF_TIMED_TEXT_ERROR_CODE_NETWORK = 3,
        MF_TIMED_TEXT_ERROR_CODE_INTERNAL = 4,
    };
    enum class MF_TIMED_TEXT_FONT_STYLE : int32_t
    {
        MF_TIMED_TEXT_FONT_STYLE_NORMAL = 0,
        MF_TIMED_TEXT_FONT_STYLE_OBLIQUE = 1,
        MF_TIMED_TEXT_FONT_STYLE_ITALIC = 2,
    };
    enum class MF_TIMED_TEXT_SCROLL_MODE : int32_t
    {
        MF_TIMED_TEXT_SCROLL_MODE_POP_ON = 0,
        MF_TIMED_TEXT_SCROLL_MODE_ROLL_UP = 1,
    };
    enum class MF_TIMED_TEXT_TRACK_KIND : int32_t
    {
        MF_TIMED_TEXT_TRACK_KIND_UNKNOWN = 0,
        MF_TIMED_TEXT_TRACK_KIND_SUBTITLES = 1,
        MF_TIMED_TEXT_TRACK_KIND_CAPTIONS = 2,
        MF_TIMED_TEXT_TRACK_KIND_METADATA = 3,
    };
    enum class MF_TIMED_TEXT_TRACK_READY_STATE : int32_t
    {
        MF_TIMED_TEXT_TRACK_READY_STATE_NONE = 0,
        MF_TIMED_TEXT_TRACK_READY_STATE_LOADING = 1,
        MF_TIMED_TEXT_TRACK_READY_STATE_LOADED = 2,
        MF_TIMED_TEXT_TRACK_READY_STATE_ERROR = 3,
    };
    enum class MF_TIMED_TEXT_UNIT_TYPE : int32_t
    {
        MF_TIMED_TEXT_UNIT_TYPE_PIXELS = 0,
        MF_TIMED_TEXT_UNIT_TYPE_PERCENTAGE = 1,
    };
    enum class MF_TIMED_TEXT_WRITING_MODE : int32_t
    {
        MF_TIMED_TEXT_WRITING_MODE_LRTB = 0,
        MF_TIMED_TEXT_WRITING_MODE_RLTB = 1,
        MF_TIMED_TEXT_WRITING_MODE_TBRL = 2,
        MF_TIMED_TEXT_WRITING_MODE_TBLR = 3,
        MF_TIMED_TEXT_WRITING_MODE_LR = 4,
        MF_TIMED_TEXT_WRITING_MODE_RL = 5,
        MF_TIMED_TEXT_WRITING_MODE_TB = 6,
    };
    enum class MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS : int32_t
    {
        MF_TOPOLOGY_RESOLUTION_SUCCEEDED = 0,
        MF_OPTIONAL_NODE_REJECTED_MEDIA_TYPE = 1,
        MF_OPTIONAL_NODE_REJECTED_PROTECTED_PROCESS = 2,
    };
    enum class MF_TOPOLOGY_TYPE : int32_t
    {
        MF_TOPOLOGY_OUTPUT_NODE = 0,
        MF_TOPOLOGY_SOURCESTREAM_NODE = 1,
        MF_TOPOLOGY_TRANSFORM_NODE = 2,
        MF_TOPOLOGY_TEE_NODE = 3,
        MF_TOPOLOGY_MAX = -1,
    };
    enum class MF_TOPONODE_DRAIN_MODE : int32_t
    {
        MF_TOPONODE_DRAIN_DEFAULT = 0,
        MF_TOPONODE_DRAIN_ALWAYS = 1,
        MF_TOPONODE_DRAIN_NEVER = 2,
    };
    enum class MF_TOPONODE_FLUSH_MODE : int32_t
    {
        MF_TOPONODE_FLUSH_ALWAYS = 0,
        MF_TOPONODE_FLUSH_SEEK = 1,
        MF_TOPONODE_FLUSH_NEVER = 2,
    };
    enum class MF_TOPOSTATUS : int32_t
    {
        MF_TOPOSTATUS_INVALID = 0,
        MF_TOPOSTATUS_READY = 100,
        MF_TOPOSTATUS_STARTED_SOURCE = 200,
        MF_TOPOSTATUS_DYNAMIC_CHANGED = 210,
        MF_TOPOSTATUS_SINK_SWITCHED = 300,
        MF_TOPOSTATUS_ENDED = 400,
    };
    enum class MF_TRANSCODE_ADJUST_PROFILE_FLAGS : int32_t
    {
        MF_TRANSCODE_ADJUST_PROFILE_DEFAULT = 0,
        MF_TRANSCODE_ADJUST_PROFILE_USE_SOURCE_ATTRIBUTES = 1,
    };
    enum class MF_TRANSCODE_TOPOLOGYMODE_FLAGS : int32_t
    {
        MF_TRANSCODE_TOPOLOGYMODE_SOFTWARE_ONLY = 0,
        MF_TRANSCODE_TOPOLOGYMODE_HARDWARE_ALLOWED = 1,
    };
    enum class MF_URL_TRUST_STATUS : int32_t
    {
        MF_LICENSE_URL_UNTRUSTED = 0,
        MF_LICENSE_URL_TRUSTED = 1,
        MF_LICENSE_URL_TAMPERED = 2,
    };
    enum class MF_VIDEO_PROCESSOR_ALGORITHM_TYPE : int32_t
    {
        MF_VIDEO_PROCESSOR_ALGORITHM_DEFAULT = 0,
        MF_VIDEO_PROCESSOR_ALGORITHM_MRF_CRF_444 = 1,
    };
    enum class MF_VIDEO_PROCESSOR_MIRROR : int32_t
    {
        MIRROR_NONE = 0,
        MIRROR_HORIZONTAL = 1,
        MIRROR_VERTICAL = 2,
    };
    enum class MF_VIDEO_PROCESSOR_ROTATION : int32_t
    {
        ROTATION_NONE = 0,
        ROTATION_NORMAL = 1,
    };
    enum class MIC_ARRAY_MODE : int32_t
    {
        MICARRAY_SINGLE_CHAN = 0,
        MICARRAY_SIMPLE_SUM = 256,
        MICARRAY_SINGLE_BEAM = 512,
        MICARRAY_FIXED_BEAM = 1024,
        MICARRAY_EXTERN_BEAM = 2048,
    };
    enum class OPM_ACP_PROTECTION_LEVEL : int32_t
    {
        OPM_ACP_OFF = 0,
        OPM_ACP_LEVEL_ONE = 1,
        OPM_ACP_LEVEL_TWO = 2,
        OPM_ACP_LEVEL_THREE = 3,
        OPM_ACP_FORCE_ULONG = 2147483647,
    };
    enum class OPM_DPCP_PROTECTION_LEVEL : int32_t
    {
        OPM_DPCP_OFF = 0,
        OPM_DPCP_ON = 1,
        OPM_DPCP_FORCE_ULONG = 2147483647,
    };
    enum class OPM_HDCP_PROTECTION_LEVEL : int32_t
    {
        OPM_HDCP_OFF = 0,
        OPM_HDCP_ON = 1,
        OPM_HDCP_FORCE_ULONG = 2147483647,
    };
    enum class OPM_IMAGE_ASPECT_RATIO_EN300294 : int32_t
    {
        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3 = 0,
        OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_CENTER = 1,
        OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_TOP = 2,
        OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_CENTER = 3,
        OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_TOP = 4,
        OPM_ASPECT_RATIO_EN300294_BOX_GT_16_BY_9_CENTER = 5,
        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3_PROTECTED_CENTER = 6,
        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_16_BY_9_ANAMORPHIC = 7,
        OPM_ASPECT_RATIO_FORCE_ULONG = 2147483647,
    };
    enum class OPM_OUTPUT_HARDWARE_PROTECTION : int32_t
    {
        OPM_OUTPUT_HARDWARE_PROTECTION_NOT_SUPPORTED = 0,
        OPM_OUTPUT_HARDWARE_PROTECTION_SUPPORTED = 1,
    };
    enum class OPM_TYPE_ENFORCEMENT_HDCP_PROTECTION_LEVEL : int32_t
    {
        OPM_TYPE_ENFORCEMENT_HDCP_OFF = 0,
        OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_NO_TYPE_RESTRICTION = 1,
        OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_TYPE1_RESTRICTION = 2,
        OPM_TYPE_ENFORCEMENT_HDCP_FORCE_ULONG = 2147483647,
    };
    enum class OPM_VIDEO_OUTPUT_SEMANTICS : int32_t
    {
        OPM_VOS_COPP_SEMANTICS = 0,
        OPM_VOS_OPM_SEMANTICS = 1,
        OPM_VOS_OPM_INDIRECT_DISPLAY = 2,
    };
    enum class PLAYTO_SOURCE_CREATEFLAGS : int32_t
    {
        PLAYTO_SOURCE_NONE = 0,
        PLAYTO_SOURCE_IMAGE = 1,
        PLAYTO_SOURCE_AUDIO = 2,
        PLAYTO_SOURCE_VIDEO = 4,
        PLAYTO_SOURCE_PROTECTED = 8,
    };
    enum class SAMPLE_PROTECTION_VERSION : int32_t
    {
        SAMPLE_PROTECTION_VERSION_NO = 0,
        SAMPLE_PROTECTION_VERSION_BASIC_LOKI = 1,
        SAMPLE_PROTECTION_VERSION_SCATTER = 2,
        SAMPLE_PROTECTION_VERSION_RC4 = 3,
        SAMPLE_PROTECTION_VERSION_AES128CTR = 4,
    };
    enum class SEEK_ORIGIN : int32_t
    {
        _msoBegin = 0,
        _msoCurrent = 1,
    };
    enum class TOC_POS_TYPE : int32_t
    {
        TOC_POS_INHEADER = 0,
        TOC_POS_TOPLEVELOBJECT = 1,
    };
    enum class WMT_PROP_DATATYPE : int32_t
    {
        WMT_PROP_TYPE_DWORD = 0,
        WMT_PROP_TYPE_STRING = 1,
        WMT_PROP_TYPE_BINARY = 2,
        WMT_PROP_TYPE_BOOL = 3,
        WMT_PROP_TYPE_QWORD = 4,
        WMT_PROP_TYPE_WORD = 5,
        WMT_PROP_TYPE_GUID = 6,
    };
    enum class WMV_DYNAMIC_FLAGS : int32_t
    {
        WMV_DYNAMIC_BITRATE = 1,
        WMV_DYNAMIC_RESOLUTION = 2,
        WMV_DYNAMIC_COMPLEXITY = 4,
    };
    enum class _DMO_INPLACE_PROCESS_FLAGS : int32_t
    {
        DMO_INPLACE_NORMAL = 0,
        DMO_INPLACE_ZERO = 1,
    };
    enum class _DMO_INPUT_DATA_BUFFER_FLAGS : int32_t
    {
        DMO_INPUT_DATA_BUFFERF_SYNCPOINT = 1,
        DMO_INPUT_DATA_BUFFERF_TIME = 2,
        DMO_INPUT_DATA_BUFFERF_TIMELENGTH = 4,
        DMO_INPUT_DATA_BUFFERF_DISCONTINUITY = 8,
    };
    enum class _DMO_INPUT_STATUS_FLAGS : int32_t
    {
        DMO_INPUT_STATUSF_ACCEPT_DATA = 1,
    };
    enum class _DMO_INPUT_STREAM_INFO_FLAGS : int32_t
    {
        DMO_INPUT_STREAMF_WHOLE_SAMPLES = 1,
        DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
        DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
        DMO_INPUT_STREAMF_HOLDS_BUFFERS = 8,
    };
    enum class _DMO_OUTPUT_DATA_BUFFER_FLAGS : int32_t
    {
        DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT = 1,
        DMO_OUTPUT_DATA_BUFFERF_TIME = 2,
        DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH = 4,
        DMO_OUTPUT_DATA_BUFFERF_DISCONTINUITY = 8,
        DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE = 16777216,
    };
    enum class _DMO_OUTPUT_STREAM_INFO_FLAGS : int32_t
    {
        DMO_OUTPUT_STREAMF_WHOLE_SAMPLES = 1,
        DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
        DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
        DMO_OUTPUT_STREAMF_DISCARDABLE = 8,
        DMO_OUTPUT_STREAMF_OPTIONAL = 16,
    };
    enum class _DMO_PROCESS_OUTPUT_FLAGS : int32_t
    {
        DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1,
    };
    enum class _DMO_QUALITY_STATUS_FLAGS : int32_t
    {
        DMO_QUALITY_STATUS_ENABLED = 1,
    };
    enum class _DMO_SET_TYPE_FLAGS : int32_t
    {
        DMO_SET_TYPEF_TEST_ONLY = 1,
        DMO_SET_TYPEF_CLEAR = 2,
    };
    enum class _DMO_VIDEO_OUTPUT_STREAM_FLAGS : int32_t
    {
        DMO_VOSF_NEEDS_PREVIOUS_SAMPLE = 1,
    };
    enum class _MFP_CREDENTIAL_FLAGS : int32_t
    {
        MFP_CREDENTIAL_PROMPT = 1,
        MFP_CREDENTIAL_SAVE = 2,
        MFP_CREDENTIAL_DO_NOT_CACHE = 4,
        MFP_CREDENTIAL_CLEAR_TEXT = 8,
        MFP_CREDENTIAL_PROXY = 16,
        MFP_CREDENTIAL_LOGGED_ON_USER = 32,
    };
    enum class _MFP_MEDIAITEM_CHARACTERISTICS : int32_t
    {
        MFP_MEDIAITEM_IS_LIVE = 1,
        MFP_MEDIAITEM_CAN_SEEK = 2,
        MFP_MEDIAITEM_CAN_PAUSE = 4,
        MFP_MEDIAITEM_HAS_SLOW_SEEK = 8,
    };
    enum class _MFT_ENUM_FLAG : int32_t
    {
        MFT_ENUM_FLAG_SYNCMFT = 1,
        MFT_ENUM_FLAG_ASYNCMFT = 2,
        MFT_ENUM_FLAG_HARDWARE = 4,
        MFT_ENUM_FLAG_FIELDOFUSE = 8,
        MFT_ENUM_FLAG_LOCALMFT = 16,
        MFT_ENUM_FLAG_TRANSCODE_ONLY = 32,
        MFT_ENUM_FLAG_SORTANDFILTER = 64,
        MFT_ENUM_FLAG_SORTANDFILTER_APPROVED_ONLY = 192,
        MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY = 320,
        MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY_EDGEMODE = 576,
        MFT_ENUM_FLAG_UNTRUSTED_STOREMFT = 1024,
        MFT_ENUM_FLAG_ALL = 63,
    };
    enum class _MFT_INPUT_DATA_BUFFER_FLAGS : int32_t
    {
        MFT_INPUT_DATA_BUFFER_PLACEHOLDER = -1,
    };
    enum class _MFT_INPUT_STATUS_FLAGS : int32_t
    {
        MFT_INPUT_STATUS_ACCEPT_DATA = 1,
    };
    enum class _MFT_INPUT_STREAM_INFO_FLAGS : int32_t
    {
        MFT_INPUT_STREAM_WHOLE_SAMPLES = 1,
        MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
        MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
        MFT_INPUT_STREAM_HOLDS_BUFFERS = 8,
        MFT_INPUT_STREAM_DOES_NOT_ADDREF = 256,
        MFT_INPUT_STREAM_REMOVABLE = 512,
        MFT_INPUT_STREAM_OPTIONAL = 1024,
        MFT_INPUT_STREAM_PROCESSES_IN_PLACE = 2048,
    };
    enum class _MFT_OUTPUT_DATA_BUFFER_FLAGS : int32_t
    {
        MFT_OUTPUT_DATA_BUFFER_INCOMPLETE = 16777216,
        MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE = 256,
        MFT_OUTPUT_DATA_BUFFER_STREAM_END = 512,
        MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE = 768,
    };
    enum class _MFT_OUTPUT_STATUS_FLAGS : int32_t
    {
        MFT_OUTPUT_STATUS_SAMPLE_READY = 1,
    };
    enum class _MFT_OUTPUT_STREAM_INFO_FLAGS : int32_t
    {
        MFT_OUTPUT_STREAM_WHOLE_SAMPLES = 1,
        MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
        MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
        MFT_OUTPUT_STREAM_DISCARDABLE = 8,
        MFT_OUTPUT_STREAM_OPTIONAL = 16,
        MFT_OUTPUT_STREAM_PROVIDES_SAMPLES = 256,
        MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES = 512,
        MFT_OUTPUT_STREAM_LAZY_READ = 1024,
        MFT_OUTPUT_STREAM_REMOVABLE = 2048,
    };
    enum class _MFT_PROCESS_OUTPUT_FLAGS : int32_t
    {
        MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1,
        MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT = 2,
    };
    enum class _MFT_PROCESS_OUTPUT_STATUS : int32_t
    {
        MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS = 256,
    };
    enum class _MFT_SET_TYPE_FLAGS : int32_t
    {
        MFT_SET_TYPE_TEST_ONLY = 1,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0003 : int32_t
    {
        DXVA2_DeinterlaceTech_Unknown = 0,
        DXVA2_DeinterlaceTech_BOBLineReplicate = 1,
        DXVA2_DeinterlaceTech_BOBVerticalStretch = 2,
        DXVA2_DeinterlaceTech_BOBVerticalStretch4Tap = 4,
        DXVA2_DeinterlaceTech_MedianFiltering = 8,
        DXVA2_DeinterlaceTech_EdgeFiltering = 16,
        DXVA2_DeinterlaceTech_FieldAdaptive = 32,
        DXVA2_DeinterlaceTech_PixelAdaptive = 64,
        DXVA2_DeinterlaceTech_MotionVectorSteered = 128,
        DXVA2_DeinterlaceTech_InverseTelecine = 256,
        DXVA2_DeinterlaceTech_Mask = 511,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0004 : int32_t
    {
        DXVA2_NoiseFilterLumaLevel = 1,
        DXVA2_NoiseFilterLumaThreshold = 2,
        DXVA2_NoiseFilterLumaRadius = 3,
        DXVA2_NoiseFilterChromaLevel = 4,
        DXVA2_NoiseFilterChromaThreshold = 5,
        DXVA2_NoiseFilterChromaRadius = 6,
        DXVA2_DetailFilterLumaLevel = 7,
        DXVA2_DetailFilterLumaThreshold = 8,
        DXVA2_DetailFilterLumaRadius = 9,
        DXVA2_DetailFilterChromaLevel = 10,
        DXVA2_DetailFilterChromaThreshold = 11,
        DXVA2_DetailFilterChromaRadius = 12,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0005 : int32_t
    {
        DXVA2_NoiseFilterTech_Unsupported = 0,
        DXVA2_NoiseFilterTech_Unknown = 1,
        DXVA2_NoiseFilterTech_Median = 2,
        DXVA2_NoiseFilterTech_Temporal = 4,
        DXVA2_NoiseFilterTech_BlockNoise = 8,
        DXVA2_NoiseFilterTech_MosquitoNoise = 16,
        DXVA2_NoiseFilterTech_Mask = 31,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0006 : int32_t
    {
        DXVA2_DetailFilterTech_Unsupported = 0,
        DXVA2_DetailFilterTech_Unknown = 1,
        DXVA2_DetailFilterTech_Edge = 2,
        DXVA2_DetailFilterTech_Sharpening = 4,
        DXVA2_DetailFilterTech_Mask = 7,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0007 : int32_t
    {
        DXVA2_ProcAmp_None = 0,
        DXVA2_ProcAmp_Brightness = 1,
        DXVA2_ProcAmp_Contrast = 2,
        DXVA2_ProcAmp_Hue = 4,
        DXVA2_ProcAmp_Saturation = 8,
        DXVA2_ProcAmp_Mask = 15,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0008 : int32_t
    {
        DXVA2_VideoProcess_None = 0,
        DXVA2_VideoProcess_YUV2RGB = 1,
        DXVA2_VideoProcess_StretchX = 2,
        DXVA2_VideoProcess_StretchY = 4,
        DXVA2_VideoProcess_AlphaBlend = 8,
        DXVA2_VideoProcess_SubRects = 16,
        DXVA2_VideoProcess_SubStreams = 32,
        DXVA2_VideoProcess_SubStreamsExtended = 64,
        DXVA2_VideoProcess_YUV2RGBExtended = 128,
        DXVA2_VideoProcess_AlphaBlendExtended = 256,
        DXVA2_VideoProcess_Constriction = 512,
        DXVA2_VideoProcess_NoiseFilter = 1024,
        DXVA2_VideoProcess_DetailFilter = 2048,
        DXVA2_VideoProcess_PlanarAlpha = 4096,
        DXVA2_VideoProcess_LinearScaling = 8192,
        DXVA2_VideoProcess_GammaCompensated = 16384,
        DXVA2_VideoProcess_MaintainsOriginalFieldData = 32768,
        DXVA2_VideoProcess_Mask = 65535,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0009 : int32_t
    {
        DXVA2_VPDev_HardwareDevice = 1,
        DXVA2_VPDev_EmulatedDXVA1 = 2,
        DXVA2_VPDev_SoftwareDevice = 4,
        DXVA2_VPDev_Mask = 7,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0010 : int32_t
    {
        DXVA2_SampleData_RFF = 1,
        DXVA2_SampleData_TFF = 2,
        DXVA2_SampleData_RFF_TFF_Present = 4,
        DXVA2_SampleData_Mask = 65535,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0011 : int32_t
    {
        DXVA2_DestData_RFF = 1,
        DXVA2_DestData_TFF = 2,
        DXVA2_DestData_RFF_TFF_Present = 4,
        DXVA2_DestData_Mask = 65535,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0012 : int32_t
    {
        DXVA2_PictureParametersBufferType = 0,
        DXVA2_MacroBlockControlBufferType = 1,
        DXVA2_ResidualDifferenceBufferType = 2,
        DXVA2_DeblockingControlBufferType = 3,
        DXVA2_InverseQuantizationMatrixBufferType = 4,
        DXVA2_SliceControlBufferType = 5,
        DXVA2_BitStreamDateBufferType = 6,
        DXVA2_MotionVectorBuffer = 7,
        DXVA2_FilmGrainBuffer = 8,
    };
    enum class __MIDL___MIDL_itf_dxva2api_0000_0000_0013 : int32_t
    {
        DXVA2_VideoDecoderRenderTarget = 0,
        DXVA2_VideoProcessorRenderTarget = 1,
        DXVA2_VideoSoftwareRenderTarget = 2,
    };
    enum class __MIDL___MIDL_itf_mfcaptureengine_0000_0000_0001 : int32_t
    {
        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_PREVIEW = -6,
        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_RECORD = -7,
        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_PHOTO = -8,
        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_AUDIO = -9,
        MF_CAPTURE_ENGINE_MEDIASOURCE = -1,
    };
    enum class __MIDL___MIDL_itf_mfidl_0000_0001_0001 : int32_t
    {
        MF_RESOLUTION_MEDIASOURCE = 1,
        MF_RESOLUTION_BYTESTREAM = 2,
        MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE = 16,
        MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL = 32,
        MF_RESOLUTION_DISABLE_LOCAL_PLUGINS = 64,
        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY = 128,
        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY = 256,
        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY_EDGEMODE = 512,
        MF_RESOLUTION_ENABLE_STORE_PLUGINS = 1024,
        MF_RESOLUTION_READ = 65536,
        MF_RESOLUTION_WRITE = 131072,
    };
    enum class __MIDL___MIDL_itf_mfidl_0000_0029_0001 : int32_t
    {
        MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL = 1,
    };
    enum class __MIDL___MIDL_itf_mfidl_0000_0029_0002 : int32_t
    {
        MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL = 1,
    };
    enum class __MIDL___MIDL_itf_mfobjects_0000_0012_0001 : int32_t
    {
        MEUnknown = 0,
        MEError = 1,
        MEExtendedType = 2,
        MENonFatalError = 3,
        MEGenericV1Anchor = 3,
        MESessionUnknown = 100,
        MESessionTopologySet = 101,
        MESessionTopologiesCleared = 102,
        MESessionStarted = 103,
        MESessionPaused = 104,
        MESessionStopped = 105,
        MESessionClosed = 106,
        MESessionEnded = 107,
        MESessionRateChanged = 108,
        MESessionScrubSampleComplete = 109,
        MESessionCapabilitiesChanged = 110,
        MESessionTopologyStatus = 111,
        MESessionNotifyPresentationTime = 112,
        MENewPresentation = 113,
        MELicenseAcquisitionStart = 114,
        MELicenseAcquisitionCompleted = 115,
        MEIndividualizationStart = 116,
        MEIndividualizationCompleted = 117,
        MEEnablerProgress = 118,
        MEEnablerCompleted = 119,
        MEPolicyError = 120,
        MEPolicyReport = 121,
        MEBufferingStarted = 122,
        MEBufferingStopped = 123,
        MEConnectStart = 124,
        MEConnectEnd = 125,
        MEReconnectStart = 126,
        MEReconnectEnd = 127,
        MERendererEvent = 128,
        MESessionStreamSinkFormatChanged = 129,
        MESessionV1Anchor = 129,
        MESourceUnknown = 200,
        MESourceStarted = 201,
        MEStreamStarted = 202,
        MESourceSeeked = 203,
        MEStreamSeeked = 204,
        MENewStream = 205,
        MEUpdatedStream = 206,
        MESourceStopped = 207,
        MEStreamStopped = 208,
        MESourcePaused = 209,
        MEStreamPaused = 210,
        MEEndOfPresentation = 211,
        MEEndOfStream = 212,
        MEMediaSample = 213,
        MEStreamTick = 214,
        MEStreamThinMode = 215,
        MEStreamFormatChanged = 216,
        MESourceRateChanged = 217,
        MEEndOfPresentationSegment = 218,
        MESourceCharacteristicsChanged = 219,
        MESourceRateChangeRequested = 220,
        MESourceMetadataChanged = 221,
        MESequencerSourceTopologyUpdated = 222,
        MESourceV1Anchor = 222,
        MESinkUnknown = 300,
        MEStreamSinkStarted = 301,
        MEStreamSinkStopped = 302,
        MEStreamSinkPaused = 303,
        MEStreamSinkRateChanged = 304,
        MEStreamSinkRequestSample = 305,
        MEStreamSinkMarker = 306,
        MEStreamSinkPrerolled = 307,
        MEStreamSinkScrubSampleComplete = 308,
        MEStreamSinkFormatChanged = 309,
        MEStreamSinkDeviceChanged = 310,
        MEQualityNotify = 311,
        MESinkInvalidated = 312,
        MEAudioSessionNameChanged = 313,
        MEAudioSessionVolumeChanged = 314,
        MEAudioSessionDeviceRemoved = 315,
        MEAudioSessionServerShutdown = 316,
        MEAudioSessionGroupingParamChanged = 317,
        MEAudioSessionIconChanged = 318,
        MEAudioSessionFormatChanged = 319,
        MEAudioSessionDisconnected = 320,
        MEAudioSessionExclusiveModeOverride = 321,
        MESinkV1Anchor = 321,
        MECaptureAudioSessionVolumeChanged = 322,
        MECaptureAudioSessionDeviceRemoved = 323,
        MECaptureAudioSessionFormatChanged = 324,
        MECaptureAudioSessionDisconnected = 325,
        MECaptureAudioSessionExclusiveModeOverride = 326,
        MECaptureAudioSessionServerShutdown = 327,
        MESinkV2Anchor = 327,
        METrustUnknown = 400,
        MEPolicyChanged = 401,
        MEContentProtectionMessage = 402,
        MEPolicySet = 403,
        METrustV1Anchor = 403,
        MEWMDRMLicenseBackupCompleted = 500,
        MEWMDRMLicenseBackupProgress = 501,
        MEWMDRMLicenseRestoreCompleted = 502,
        MEWMDRMLicenseRestoreProgress = 503,
        MEWMDRMLicenseAcquisitionCompleted = 506,
        MEWMDRMIndividualizationCompleted = 508,
        MEWMDRMIndividualizationProgress = 513,
        MEWMDRMProximityCompleted = 514,
        MEWMDRMLicenseStoreCleaned = 515,
        MEWMDRMRevocationDownloadCompleted = 516,
        MEWMDRMV1Anchor = 516,
        METransformUnknown = 600,
        METransformNeedInput = 601,
        METransformHaveOutput = 602,
        METransformDrainComplete = 603,
        METransformMarker = 604,
        METransformInputStreamStateChanged = 605,
        MEByteStreamCharacteristicsChanged = 700,
        MEVideoCaptureDeviceRemoved = 800,
        MEVideoCaptureDevicePreempted = 801,
        MEStreamSinkFormatInvalidated = 802,
        MEEncodingParameters = 803,
        MEContentProtectionMetadata = 900,
        MEDeviceThermalStateChanged = 950,
        MEReservedMax = 10000,
    };
    enum class __MIDL___MIDL_itf_mfreadwrite_0000_0001_0001 : int32_t
    {
        MF_SOURCE_READER_INVALID_STREAM_INDEX = -1,
        MF_SOURCE_READER_ALL_STREAMS = -2,
        MF_SOURCE_READER_ANY_STREAM = -2,
        MF_SOURCE_READER_FIRST_AUDIO_STREAM = -3,
        MF_SOURCE_READER_FIRST_VIDEO_STREAM = -4,
        MF_SOURCE_READER_MEDIASOURCE = -1,
    };
    enum class __MIDL___MIDL_itf_mfreadwrite_0000_0001_0002 : int32_t
    {
        MF_SOURCE_READER_CURRENT_TYPE_INDEX = -1,
    };
    enum class __MIDL___MIDL_itf_mfreadwrite_0000_0005_0001 : int32_t
    {
        MF_SINK_WRITER_INVALID_STREAM_INDEX = -1,
        MF_SINK_WRITER_ALL_STREAMS = -2,
        MF_SINK_WRITER_MEDIASINK = -1,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0001 : int32_t
    {
        OPM_OMAC_SIZE = 16,
        OPM_128_BIT_RANDOM_NUMBER_SIZE = 16,
        OPM_ENCRYPTED_INITIALIZATION_PARAMETERS_SIZE = 256,
        OPM_CONFIGURE_SETTING_DATA_SIZE = 4056,
        OPM_GET_INFORMATION_PARAMETERS_SIZE = 4056,
        OPM_REQUESTED_INFORMATION_SIZE = 4076,
        OPM_HDCP_KEY_SELECTION_VECTOR_SIZE = 5,
        OPM_PROTECTION_TYPE_SIZE = 4,
        OPM_BUS_TYPE_MASK = 65535,
        OPM_BUS_IMPLEMENTATION_MODIFIER_MASK = 32767,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0002 : int32_t
    {
        OPM_HDCP_FLAG_NONE = 0,
        OPM_HDCP_FLAG_REPEATER = 1,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0003 : int32_t
    {
        OPM_STATUS_NORMAL = 0,
        OPM_STATUS_LINK_LOST = 1,
        OPM_STATUS_RENEGOTIATION_REQUIRED = 2,
        OPM_STATUS_TAMPERING_DETECTED = 4,
        OPM_STATUS_REVOKED_HDCP_DEVICE_ATTACHED = 8,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0004 : int32_t
    {
        OPM_CONNECTOR_TYPE_OTHER = -1,
        OPM_CONNECTOR_TYPE_VGA = 0,
        OPM_CONNECTOR_TYPE_SVIDEO = 1,
        OPM_CONNECTOR_TYPE_COMPOSITE_VIDEO = 2,
        OPM_CONNECTOR_TYPE_COMPONENT_VIDEO = 3,
        OPM_CONNECTOR_TYPE_DVI = 4,
        OPM_CONNECTOR_TYPE_HDMI = 5,
        OPM_CONNECTOR_TYPE_LVDS = 6,
        OPM_CONNECTOR_TYPE_D_JPN = 8,
        OPM_CONNECTOR_TYPE_SDI = 9,
        OPM_CONNECTOR_TYPE_DISPLAYPORT_EXTERNAL = 10,
        OPM_CONNECTOR_TYPE_DISPLAYPORT_EMBEDDED = 11,
        OPM_CONNECTOR_TYPE_UDI_EXTERNAL = 12,
        OPM_CONNECTOR_TYPE_UDI_EMBEDDED = 13,
        OPM_CONNECTOR_TYPE_RESERVED = 14,
        OPM_CONNECTOR_TYPE_MIRACAST = 15,
        OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_A = 16,
        OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_B = 17,
        OPM_COPP_COMPATIBLE_CONNECTOR_TYPE_INTERNAL = -2147483648,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0005 : int32_t
    {
        OPM_DVI_CHARACTERISTIC_1_0 = 1,
        OPM_DVI_CHARACTERISTIC_1_1_OR_ABOVE = 2,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0006 : int32_t
    {
        OPM_BUS_TYPE_OTHER = 0,
        OPM_BUS_TYPE_PCI = 1,
        OPM_BUS_TYPE_PCIX = 2,
        OPM_BUS_TYPE_PCIEXPRESS = 3,
        OPM_BUS_TYPE_AGP = 4,
        OPM_BUS_IMPLEMENTATION_MODIFIER_INSIDE_OF_CHIPSET = 65536,
        OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072,
        OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608,
        OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144,
        OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680,
        OPM_BUS_IMPLEMENTATION_MODIFIER_NON_STANDARD = -2147483648,
        OPM_COPP_COMPATIBLE_BUS_TYPE_INTEGRATED = -2147483648,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0007 : int32_t
    {
        OPM_CGMSA_OFF = 0,
        OPM_CGMSA_COPY_FREELY = 1,
        OPM_CGMSA_COPY_NO_MORE = 2,
        OPM_CGMSA_COPY_ONE_GENERATION = 3,
        OPM_CGMSA_COPY_NEVER = 4,
        OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED = 8,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0008 : int32_t
    {
        OPM_PROTECTION_TYPE_OTHER = -2147483648,
        OPM_PROTECTION_TYPE_NONE = 0,
        OPM_PROTECTION_TYPE_COPP_COMPATIBLE_HDCP = 1,
        OPM_PROTECTION_TYPE_ACP = 2,
        OPM_PROTECTION_TYPE_CGMSA = 4,
        OPM_PROTECTION_TYPE_HDCP = 8,
        OPM_PROTECTION_TYPE_DPCP = 16,
        OPM_PROTECTION_TYPE_TYPE_ENFORCEMENT_HDCP = 32,
    };
    enum class __MIDL___MIDL_itf_opmapi_0000_0000_0009 : int32_t
    {
        OPM_PROTECTION_STANDARD_OTHER = -2147483648,
        OPM_PROTECTION_STANDARD_NONE = 0,
        OPM_PROTECTION_STANDARD_IEC61880_525I = 1,
        OPM_PROTECTION_STANDARD_IEC61880_2_525I = 2,
        OPM_PROTECTION_STANDARD_IEC62375_625P = 4,
        OPM_PROTECTION_STANDARD_EIA608B_525 = 8,
        OPM_PROTECTION_STANDARD_EN300294_625I = 16,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_525P = 32,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_750P = 64,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_1125I = 128,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_525P = 256,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_750P = 512,
        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_1125I = 1024,
        OPM_PROTECTION_STANDARD_ARIBTRB15_525I = 2048,
        OPM_PROTECTION_STANDARD_ARIBTRB15_525P = 4096,
        OPM_PROTECTION_STANDARD_ARIBTRB15_750P = 8192,
        OPM_PROTECTION_STANDARD_ARIBTRB15_1125I = 16384,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct ASF_FLAT_PICTURE;
    struct ASF_FLAT_SYNCHRONISED_LYRICS;
    struct ASF_INDEX_DESCRIPTOR;
    struct ASF_INDEX_IDENTIFIER;
    struct ASF_MUX_STATISTICS;
    struct AecQualityMetrics_Struct;
    struct CodecAPIEventData;
    struct D3D11_AES_CTR_IV;
    struct D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_INPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_OUTPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT;
    struct D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT;
    struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT;
    struct D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT;
    struct D3D11_ENCRYPTED_BLOCK_INFO;
    struct D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA;
    struct D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA;
    struct D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA;
    struct D3D11_OMAC;
    struct D3D11_TEX2D_ARRAY_VPOV;
    struct D3D11_TEX2D_VDOV;
    struct D3D11_TEX2D_VPIV;
    struct D3D11_TEX2D_VPOV;
    struct D3D11_VIDEO_COLOR;
    struct D3D11_VIDEO_COLOR_RGBA;
    struct D3D11_VIDEO_COLOR_YCbCrA;
    struct D3D11_VIDEO_CONTENT_PROTECTION_CAPS;
    struct D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION;
    struct D3D11_VIDEO_DECODER_BUFFER_DESC;
    struct D3D11_VIDEO_DECODER_BUFFER_DESC1;
    struct D3D11_VIDEO_DECODER_CONFIG;
    struct D3D11_VIDEO_DECODER_DESC;
    struct D3D11_VIDEO_DECODER_EXTENSION;
    struct D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC;
    struct D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK;
    struct D3D11_VIDEO_PROCESSOR_CAPS;
    struct D3D11_VIDEO_PROCESSOR_COLOR_SPACE;
    struct D3D11_VIDEO_PROCESSOR_CONTENT_DESC;
    struct D3D11_VIDEO_PROCESSOR_CUSTOM_RATE;
    struct D3D11_VIDEO_PROCESSOR_FILTER_RANGE;
    struct D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC;
    struct D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC;
    struct D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS;
    struct D3D11_VIDEO_PROCESSOR_STREAM;
    struct D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT;
    struct D3D11_VIDEO_SAMPLE_DESC;
    struct D3D12_FEATURE_DATA_VIDEO_ARCHITECTURE;
    struct D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE;
    struct D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE1;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_CONVERSION_SUPPORT;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_FORMATS;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_FORMAT_COUNT;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_HISTOGRAM;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILES;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILE_COUNT;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_PROTECTED_RESOURCES;
    struct D3D12_FEATURE_DATA_VIDEO_DECODE_SUPPORT;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMANDS;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_COUNT;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETERS;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SIZE;
    struct D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SUPPORT;
    struct D3D12_FEATURE_DATA_VIDEO_FEATURE_AREA_SUPPORT;
    struct D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR;
    struct D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES;
    struct D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_SIZE;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE1;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESS_MAX_INPUT_STREAMS;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESS_PROTECTED_RESOURCES;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESS_REFERENCE_INFO;
    struct D3D12_FEATURE_DATA_VIDEO_PROCESS_SUPPORT;
    struct D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS;
    struct D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT;
    struct D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT;
    struct D3D12_RESOURCE_COORDINATE;
    struct D3D12_VIDEO_DECODER_DESC;
    struct D3D12_VIDEO_DECODER_HEAP_DESC;
    struct D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM;
    struct D3D12_VIDEO_DECODE_CONFIGURATION;
    struct D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS;
    struct D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS1;
    struct D3D12_VIDEO_DECODE_FRAME_ARGUMENT;
    struct D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS;
    struct D3D12_VIDEO_DECODE_OUTPUT_HISTOGRAM;
    struct D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS;
    struct D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1;
    struct D3D12_VIDEO_DECODE_REFERENCE_FRAMES;
    struct D3D12_VIDEO_EXTENSION_COMMAND_DESC;
    struct D3D12_VIDEO_EXTENSION_COMMAND_INFO;
    struct D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_INFO;
    struct D3D12_VIDEO_FORMAT;
    struct D3D12_VIDEO_MOTION_ESTIMATOR_DESC;
    struct D3D12_VIDEO_MOTION_ESTIMATOR_INPUT;
    struct D3D12_VIDEO_MOTION_ESTIMATOR_OUTPUT;
    struct D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC;
    struct D3D12_VIDEO_PROCESS_ALPHA_BLENDING;
    struct D3D12_VIDEO_PROCESS_FILTER_RANGE;
    struct D3D12_VIDEO_PROCESS_INPUT_STREAM;
    struct D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS;
    struct D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1;
    struct D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC;
    struct D3D12_VIDEO_PROCESS_INPUT_STREAM_RATE;
    struct D3D12_VIDEO_PROCESS_LUMA_KEY;
    struct D3D12_VIDEO_PROCESS_OUTPUT_STREAM;
    struct D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS;
    struct D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC;
    struct D3D12_VIDEO_PROCESS_REFERENCE_SET;
    struct D3D12_VIDEO_PROCESS_TRANSFORM;
    struct D3D12_VIDEO_SAMPLE;
    struct D3D12_VIDEO_SCALE_SUPPORT;
    struct D3D12_VIDEO_SIZE_RANGE;
    struct D3DCONTENTPROTECTIONCAPS;
    struct D3DOVERLAYCAPS;
    struct DEVICE_INFO;
    struct DIRTYRECT_INFO;
    struct DXVA2_AES_CTR_IV;
    struct DXVA2_AYUVSample16;
    struct DXVA2_AYUVSample8;
    struct DXVA2_ConfigPictureDecode;
    struct DXVA2_DecodeBufferDesc;
    struct DXVA2_DecodeExecuteParams;
    struct DXVA2_DecodeExtensionData;
    struct DXVA2_ExtendedFormat;
    struct DXVA2_FilterValues;
    struct DXVA2_Fixed32;
    struct DXVA2_Frequency;
    struct DXVA2_ProcAmpValues;
    struct DXVA2_ValueRange;
    struct DXVA2_VideoDesc;
    struct DXVA2_VideoProcessBltParams;
    struct DXVA2_VideoProcessorCaps;
    struct DXVA2_VideoSample;
    struct DXVABufferInfo;
    struct DXVACompBufferInfo;
    struct DXVAHDETW_CREATEVIDEOPROCESSOR;
    struct DXVAHDETW_DESTROYVIDEOPROCESSOR;
    struct DXVAHDETW_VIDEOPROCESSBLTHD;
    struct DXVAHDETW_VIDEOPROCESSBLTHD_STREAM;
    struct DXVAHDETW_VIDEOPROCESSBLTSTATE;
    struct DXVAHDETW_VIDEOPROCESSSTREAMSTATE;
    struct DXVAHDSW_CALLBACKS;
    struct DXVAHD_BLT_STATE_ALPHA_FILL_DATA;
    struct DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA;
    struct DXVAHD_BLT_STATE_CONSTRICTION_DATA;
    struct DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE_DATA;
    struct DXVAHD_BLT_STATE_PRIVATE_DATA;
    struct DXVAHD_BLT_STATE_TARGET_RECT_DATA;
    union DXVAHD_COLOR;
    struct DXVAHD_COLOR_RGBA;
    struct DXVAHD_COLOR_YCbCrA;
    struct DXVAHD_CONTENT_DESC;
    struct DXVAHD_CUSTOM_RATE_DATA;
    struct DXVAHD_FILTER_RANGE_DATA;
    struct DXVAHD_RATIONAL;
    struct DXVAHD_STREAM_DATA;
    struct DXVAHD_STREAM_STATE_ALPHA_DATA;
    struct DXVAHD_STREAM_STATE_ASPECT_RATIO_DATA;
    struct DXVAHD_STREAM_STATE_D3DFORMAT_DATA;
    struct DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA;
    struct DXVAHD_STREAM_STATE_FILTER_DATA;
    struct DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA;
    struct DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE_DATA;
    struct DXVAHD_STREAM_STATE_LUMA_KEY_DATA;
    struct DXVAHD_STREAM_STATE_OUTPUT_RATE_DATA;
    struct DXVAHD_STREAM_STATE_PALETTE_DATA;
    struct DXVAHD_STREAM_STATE_PRIVATE_DATA;
    struct DXVAHD_STREAM_STATE_PRIVATE_IVTC_DATA;
    struct DXVAHD_STREAM_STATE_SOURCE_RECT_DATA;
    struct DXVAHD_VPCAPS;
    struct DXVAHD_VPDEVCAPS;
    struct DXVAUncompDataInfo;
    struct DXVA_AYUVsample2;
    struct DXVA_BufferDescription;
    struct DXVA_COPPCommand;
    struct DXVA_COPPSignature;
    struct DXVA_COPPStatusInput;
    struct DXVA_COPPStatusOutput;
    struct DXVA_ConfigPictureDecode;
    struct DXVA_DeinterlaceBlt;
    struct DXVA_DeinterlaceBltEx;
    struct DXVA_DeinterlaceCaps;
    struct DXVA_DeinterlaceQueryAvailableModes;
    struct DXVA_DeinterlaceQueryModeCaps;
    struct DXVA_ExtendedFormat;
    struct DXVA_Frequency;
    struct DXVA_PictureParameters;
    struct DXVA_ProcAmpControlBlt;
    struct DXVA_ProcAmpControlCaps;
    struct DXVA_ProcAmpControlQueryRange;
    struct DXVA_VideoDesc;
    struct DXVA_VideoPropertyRange;
    struct DXVA_VideoSample;
    struct DXVA_VideoSample2;
    struct MACROBLOCK_DATA;
    struct MFARGB;
    struct MFAYUVSample;
    struct MFAudioDecoderDegradationInfo;
    struct MFBYTESTREAM_BUFFERING_PARAMS;
    struct MFCLOCK_PROPERTIES;
    struct MFCONTENTPROTECTIONDEVICE_INPUT_DATA;
    struct MFCONTENTPROTECTIONDEVICE_OUTPUT_DATA;
    struct MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA;
    struct MFCameraExtrinsic_CalibratedTransform;
    struct MFCameraExtrinsics;
    struct MFCameraIntrinsic_CameraModel;
    struct MFCameraIntrinsic_DistortionModel;
    struct MFCameraIntrinsic_DistortionModel6KT;
    struct MFCameraIntrinsic_DistortionModelArcTan;
    struct MFCameraIntrinsic_PinholeCameraModel;
    struct MFExtendedCameraIntrinsic_IntrinsicModel;
    struct MFFOLDDOWN_MATRIX;
    struct MFINPUTTRUSTAUTHORITY_ACCESS_ACTION;
    struct MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS;
    struct MFMPEG2DLNASINKSTATS;
    struct MFMediaKeyStatus;
    struct MFNetCredentialManagerGetParam;
    struct MFOffset;
    struct MFP_ACQUIRE_USER_CREDENTIAL_EVENT;
    struct MFP_ERROR_EVENT;
    struct MFP_EVENT_HEADER;
    struct MFP_FRAME_STEP_EVENT;
    struct MFP_MEDIAITEM_CLEARED_EVENT;
    struct MFP_MEDIAITEM_CREATED_EVENT;
    struct MFP_MEDIAITEM_SET_EVENT;
    struct MFP_MF_EVENT;
    struct MFP_PAUSE_EVENT;
    struct MFP_PLAYBACK_ENDED_EVENT;
    struct MFP_PLAY_EVENT;
    struct MFP_POSITION_SET_EVENT;
    struct MFP_RATE_SET_EVENT;
    struct MFP_STOP_EVENT;
    union MFPaletteEntry;
    struct MFPinholeCameraIntrinsic_IntrinsicModel;
    struct MFPinholeCameraIntrinsics;
    struct MFRR_COMPONENTS;
    struct MFRR_COMPONENT_HASH_INFO;
    struct MFRatio;
    struct MFTOPONODE_ATTRIBUTE_UPDATE;
    struct MFT_INPUT_STREAM_INFO;
    struct MFT_OUTPUT_DATA_BUFFER;
    struct MFT_OUTPUT_STREAM_INFO;
    struct MFT_REGISTER_TYPE_INFO;
    struct MFT_REGISTRATION_INFO;
    struct MFT_STREAM_STATE_PARAM;
    struct MFVIDEOFORMAT;
    struct MFVideoAlphaBitmap;
    struct MFVideoAlphaBitmapParams;
    struct MFVideoArea;
    struct MFVideoCompressedInfo;
    struct MFVideoInfo;
    struct MFVideoNormalizedRect;
    struct MFVideoSurfaceInfo;
    struct MF_BYTE_STREAM_CACHE_RANGE;
    struct MF_FLOAT2;
    struct MF_FLOAT3;
    struct MF_LEAKY_BUCKET_PAIR;
    struct MF_QUATERNION;
    struct MF_SINK_WRITER_STATISTICS;
    struct MF_TRANSCODE_SINK_INFO;
    struct MF_VIDEO_SPHERICAL_VIEWDIRECTION;
    struct MOVEREGION_INFO;
    struct MOVE_RECT;
    struct MT_ARBITRARY_HEADER;
    struct MT_CUSTOM_VIDEO_PRIMARIES;
    struct OPM_ACP_AND_CGMSA_SIGNALING;
    struct OPM_ACTUAL_OUTPUT_FORMAT;
    struct OPM_CONFIGURE_PARAMETERS;
    struct OPM_CONNECTED_HDCP_DEVICE_INFORMATION;
    struct OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;
    struct OPM_ENCRYPTED_INITIALIZATION_PARAMETERS;
    struct OPM_GET_CODEC_INFO_INFORMATION;
    struct OPM_GET_CODEC_INFO_PARAMETERS;
    struct OPM_GET_INFO_PARAMETERS;
    struct OPM_HDCP_KEY_SELECTION_VECTOR;
    struct OPM_OMAC;
    struct OPM_OUTPUT_ID_DATA;
    struct OPM_RANDOM_NUMBER;
    struct OPM_REQUESTED_INFORMATION;
    struct OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS;
    struct OPM_SET_HDCP_SRM_PARAMETERS;
    struct OPM_SET_PROTECTION_LEVEL_PARAMETERS;
    struct OPM_STANDARD_INFORMATION;
    struct ROI_AREA;
    struct SENSORPROFILEID;
    struct STREAM_MEDIUM;
    struct TOC_DESCRIPTOR;
    struct TOC_ENTRY_DESCRIPTOR;
    struct AACMFTEncoder;
    struct ALawCodecWrapper;
    struct CAC3DecMediaObject;
    struct CClusterDetectorDmo;
    struct CColorControlDmo;
    struct CColorConvertDMO;
    struct CColorLegalizerDmo;
    struct CDTVAudDecoderDS;
    struct CDTVVidDecoderDS;
    struct CDVDecoderMediaObject;
    struct CDVEncoderMediaObject;
    struct CDeColorConvMediaObject;
    struct CFrameInterpDMO;
    struct CFrameRateConvertDmo;
    struct CInterlaceMediaObject;
    struct CMP3DecMediaObject;
    struct CMPEG2AudDecoderDS;
    struct CMPEG2AudioEncoderMFT;
    struct CMPEG2EncoderAudioDS;
    struct CMPEG2EncoderDS;
    struct CMPEG2EncoderVideoDS;
    struct CMPEG2VidDecoderDS;
    struct CMPEG2VideoEncoderMFT;
    struct CMPEGAACDecMediaObject;
    struct CMSAACDecMFT;
    struct CMSAC3Enc;
    struct CMSALACDecMFT;
    struct CMSALACEncMFT;
    struct CMSDDPlusDecMFT;
    struct CMSDolbyDigitalEncMFT;
    struct CMSFLACDecMFT;
    struct CMSFLACEncMFT;
    struct CMSH263EncoderMFT;
    struct CMSH264DecoderMFT;
    struct CMSH264EncoderMFT;
    struct CMSH264RemuxMFT;
    struct CMSH265EncoderMFT;
    struct CMSMPEGAudDecMFT;
    struct CMSMPEGDecoderMFT;
    struct CMSOpusDecMFT;
    struct CMSSCDecMediaObject;
    struct CMSSCEncMediaObject;
    struct CMSSCEncMediaObject2;
    struct CMSVPXEncoderMFT;
    struct CMSVideoDSPMFT;
    struct CMpeg2DecMediaObject;
    struct CMpeg43DecMediaObject;
    struct CMpeg4DecMediaObject;
    struct CMpeg4EncMediaObject;
    struct CMpeg4sDecMFT;
    struct CMpeg4sDecMediaObject;
    struct CMpeg4sEncMediaObject;
    struct CNokiaAACCCDecMediaObject;
    struct CNokiaAACDecMediaObject;
    struct CPK_DS_AC3Decoder;
    struct CPK_DS_MPEG2Decoder;
    struct CResamplerMediaObject;
    struct CResizerDMO;
    struct CResizerMediaObject;
    struct CShotDetectorDmo;
    struct CSmpteTransformsDmo;
    struct CThumbnailGeneratorDmo;
    struct CTocGeneratorDmo;
    struct CVodafoneAACCCDecMediaObject;
    struct CVodafoneAACDecMediaObject;
    struct CWMADecMediaObject;
    struct CWMAEncMediaObject;
    struct CWMATransMediaObject;
    struct CWMAudioAEC;
    struct CWMAudioGFXAPO;
    struct CWMAudioLFXAPO;
    struct CWMAudioSpdTxDMO;
    struct CWMSPDecMediaObject;
    struct CWMSPEncMediaObject;
    struct CWMSPEncMediaObject2;
    struct CWMTDecMediaObject;
    struct CWMTEncMediaObject;
    struct CWMV9EncMediaObject;
    struct CWMVDecMediaObject;
    struct CWMVEncMediaObject2;
    struct CWMVXEncMediaObject;
    struct CWVC1DecMediaObject;
    struct CWVC1EncMediaObject;
    struct CZuneAACCCDecMediaObject;
    struct CZuneM4S2DecMediaObject;
    struct IAdvancedMediaCapture;
    struct IAdvancedMediaCaptureInitializationSettings;
    struct IAdvancedMediaCaptureSettings;
    struct IAudioSourceProvider;
    struct IClusterDetector;
    struct ICodecAPI;
    struct ID3D11AuthenticatedChannel;
    struct ID3D11CryptoSession;
    struct ID3D11VideoContext;
    struct ID3D11VideoContext1;
    struct ID3D11VideoContext2;
    struct ID3D11VideoDecoder;
    struct ID3D11VideoDecoderOutputView;
    struct ID3D11VideoDevice;
    struct ID3D11VideoDevice1;
    struct ID3D11VideoProcessor;
    struct ID3D11VideoProcessorEnumerator;
    struct ID3D11VideoProcessorEnumerator1;
    struct ID3D11VideoProcessorInputView;
    struct ID3D11VideoProcessorOutputView;
    struct ID3D12VideoDecodeCommandList;
    struct ID3D12VideoDecodeCommandList1;
    struct ID3D12VideoDecodeCommandList2;
    struct ID3D12VideoDecoder;
    struct ID3D12VideoDecoder1;
    struct ID3D12VideoDecoderHeap;
    struct ID3D12VideoDecoderHeap1;
    struct ID3D12VideoDevice;
    struct ID3D12VideoDevice1;
    struct ID3D12VideoDevice2;
    struct ID3D12VideoEncodeCommandList;
    struct ID3D12VideoEncodeCommandList1;
    struct ID3D12VideoExtensionCommand;
    struct ID3D12VideoMotionEstimator;
    struct ID3D12VideoMotionVectorHeap;
    struct ID3D12VideoProcessCommandList;
    struct ID3D12VideoProcessCommandList1;
    struct ID3D12VideoProcessCommandList2;
    struct ID3D12VideoProcessor;
    struct ID3D12VideoProcessor1;
    struct IDXVAHD_Device;
    struct IDXVAHD_VideoProcessor;
    struct IDirect3D9ExOverlayExtension;
    struct IDirect3DAuthenticatedChannel9;
    struct IDirect3DCryptoSession9;
    struct IDirect3DDevice9Video;
    struct IDirect3DDeviceManager9;
    struct IDirectXVideoAccelerationService;
    struct IDirectXVideoDecoder;
    struct IDirectXVideoDecoderService;
    struct IDirectXVideoMemoryConfiguration;
    struct IDirectXVideoProcessor;
    struct IDirectXVideoProcessorService;
    struct IEVRFilterConfig;
    struct IEVRFilterConfigEx;
    struct IEVRTrustedVideoPlugin;
    struct IEVRVideoStreamControl;
    struct IFileClient;
    struct IFileIo;
    struct IMF2DBuffer;
    struct IMF2DBuffer2;
    struct IMFASFContentInfo;
    struct IMFASFIndexer;
    struct IMFASFMultiplexer;
    struct IMFASFMutualExclusion;
    struct IMFASFProfile;
    struct IMFASFSplitter;
    struct IMFASFStreamConfig;
    struct IMFASFStreamPrioritization;
    struct IMFASFStreamSelector;
    struct IMFActivate;
    struct IMFAsyncCallback;
    struct IMFAsyncCallbackLogging;
    struct IMFAsyncResult;
    struct IMFAttributes;
    struct IMFAudioMediaType;
    struct IMFAudioPolicy;
    struct IMFAudioStreamVolume;
    struct IMFBufferListNotify;
    struct IMFByteStream;
    struct IMFByteStreamBuffering;
    struct IMFByteStreamCacheControl;
    struct IMFByteStreamCacheControl2;
    struct IMFByteStreamHandler;
    struct IMFByteStreamProxyClassFactory;
    struct IMFByteStreamTimeSeek;
    struct IMFCaptureEngine;
    struct IMFCaptureEngineClassFactory;
    struct IMFCaptureEngineOnEventCallback;
    struct IMFCaptureEngineOnSampleCallback;
    struct IMFCaptureEngineOnSampleCallback2;
    struct IMFCapturePhotoConfirmation;
    struct IMFCapturePhotoSink;
    struct IMFCapturePreviewSink;
    struct IMFCaptureRecordSink;
    struct IMFCaptureSink;
    struct IMFCaptureSink2;
    struct IMFCaptureSource;
    struct IMFCdmSuspendNotify;
    struct IMFClock;
    struct IMFClockConsumer;
    struct IMFClockStateSink;
    struct IMFCollection;
    struct IMFContentDecryptionModule;
    struct IMFContentDecryptionModuleAccess;
    struct IMFContentDecryptionModuleFactory;
    struct IMFContentDecryptionModuleSession;
    struct IMFContentDecryptionModuleSessionCallbacks;
    struct IMFContentDecryptorContext;
    struct IMFContentEnabler;
    struct IMFContentProtectionDevice;
    struct IMFContentProtectionManager;
    struct IMFDLNASinkInit;
    struct IMFDRMNetHelper;
    struct IMFDXGIBuffer;
    struct IMFDXGIDeviceManager;
    struct IMFDXGIDeviceManagerSource;
    struct IMFDesiredSample;
    struct IMFExtendedCameraControl;
    struct IMFExtendedCameraController;
    struct IMFExtendedCameraIntrinsicModel;
    struct IMFExtendedCameraIntrinsics;
    struct IMFExtendedCameraIntrinsicsDistortionModel6KT;
    struct IMFExtendedCameraIntrinsicsDistortionModelArcTan;
    struct IMFExtendedDRMTypeSupport;
    struct IMFFieldOfUseMFTUnlock;
    struct IMFFinalizableMediaSink;
    struct IMFGetService;
    struct IMFHDCPStatus;
    struct IMFHttpDownloadRequest;
    struct IMFHttpDownloadSession;
    struct IMFHttpDownloadSessionProvider;
    struct IMFImageSharingEngine;
    struct IMFImageSharingEngineClassFactory;
    struct IMFInputTrustAuthority;
    struct IMFLocalMFTRegistration;
    struct IMFMediaBuffer;
    struct IMFMediaEngine;
    struct IMFMediaEngineAudioEndpointId;
    struct IMFMediaEngineClassFactory;
    struct IMFMediaEngineClassFactory2;
    struct IMFMediaEngineClassFactory3;
    struct IMFMediaEngineClassFactory4;
    struct IMFMediaEngineClassFactoryEx;
    struct IMFMediaEngineEME;
    struct IMFMediaEngineEMENotify;
    struct IMFMediaEngineEx;
    struct IMFMediaEngineExtension;
    struct IMFMediaEngineNeedKeyNotify;
    struct IMFMediaEngineNotify;
    struct IMFMediaEngineOPMInfo;
    struct IMFMediaEngineProtectedContent;
    struct IMFMediaEngineSrcElements;
    struct IMFMediaEngineSrcElementsEx;
    struct IMFMediaEngineSupportsSourceTransfer;
    struct IMFMediaEngineTransferSource;
    struct IMFMediaEngineWebSupport;
    struct IMFMediaError;
    struct IMFMediaEvent;
    struct IMFMediaEventGenerator;
    struct IMFMediaEventQueue;
    struct IMFMediaKeySession;
    struct IMFMediaKeySession2;
    struct IMFMediaKeySessionNotify;
    struct IMFMediaKeySessionNotify2;
    struct IMFMediaKeySystemAccess;
    struct IMFMediaKeys;
    struct IMFMediaKeys2;
    struct IMFMediaSession;
    struct IMFMediaSharingEngine;
    struct IMFMediaSharingEngineClassFactory;
    struct IMFMediaSink;
    struct IMFMediaSinkPreroll;
    struct IMFMediaSource;
    struct IMFMediaSource2;
    struct IMFMediaSourceEx;
    struct IMFMediaSourceExtension;
    struct IMFMediaSourceExtensionLiveSeekableRange;
    struct IMFMediaSourceExtensionNotify;
    struct IMFMediaSourcePresentationProvider;
    struct IMFMediaSourceTopologyProvider;
    struct IMFMediaStream;
    struct IMFMediaStream2;
    struct IMFMediaStreamSourceSampleRequest;
    struct IMFMediaTimeRange;
    struct IMFMediaType;
    struct IMFMediaTypeHandler;
    struct IMFMetadata;
    struct IMFMetadataProvider;
    struct IMFMuxStreamAttributesManager;
    struct IMFMuxStreamMediaTypeManager;
    struct IMFMuxStreamSampleManager;
    struct IMFNetCredential;
    struct IMFNetCredentialCache;
    struct IMFNetCredentialManager;
    struct IMFNetCrossOriginSupport;
    struct IMFNetProxyLocator;
    struct IMFNetProxyLocatorFactory;
    struct IMFNetResourceFilter;
    struct IMFNetSchemeHandlerConfig;
    struct IMFObjectReferenceStream;
    struct IMFOutputPolicy;
    struct IMFOutputSchema;
    struct IMFOutputTrustAuthority;
    struct IMFPMPClient;
    struct IMFPMPClientApp;
    struct IMFPMPHost;
    struct IMFPMPHostApp;
    struct IMFPMPServer;
    struct IMFPMediaItem;
    struct IMFPMediaPlayer;
    struct IMFPMediaPlayerCallback;
    struct IMFPluginControl;
    struct IMFPluginControl2;
    struct IMFPresentationClock;
    struct IMFPresentationDescriptor;
    struct IMFPresentationTimeSource;
    struct IMFProtectedEnvironmentAccess;
    struct IMFQualityAdvise;
    struct IMFQualityAdvise2;
    struct IMFQualityAdviseLimits;
    struct IMFQualityManager;
    struct IMFRateControl;
    struct IMFRateSupport;
    struct IMFReadWriteClassFactory;
    struct IMFRealTimeClient;
    struct IMFRealTimeClientEx;
    struct IMFRelativePanelReport;
    struct IMFRelativePanelWatcher;
    struct IMFRemoteAsyncCallback;
    struct IMFRemoteDesktopPlugin;
    struct IMFRemoteProxy;
    struct IMFSAMIStyle;
    struct IMFSSLCertificateManager;
    struct IMFSample;
    struct IMFSampleAllocatorControl;
    struct IMFSampleGrabberSinkCallback;
    struct IMFSampleGrabberSinkCallback2;
    struct IMFSampleOutputStream;
    struct IMFSampleProtection;
    struct IMFSaveJob;
    struct IMFSchemeHandler;
    struct IMFSecureBuffer;
    struct IMFSecureChannel;
    struct IMFSeekInfo;
    struct IMFSensorActivitiesReport;
    struct IMFSensorActivitiesReportCallback;
    struct IMFSensorActivityMonitor;
    struct IMFSensorActivityReport;
    struct IMFSensorDevice;
    struct IMFSensorGroup;
    struct IMFSensorProcessActivity;
    struct IMFSensorProfile;
    struct IMFSensorProfileCollection;
    struct IMFSensorStream;
    struct IMFSensorTransformFactory;
    struct IMFSequencerSource;
    struct IMFSharingEngineClassFactory;
    struct IMFShutdown;
    struct IMFSignedLibrary;
    struct IMFSimpleAudioVolume;
    struct IMFSinkWriter;
    struct IMFSinkWriterCallback;
    struct IMFSinkWriterCallback2;
    struct IMFSinkWriterEncoderConfig;
    struct IMFSinkWriterEx;
    struct IMFSourceBuffer;
    struct IMFSourceBufferAppendMode;
    struct IMFSourceBufferList;
    struct IMFSourceBufferNotify;
    struct IMFSourceOpenMonitor;
    struct IMFSourceReader;
    struct IMFSourceReaderCallback;
    struct IMFSourceReaderCallback2;
    struct IMFSourceReaderEx;
    struct IMFSourceResolver;
    struct IMFSpatialAudioObjectBuffer;
    struct IMFSpatialAudioSample;
    struct IMFStreamDescriptor;
    struct IMFStreamSink;
    struct IMFStreamingSinkConfig;
    struct IMFSystemId;
    struct IMFTimecodeTranslate;
    struct IMFTimedText;
    struct IMFTimedTextBinary;
    struct IMFTimedTextCue;
    struct IMFTimedTextCueList;
    struct IMFTimedTextFormattedText;
    struct IMFTimedTextNotify;
    struct IMFTimedTextRegion;
    struct IMFTimedTextStyle;
    struct IMFTimedTextTrack;
    struct IMFTimedTextTrackList;
    struct IMFTimer;
    struct IMFTopoLoader;
    struct IMFTopology;
    struct IMFTopologyNode;
    struct IMFTopologyNodeAttributeEditor;
    struct IMFTopologyServiceLookup;
    struct IMFTopologyServiceLookupClient;
    struct IMFTrackedSample;
    struct IMFTranscodeProfile;
    struct IMFTranscodeSinkInfoProvider;
    struct IMFTransform;
    struct IMFTrustedInput;
    struct IMFTrustedOutput;
    struct IMFVideoCaptureSampleAllocator;
    struct IMFVideoDeviceID;
    struct IMFVideoDisplayControl;
    struct IMFVideoMediaType;
    struct IMFVideoMixerBitmap;
    struct IMFVideoMixerControl;
    struct IMFVideoMixerControl2;
    struct IMFVideoPositionMapper;
    struct IMFVideoPresenter;
    struct IMFVideoProcessor;
    struct IMFVideoProcessorControl;
    struct IMFVideoProcessorControl2;
    struct IMFVideoProcessorControl3;
    struct IMFVideoRenderer;
    struct IMFVideoRendererEffectControl;
    struct IMFVideoSampleAllocator;
    struct IMFVideoSampleAllocatorCallback;
    struct IMFVideoSampleAllocatorEx;
    struct IMFVideoSampleAllocatorNotify;
    struct IMFVideoSampleAllocatorNotifyEx;
    struct IMFWorkQueueServices;
    struct IMFWorkQueueServicesEx;
    struct IOPMVideoOutput;
    struct IPlayToControl;
    struct IPlayToControlWithCapabilities;
    struct IPlayToSourceClassFactory;
    struct IToc;
    struct ITocCollection;
    struct ITocEntry;
    struct ITocEntryList;
    struct ITocParser;
    struct IValidateBinding;
    struct IWMCodecLeakyBucket;
    struct IWMCodecOutputTimestamp;
    struct IWMCodecPrivateData;
    struct IWMCodecProps;
    struct IWMCodecStrings;
    struct IWMColorConvProps;
    struct IWMColorLegalizerProps;
    struct IWMFrameInterpProps;
    struct IWMInterlaceProps;
    struct IWMResamplerProps;
    struct IWMResizerProps;
    struct IWMSampleExtensionSupport;
    struct IWMValidate;
    struct IWMVideoDecoderHurryup;
    struct IWMVideoDecoderReconBuffer;
    struct IWMVideoForceKeyFrame;
    struct KSPROPSETID_OPMVideoOutput;
    struct MFAMRNBByteStreamHandler;
    struct MFAMRNBSinkClassFactory;
    struct MFASYNCRESULT;
    struct MFFLACBytestreamHandler;
    struct MFFLACSinkClassFactory;
    struct MP3ACMCodecWrapper;
    struct MSAMRNBDecoder;
    struct MSAMRNBEncoder;
    struct MULawCodecWrapper;
    struct VorbisDecoderMFT;
#pragma endregion forward_declarations

#pragma region delegates
    using PDXVAHDSW_CreateDevice = int32_t __stdcall(Windows::Win32::Direct2D::IDirect3DDevice9Ex*, Windows::Win32::SystemServices::HANDLE*);
    using PDXVAHDSW_ProposeVideoPrivateFormat = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::Direct3D9::D3DFORMAT*);
    using PDXVAHDSW_GetVideoProcessorDeviceCaps = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_CONTENT_DESC*, Windows::Win32::MediaFoundation::DXVAHD_DEVICE_USAGE, Windows::Win32::MediaFoundation::DXVAHD_VPDEVCAPS*);
    using PDXVAHDSW_GetVideoProcessorOutputFormats = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_CONTENT_DESC*, Windows::Win32::MediaFoundation::DXVAHD_DEVICE_USAGE, uint32_t, Windows::Win32::Direct3D9::D3DFORMAT*);
    using PDXVAHDSW_GetVideoProcessorInputFormats = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_CONTENT_DESC*, Windows::Win32::MediaFoundation::DXVAHD_DEVICE_USAGE, uint32_t, Windows::Win32::Direct3D9::D3DFORMAT*);
    using PDXVAHDSW_GetVideoProcessorCaps = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_CONTENT_DESC*, Windows::Win32::MediaFoundation::DXVAHD_DEVICE_USAGE, uint32_t, Windows::Win32::MediaFoundation::DXVAHD_VPCAPS*);
    using PDXVAHDSW_GetVideoProcessorCustomRates = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, ::win32::guid*, uint32_t, Windows::Win32::MediaFoundation::DXVAHD_CUSTOM_RATE_DATA*);
    using PDXVAHDSW_GetVideoProcessorFilterRange = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_FILTER, Windows::Win32::MediaFoundation::DXVAHD_FILTER_RANGE_DATA*);
    using PDXVAHDSW_DestroyDevice = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE);
    using PDXVAHDSW_CreateVideoProcessor = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, ::win32::guid*, Windows::Win32::SystemServices::HANDLE*);
    using PDXVAHDSW_SetVideoProcessBltState = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_BLT_STATE, uint32_t, void*);
    using PDXVAHDSW_GetVideoProcessBltStatePrivate = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::MediaFoundation::DXVAHD_BLT_STATE_PRIVATE_DATA*);
    using PDXVAHDSW_SetVideoProcessStreamState = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, uint32_t, Windows::Win32::MediaFoundation::DXVAHD_STREAM_STATE, uint32_t, void*);
    using PDXVAHDSW_GetVideoProcessStreamStatePrivate = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, uint32_t, Windows::Win32::MediaFoundation::DXVAHD_STREAM_STATE_PRIVATE_DATA*);
    using PDXVAHDSW_VideoProcessBltHD = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE, Windows::Win32::Direct2D::IDirect3DSurface9*, uint32_t, uint32_t, Windows::Win32::MediaFoundation::DXVAHD_STREAM_DATA*);
    using PDXVAHDSW_DestroyVideoProcessor = int32_t __stdcall(Windows::Win32::SystemServices::HANDLE);
    using PDXVAHDSW_Plugin = int32_t __stdcall(uint32_t, void*);
    using PDXVAHD_CreateDevice = int32_t __stdcall(Windows::Win32::Direct2D::IDirect3DDevice9Ex*, Windows::Win32::MediaFoundation::DXVAHD_CONTENT_DESC*, Windows::Win32::MediaFoundation::DXVAHD_DEVICE_USAGE, Windows::Win32::MediaFoundation::PDXVAHDSW_Plugin*, Windows::Win32::MediaFoundation::IDXVAHD_Device**);
    using MFPERIODICCALLBACK = void __stdcall(Windows::Win32::Com::IUnknown*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::AACMFTEncoder>{ 0x93AF0C51,0x2275,0x45D2,{ 0xA3,0x5B,0xF2,0xBA,0x21,0xCA,0xED,0x00 } }; // 93AF0C51-2275-45D2-A35B-F2BA21CAED00
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ALawCodecWrapper>{ 0x36CB6E0C,0x78C1,0x42B2,{ 0x99,0x43,0x84,0x62,0x62,0xF3,0x17,0x86 } }; // 36CB6E0C-78C1-42B2-9943-846262F31786
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CAC3DecMediaObject>{ 0x03D7C802,0xECFA,0x47D9,{ 0xB2,0x68,0x5F,0xB3,0xE3,0x10,0xDE,0xE4 } }; // 03D7C802-ECFA-47D9-B268-5FB3E310DEE4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CClusterDetectorDmo>{ 0x36E820C4,0x165A,0x4521,{ 0x86,0x3C,0x61,0x9E,0x11,0x60,0xD4,0xD4 } }; // 36E820C4-165A-4521-863C-619E1160D4D4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CColorControlDmo>{ 0x798059F0,0x89CA,0x4160,{ 0xB3,0x25,0xAE,0xB4,0x8E,0xFE,0x4F,0x9A } }; // 798059F0-89CA-4160-B325-AEB48EFE4F9A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CColorConvertDMO>{ 0x98230571,0x0087,0x4204,{ 0xB0,0x20,0x32,0x82,0x53,0x8E,0x57,0xD3 } }; // 98230571-0087-4204-B020-3282538E57D3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CColorLegalizerDmo>{ 0xFDFAA753,0xE48E,0x4E33,{ 0x9C,0x74,0x98,0xA2,0x7F,0xC6,0x72,0x6A } }; // FDFAA753-E48E-4E33-9C74-98A27FC6726A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CDTVAudDecoderDS>{ 0x8E269032,0xFE03,0x4753,{ 0x9B,0x17,0x18,0x25,0x3C,0x21,0x72,0x2E } }; // 8E269032-FE03-4753-9B17-18253C21722E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CDTVVidDecoderDS>{ 0x64777DC8,0x4E24,0x4BEB,{ 0x9D,0x19,0x60,0xA3,0x5B,0xE1,0xDA,0xAF } }; // 64777DC8-4E24-4BEB-9D19-60A35BE1DAAF
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CDVDecoderMediaObject>{ 0xE54709C5,0x1E17,0x4C8D,{ 0x94,0xE7,0x47,0x89,0x40,0x43,0x35,0x84 } }; // E54709C5-1E17-4C8D-94E7-478940433584
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CDVEncoderMediaObject>{ 0xC82AE729,0xC327,0x4CCE,{ 0x91,0x4D,0x81,0x71,0xFE,0xFE,0xBE,0xFB } }; // C82AE729-C327-4CCE-914D-8171FEFEBEFB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CDeColorConvMediaObject>{ 0x49034C05,0xF43C,0x400F,{ 0x84,0xC1,0x90,0xA6,0x83,0x19,0x5A,0x3A } }; // 49034C05-F43C-400F-84C1-90A683195A3A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CFrameInterpDMO>{ 0x0A7CFE1B,0x6AB5,0x4334,{ 0x9E,0xD8,0x3F,0x97,0xCB,0x37,0xDA,0xA1 } }; // 0A7CFE1B-6AB5-4334-9ED8-3F97CB37DAA1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CFrameRateConvertDmo>{ 0x01F36CE2,0x0907,0x4D8B,{ 0x97,0x9D,0xF1,0x51,0xBE,0x91,0xC8,0x83 } }; // 01F36CE2-0907-4D8B-979D-F151BE91C883
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CInterlaceMediaObject>{ 0xB5A89C80,0x4901,0x407B,{ 0x9A,0xBC,0x90,0xD9,0xA6,0x44,0xBB,0x46 } }; // B5A89C80-4901-407B-9ABC-90D9A644BB46
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMP3DecMediaObject>{ 0xBBEEA841,0x0A63,0x4F52,{ 0xA7,0xAB,0xA9,0xB3,0xA8,0x4E,0xD3,0x8A } }; // BBEEA841-0A63-4F52-A7AB-A9B3A84ED38A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2AudDecoderDS>{ 0xE1F1A0B8,0xBEEE,0x490D,{ 0xBA,0x7C,0x06,0x6C,0x40,0xB5,0xE2,0xB9 } }; // E1F1A0B8-BEEE-490D-BA7C-066C40B5E2B9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2AudioEncoderMFT>{ 0x46A4DD5C,0x73F8,0x4304,{ 0x94,0xDF,0x30,0x8F,0x76,0x09,0x74,0xF4 } }; // 46A4DD5C-73F8-4304-94DF-308F760974F4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2EncoderAudioDS>{ 0xACD453BC,0xC58A,0x44D1,{ 0xBB,0xF5,0xBF,0xB3,0x25,0xBE,0x2D,0x78 } }; // ACD453BC-C58A-44D1-BBF5-BFB325BE2D78
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2EncoderDS>{ 0x5F5AFF4A,0x2F7F,0x4279,{ 0x88,0xC2,0xCD,0x88,0xEB,0x39,0xD1,0x44 } }; // 5F5AFF4A-2F7F-4279-88C2-CD88EB39D144
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2EncoderVideoDS>{ 0x42150CD9,0xCA9A,0x4EA5,{ 0x99,0x39,0x30,0xEE,0x03,0x7F,0x6E,0x74 } }; // 42150CD9-CA9A-4EA5-9939-30EE037F6E74
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2VidDecoderDS>{ 0x212690FB,0x83E5,0x4526,{ 0x8F,0xD7,0x74,0x47,0x8B,0x79,0x39,0xCD } }; // 212690FB-83E5-4526-8FD7-74478B7939CD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEG2VideoEncoderMFT>{ 0xE6335F02,0x80B7,0x4DC4,{ 0xAD,0xFA,0xDF,0xE7,0x21,0x0D,0x20,0xD5 } }; // E6335F02-80B7-4DC4-ADFA-DFE7210D20D5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMPEGAACDecMediaObject>{ 0x8DDE1772,0xEDAD,0x41C3,{ 0xB4,0xBE,0x1F,0x30,0xFB,0x4E,0xE0,0xD6 } }; // 8DDE1772-EDAD-41C3-B4BE-1F30FB4EE0D6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSAACDecMFT>{ 0x32D186A7,0x218F,0x4C75,{ 0x88,0x76,0xDD,0x77,0x27,0x3A,0x89,0x99 } }; // 32D186A7-218F-4C75-8876-DD77273A8999
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSAC3Enc>{ 0xC6B400E2,0x20A7,0x4E58,{ 0xA2,0xFE,0x24,0x61,0x96,0x82,0xCE,0x6C } }; // C6B400E2-20A7-4E58-A2FE-24619682CE6C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSALACDecMFT>{ 0xC0CD7D12,0x31FC,0x4BBC,{ 0xB3,0x63,0x73,0x22,0xEE,0x3E,0x18,0x79 } }; // C0CD7D12-31FC-4BBC-B363-7322EE3E1879
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSALACEncMFT>{ 0x9AB6A28C,0x748E,0x4B6A,{ 0xBF,0xFF,0xCC,0x44,0x3B,0x8E,0x8F,0xB4 } }; // 9AB6A28C-748E-4B6A-BFFF-CC443B8E8FB4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSDDPlusDecMFT>{ 0x177C0AFE,0x900B,0x48D4,{ 0x9E,0x4C,0x57,0xAD,0xD2,0x50,0xB3,0xD4 } }; // 177C0AFE-900B-48D4-9E4C-57ADD250B3D4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSDolbyDigitalEncMFT>{ 0xAC3315C9,0xF481,0x45D7,{ 0x82,0x6C,0x0B,0x40,0x6C,0x1F,0x64,0xB8 } }; // AC3315C9-F481-45D7-826C-0B406C1F64B8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSFLACDecMFT>{ 0x6B0B3E6B,0xA2C5,0x4514,{ 0x80,0x55,0xAF,0xE8,0xA9,0x52,0x42,0xD9 } }; // 6B0B3E6B-A2C5-4514-8055-AFE8A95242D9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSFLACEncMFT>{ 0x128509E9,0xC44E,0x45DC,{ 0x95,0xE9,0xC2,0x55,0xB8,0xF4,0x66,0xA6 } }; // 128509E9-C44E-45DC-95E9-C255B8F466A6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSH263EncoderMFT>{ 0xBC47FCFE,0x98A0,0x4F27,{ 0xBB,0x07,0x69,0x8A,0xF2,0x4F,0x2B,0x38 } }; // BC47FCFE-98A0-4F27-BB07-698AF24F2B38
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSH264DecoderMFT>{ 0x62CE7E72,0x4C71,0x4D20,{ 0xB1,0x5D,0x45,0x28,0x31,0xA8,0x7D,0x9D } }; // 62CE7E72-4C71-4D20-B15D-452831A87D9D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSH264EncoderMFT>{ 0x6CA50344,0x051A,0x4DED,{ 0x97,0x79,0xA4,0x33,0x05,0x16,0x5E,0x35 } }; // 6CA50344-051A-4DED-9779-A43305165E35
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSH264RemuxMFT>{ 0x05A47EBB,0x8BF0,0x4CBF,{ 0xAD,0x2F,0x3B,0x71,0xD7,0x58,0x66,0xF5 } }; // 05A47EBB-8BF0-4CBF-AD2F-3B71D75866F5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSH265EncoderMFT>{ 0xF2F84074,0x8BCA,0x40BD,{ 0x91,0x59,0xE8,0x80,0xF6,0x73,0xDD,0x3B } }; // F2F84074-8BCA-40BD-9159-E880F673DD3B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSMPEGAudDecMFT>{ 0x70707B39,0xB2CA,0x4015,{ 0xAB,0xEA,0xF8,0x44,0x7D,0x22,0xD8,0x8B } }; // 70707B39-B2CA-4015-ABEA-F8447D22D88B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSMPEGDecoderMFT>{ 0x2D709E52,0x123F,0x49B5,{ 0x9C,0xBC,0x9A,0xF5,0xCD,0xE2,0x8F,0xB9 } }; // 2D709E52-123F-49B5-9CBC-9AF5CDE28FB9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSOpusDecMFT>{ 0x63E17C10,0x2D43,0x4C42,{ 0x8F,0xE3,0x8D,0x8B,0x63,0xE4,0x6A,0x6A } }; // 63E17C10-2D43-4C42-8FE3-8D8B63E46A6A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSSCDecMediaObject>{ 0x7BAFB3B1,0xD8F4,0x4279,{ 0x92,0x53,0x27,0xDA,0x42,0x31,0x08,0xDE } }; // 7BAFB3B1-D8F4-4279-9253-27DA423108DE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSSCEncMediaObject>{ 0x8CB9CC06,0xD139,0x4AE6,{ 0x8B,0xB4,0x41,0xE6,0x12,0xE1,0x41,0xD5 } }; // 8CB9CC06-D139-4AE6-8BB4-41E612E141D5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSSCEncMediaObject2>{ 0xF7FFE0A0,0xA4F5,0x44B5,{ 0x94,0x9E,0x15,0xED,0x2B,0xC6,0x6F,0x9D } }; // F7FFE0A0-A4F5-44B5-949E-15ED2BC66F9D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSVPXEncoderMFT>{ 0xAEB6C755,0x2546,0x4881,{ 0x82,0xCC,0xE1,0x5A,0xE5,0xEB,0xFF,0x3D } }; // AEB6C755-2546-4881-82CC-E15AE5EBFF3D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMSVideoDSPMFT>{ 0x51571744,0x7FE4,0x4FF2,{ 0xA4,0x98,0x2D,0xC3,0x4F,0xF7,0x4F,0x1B } }; // 51571744-7FE4-4FF2-A498-2DC34FF74F1B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg2DecMediaObject>{ 0x863D66CD,0xCDCE,0x4617,{ 0xB4,0x7F,0xC8,0x92,0x9C,0xFC,0x28,0xA6 } }; // 863D66CD-CDCE-4617-B47F-C8929CFC28A6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg43DecMediaObject>{ 0xCBA9E78B,0x49A3,0x49EA,{ 0x93,0xD4,0x6B,0xCB,0xA8,0xC4,0xDE,0x07 } }; // CBA9E78B-49A3-49EA-93D4-6BCBA8C4DE07
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg4DecMediaObject>{ 0xF371728A,0x6052,0x4D47,{ 0x82,0x7C,0xD0,0x39,0x33,0x5D,0xFE,0x0A } }; // F371728A-6052-4D47-827C-D039335DFE0A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg4EncMediaObject>{ 0x24F258D8,0xC651,0x4042,{ 0x93,0xE4,0xCA,0x65,0x4A,0xBB,0x68,0x2C } }; // 24F258D8-C651-4042-93E4-CA654ABB682C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg4sDecMFT>{ 0x5686A0D9,0xFE39,0x409F,{ 0x9D,0xFF,0x3F,0xDB,0xC8,0x49,0xF9,0xF5 } }; // 5686A0D9-FE39-409F-9DFF-3FDBC849F9F5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg4sDecMediaObject>{ 0x2A11BAE2,0xFE6E,0x4249,{ 0x86,0x4B,0x9E,0x9E,0xD6,0xE8,0xDB,0xC2 } }; // 2A11BAE2-FE6E-4249-864B-9E9ED6E8DBC2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CMpeg4sEncMediaObject>{ 0x6EC5A7BE,0xD81E,0x4F9E,{ 0xAD,0xA3,0xCD,0x1B,0xF2,0x62,0xB6,0xD8 } }; // 6EC5A7BE-D81E-4F9E-ADA3-CD1BF262B6D8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CNokiaAACCCDecMediaObject>{ 0xEABF7A6F,0xCCBA,0x4D60,{ 0x86,0x20,0xB1,0x52,0xCC,0x97,0x72,0x63 } }; // EABF7A6F-CCBA-4D60-8620-B152CC977263
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CNokiaAACDecMediaObject>{ 0x3CB2BDE4,0x4E29,0x4C44,{ 0xA7,0x3E,0x2D,0x7C,0x2C,0x46,0xD6,0xEC } }; // 3CB2BDE4-4E29-4C44-A73E-2D7C2C46D6EC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CPK_DS_AC3Decoder>{ 0x6C9C69D6,0x0FFC,0x4481,{ 0xAF,0xDB,0xCD,0xF1,0xC7,0x9C,0x6F,0x3E } }; // 6C9C69D6-0FFC-4481-AFDB-CDF1C79C6F3E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CPK_DS_MPEG2Decoder>{ 0x9910C5CD,0x95C9,0x4E06,{ 0x86,0x5A,0xEF,0xA1,0xC8,0x01,0x6B,0xF4 } }; // 9910C5CD-95C9-4E06-865A-EFA1C8016BF4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CResamplerMediaObject>{ 0xF447B69E,0x1884,0x4A7E,{ 0x80,0x55,0x34,0x6F,0x74,0xD6,0xED,0xB3 } }; // F447B69E-1884-4A7E-8055-346F74D6EDB3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CResizerDMO>{ 0x1EA1EA14,0x48F4,0x4054,{ 0xAD,0x1A,0xE8,0xAE,0xE1,0x0A,0xC8,0x05 } }; // 1EA1EA14-48F4-4054-AD1A-E8AEE10AC805
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CResizerMediaObject>{ 0xD3EC8B8B,0x7728,0x4FD8,{ 0x9F,0xE0,0x7B,0x67,0xD1,0x9F,0x73,0xA3 } }; // D3EC8B8B-7728-4FD8-9FE0-7B67D19F73A3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CShotDetectorDmo>{ 0x56AEFACD,0x110C,0x4397,{ 0x92,0x92,0xB0,0xA0,0xC6,0x1B,0x67,0x50 } }; // 56AEFACD-110C-4397-9292-B0A0C61B6750
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CSmpteTransformsDmo>{ 0xBDE6388B,0xDA25,0x485D,{ 0xBA,0x7F,0xFA,0xBC,0x28,0xB2,0x03,0x18 } }; // BDE6388B-DA25-485D-BA7F-FABC28B20318
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CThumbnailGeneratorDmo>{ 0x559C6BAD,0x1EA8,0x4963,{ 0xA0,0x87,0x8A,0x68,0x10,0xF9,0x21,0x8B } }; // 559C6BAD-1EA8-4963-A087-8A6810F9218B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CTocGeneratorDmo>{ 0x4DDA1941,0x77A0,0x4FB1,{ 0xA5,0x18,0xE2,0x18,0x50,0x41,0xD7,0x0C } }; // 4DDA1941-77A0-4FB1-A518-E2185041D70C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CVodafoneAACCCDecMediaObject>{ 0x7E76BF7F,0xC993,0x4E26,{ 0x8F,0xAB,0x47,0x0A,0x70,0xC0,0xD5,0x9C } }; // 7E76BF7F-C993-4E26-8FAB-470A70C0D59C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CVodafoneAACDecMediaObject>{ 0x7F36F942,0xDCF3,0x4D82,{ 0x92,0x89,0x5B,0x18,0x20,0x27,0x8F,0x7C } }; // 7F36F942-DCF3-4D82-9289-5B1820278F7C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMADecMediaObject>{ 0x2EEB4ADF,0x4578,0x4D10,{ 0xBC,0xA7,0xBB,0x95,0x5F,0x56,0x32,0x0A } }; // 2EEB4ADF-4578-4D10-BCA7-BB955F56320A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMAEncMediaObject>{ 0x70F598E9,0xF4AB,0x495A,{ 0x99,0xE2,0xA7,0xC4,0xD3,0xD8,0x9A,0xBF } }; // 70F598E9-F4AB-495A-99E2-A7C4D3D89ABF
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMATransMediaObject>{ 0xEDCAD9CB,0x3127,0x40DF,{ 0xB5,0x27,0x01,0x52,0xCC,0xB3,0xF6,0xF5 } }; // EDCAD9CB-3127-40DF-B527-0152CCB3F6F5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMAudioAEC>{ 0x745057C7,0xF353,0x4F2D,{ 0xA7,0xEE,0x58,0x43,0x44,0x77,0x73,0x0E } }; // 745057C7-F353-4F2D-A7EE-58434477730E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMAudioGFXAPO>{ 0x637C490D,0xEEE3,0x4C0A,{ 0x97,0x3F,0x37,0x19,0x58,0x80,0x2D,0xA2 } }; // 637C490D-EEE3-4C0A-973F-371958802DA2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMAudioLFXAPO>{ 0x62DC1A93,0xAE24,0x464C,{ 0xA4,0x3E,0x45,0x2F,0x82,0x4C,0x42,0x50 } }; // 62DC1A93-AE24-464C-A43E-452F824C4250
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMAudioSpdTxDMO>{ 0x5210F8E4,0xB0BB,0x47C3,{ 0xA8,0xD9,0x7B,0x22,0x82,0xCC,0x79,0xED } }; // 5210F8E4-B0BB-47C3-A8D9-7B2282CC79ED
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMSPDecMediaObject>{ 0x874131CB,0x4ECC,0x443B,{ 0x89,0x48,0x74,0x6B,0x89,0x59,0x5D,0x20 } }; // 874131CB-4ECC-443B-8948-746B89595D20
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMSPEncMediaObject>{ 0x67841B03,0xC689,0x4188,{ 0xAD,0x3F,0x4C,0x9E,0xBE,0xEC,0x71,0x0B } }; // 67841B03-C689-4188-AD3F-4C9EBEEC710B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMSPEncMediaObject2>{ 0x1F1F4E1A,0x2252,0x4063,{ 0x84,0xBB,0xEE,0xE7,0x5F,0x88,0x56,0xD5 } }; // 1F1F4E1A-2252-4063-84BB-EEE75F8856D5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMTDecMediaObject>{ 0xF9DBC64E,0x2DD0,0x45DD,{ 0x9B,0x52,0x66,0x64,0x2E,0xF9,0x44,0x31 } }; // F9DBC64E-2DD0-45DD-9B52-66642EF94431
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMTEncMediaObject>{ 0x60B67652,0xE46B,0x4E44,{ 0x86,0x09,0xF7,0x4B,0xFF,0xDC,0x08,0x3C } }; // 60B67652-E46B-4E44-8609-F74BFFDC083C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMV9EncMediaObject>{ 0xD23B90D0,0x144F,0x46BD,{ 0x84,0x1D,0x59,0xE4,0xEB,0x19,0xDC,0x59 } }; // D23B90D0-144F-46BD-841D-59E4EB19DC59
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMVDecMediaObject>{ 0x82D353DF,0x90BD,0x4382,{ 0x8B,0xC2,0x3F,0x61,0x92,0xB7,0x6E,0x34 } }; // 82D353DF-90BD-4382-8BC2-3F6192B76E34
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMVEncMediaObject2>{ 0x96B57CDD,0x8966,0x410C,{ 0xBB,0x1F,0xC9,0x7E,0xEA,0x76,0x5C,0x04 } }; // 96B57CDD-8966-410C-BB1F-C97EEA765C04
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWMVXEncMediaObject>{ 0x7E320092,0x596A,0x41B2,{ 0xBB,0xEB,0x17,0x5D,0x10,0x50,0x4E,0xB6 } }; // 7E320092-596A-41B2-BBEB-175D10504EB6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWVC1DecMediaObject>{ 0xC9BFBCCF,0xE60E,0x4588,{ 0xA3,0xDF,0x5A,0x03,0xB1,0xFD,0x95,0x85 } }; // C9BFBCCF-E60E-4588-A3DF-5A03B1FD9585
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CWVC1EncMediaObject>{ 0x44653D0D,0x8CCA,0x41E7,{ 0xBA,0xCA,0x88,0x43,0x37,0xB7,0x47,0xAC } }; // 44653D0D-8CCA-41E7-BACA-884337B747AC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CZuneAACCCDecMediaObject>{ 0xA74E98F2,0x52D6,0x4B4E,{ 0x88,0x5B,0xE0,0xA6,0xCA,0x4F,0x18,0x7A } }; // A74E98F2-52D6-4B4E-885B-E0A6CA4F187A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::CZuneM4S2DecMediaObject>{ 0xC56FC25C,0x0FC6,0x404A,{ 0x95,0x03,0xB1,0x0B,0xF5,0x1A,0x8A,0xB9 } }; // C56FC25C-0FC6-404A-9503-B10BF51A8AB9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IAdvancedMediaCapture>{ 0xD0751585,0xD216,0x4344,{ 0xB5,0xBF,0x46,0x3B,0x68,0xF9,0x77,0xBB } }; // D0751585-D216-4344-B5BF-463B68F977BB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IAdvancedMediaCaptureInitializationSettings>{ 0x3DE21209,0x8BA6,0x4F2A,{ 0xA5,0x77,0x28,0x19,0xB5,0x6F,0xF1,0x4D } }; // 3DE21209-8BA6-4F2A-A577-2819B56FF14D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IAdvancedMediaCaptureSettings>{ 0x24E0485F,0xA33E,0x4AA1,{ 0xB5,0x64,0x60,0x19,0xB1,0xD1,0x4F,0x65 } }; // 24E0485F-A33E-4AA1-B564-6019B1D14F65
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IAudioSourceProvider>{ 0xEBBAF249,0xAFC2,0x4582,{ 0x91,0xC6,0xB6,0x0D,0xF2,0xE8,0x49,0x54 } }; // EBBAF249-AFC2-4582-91C6-B60DF2E84954
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IClusterDetector>{ 0x3F07F7B7,0xC680,0x41D9,{ 0x94,0x23,0x91,0x51,0x07,0xEC,0x9F,0xF9 } }; // 3F07F7B7-C680-41D9-9423-915107EC9FF9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ICodecAPI>{ 0x901DB4C7,0x31CE,0x41A2,{ 0x85,0xDC,0x8F,0xA0,0xBF,0x41,0xB8,0xDA } }; // 901DB4C7-31CE-41A2-85DC-8FA0BF41B8DA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11AuthenticatedChannel>{ 0x3015A308,0xDCBD,0x47AA,{ 0xA7,0x47,0x19,0x24,0x86,0xD1,0x4D,0x4A } }; // 3015A308-DCBD-47AA-A747-192486D14D4A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11CryptoSession>{ 0x9B32F9AD,0xBDCC,0x40A6,{ 0xA3,0x9D,0xD5,0xC8,0x65,0x84,0x57,0x20 } }; // 9B32F9AD-BDCC-40A6-A39D-D5C865845720
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoContext>{ 0x61F21C45,0x3C0E,0x4A74,{ 0x9C,0xEA,0x67,0x10,0x0D,0x9A,0xD5,0xE4 } }; // 61F21C45-3C0E-4A74-9CEA-67100D9AD5E4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoContext1>{ 0xA7F026DA,0xA5F8,0x4487,{ 0xA5,0x64,0x15,0xE3,0x43,0x57,0x65,0x1E } }; // A7F026DA-A5F8-4487-A564-15E34357651E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoContext2>{ 0xC4E7374C,0x6243,0x4D1B,{ 0xAE,0x87,0x52,0xB4,0xF7,0x40,0xE2,0x61 } }; // C4E7374C-6243-4D1B-AE87-52B4F740E261
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoDecoder>{ 0x3C9C5B51,0x995D,0x48D1,{ 0x9B,0x8D,0xFA,0x5C,0xAE,0xDE,0xD6,0x5C } }; // 3C9C5B51-995D-48D1-9B8D-FA5CAEDED65C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoDecoderOutputView>{ 0xC2931AEA,0x2A85,0x4F20,{ 0x86,0x0F,0xFB,0xA1,0xFD,0x25,0x6E,0x18 } }; // C2931AEA-2A85-4F20-860F-FBA1FD256E18
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoDevice>{ 0x10EC4D5B,0x975A,0x4689,{ 0xB9,0xE4,0xD0,0xAA,0xC3,0x0F,0xE3,0x33 } }; // 10EC4D5B-975A-4689-B9E4-D0AAC30FE333
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoDevice1>{ 0x29DA1D51,0x1321,0x4454,{ 0x80,0x4B,0xF5,0xFC,0x9F,0x86,0x1F,0x0F } }; // 29DA1D51-1321-4454-804B-F5FC9F861F0F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoProcessor>{ 0x1D7B0652,0x185F,0x41C6,{ 0x85,0xCE,0x0C,0x5B,0xE3,0xD4,0xAE,0x6C } }; // 1D7B0652-185F-41C6-85CE-0C5BE3D4AE6C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoProcessorEnumerator>{ 0x31627037,0x53AB,0x4200,{ 0x90,0x61,0x05,0xFA,0xA9,0xAB,0x45,0xF9 } }; // 31627037-53AB-4200-9061-05FAA9AB45F9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoProcessorEnumerator1>{ 0x465217F2,0x5568,0x43CF,{ 0xB5,0xB9,0xF6,0x1D,0x54,0x53,0x1C,0xA1 } }; // 465217F2-5568-43CF-B5B9-F61D54531CA1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoProcessorInputView>{ 0x11EC5A5F,0x51DC,0x4945,{ 0xAB,0x34,0x6E,0x8C,0x21,0x30,0x0E,0xA5 } }; // 11EC5A5F-51DC-4945-AB34-6E8C21300EA5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D11VideoProcessorOutputView>{ 0xA048285E,0x25A9,0x4527,{ 0xBD,0x93,0xD6,0x8B,0x68,0xC4,0x42,0x54 } }; // A048285E-25A9-4527-BD93-D68B68C44254
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecodeCommandList>{ 0x3B60536E,0xAD29,0x4E64,{ 0xA2,0x69,0xF8,0x53,0x83,0x7E,0x5E,0x53 } }; // 3B60536E-AD29-4E64-A269-F853837E5E53
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecodeCommandList1>{ 0xD52F011B,0xB56E,0x453C,{ 0xA0,0x5A,0xA7,0xF3,0x11,0xC8,0xF4,0x72 } }; // D52F011B-B56E-453C-A05A-A7F311C8F472
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecodeCommandList2>{ 0x6E120880,0xC114,0x4153,{ 0x80,0x36,0xD2,0x47,0x05,0x1E,0x17,0x29 } }; // 6E120880-C114-4153-8036-D247051E1729
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecoder>{ 0xC59B6BDC,0x7720,0x4074,{ 0xA1,0x36,0x17,0xA1,0x56,0x03,0x74,0x70 } }; // C59B6BDC-7720-4074-A136-17A156037470
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecoder1>{ 0x79A2E5FB,0xCCD2,0x469A,{ 0x9F,0xDE,0x19,0x5D,0x10,0x95,0x1F,0x7E } }; // 79A2E5FB-CCD2-469A-9FDE-195D10951F7E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecoderHeap>{ 0x0946B7C9,0xEBF6,0x4047,{ 0xBB,0x73,0x86,0x83,0xE2,0x7D,0xBB,0x1F } }; // 0946B7C9-EBF6-4047-BB73-8683E27DBB1F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDecoderHeap1>{ 0xDA1D98C5,0x539F,0x41B2,{ 0xBF,0x6B,0x11,0x98,0xA0,0x3B,0x6D,0x26 } }; // DA1D98C5-539F-41B2-BF6B-1198A03B6D26
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDevice>{ 0x1F052807,0x0B46,0x4ACC,{ 0x8A,0x89,0x36,0x4F,0x79,0x37,0x18,0xA4 } }; // 1F052807-0B46-4ACC-8A89-364F793718A4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDevice1>{ 0x981611AD,0xA144,0x4C83,{ 0x98,0x90,0xF3,0x0E,0x26,0xD6,0x58,0xAB } }; // 981611AD-A144-4C83-9890-F30E26D658AB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoDevice2>{ 0xF019AC49,0xF838,0x4A95,{ 0x9B,0x17,0x57,0x94,0x37,0xC8,0xF5,0x13 } }; // F019AC49-F838-4A95-9B17-579437C8F513
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoEncodeCommandList>{ 0x8455293A,0x0CBD,0x4831,{ 0x9B,0x39,0xFB,0xDB,0xAB,0x72,0x47,0x23 } }; // 8455293A-0CBD-4831-9B39-FBDBAB724723
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoEncodeCommandList1>{ 0x94971ECA,0x2BDB,0x4769,{ 0x88,0xCF,0x36,0x75,0xEA,0x75,0x7E,0xBC } }; // 94971ECA-2BDB-4769-88CF-3675EA757EBC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoExtensionCommand>{ 0x554E41E8,0xAE8E,0x4A8C,{ 0xB7,0xD2,0x5B,0x4F,0x27,0x4A,0x30,0xE4 } }; // 554E41E8-AE8E-4A8C-B7D2-5B4F274A30E4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoMotionEstimator>{ 0x33FDAE0E,0x098B,0x428F,{ 0x87,0xBB,0x34,0xB6,0x95,0xDE,0x08,0xF8 } }; // 33FDAE0E-098B-428F-87BB-34B695DE08F8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoMotionVectorHeap>{ 0x5BE17987,0x743A,0x4061,{ 0x83,0x4B,0x23,0xD2,0x2D,0xAE,0xA5,0x05 } }; // 5BE17987-743A-4061-834B-23D22DAEA505
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoProcessCommandList>{ 0xAEB2543A,0x167F,0x4682,{ 0xAC,0xC8,0xD1,0x59,0xED,0x4A,0x62,0x09 } }; // AEB2543A-167F-4682-ACC8-D159ED4A6209
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoProcessCommandList1>{ 0x542C5C4D,0x7596,0x434F,{ 0x8C,0x93,0x4E,0xFA,0x67,0x66,0xF2,0x67 } }; // 542C5C4D-7596-434F-8C93-4EFA6766F267
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoProcessCommandList2>{ 0xDB525AE4,0x6AD6,0x473C,{ 0xBA,0xA7,0x59,0xB2,0xE3,0x70,0x82,0xE4 } }; // DB525AE4-6AD6-473C-BAA7-59B2E37082E4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoProcessor>{ 0x304FDB32,0xBEDE,0x410A,{ 0x85,0x45,0x94,0x3A,0xC6,0xA4,0x61,0x38 } }; // 304FDB32-BEDE-410A-8545-943AC6A46138
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ID3D12VideoProcessor1>{ 0xF3CFE615,0x553F,0x425C,{ 0x86,0xD8,0xEE,0x8C,0x1B,0x1F,0xB0,0x1C } }; // F3CFE615-553F-425C-86D8-EE8C1B1FB01C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDXVAHD_Device>{ 0x95F12DFD,0xD77E,0x49BE,{ 0x81,0x5F,0x57,0xD5,0x79,0x63,0x4D,0x6D } }; // 95F12DFD-D77E-49BE-815F-57D579634D6D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDXVAHD_VideoProcessor>{ 0x95F4EDF4,0x6E03,0x4CD7,{ 0xBE,0x1B,0x30,0x75,0xD6,0x65,0xAA,0x52 } }; // 95F4EDF4-6E03-4CD7-BE1B-3075D665AA52
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirect3D9ExOverlayExtension>{ 0x187AEB13,0xAAF5,0x4C59,{ 0x87,0x6D,0xE0,0x59,0x08,0x8C,0x0D,0xF8 } }; // 187AEB13-AAF5-4C59-876D-E059088C0DF8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirect3DAuthenticatedChannel9>{ 0xFF24BEEE,0xDA21,0x4BEB,{ 0x98,0xB5,0xD2,0xF8,0x99,0xF9,0x8A,0xF9 } }; // FF24BEEE-DA21-4BEB-98B5-D2F899F98AF9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirect3DCryptoSession9>{ 0xFA0AB799,0x7A9C,0x48CA,{ 0x8C,0x5B,0x23,0x7E,0x71,0xA5,0x44,0x34 } }; // FA0AB799-7A9C-48CA-8C5B-237E71A54434
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirect3DDevice9Video>{ 0x26DC4561,0xA1EE,0x4AE7,{ 0x96,0xDA,0x11,0x8A,0x36,0xC0,0xEC,0x95 } }; // 26DC4561-A1EE-4AE7-96DA-118A36C0EC95
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirect3DDeviceManager9>{ 0xA0CADE0F,0x06D5,0x4CF4,{ 0xA1,0xC7,0xF3,0xCD,0xD7,0x25,0xAA,0x75 } }; // A0CADE0F-06D5-4CF4-A1C7-F3CDD725AA75
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoAccelerationService>{ 0xFC51A550,0xD5E7,0x11D9,{ 0xAF,0x55,0x00,0x05,0x4E,0x43,0xFF,0x02 } }; // FC51A550-D5E7-11D9-AF55-00054E43FF02
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoDecoder>{ 0xF2B0810A,0xFD00,0x43C9,{ 0x91,0x8C,0xDF,0x94,0xE2,0xD8,0xEF,0x7D } }; // F2B0810A-FD00-43C9-918C-DF94E2D8EF7D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoDecoderService>{ 0xFC51A551,0xD5E7,0x11D9,{ 0xAF,0x55,0x00,0x05,0x4E,0x43,0xFF,0x02 } }; // FC51A551-D5E7-11D9-AF55-00054E43FF02
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoMemoryConfiguration>{ 0xB7F916DD,0xDB3B,0x49C1,{ 0x84,0xD7,0xE4,0x5E,0xF9,0x9E,0xC7,0x26 } }; // B7F916DD-DB3B-49C1-84D7-E45EF99EC726
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoProcessor>{ 0x8C3A39F0,0x916E,0x4690,{ 0x80,0x4F,0x4C,0x80,0x01,0x35,0x5D,0x25 } }; // 8C3A39F0-916E-4690-804F-4C8001355D25
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IDirectXVideoProcessorService>{ 0xFC51A552,0xD5E7,0x11D9,{ 0xAF,0x55,0x00,0x05,0x4E,0x43,0xFF,0x02 } }; // FC51A552-D5E7-11D9-AF55-00054E43FF02
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IEVRFilterConfig>{ 0x83E91E85,0x82C1,0x4EA7,{ 0x80,0x1D,0x85,0xDC,0x50,0xB7,0x50,0x86 } }; // 83E91E85-82C1-4EA7-801D-85DC50B75086
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IEVRFilterConfigEx>{ 0xAEA36028,0x796D,0x454F,{ 0xBE,0xEE,0xB4,0x80,0x71,0xE2,0x43,0x04 } }; // AEA36028-796D-454F-BEEE-B48071E24304
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IEVRTrustedVideoPlugin>{ 0x83A4CE40,0x7710,0x494B,{ 0xA8,0x93,0xA4,0x72,0x04,0x9A,0xF6,0x30 } }; // 83A4CE40-7710-494B-A893-A472049AF630
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IEVRVideoStreamControl>{ 0xD0CFE38B,0x93E7,0x4772,{ 0x89,0x57,0x04,0x00,0xC4,0x9A,0x44,0x85 } }; // D0CFE38B-93E7-4772-8957-0400C49A4485
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IFileClient>{ 0xBFCCD196,0x1244,0x4840,{ 0xAB,0x44,0x48,0x09,0x75,0xC4,0xFF,0xE4 } }; // BFCCD196-1244-4840-AB44-480975C4FFE4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IFileIo>{ 0x11993196,0x1244,0x4840,{ 0xAB,0x44,0x48,0x09,0x75,0xC4,0xFF,0xE4 } }; // 11993196-1244-4840-AB44-480975C4FFE4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMF2DBuffer>{ 0x7DC9D5F9,0x9ED9,0x44EC,{ 0x9B,0xBF,0x06,0x00,0xBB,0x58,0x9F,0xBB } }; // 7DC9D5F9-9ED9-44EC-9BBF-0600BB589FBB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMF2DBuffer2>{ 0x33AE5EA6,0x4316,0x436F,{ 0x8D,0xDD,0xD7,0x3D,0x22,0xF8,0x29,0xEC } }; // 33AE5EA6-4316-436F-8DDD-D73D22F829EC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFContentInfo>{ 0xB1DCA5CD,0xD5DA,0x4451,{ 0x8E,0x9E,0xDB,0x5C,0x59,0x91,0x4E,0xAD } }; // B1DCA5CD-D5DA-4451-8E9E-DB5C59914EAD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFIndexer>{ 0x53590F48,0xDC3B,0x4297,{ 0x81,0x3F,0x78,0x77,0x61,0xAD,0x7B,0x3E } }; // 53590F48-DC3B-4297-813F-787761AD7B3E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFMultiplexer>{ 0x57BDD80A,0x9B38,0x4838,{ 0xB7,0x37,0xC5,0x8F,0x67,0x0D,0x7D,0x4F } }; // 57BDD80A-9B38-4838-B737-C58F670D7D4F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFMutualExclusion>{ 0x12558291,0xE399,0x11D5,{ 0xBC,0x2A,0x00,0xB0,0xD0,0xF3,0xF4,0xAB } }; // 12558291-E399-11D5-BC2A-00B0D0F3F4AB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFProfile>{ 0xD267BF6A,0x028B,0x4E0D,{ 0x90,0x3D,0x43,0xF0,0xEF,0x82,0xD0,0xD4 } }; // D267BF6A-028B-4E0D-903D-43F0EF82D0D4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFSplitter>{ 0x12558295,0xE399,0x11D5,{ 0xBC,0x2A,0x00,0xB0,0xD0,0xF3,0xF4,0xAB } }; // 12558295-E399-11D5-BC2A-00B0D0F3F4AB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFStreamConfig>{ 0x9E8AE8D2,0xDBBD,0x4200,{ 0x9A,0xCA,0x06,0xE6,0xDF,0x48,0x49,0x13 } }; // 9E8AE8D2-DBBD-4200-9ACA-06E6DF484913
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFStreamPrioritization>{ 0x699BDC27,0xBBAF,0x49FF,{ 0x8E,0x38,0x9C,0x39,0xC9,0xB5,0xE0,0x88 } }; // 699BDC27-BBAF-49FF-8E38-9C39C9B5E088
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFASFStreamSelector>{ 0xD01BAD4A,0x4FA0,0x4A60,{ 0x93,0x49,0xC2,0x7E,0x62,0xDA,0x9D,0x41 } }; // D01BAD4A-4FA0-4A60-9349-C27E62DA9D41
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFActivate>{ 0x7FEE9E9A,0x4A89,0x47A6,{ 0x89,0x9C,0xB6,0xA5,0x3A,0x70,0xFB,0x67 } }; // 7FEE9E9A-4A89-47A6-899C-B6A53A70FB67
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAsyncCallback>{ 0xA27003CF,0x2354,0x4F2A,{ 0x8D,0x6A,0xAB,0x7C,0xFF,0x15,0x43,0x7E } }; // A27003CF-2354-4F2A-8D6A-AB7CFF15437E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAsyncCallbackLogging>{ 0xC7A4DCA1,0xF5F0,0x47B6,{ 0xB9,0x2B,0xBF,0x01,0x06,0xD2,0x57,0x91 } }; // C7A4DCA1-F5F0-47B6-B92B-BF0106D25791
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAsyncResult>{ 0xAC6B7889,0x0740,0x4D51,{ 0x86,0x19,0x90,0x59,0x94,0xA5,0x5C,0xC6 } }; // AC6B7889-0740-4D51-8619-905994A55CC6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAttributes>{ 0x2CD2D921,0xC447,0x44A7,{ 0xA1,0x3C,0x4A,0xDA,0xBF,0xC2,0x47,0xE3 } }; // 2CD2D921-C447-44A7-A13C-4ADABFC247E3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAudioMediaType>{ 0x26A0ADC3,0xCE26,0x4672,{ 0x93,0x04,0x69,0x55,0x2E,0xDD,0x3F,0xAF } }; // 26A0ADC3-CE26-4672-9304-69552EDD3FAF
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAudioPolicy>{ 0xA0638C2B,0x6465,0x4395,{ 0x9A,0xE7,0xA3,0x21,0xA9,0xFD,0x28,0x56 } }; // A0638C2B-6465-4395-9AE7-A321A9FD2856
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFAudioStreamVolume>{ 0x76B1BBDB,0x4EC8,0x4F36,{ 0xB1,0x06,0x70,0xA9,0x31,0x6D,0xF5,0x93 } }; // 76B1BBDB-4EC8-4F36-B106-70A9316DF593
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFBufferListNotify>{ 0x24CD47F7,0x81D8,0x4785,{ 0xAD,0xB2,0xAF,0x69,0x7A,0x96,0x3C,0xD2 } }; // 24CD47F7-81D8-4785-ADB2-AF697A963CD2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStream>{ 0xAD4C1B00,0x4BF7,0x422F,{ 0x91,0x75,0x75,0x66,0x93,0xD9,0x13,0x0D } }; // AD4C1B00-4BF7-422F-9175-756693D9130D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamBuffering>{ 0x6D66D782,0x1D4F,0x4DB7,{ 0x8C,0x63,0xCB,0x8C,0x77,0xF1,0xEF,0x5E } }; // 6D66D782-1D4F-4DB7-8C63-CB8C77F1EF5E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamCacheControl>{ 0xF5042EA4,0x7A96,0x4A75,{ 0xAA,0x7B,0x2B,0xE1,0xEF,0x7F,0x88,0xD5 } }; // F5042EA4-7A96-4A75-AA7B-2BE1EF7F88D5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamCacheControl2>{ 0x71CE469C,0xF34B,0x49EA,{ 0xA5,0x6B,0x2D,0x2A,0x10,0xE5,0x11,0x49 } }; // 71CE469C-F34B-49EA-A56B-2D2A10E51149
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamHandler>{ 0xBB420AA4,0x765B,0x4A1F,{ 0x91,0xFE,0xD6,0xA8,0xA1,0x43,0x92,0x4C } }; // BB420AA4-765B-4A1F-91FE-D6A8A143924C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamProxyClassFactory>{ 0xA6B43F84,0x5C0A,0x42E8,{ 0xA4,0x4D,0xB1,0x85,0x7A,0x76,0x99,0x2F } }; // A6B43F84-5C0A-42E8-A44D-B1857A76992F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFByteStreamTimeSeek>{ 0x64976BFA,0xFB61,0x4041,{ 0x90,0x69,0x8C,0x9A,0x5F,0x65,0x9B,0xEB } }; // 64976BFA-FB61-4041-9069-8C9A5F659BEB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureEngine>{ 0xA6BBA433,0x176B,0x48B2,{ 0xB3,0x75,0x53,0xAA,0x03,0x47,0x32,0x07 } }; // A6BBA433-176B-48B2-B375-53AA03473207
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureEngineClassFactory>{ 0x8F02D140,0x56FC,0x4302,{ 0xA7,0x05,0x3A,0x97,0xC7,0x8B,0xE7,0x79 } }; // 8F02D140-56FC-4302-A705-3A97C78BE779
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureEngineOnEventCallback>{ 0xAEDA51C0,0x9025,0x4983,{ 0x90,0x12,0xDE,0x59,0x7B,0x88,0xB0,0x89 } }; // AEDA51C0-9025-4983-9012-DE597B88B089
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureEngineOnSampleCallback>{ 0x52150B82,0xAB39,0x4467,{ 0x98,0x0F,0xE4,0x8B,0xF0,0x82,0x2E,0xCD } }; // 52150B82-AB39-4467-980F-E48BF0822ECD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureEngineOnSampleCallback2>{ 0xE37CEED7,0x340F,0x4514,{ 0x9F,0x4D,0x9C,0x2A,0xE0,0x26,0x10,0x0B } }; // E37CEED7-340F-4514-9F4D-9C2AE026100B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCapturePhotoConfirmation>{ 0x19F68549,0xCA8A,0x4706,{ 0xA4,0xEF,0x48,0x1D,0xBC,0x95,0xE1,0x2C } }; // 19F68549-CA8A-4706-A4EF-481DBC95E12C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCapturePhotoSink>{ 0xD2D43CC8,0x48BB,0x4AA7,{ 0x95,0xDB,0x10,0xC0,0x69,0x77,0xE7,0x77 } }; // D2D43CC8-48BB-4AA7-95DB-10C06977E777
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCapturePreviewSink>{ 0x77346CFD,0x5B49,0x4D73,{ 0xAC,0xE0,0x5B,0x52,0xA8,0x59,0xF2,0xE0 } }; // 77346CFD-5B49-4D73-ACE0-5B52A859F2E0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureRecordSink>{ 0x3323B55A,0xF92A,0x4FE2,{ 0x8E,0xDC,0xE9,0xBF,0xC0,0x63,0x4D,0x77 } }; // 3323B55A-F92A-4FE2-8EDC-E9BFC0634D77
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureSink>{ 0x72D6135B,0x35E9,0x412C,{ 0xB9,0x26,0xFD,0x52,0x65,0xF2,0xA8,0x85 } }; // 72D6135B-35E9-412C-B926-FD5265F2A885
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureSink2>{ 0xF9E4219E,0x6197,0x4B5E,{ 0xB8,0x88,0xBE,0xE3,0x10,0xAB,0x2C,0x59 } }; // F9E4219E-6197-4B5E-B888-BEE310AB2C59
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCaptureSource>{ 0x439A42A8,0x0D2C,0x4505,{ 0xBE,0x83,0xF7,0x9B,0x2A,0x05,0xD5,0xC4 } }; // 439A42A8-0D2C-4505-BE83-F79B2A05D5C4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCdmSuspendNotify>{ 0x7A5645D2,0x43BD,0x47FD,{ 0x87,0xB7,0xDC,0xD2,0x4C,0xC7,0xD6,0x92 } }; // 7A5645D2-43BD-47FD-87B7-DCD24CC7D692
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFClock>{ 0x2EB1E945,0x18B8,0x4139,{ 0x9B,0x1A,0xD5,0xD5,0x84,0x81,0x85,0x30 } }; // 2EB1E945-18B8-4139-9B1A-D5D584818530
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFClockConsumer>{ 0x6EF2A662,0x47C0,0x4666,{ 0xB1,0x3D,0xCB,0xB7,0x17,0xF2,0xFA,0x2C } }; // 6EF2A662-47C0-4666-B13D-CBB717F2FA2C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFClockStateSink>{ 0xF6696E82,0x74F7,0x4F3D,{ 0xA1,0x78,0x8A,0x5E,0x09,0xC3,0x65,0x9F } }; // F6696E82-74F7-4F3D-A178-8A5E09C3659F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFCollection>{ 0x5BC8A76B,0x869A,0x46A3,{ 0x9B,0x03,0xFA,0x21,0x8A,0x66,0xAE,0xBE } }; // 5BC8A76B-869A-46A3-9B03-FA218A66AEBE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptionModule>{ 0x87BE986C,0x10BE,0x4943,{ 0xBF,0x48,0x4B,0x54,0xCE,0x19,0x83,0xA2 } }; // 87BE986C-10BE-4943-BF48-4B54CE1983A2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptionModuleAccess>{ 0xA853D1F4,0xE2A0,0x4303,{ 0x9E,0xDC,0xF1,0xA6,0x8E,0xE4,0x31,0x36 } }; // A853D1F4-E2A0-4303-9EDC-F1A68EE43136
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptionModuleFactory>{ 0x7D5ABF16,0x4CBB,0x4E08,{ 0xB9,0x77,0x9B,0xA5,0x90,0x49,0x94,0x3E } }; // 7D5ABF16-4CBB-4E08-B977-9BA59049943E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptionModuleSession>{ 0x4E233EFD,0x1DD2,0x49E8,{ 0xB5,0x77,0xD6,0x3E,0xEE,0x4C,0x0D,0x33 } }; // 4E233EFD-1DD2-49E8-B577-D63EEE4C0D33
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptionModuleSessionCallbacks>{ 0x3F96EE40,0xAD81,0x4096,{ 0x84,0x70,0x59,0xA4,0xB7,0x70,0xF8,0x9A } }; // 3F96EE40-AD81-4096-8470-59A4B770F89A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentDecryptorContext>{ 0x7EC4B1BD,0x43FB,0x4763,{ 0x85,0xD2,0x64,0xFC,0xB5,0xC5,0xF4,0xCB } }; // 7EC4B1BD-43FB-4763-85D2-64FCB5C5F4CB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentEnabler>{ 0xD3C4EF59,0x49CE,0x4381,{ 0x90,0x71,0xD5,0xBC,0xD0,0x44,0xC7,0x70 } }; // D3C4EF59-49CE-4381-9071-D5BCD044C770
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentProtectionDevice>{ 0xE6257174,0xA060,0x4C9A,{ 0xA0,0x88,0x3B,0x1B,0x47,0x1C,0xAD,0x28 } }; // E6257174-A060-4C9A-A088-3B1B471CAD28
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFContentProtectionManager>{ 0xACF92459,0x6A61,0x42BD,{ 0xB5,0x7C,0xB4,0x3E,0x51,0x20,0x3C,0xB0 } }; // ACF92459-6A61-42BD-B57C-B43E51203CB0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDLNASinkInit>{ 0x0C012799,0x1B61,0x4C10,{ 0xBD,0xA9,0x04,0x44,0x5B,0xE5,0xF5,0x61 } }; // 0C012799-1B61-4C10-BDA9-04445BE5F561
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDRMNetHelper>{ 0x3D1FF0EA,0x679A,0x4190,{ 0x8D,0x46,0x7F,0xA6,0x9E,0x8C,0x7E,0x15 } }; // 3D1FF0EA-679A-4190-8D46-7FA69E8C7E15
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDXGIBuffer>{ 0xE7174CFA,0x1C9E,0x48B1,{ 0x88,0x66,0x62,0x62,0x26,0xBF,0xC2,0x58 } }; // E7174CFA-1C9E-48B1-8866-626226BFC258
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDXGIDeviceManager>{ 0xEB533D5D,0x2DB6,0x40F8,{ 0x97,0xA9,0x49,0x46,0x92,0x01,0x4F,0x07 } }; // EB533D5D-2DB6-40F8-97A9-494692014F07
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDXGIDeviceManagerSource>{ 0x20BC074B,0x7A8D,0x4609,{ 0x8C,0x3B,0x64,0xA0,0xA3,0xB5,0xD7,0xCE } }; // 20BC074B-7A8D-4609-8C3B-64A0A3B5D7CE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFDesiredSample>{ 0x56C294D0,0x753E,0x4260,{ 0x8D,0x61,0xA3,0xD8,0x82,0x0B,0x1D,0x54 } }; // 56C294D0-753E-4260-8D61-A3D8820B1D54
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraControl>{ 0x38E33520,0xFCA1,0x4845,{ 0xA2,0x7A,0x68,0xB7,0xC6,0xAB,0x37,0x89 } }; // 38E33520-FCA1-4845-A27A-68B7C6AB3789
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraController>{ 0xB91EBFEE,0xCA03,0x4AF4,{ 0x8A,0x82,0xA3,0x17,0x52,0xF4,0xA0,0xFC } }; // B91EBFEE-CA03-4AF4-8A82-A31752F4A0FC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraIntrinsicModel>{ 0x5C595E64,0x4630,0x4231,{ 0x85,0x5A,0x12,0x84,0x2F,0x73,0x32,0x45 } }; // 5C595E64-4630-4231-855A-12842F733245
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraIntrinsics>{ 0x687F6DAC,0x6987,0x4750,{ 0xA1,0x6A,0x73,0x4D,0x1E,0x7A,0x10,0xFE } }; // 687F6DAC-6987-4750-A16A-734D1E7A10FE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraIntrinsicsDistortionModel6KT>{ 0x74C2653B,0x5F55,0x4EB1,{ 0x9F,0x0F,0x18,0xB8,0xF6,0x8B,0x7D,0x3D } }; // 74C2653B-5F55-4EB1-9F0F-18B8F68B7D3D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedCameraIntrinsicsDistortionModelArcTan>{ 0x812D5F95,0xB572,0x45DC,{ 0xBA,0xFC,0xAE,0x24,0x19,0x9D,0xDD,0xA8 } }; // 812D5F95-B572-45DC-BAFC-AE24199DDDA8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFExtendedDRMTypeSupport>{ 0x332EC562,0x3758,0x468D,{ 0xA7,0x84,0xE3,0x8F,0x23,0x55,0x21,0x28 } }; // 332EC562-3758-468D-A784-E38F23552128
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFFieldOfUseMFTUnlock>{ 0x508E71D3,0xEC66,0x4FC3,{ 0x87,0x75,0xB4,0xB9,0xED,0x6B,0xA8,0x47 } }; // 508E71D3-EC66-4FC3-8775-B4B9ED6BA847
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFFinalizableMediaSink>{ 0xEAECB74A,0x9A50,0x42CE,{ 0x95,0x41,0x6A,0x7F,0x57,0xAA,0x4A,0xD7 } }; // EAECB74A-9A50-42CE-9541-6A7F57AA4AD7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFGetService>{ 0xFA993888,0x4383,0x415A,{ 0xA9,0x30,0xDD,0x47,0x2A,0x8C,0xF6,0xF7 } }; // FA993888-4383-415A-A930-DD472A8CF6F7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFHDCPStatus>{ 0xDE400F54,0x5BF1,0x40CF,{ 0x89,0x64,0x0B,0xEA,0x13,0x6B,0x1E,0x3D } }; // DE400F54-5BF1-40CF-8964-0BEA136B1E3D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFHttpDownloadRequest>{ 0xF779FDDF,0x26E7,0x4270,{ 0x8A,0x8B,0xB9,0x83,0xD1,0x85,0x9D,0xE0 } }; // F779FDDF-26E7-4270-8A8B-B983D1859DE0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFHttpDownloadSession>{ 0x71FA9A2C,0x53CE,0x4662,{ 0xA1,0x32,0x1A,0x7E,0x8C,0xBF,0x62,0xDB } }; // 71FA9A2C-53CE-4662-A132-1A7E8CBF62DB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFHttpDownloadSessionProvider>{ 0x1B4CF4B9,0x3A16,0x4115,{ 0x83,0x9D,0x03,0xCC,0x5C,0x99,0xDF,0x01 } }; // 1B4CF4B9-3A16-4115-839D-03CC5C99DF01
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFImageSharingEngine>{ 0xCFA0AE8E,0x7E1C,0x44D2,{ 0xAE,0x68,0xFC,0x4C,0x14,0x8A,0x63,0x54 } }; // CFA0AE8E-7E1C-44D2-AE68-FC4C148A6354
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFImageSharingEngineClassFactory>{ 0x1FC55727,0xA7FB,0x4FC8,{ 0x83,0xAE,0x8A,0xF0,0x24,0x99,0x0A,0xF1 } }; // 1FC55727-A7FB-4FC8-83AE-8AF024990AF1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFInputTrustAuthority>{ 0xD19F8E98,0xB126,0x4446,{ 0x89,0x0C,0x5D,0xCB,0x7A,0xD7,0x14,0x53 } }; // D19F8E98-B126-4446-890C-5DCB7AD71453
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFLocalMFTRegistration>{ 0x149C4D73,0xB4BE,0x4F8D,{ 0x8B,0x87,0x07,0x9E,0x92,0x6B,0x6A,0xDD } }; // 149C4D73-B4BE-4F8D-8B87-079E926B6ADD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaBuffer>{ 0x045FA593,0x8799,0x42B8,{ 0xBC,0x8D,0x89,0x68,0xC6,0x45,0x35,0x07 } }; // 045FA593-8799-42B8-BC8D-8968C6453507
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngine>{ 0x98A1B0BB,0x03EB,0x4935,{ 0xAE,0x7C,0x93,0xC1,0xFA,0x0E,0x1C,0x93 } }; // 98A1B0BB-03EB-4935-AE7C-93C1FA0E1C93
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineAudioEndpointId>{ 0x7A3BAC98,0x0E76,0x49FB,{ 0x8C,0x20,0x8A,0x86,0xFD,0x98,0xEA,0xF2 } }; // 7A3BAC98-0E76-49FB-8C20-8A86FD98EAF2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineClassFactory>{ 0x4D645ACE,0x26AA,0x4688,{ 0x9B,0xE1,0xDF,0x35,0x16,0x99,0x0B,0x93 } }; // 4D645ACE-26AA-4688-9BE1-DF3516990B93
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineClassFactory2>{ 0x09083CEF,0x867F,0x4BF6,{ 0x87,0x76,0xDE,0xE3,0xA7,0xB4,0x2F,0xCA } }; // 09083CEF-867F-4BF6-8776-DEE3A7B42FCA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineClassFactory3>{ 0x3787614F,0x65F7,0x4003,{ 0xB6,0x73,0xEA,0xD8,0x29,0x3A,0x0E,0x60 } }; // 3787614F-65F7-4003-B673-EAD8293A0E60
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineClassFactory4>{ 0xFBE256C1,0x43CF,0x4A9B,{ 0x8C,0xB8,0xCE,0x86,0x32,0xA3,0x41,0x86 } }; // FBE256C1-43CF-4A9B-8CB8-CE8632A34186
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineClassFactoryEx>{ 0xC56156C6,0xEA5B,0x48A5,{ 0x9D,0xF8,0xFB,0xE0,0x35,0xD0,0x92,0x9E } }; // C56156C6-EA5B-48A5-9DF8-FBE035D0929E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineEME>{ 0x50DC93E4,0xBA4F,0x4275,{ 0xAE,0x66,0x83,0xE8,0x36,0xE5,0x74,0x69 } }; // 50DC93E4-BA4F-4275-AE66-83E836E57469
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineEMENotify>{ 0x9E184D15,0xCDB7,0x4F86,{ 0xB4,0x9E,0x56,0x66,0x89,0xF4,0xA6,0x01 } }; // 9E184D15-CDB7-4F86-B49E-566689F4A601
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineEx>{ 0x83015EAD,0xB1E6,0x40D0,{ 0xA9,0x8A,0x37,0x14,0x5F,0xFE,0x1A,0xD1 } }; // 83015EAD-B1E6-40D0-A98A-37145FFE1AD1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineExtension>{ 0x2F69D622,0x20B5,0x41E9,{ 0xAF,0xDF,0x89,0xCE,0xD1,0xDD,0xA0,0x4E } }; // 2F69D622-20B5-41E9-AFDF-89CED1DDA04E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineNeedKeyNotify>{ 0x46A30204,0xA696,0x4B18,{ 0x88,0x04,0x24,0x6B,0x8F,0x03,0x1B,0xB1 } }; // 46A30204-A696-4B18-8804-246B8F031BB1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineNotify>{ 0xFEE7C112,0xE776,0x42B5,{ 0x9B,0xBF,0x00,0x48,0x52,0x4E,0x2B,0xD5 } }; // FEE7C112-E776-42B5-9BBF-0048524E2BD5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineOPMInfo>{ 0x765763E6,0x6C01,0x4B01,{ 0xBB,0x0F,0xB8,0x29,0xF6,0x0E,0xD2,0x8C } }; // 765763E6-6C01-4B01-BB0F-B829F60ED28C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineProtectedContent>{ 0x9F8021E8,0x9C8C,0x487E,{ 0xBB,0x5C,0x79,0xAA,0x47,0x79,0x93,0x8C } }; // 9F8021E8-9C8C-487E-BB5C-79AA4779938C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineSrcElements>{ 0x7A5E5354,0xB114,0x4C72,{ 0xB9,0x91,0x31,0x31,0xD7,0x50,0x32,0xEA } }; // 7A5E5354-B114-4C72-B991-3131D75032EA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineSrcElementsEx>{ 0x654A6BB3,0xE1A3,0x424A,{ 0x99,0x08,0x53,0xA4,0x3A,0x0D,0xFD,0xA0 } }; // 654A6BB3-E1A3-424A-9908-53A43A0DFDA0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineSupportsSourceTransfer>{ 0xA724B056,0x1B2E,0x4642,{ 0xA6,0xF3,0xDB,0x94,0x20,0xC5,0x29,0x08 } }; // A724B056-1B2E-4642-A6F3-DB9420C52908
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineTransferSource>{ 0x24230452,0xFE54,0x40CC,{ 0x94,0xF3,0xFC,0xC3,0x94,0xC3,0x40,0xD6 } }; // 24230452-FE54-40CC-94F3-FCC394C340D6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEngineWebSupport>{ 0xBA2743A1,0x07E0,0x48EF,{ 0x84,0xB6,0x9A,0x2E,0xD0,0x23,0xCA,0x6C } }; // BA2743A1-07E0-48EF-84B6-9A2ED023CA6C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaError>{ 0xFC0E10D2,0xAB2A,0x4501,{ 0xA9,0x51,0x06,0xBB,0x10,0x75,0x18,0x4C } }; // FC0E10D2-AB2A-4501-A951-06BB1075184C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEvent>{ 0xDF598932,0xF10C,0x4E39,{ 0xBB,0xA2,0xC3,0x08,0xF1,0x01,0xDA,0xA3 } }; // DF598932-F10C-4E39-BBA2-C308F101DAA3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEventGenerator>{ 0x2CD0BD52,0xBCD5,0x4B89,{ 0xB6,0x2C,0xEA,0xDC,0x0C,0x03,0x1E,0x7D } }; // 2CD0BD52-BCD5-4B89-B62C-EADC0C031E7D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaEventQueue>{ 0x36F846FC,0x2256,0x48B6,{ 0xB5,0x8E,0xE2,0xB6,0x38,0x31,0x65,0x81 } }; // 36F846FC-2256-48B6-B58E-E2B638316581
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeySession>{ 0x24FA67D5,0xD1D0,0x4DC5,{ 0x99,0x5C,0xC0,0xEF,0xDC,0x19,0x1F,0xB5 } }; // 24FA67D5-D1D0-4DC5-995C-C0EFDC191FB5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeySession2>{ 0xE9707E05,0x6D55,0x4636,{ 0xB1,0x85,0x3D,0xE2,0x12,0x10,0xBD,0x75 } }; // E9707E05-6D55-4636-B185-3DE21210BD75
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeySessionNotify>{ 0x6A0083F9,0x8947,0x4C1D,{ 0x9C,0xE0,0xCD,0xEE,0x22,0xB2,0x31,0x35 } }; // 6A0083F9-8947-4C1D-9CE0-CDEE22B23135
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeySessionNotify2>{ 0xC3A9E92A,0xDA88,0x46B0,{ 0xA1,0x10,0x6C,0xF9,0x53,0x02,0x6C,0xB9 } }; // C3A9E92A-DA88-46B0-A110-6CF953026CB9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeySystemAccess>{ 0xAEC63FDA,0x7A97,0x4944,{ 0xB3,0x5C,0x6C,0x6D,0xF8,0x08,0x5C,0xC3 } }; // AEC63FDA-7A97-4944-B35C-6C6DF8085CC3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeys>{ 0x5CB31C05,0x61FF,0x418F,{ 0xAF,0xDA,0xCA,0xAF,0x41,0x42,0x1A,0x38 } }; // 5CB31C05-61FF-418F-AFDA-CAAF41421A38
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaKeys2>{ 0x45892507,0xAD66,0x4DE2,{ 0x83,0xA2,0xAC,0xBB,0x13,0xCD,0x8D,0x43 } }; // 45892507-AD66-4DE2-83A2-ACBB13CD8D43
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSession>{ 0x90377834,0x21D0,0x4DEE,{ 0x82,0x14,0xBA,0x2E,0x3E,0x6C,0x11,0x27 } }; // 90377834-21D0-4DEE-8214-BA2E3E6C1127
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSharingEngine>{ 0x8D3CE1BF,0x2367,0x40E0,{ 0x9E,0xEE,0x40,0xD3,0x77,0xCC,0x1B,0x46 } }; // 8D3CE1BF-2367-40E0-9EEE-40D377CC1B46
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSharingEngineClassFactory>{ 0x524D2BC4,0xB2B1,0x4FE5,{ 0x8F,0xAC,0xFA,0x4E,0x45,0x12,0xB4,0xE0 } }; // 524D2BC4-B2B1-4FE5-8FAC-FA4E4512B4E0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSink>{ 0x6EF2A660,0x47C0,0x4666,{ 0xB1,0x3D,0xCB,0xB7,0x17,0xF2,0xFA,0x2C } }; // 6EF2A660-47C0-4666-B13D-CBB717F2FA2C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSinkPreroll>{ 0x5DFD4B2A,0x7674,0x4110,{ 0xA4,0xE6,0x8A,0x68,0xFD,0x5F,0x36,0x88 } }; // 5DFD4B2A-7674-4110-A4E6-8A68FD5F3688
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSource>{ 0x279A808D,0xAEC7,0x40C8,{ 0x9C,0x6B,0xA6,0xB4,0x92,0xC7,0x8A,0x66 } }; // 279A808D-AEC7-40C8-9C6B-A6B492C78A66
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSource2>{ 0xFBB03414,0xD13B,0x4786,{ 0x83,0x19,0x5A,0xC5,0x1F,0xC0,0xA1,0x36 } }; // FBB03414-D13B-4786-8319-5AC51FC0A136
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourceEx>{ 0x3C9B2EB9,0x86D5,0x4514,{ 0xA3,0x94,0xF5,0x66,0x64,0xF9,0xF0,0xD8 } }; // 3C9B2EB9-86D5-4514-A394-F56664F9F0D8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourceExtension>{ 0xE467B94E,0xA713,0x4562,{ 0xA8,0x02,0x81,0x6A,0x42,0xE9,0x00,0x8A } }; // E467B94E-A713-4562-A802-816A42E9008A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourceExtensionLiveSeekableRange>{ 0x5D1ABFD6,0x450A,0x4D92,{ 0x9E,0xFC,0xD6,0xB6,0xCB,0xC1,0xF4,0xDA } }; // 5D1ABFD6-450A-4D92-9EFC-D6B6CBC1F4DA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourceExtensionNotify>{ 0xA7901327,0x05DD,0x4469,{ 0xA7,0xB7,0x0E,0x01,0x97,0x9E,0x36,0x1D } }; // A7901327-05DD-4469-A7B7-0E01979E361D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourcePresentationProvider>{ 0x0E1D600A,0xC9F3,0x442D,{ 0x8C,0x51,0xA4,0x2D,0x2D,0x49,0x45,0x2F } }; // 0E1D600A-C9F3-442D-8C51-A42D2D49452F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaSourceTopologyProvider>{ 0x0E1D6009,0xC9F3,0x442D,{ 0x8C,0x51,0xA4,0x2D,0x2D,0x49,0x45,0x2F } }; // 0E1D6009-C9F3-442D-8C51-A42D2D49452F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaStream>{ 0xD182108F,0x4EC6,0x443F,{ 0xAA,0x42,0xA7,0x11,0x06,0xEC,0x82,0x5F } }; // D182108F-4EC6-443F-AA42-A71106EC825F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaStream2>{ 0xC5BC37D6,0x75C7,0x46A1,{ 0xA1,0x32,0x81,0xB5,0xF7,0x23,0xC2,0x0F } }; // C5BC37D6-75C7-46A1-A132-81B5F723C20F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaStreamSourceSampleRequest>{ 0x380B9AF9,0xA85B,0x4E78,{ 0xA2,0xAF,0xEA,0x5C,0xE6,0x45,0xC6,0xB4 } }; // 380B9AF9-A85B-4E78-A2AF-EA5CE645C6B4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaTimeRange>{ 0xDB71A2FC,0x078A,0x414E,{ 0x9D,0xF9,0x8C,0x25,0x31,0xB0,0xAA,0x6C } }; // DB71A2FC-078A-414E-9DF9-8C2531B0AA6C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaType>{ 0x44AE0FA8,0xEA31,0x4109,{ 0x8D,0x2E,0x4C,0xAE,0x49,0x97,0xC5,0x55 } }; // 44AE0FA8-EA31-4109-8D2E-4CAE4997C555
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMediaTypeHandler>{ 0xE93DCF6C,0x4B07,0x4E1E,{ 0x81,0x23,0xAA,0x16,0xED,0x6E,0xAD,0xF5 } }; // E93DCF6C-4B07-4E1E-8123-AA16ED6EADF5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMetadata>{ 0xF88CFB8C,0xEF16,0x4991,{ 0xB4,0x50,0xCB,0x8C,0x69,0xE5,0x17,0x04 } }; // F88CFB8C-EF16-4991-B450-CB8C69E51704
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMetadataProvider>{ 0x56181D2D,0xE221,0x4ADB,{ 0xB1,0xC8,0x3C,0xEE,0x6A,0x53,0xF7,0x6F } }; // 56181D2D-E221-4ADB-B1C8-3CEE6A53F76F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMuxStreamAttributesManager>{ 0xCE8BD576,0xE440,0x43B3,{ 0xBE,0x34,0x1E,0x53,0xF5,0x65,0xF7,0xE8 } }; // CE8BD576-E440-43B3-BE34-1E53F565F7E8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMuxStreamMediaTypeManager>{ 0x505A2C72,0x42F7,0x4690,{ 0xAE,0xAB,0x8F,0x51,0x3D,0x0F,0xFD,0xB8 } }; // 505A2C72-42F7-4690-AEAB-8F513D0FFDB8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFMuxStreamSampleManager>{ 0x74ABBC19,0xB1CC,0x4E41,{ 0xBB,0x8B,0x9D,0x9B,0x86,0xA8,0xF6,0xCA } }; // 74ABBC19-B1CC-4E41-BB8B-9D9B86A8F6CA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetCredential>{ 0x5B87EF6A,0x7ED8,0x434F,{ 0xBA,0x0E,0x18,0x4F,0xAC,0x16,0x28,0xD1 } }; // 5B87EF6A-7ED8-434F-BA0E-184FAC1628D1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetCredentialCache>{ 0x5B87EF6C,0x7ED8,0x434F,{ 0xBA,0x0E,0x18,0x4F,0xAC,0x16,0x28,0xD1 } }; // 5B87EF6C-7ED8-434F-BA0E-184FAC1628D1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetCredentialManager>{ 0x5B87EF6B,0x7ED8,0x434F,{ 0xBA,0x0E,0x18,0x4F,0xAC,0x16,0x28,0xD1 } }; // 5B87EF6B-7ED8-434F-BA0E-184FAC1628D1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetCrossOriginSupport>{ 0xBC2B7D44,0xA72D,0x49D5,{ 0x83,0x76,0x14,0x80,0xDE,0xE5,0x8B,0x22 } }; // BC2B7D44-A72D-49D5-8376-1480DEE58B22
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetProxyLocator>{ 0xE9CD0383,0xA268,0x4BB4,{ 0x82,0xDE,0x65,0x8D,0x53,0x57,0x4D,0x41 } }; // E9CD0383-A268-4BB4-82DE-658D53574D41
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetProxyLocatorFactory>{ 0xE9CD0384,0xA268,0x4BB4,{ 0x82,0xDE,0x65,0x8D,0x53,0x57,0x4D,0x41 } }; // E9CD0384-A268-4BB4-82DE-658D53574D41
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetResourceFilter>{ 0x091878A3,0xBF11,0x4A5C,{ 0xBC,0x9F,0x33,0x99,0x5B,0x06,0xEF,0x2D } }; // 091878A3-BF11-4A5C-BC9F-33995B06EF2D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFNetSchemeHandlerConfig>{ 0x7BE19E73,0xC9BF,0x468A,{ 0xAC,0x5A,0xA5,0xE8,0x65,0x3B,0xEC,0x87 } }; // 7BE19E73-C9BF-468A-AC5A-A5E8653BEC87
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFObjectReferenceStream>{ 0x09EF5BE3,0xC8A7,0x469E,{ 0x8B,0x70,0x73,0xBF,0x25,0xBB,0x19,0x3F } }; // 09EF5BE3-C8A7-469E-8B70-73BF25BB193F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFOutputPolicy>{ 0x7F00F10A,0xDAED,0x41AF,{ 0xAB,0x26,0x5F,0xDF,0xA4,0xDF,0xBA,0x3C } }; // 7F00F10A-DAED-41AF-AB26-5FDFA4DFBA3C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFOutputSchema>{ 0x7BE0FC5B,0xABD9,0x44FB,{ 0xA5,0xC8,0xF5,0x01,0x36,0xE7,0x15,0x99 } }; // 7BE0FC5B-ABD9-44FB-A5C8-F50136E71599
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFOutputTrustAuthority>{ 0xD19F8E94,0xB126,0x4446,{ 0x89,0x0C,0x5D,0xCB,0x7A,0xD7,0x14,0x53 } }; // D19F8E94-B126-4446-890C-5DCB7AD71453
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMPClient>{ 0x6C4E655D,0xEAD8,0x4421,{ 0xB6,0xB9,0x54,0xDC,0xDB,0xBD,0xF8,0x20 } }; // 6C4E655D-EAD8-4421-B6B9-54DCDBBDF820
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMPClientApp>{ 0xC004F646,0xBE2C,0x48F3,{ 0x93,0xA2,0xA0,0x98,0x3E,0xBA,0x11,0x08 } }; // C004F646-BE2C-48F3-93A2-A0983EBA1108
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMPHost>{ 0xF70CA1A9,0xFDC7,0x4782,{ 0xB9,0x94,0xAD,0xFF,0xB1,0xC9,0x86,0x06 } }; // F70CA1A9-FDC7-4782-B994-ADFFB1C98606
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMPHostApp>{ 0x84D2054A,0x3AA1,0x4728,{ 0xA3,0xB0,0x44,0x0A,0x41,0x8C,0xF4,0x9C } }; // 84D2054A-3AA1-4728-A3B0-440A418CF49C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMPServer>{ 0x994E23AF,0x1CC2,0x493C,{ 0xB9,0xFA,0x46,0xF1,0xCB,0x04,0x0F,0xA4 } }; // 994E23AF-1CC2-493C-B9FA-46F1CB040FA4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMediaItem>{ 0x90EB3E6B,0xECBF,0x45CC,{ 0xB1,0xDA,0xC6,0xFE,0x3E,0xA7,0x0D,0x57 } }; // 90EB3E6B-ECBF-45CC-B1DA-C6FE3EA70D57
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMediaPlayer>{ 0xA714590A,0x58AF,0x430A,{ 0x85,0xBF,0x44,0xF5,0xEC,0x83,0x8D,0x85 } }; // A714590A-58AF-430A-85BF-44F5EC838D85
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPMediaPlayerCallback>{ 0x766C8FFB,0x5FDB,0x4FEA,{ 0xA2,0x8D,0xB9,0x12,0x99,0x6F,0x51,0xBD } }; // 766C8FFB-5FDB-4FEA-A28D-B912996F51BD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPluginControl>{ 0x5C6C44BF,0x1DB6,0x435B,{ 0x92,0x49,0xE8,0xCD,0x10,0xFD,0xEC,0x96 } }; // 5C6C44BF-1DB6-435B-9249-E8CD10FDEC96
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPluginControl2>{ 0xC6982083,0x3DDC,0x45CB,{ 0xAF,0x5E,0x0F,0x7A,0x8C,0xE4,0xDE,0x77 } }; // C6982083-3DDC-45CB-AF5E-0F7A8CE4DE77
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPresentationClock>{ 0x868CE85C,0x8EA9,0x4F55,{ 0xAB,0x82,0xB0,0x09,0xA9,0x10,0xA8,0x05 } }; // 868CE85C-8EA9-4F55-AB82-B009A910A805
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPresentationDescriptor>{ 0x03CB2711,0x24D7,0x4DB6,{ 0xA1,0x7F,0xF3,0xA7,0xA4,0x79,0xA5,0x36 } }; // 03CB2711-24D7-4DB6-A17F-F3A7A479A536
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFPresentationTimeSource>{ 0x7FF12CCE,0xF76F,0x41C2,{ 0x86,0x3B,0x16,0x66,0xC8,0xE5,0xE1,0x39 } }; // 7FF12CCE-F76F-41C2-863B-1666C8E5E139
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFProtectedEnvironmentAccess>{ 0xEF5DC845,0xF0D9,0x4EC9,{ 0xB0,0x0C,0xCB,0x51,0x83,0xD3,0x84,0x34 } }; // EF5DC845-F0D9-4EC9-B00C-CB5183D38434
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFQualityAdvise>{ 0xEC15E2E9,0xE36B,0x4F7C,{ 0x87,0x58,0x77,0xD4,0x52,0xEF,0x4C,0xE7 } }; // EC15E2E9-E36B-4F7C-8758-77D452EF4CE7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFQualityAdvise2>{ 0xF3706F0D,0x8EA2,0x4886,{ 0x80,0x00,0x71,0x55,0xE9,0xEC,0x2E,0xAE } }; // F3706F0D-8EA2-4886-8000-7155E9EC2EAE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFQualityAdviseLimits>{ 0xDFCD8E4D,0x30B5,0x4567,{ 0xAC,0xAA,0x8E,0xB5,0xB7,0x85,0x3D,0xC9 } }; // DFCD8E4D-30B5-4567-ACAA-8EB5B7853DC9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFQualityManager>{ 0x8D009D86,0x5B9F,0x4115,{ 0xB1,0xFC,0x9F,0x80,0xD5,0x2A,0xB8,0xAB } }; // 8D009D86-5B9F-4115-B1FC-9F80D52AB8AB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRateControl>{ 0x88DDCD21,0x03C3,0x4275,{ 0x91,0xED,0x55,0xEE,0x39,0x29,0x32,0x8F } }; // 88DDCD21-03C3-4275-91ED-55EE3929328F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRateSupport>{ 0x0A9CCDBC,0xD797,0x4563,{ 0x96,0x67,0x94,0xEC,0x5D,0x79,0x29,0x2D } }; // 0A9CCDBC-D797-4563-9667-94EC5D79292D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFReadWriteClassFactory>{ 0xE7FE2E12,0x661C,0x40DA,{ 0x92,0xF9,0x4F,0x00,0x2A,0xB6,0x76,0x27 } }; // E7FE2E12-661C-40DA-92F9-4F002AB67627
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRealTimeClient>{ 0x2347D60B,0x3FB5,0x480C,{ 0x88,0x03,0x8D,0xF3,0xAD,0xCD,0x3E,0xF0 } }; // 2347D60B-3FB5-480C-8803-8DF3ADCD3EF0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRealTimeClientEx>{ 0x03910848,0xAB16,0x4611,{ 0xB1,0x00,0x17,0xB8,0x8A,0xE2,0xF2,0x48 } }; // 03910848-AB16-4611-B100-17B88AE2F248
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRelativePanelReport>{ 0xF25362EA,0x2C0E,0x447F,{ 0x81,0xE2,0x75,0x59,0x14,0xCD,0xC0,0xC3 } }; // F25362EA-2C0E-447F-81E2-755914CDC0C3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRelativePanelWatcher>{ 0x421AF7F6,0x573E,0x4AD0,{ 0x8F,0xDA,0x2E,0x57,0xCE,0xDB,0x18,0xC6 } }; // 421AF7F6-573E-4AD0-8FDA-2E57CEDB18C6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRemoteAsyncCallback>{ 0xA27003D0,0x2354,0x4F2A,{ 0x8D,0x6A,0xAB,0x7C,0xFF,0x15,0x43,0x7E } }; // A27003D0-2354-4F2A-8D6A-AB7CFF15437E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRemoteDesktopPlugin>{ 0x1CDE6309,0xCAE0,0x4940,{ 0x90,0x7E,0xC1,0xEC,0x9C,0x3D,0x1D,0x4A } }; // 1CDE6309-CAE0-4940-907E-C1EC9C3D1D4A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFRemoteProxy>{ 0x994E23AD,0x1CC2,0x493C,{ 0xB9,0xFA,0x46,0xF1,0xCB,0x04,0x0F,0xA4 } }; // 994E23AD-1CC2-493C-B9FA-46F1CB040FA4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSAMIStyle>{ 0xA7E025DD,0x5303,0x4A62,{ 0x89,0xD6,0xE7,0x47,0xE1,0xEF,0xAC,0x73 } }; // A7E025DD-5303-4A62-89D6-E747E1EFAC73
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSSLCertificateManager>{ 0x61F7D887,0x1230,0x4A8B,{ 0xAE,0xBA,0x8A,0xD4,0x34,0xD1,0xA6,0x4D } }; // 61F7D887-1230-4A8B-AEBA-8AD434D1A64D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSample>{ 0xC40A00F2,0xB93A,0x4D80,{ 0xAE,0x8C,0x5A,0x1C,0x63,0x4F,0x58,0xE4 } }; // C40A00F2-B93A-4D80-AE8C-5A1C634F58E4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSampleAllocatorControl>{ 0xDA62B958,0x3A38,0x4A97,{ 0xBD,0x27,0x14,0x9C,0x64,0x0C,0x07,0x71 } }; // DA62B958-3A38-4A97-BD27-149C640C0771
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSampleGrabberSinkCallback>{ 0x8C7B80BF,0xEE42,0x4B59,{ 0xB1,0xDF,0x55,0x66,0x8E,0x1B,0xDC,0xA8 } }; // 8C7B80BF-EE42-4B59-B1DF-55668E1BDCA8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSampleGrabberSinkCallback2>{ 0xCA86AA50,0xC46E,0x429E,{ 0xAB,0x27,0x16,0xD6,0xAC,0x68,0x44,0xCB } }; // CA86AA50-C46E-429E-AB27-16D6AC6844CB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSampleOutputStream>{ 0x8FEED468,0x6F7E,0x440D,{ 0x86,0x9A,0x49,0xBD,0xD2,0x83,0xAD,0x0D } }; // 8FEED468-6F7E-440D-869A-49BDD283AD0D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSampleProtection>{ 0x8E36395F,0xC7B9,0x43C4,{ 0xA5,0x4D,0x51,0x2B,0x4A,0xF6,0x3C,0x95 } }; // 8E36395F-C7B9-43C4-A54D-512B4AF63C95
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSaveJob>{ 0xE9931663,0x80BF,0x4C6E,{ 0x98,0xAF,0x5D,0xCF,0x58,0x74,0x7D,0x1F } }; // E9931663-80BF-4C6E-98AF-5DCF58747D1F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSchemeHandler>{ 0x6D4C7B74,0x52A0,0x4BB7,{ 0xB0,0xDB,0x55,0xF2,0x9F,0x47,0xA6,0x68 } }; // 6D4C7B74-52A0-4BB7-B0DB-55F29F47A668
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSecureBuffer>{ 0xC1209904,0xE584,0x4752,{ 0xA2,0xD6,0x7F,0x21,0x69,0x3F,0x8B,0x21 } }; // C1209904-E584-4752-A2D6-7F21693F8B21
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSecureChannel>{ 0xD0AE555D,0x3B12,0x4D97,{ 0xB0,0x60,0x09,0x90,0xBC,0x5A,0xEB,0x67 } }; // D0AE555D-3B12-4D97-B060-0990BC5AEB67
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSeekInfo>{ 0x26AFEA53,0xD9ED,0x42B5,{ 0xAB,0x80,0xE6,0x4F,0x9E,0xE3,0x47,0x79 } }; // 26AFEA53-D9ED-42B5-AB80-E64F9EE34779
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorActivitiesReport>{ 0x683F7A5E,0x4A19,0x43CD,{ 0xB1,0xA9,0xDB,0xF4,0xAB,0x3F,0x77,0x77 } }; // 683F7A5E-4A19-43CD-B1A9-DBF4AB3F7777
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorActivitiesReportCallback>{ 0xDE5072EE,0xDBE3,0x46DC,{ 0x8A,0x87,0xB6,0xF6,0x31,0x19,0x47,0x51 } }; // DE5072EE-DBE3-46DC-8A87-B6F631194751
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorActivityMonitor>{ 0xD0CEF145,0xB3F4,0x4340,{ 0xA2,0xE5,0x7A,0x50,0x80,0xCA,0x05,0xCB } }; // D0CEF145-B3F4-4340-A2E5-7A5080CA05CB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorActivityReport>{ 0x3E8C4BE1,0xA8C2,0x4528,{ 0x90,0xDE,0x28,0x51,0xBD,0xE5,0xFE,0xAD } }; // 3E8C4BE1-A8C2-4528-90DE-2851BDE5FEAD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorDevice>{ 0xFB9F48F2,0x2A18,0x4E28,{ 0x97,0x30,0x78,0x6F,0x30,0xF0,0x4D,0xC4 } }; // FB9F48F2-2A18-4E28-9730-786F30F04DC4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorGroup>{ 0x4110243A,0x9757,0x461F,{ 0x89,0xF1,0xF2,0x23,0x45,0xBC,0xAB,0x4E } }; // 4110243A-9757-461F-89F1-F22345BCAB4E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorProcessActivity>{ 0x39DC7F4A,0xB141,0x4719,{ 0x81,0x3C,0xA7,0xF4,0x61,0x62,0xA2,0xB8 } }; // 39DC7F4A-B141-4719-813C-A7F46162A2B8
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorProfile>{ 0x22F765D1,0x8DAB,0x4107,{ 0x84,0x6D,0x56,0xBA,0xF7,0x22,0x15,0xE7 } }; // 22F765D1-8DAB-4107-846D-56BAF72215E7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorProfileCollection>{ 0xC95EA55B,0x0187,0x48BE,{ 0x93,0x53,0x8D,0x25,0x07,0x66,0x23,0x51 } }; // C95EA55B-0187-48BE-9353-8D2507662351
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorStream>{ 0xE9A42171,0xC56E,0x498A,{ 0x8B,0x39,0xED,0xA5,0xA0,0x70,0xB7,0xFC } }; // E9A42171-C56E-498A-8B39-EDA5A070B7FC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSensorTransformFactory>{ 0xEED9C2EE,0x66B4,0x4F18,{ 0xA6,0x97,0xAC,0x7D,0x39,0x60,0x21,0x5C } }; // EED9C2EE-66B4-4F18-A697-AC7D3960215C
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSequencerSource>{ 0x197CD219,0x19CB,0x4DE1,{ 0xA6,0x4C,0xAC,0xF2,0xED,0xCB,0xE5,0x9E } }; // 197CD219-19CB-4DE1-A64C-ACF2EDCBE59E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSharingEngineClassFactory>{ 0x2BA61F92,0x8305,0x413B,{ 0x97,0x33,0xFA,0xF1,0x5F,0x25,0x93,0x84 } }; // 2BA61F92-8305-413B-9733-FAF15F259384
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFShutdown>{ 0x97EC2EA4,0x0E42,0x4937,{ 0x97,0xAC,0x9D,0x6D,0x32,0x88,0x24,0xE1 } }; // 97EC2EA4-0E42-4937-97AC-9D6D328824E1
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSignedLibrary>{ 0x4A724BCA,0xFF6A,0x4C07,{ 0x8E,0x0D,0x7A,0x35,0x84,0x21,0xCF,0x06 } }; // 4A724BCA-FF6A-4C07-8E0D-7A358421CF06
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSimpleAudioVolume>{ 0x089EDF13,0xCF71,0x4338,{ 0x8D,0x13,0x9E,0x56,0x9D,0xBD,0xC3,0x19 } }; // 089EDF13-CF71-4338-8D13-9E569DBDC319
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSinkWriter>{ 0x3137F1CD,0xFE5E,0x4805,{ 0xA5,0xD8,0xFB,0x47,0x74,0x48,0xCB,0x3D } }; // 3137F1CD-FE5E-4805-A5D8-FB477448CB3D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSinkWriterCallback>{ 0x666F76DE,0x33D2,0x41B9,{ 0xA4,0x58,0x29,0xED,0x0A,0x97,0x2C,0x58 } }; // 666F76DE-33D2-41B9-A458-29ED0A972C58
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSinkWriterCallback2>{ 0x2456BD58,0xC067,0x4513,{ 0x84,0xFE,0x8D,0x0C,0x88,0xFF,0xDC,0x61 } }; // 2456BD58-C067-4513-84FE-8D0C88FFDC61
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSinkWriterEncoderConfig>{ 0x17C3779E,0x3CDE,0x4EDE,{ 0x8C,0x60,0x38,0x99,0xF5,0xF5,0x3A,0xD6 } }; // 17C3779E-3CDE-4EDE-8C60-3899F5F53AD6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSinkWriterEx>{ 0x588D72AB,0x5BC1,0x496A,{ 0x87,0x14,0xB7,0x06,0x17,0x14,0x1B,0x25 } }; // 588D72AB-5BC1-496A-8714-B70617141B25
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceBuffer>{ 0xE2CD3A4B,0xAF25,0x4D3D,{ 0x91,0x10,0xDA,0x0E,0x6F,0x8E,0xE8,0x77 } }; // E2CD3A4B-AF25-4D3D-9110-DA0E6F8EE877
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceBufferAppendMode>{ 0x19666FB4,0xBABE,0x4C55,{ 0xBC,0x03,0x0A,0x07,0x4D,0xA3,0x7E,0x2A } }; // 19666FB4-BABE-4C55-BC03-0A074DA37E2A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceBufferList>{ 0x249981F8,0x8325,0x41F3,{ 0xB8,0x0C,0x3B,0x9E,0x3A,0xAD,0x0C,0xBE } }; // 249981F8-8325-41F3-B80C-3B9E3AAD0CBE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceBufferNotify>{ 0x87E47623,0x2CEB,0x45D6,{ 0x9B,0x88,0xD8,0x52,0x0C,0x4D,0xCB,0xBC } }; // 87E47623-2CEB-45D6-9B88-D8520C4DCBBC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceOpenMonitor>{ 0x059054B3,0x027C,0x494C,{ 0xA2,0x7D,0x91,0x13,0x29,0x1C,0xF8,0x7F } }; // 059054B3-027C-494C-A27D-9113291CF87F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceReader>{ 0x70AE66F2,0xC809,0x4E4F,{ 0x89,0x15,0xBD,0xCB,0x40,0x6B,0x79,0x93 } }; // 70AE66F2-C809-4E4F-8915-BDCB406B7993
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceReaderCallback>{ 0xDEEC8D99,0xFA1D,0x4D82,{ 0x84,0xC2,0x2C,0x89,0x69,0x94,0x48,0x67 } }; // DEEC8D99-FA1D-4D82-84C2-2C8969944867
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceReaderCallback2>{ 0xCF839FE6,0x8C2A,0x4DD2,{ 0xB6,0xEA,0xC2,0x2D,0x69,0x61,0xAF,0x05 } }; // CF839FE6-8C2A-4DD2-B6EA-C22D6961AF05
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceReaderEx>{ 0x7B981CF0,0x560E,0x4116,{ 0x98,0x75,0xB0,0x99,0x89,0x5F,0x23,0xD7 } }; // 7B981CF0-560E-4116-9875-B099895F23D7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSourceResolver>{ 0xFBE5A32D,0xA497,0x4B61,{ 0xBB,0x85,0x97,0xB1,0xA8,0x48,0xA6,0xE3 } }; // FBE5A32D-A497-4B61-BB85-97B1A848A6E3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSpatialAudioObjectBuffer>{ 0xD396EC8C,0x605E,0x4249,{ 0x97,0x8D,0x72,0xAD,0x1C,0x31,0x28,0x72 } }; // D396EC8C-605E-4249-978D-72AD1C312872
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSpatialAudioSample>{ 0xABF28A9B,0x3393,0x4290,{ 0xBA,0x79,0x5F,0xFC,0x46,0xD9,0x86,0xB2 } }; // ABF28A9B-3393-4290-BA79-5FFC46D986B2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFStreamDescriptor>{ 0x56C03D9C,0x9DBB,0x45F5,{ 0xAB,0x4B,0xD8,0x0F,0x47,0xC0,0x59,0x38 } }; // 56C03D9C-9DBB-45F5-AB4B-D80F47C05938
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFStreamSink>{ 0x0A97B3CF,0x8E7C,0x4A3D,{ 0x8F,0x8C,0x0C,0x84,0x3D,0xC2,0x47,0xFB } }; // 0A97B3CF-8E7C-4A3D-8F8C-0C843DC247FB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFStreamingSinkConfig>{ 0x9DB7AA41,0x3CC5,0x40D4,{ 0x85,0x09,0x55,0x58,0x04,0xAD,0x34,0xCC } }; // 9DB7AA41-3CC5-40D4-8509-555804AD34CC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFSystemId>{ 0xFFF4AF3A,0x1FC1,0x4EF9,{ 0xA2,0x9B,0xD2,0x6C,0x49,0xE2,0xF3,0x1A } }; // FFF4AF3A-1FC1-4EF9-A29B-D26C49E2F31A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimecodeTranslate>{ 0xAB9D8661,0xF7E8,0x4EF4,{ 0x98,0x61,0x89,0xF3,0x34,0xF9,0x4E,0x74 } }; // AB9D8661-F7E8-4EF4-9861-89F334F94E74
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedText>{ 0x1F2A94C9,0xA3DF,0x430D,{ 0x9D,0x0F,0xAC,0xD8,0x5D,0xDC,0x29,0xAF } }; // 1F2A94C9-A3DF-430D-9D0F-ACD85DDC29AF
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextBinary>{ 0x4AE3A412,0x0545,0x43C4,{ 0xBF,0x6F,0x6B,0x97,0xA5,0xC6,0xC4,0x32 } }; // 4AE3A412-0545-43C4-BF6F-6B97A5C6C432
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextCue>{ 0x1E560447,0x9A2B,0x43E1,{ 0xA9,0x4C,0xB0,0xAA,0xAB,0xFB,0xFB,0xC9 } }; // 1E560447-9A2B-43E1-A94C-B0AAABFBFBC9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextCueList>{ 0xAD128745,0x211B,0x40A0,{ 0x99,0x81,0xFE,0x65,0xF1,0x66,0xD0,0xFD } }; // AD128745-211B-40A0-9981-FE65F166D0FD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextFormattedText>{ 0xE13AF3C1,0x4D47,0x4354,{ 0xB1,0xF5,0xE8,0x3A,0xE0,0xEC,0xAE,0x60 } }; // E13AF3C1-4D47-4354-B1F5-E83AE0ECAE60
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextNotify>{ 0xDF6B87B6,0xCE12,0x45DB,{ 0xAB,0xA7,0x43,0x2F,0xE0,0x54,0xE5,0x7D } }; // DF6B87B6-CE12-45DB-ABA7-432FE054E57D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextRegion>{ 0xC8D22AFC,0xBC47,0x4BDF,{ 0x9B,0x04,0x78,0x7E,0x49,0xCE,0x3F,0x58 } }; // C8D22AFC-BC47-4BDF-9B04-787E49CE3F58
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextStyle>{ 0x09B2455D,0xB834,0x4F01,{ 0xA3,0x47,0x90,0x52,0xE2,0x1C,0x45,0x0E } }; // 09B2455D-B834-4F01-A347-9052E21C450E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextTrack>{ 0x8822C32D,0x654E,0x4233,{ 0xBF,0x21,0xD7,0xF2,0xE6,0x7D,0x30,0xD4 } }; // 8822C32D-654E-4233-BF21-D7F2E67D30D4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimedTextTrackList>{ 0x23FF334C,0x442C,0x445F,{ 0xBC,0xCC,0xED,0xC4,0x38,0xAA,0x11,0xE2 } }; // 23FF334C-442C-445F-BCCC-EDC438AA11E2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTimer>{ 0xE56E4CBD,0x8F70,0x49D8,{ 0xA0,0xF8,0xED,0xB3,0xD6,0xAB,0x9B,0xF2 } }; // E56E4CBD-8F70-49D8-A0F8-EDB3D6AB9BF2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopoLoader>{ 0xDE9A6157,0xF660,0x4643,{ 0xB5,0x6A,0xDF,0x9F,0x79,0x98,0xC7,0xCD } }; // DE9A6157-F660-4643-B56A-DF9F7998C7CD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopology>{ 0x83CF873A,0xF6DA,0x4BC8,{ 0x82,0x3F,0xBA,0xCF,0xD5,0x5D,0xC4,0x33 } }; // 83CF873A-F6DA-4BC8-823F-BACFD55DC433
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopologyNode>{ 0x83CF873A,0xF6DA,0x4BC8,{ 0x82,0x3F,0xBA,0xCF,0xD5,0x5D,0xC4,0x30 } }; // 83CF873A-F6DA-4BC8-823F-BACFD55DC430
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopologyNodeAttributeEditor>{ 0x676AA6DD,0x238A,0x410D,{ 0xBB,0x99,0x65,0x66,0x8D,0x01,0x60,0x5A } }; // 676AA6DD-238A-410D-BB99-65668D01605A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopologyServiceLookup>{ 0xFA993889,0x4383,0x415A,{ 0xA9,0x30,0xDD,0x47,0x2A,0x8C,0xF6,0xF7 } }; // FA993889-4383-415A-A930-DD472A8CF6F7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTopologyServiceLookupClient>{ 0xFA99388A,0x4383,0x415A,{ 0xA9,0x30,0xDD,0x47,0x2A,0x8C,0xF6,0xF7 } }; // FA99388A-4383-415A-A930-DD472A8CF6F7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTrackedSample>{ 0x245BF8E9,0x0755,0x40F7,{ 0x88,0xA5,0xAE,0x0F,0x18,0xD5,0x5E,0x17 } }; // 245BF8E9-0755-40F7-88A5-AE0F18D55E17
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTranscodeProfile>{ 0x4ADFDBA3,0x7AB0,0x4953,{ 0xA6,0x2B,0x46,0x1E,0x7F,0xF3,0xDA,0x1E } }; // 4ADFDBA3-7AB0-4953-A62B-461E7FF3DA1E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTranscodeSinkInfoProvider>{ 0x8CFFCD2E,0x5A03,0x4A3A,{ 0xAF,0xF7,0xED,0xCD,0x10,0x7C,0x62,0x0E } }; // 8CFFCD2E-5A03-4A3A-AFF7-EDCD107C620E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTransform>{ 0xBF94C121,0x5B05,0x4E6F,{ 0x80,0x00,0xBA,0x59,0x89,0x61,0x41,0x4D } }; // BF94C121-5B05-4E6F-8000-BA598961414D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTrustedInput>{ 0x542612C4,0xA1B8,0x4632,{ 0xB5,0x21,0xDE,0x11,0xEA,0x64,0xA0,0xB0 } }; // 542612C4-A1B8-4632-B521-DE11EA64A0B0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFTrustedOutput>{ 0xD19F8E95,0xB126,0x4446,{ 0x89,0x0C,0x5D,0xCB,0x7A,0xD7,0x14,0x53 } }; // D19F8E95-B126-4446-890C-5DCB7AD71453
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoCaptureSampleAllocator>{ 0x725B77C7,0xCA9F,0x4FE5,{ 0x9D,0x72,0x99,0x46,0xBF,0x9B,0x3C,0x70 } }; // 725B77C7-CA9F-4FE5-9D72-9946BF9B3C70
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoDeviceID>{ 0xA38D9567,0x5A9C,0x4F3C,{ 0xB2,0x93,0x8E,0xB4,0x15,0xB2,0x79,0xBA } }; // A38D9567-5A9C-4F3C-B293-8EB415B279BA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoDisplayControl>{ 0xA490B1E4,0xAB84,0x4D31,{ 0xA1,0xB2,0x18,0x1E,0x03,0xB1,0x07,0x7A } }; // A490B1E4-AB84-4D31-A1B2-181E03B1077A
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoMediaType>{ 0xB99F381F,0xA8F9,0x47A2,{ 0xA5,0xAF,0xCA,0x3A,0x22,0x5A,0x38,0x90 } }; // B99F381F-A8F9-47A2-A5AF-CA3A225A3890
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoMixerBitmap>{ 0x814C7B20,0x0FDB,0x4EEC,{ 0xAF,0x8F,0xF9,0x57,0xC8,0xF6,0x9E,0xDC } }; // 814C7B20-0FDB-4EEC-AF8F-F957C8F69EDC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoMixerControl>{ 0xA5C6C53F,0xC202,0x4AA5,{ 0x96,0x95,0x17,0x5B,0xA8,0xC5,0x08,0xA5 } }; // A5C6C53F-C202-4AA5-9695-175BA8C508A5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoMixerControl2>{ 0x8459616D,0x966E,0x4930,{ 0xB6,0x58,0x54,0xFA,0x7E,0x5A,0x16,0xD3 } }; // 8459616D-966E-4930-B658-54FA7E5A16D3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoPositionMapper>{ 0x1F6A9F17,0xE70B,0x4E24,{ 0x8A,0xE4,0x0B,0x2C,0x3B,0xA7,0xA4,0xAE } }; // 1F6A9F17-E70B-4E24-8AE4-0B2C3BA7A4AE
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoPresenter>{ 0x29AFF080,0x182A,0x4A5D,{ 0xAF,0x3B,0x44,0x8F,0x3A,0x63,0x46,0xCB } }; // 29AFF080-182A-4A5D-AF3B-448F3A6346CB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoProcessor>{ 0x6AB0000C,0xFECE,0x4D1F,{ 0xA2,0xAC,0xA9,0x57,0x35,0x30,0x65,0x6E } }; // 6AB0000C-FECE-4D1F-A2AC-A9573530656E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoProcessorControl>{ 0xA3F675D5,0x6119,0x4F7F,{ 0xA1,0x00,0x1D,0x8B,0x28,0x0F,0x0E,0xFB } }; // A3F675D5-6119-4F7F-A100-1D8B280F0EFB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoProcessorControl2>{ 0xBDE633D3,0xE1DC,0x4A7F,{ 0xA6,0x93,0xBB,0xAE,0x39,0x9C,0x4A,0x20 } }; // BDE633D3-E1DC-4A7F-A693-BBAE399C4A20
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoProcessorControl3>{ 0x2424B3F2,0xEB23,0x40F1,{ 0x91,0xAA,0x74,0xBD,0xDE,0xEA,0x08,0x83 } }; // 2424B3F2-EB23-40F1-91AA-74BDDEEA0883
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoRenderer>{ 0xDFDFD197,0xA9CA,0x43D8,{ 0xB3,0x41,0x6A,0xF3,0x50,0x37,0x92,0xCD } }; // DFDFD197-A9CA-43D8-B341-6AF3503792CD
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoRendererEffectControl>{ 0x604D33D7,0xCF23,0x41D5,{ 0x82,0x24,0x5B,0xBB,0xB1,0xA8,0x74,0x75 } }; // 604D33D7-CF23-41D5-8224-5BBBB1A87475
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoSampleAllocator>{ 0x86CBC910,0xE533,0x4751,{ 0x8E,0x3B,0xF1,0x9B,0x5B,0x80,0x6A,0x03 } }; // 86CBC910-E533-4751-8E3B-F19B5B806A03
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoSampleAllocatorCallback>{ 0x992388B4,0x3372,0x4F67,{ 0x8B,0x6F,0xC8,0x4C,0x07,0x1F,0x47,0x51 } }; // 992388B4-3372-4F67-8B6F-C84C071F4751
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoSampleAllocatorEx>{ 0x545B3A48,0x3283,0x4F62,{ 0x86,0x6F,0xA6,0x2D,0x8F,0x59,0x8F,0x9F } }; // 545B3A48-3283-4F62-866F-A62D8F598F9F
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoSampleAllocatorNotify>{ 0xA792CDBE,0xC374,0x4E89,{ 0x83,0x35,0x27,0x8E,0x7B,0x99,0x56,0xA4 } }; // A792CDBE-C374-4E89-8335-278E7B9956A4
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFVideoSampleAllocatorNotifyEx>{ 0x3978AA1A,0x6D5B,0x4B7F,{ 0xA3,0x40,0x90,0x89,0x91,0x89,0xAE,0x34 } }; // 3978AA1A-6D5B-4B7F-A340-90899189AE34
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFWorkQueueServices>{ 0x35FE1BB8,0xA3A9,0x40FE,{ 0xBB,0xEC,0xEB,0x56,0x9C,0x9C,0xCC,0xA3 } }; // 35FE1BB8-A3A9-40FE-BBEC-EB569C9CCCA3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IMFWorkQueueServicesEx>{ 0x96BF961B,0x40FE,0x42F1,{ 0xBA,0x9D,0x32,0x02,0x38,0xB4,0x97,0x00 } }; // 96BF961B-40FE-42F1-BA9D-320238B49700
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IOPMVideoOutput>{ 0x0A15159D,0x41C7,0x4456,{ 0x93,0xE1,0x28,0x4C,0xD6,0x1D,0x4E,0x8D } }; // 0A15159D-41C7-4456-93E1-284CD61D4E8D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IPlayToControl>{ 0x607574EB,0xF4B6,0x45C1,{ 0xB0,0x8C,0xCB,0x71,0x51,0x22,0x90,0x1D } }; // 607574EB-F4B6-45C1-B08C-CB715122901D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IPlayToControlWithCapabilities>{ 0xAA9DD80F,0xC50A,0x4220,{ 0x91,0xC1,0x33,0x22,0x87,0xF8,0x2A,0x34 } }; // AA9DD80F-C50A-4220-91C1-332287F82A34
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IPlayToSourceClassFactory>{ 0x842B32A3,0x9B9B,0x4D1C,{ 0xB3,0xF3,0x49,0x19,0x32,0x48,0xA5,0x54 } }; // 842B32A3-9B9B-4D1C-B3F3-49193248A554
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IToc>{ 0xD6F05441,0xA919,0x423B,{ 0x91,0xA0,0x89,0xD5,0xB4,0xA8,0xAB,0x77 } }; // D6F05441-A919-423B-91A0-89D5B4A8AB77
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ITocCollection>{ 0x23FEE831,0xAE96,0x42DF,{ 0xB1,0x70,0x25,0xA0,0x48,0x47,0xA3,0xCA } }; // 23FEE831-AE96-42DF-B170-25A04847A3CA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ITocEntry>{ 0xF22F5E06,0x585C,0x4DEF,{ 0x85,0x23,0x65,0x55,0xCF,0xBC,0x0C,0xB3 } }; // F22F5E06-585C-4DEF-8523-6555CFBC0CB3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ITocEntryList>{ 0x3A8CCCBD,0x0EFD,0x43A3,{ 0xB8,0x38,0xF3,0x8A,0x55,0x2B,0xA2,0x37 } }; // 3A8CCCBD-0EFD-43A3-B838-F38A552BA237
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::ITocParser>{ 0xECFB9A55,0x9298,0x4F49,{ 0x88,0x7F,0x0B,0x36,0x20,0x65,0x99,0xD2 } }; // ECFB9A55-9298-4F49-887F-0B36206599D2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IValidateBinding>{ 0x04A578B2,0xE778,0x422A,{ 0xA8,0x05,0xB3,0xEE,0x54,0xD9,0x0B,0xD9 } }; // 04A578B2-E778-422A-A805-B3EE54D90BD9
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMCodecLeakyBucket>{ 0xA81BA647,0x6227,0x43B7,{ 0xB2,0x31,0xC7,0xB1,0x51,0x35,0xDD,0x7D } }; // A81BA647-6227-43B7-B231-C7B15135DD7D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMCodecOutputTimestamp>{ 0xB72ADF95,0x7ADC,0x4A72,{ 0xBC,0x05,0x57,0x7D,0x8E,0xA6,0xBF,0x68 } }; // B72ADF95-7ADC-4A72-BC05-577D8EA6BF68
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMCodecPrivateData>{ 0x73F0BE8E,0x57F7,0x4F01,{ 0xAA,0x66,0x9F,0x57,0x34,0x0C,0xFE,0x0E } }; // 73F0BE8E-57F7-4F01-AA66-9F57340CFE0E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMCodecProps>{ 0x2573E11A,0xF01A,0x4FDD,{ 0xA9,0x8D,0x63,0xB8,0xE0,0xBA,0x95,0x89 } }; // 2573E11A-F01A-4FDD-A98D-63B8E0BA9589
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMCodecStrings>{ 0xA7B2504B,0xE58A,0x47FB,{ 0x95,0x8B,0xCA,0xC7,0x16,0x5A,0x05,0x7D } }; // A7B2504B-E58A-47FB-958B-CAC7165A057D
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMColorConvProps>{ 0xE6A49E22,0xC099,0x421D,{ 0xAA,0xD3,0xC0,0x61,0xFB,0x4A,0xE8,0x5B } }; // E6A49E22-C099-421D-AAD3-C061FB4AE85B
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMColorLegalizerProps>{ 0x776C93B3,0xB72D,0x4508,{ 0xB6,0xD0,0x20,0x87,0x85,0xF5,0x53,0xE7 } }; // 776C93B3-B72D-4508-B6D0-208785F553E7
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMFrameInterpProps>{ 0x4C06BB9B,0x626C,0x4614,{ 0x83,0x29,0xCC,0x6A,0x21,0xB9,0x3F,0xA0 } }; // 4C06BB9B-626C-4614-8329-CC6A21B93FA0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMInterlaceProps>{ 0x7B12E5D1,0xBD22,0x48EA,{ 0xBC,0x06,0x98,0xE8,0x93,0x22,0x1C,0x89 } }; // 7B12E5D1-BD22-48EA-BC06-98E893221C89
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMResamplerProps>{ 0xE7E9984F,0xF09F,0x4DA4,{ 0x90,0x3F,0x6E,0x2E,0x0E,0xFE,0x56,0xB5 } }; // E7E9984F-F09F-4DA4-903F-6E2E0EFE56B5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMResizerProps>{ 0x57665D4C,0x0414,0x4FAA,{ 0x90,0x5B,0x10,0xE5,0x46,0xF8,0x1C,0x33 } }; // 57665D4C-0414-4FAA-905B-10E546F81C33
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMSampleExtensionSupport>{ 0x9BCA9884,0x0604,0x4C2A,{ 0x87,0xDA,0x79,0x3F,0xF4,0xD5,0x86,0xC3 } }; // 9BCA9884-0604-4C2A-87DA-793FF4D586C3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMValidate>{ 0xCEE3DEF2,0x3808,0x414D,{ 0xBE,0x66,0xFA,0xFD,0x47,0x22,0x10,0xBC } }; // CEE3DEF2-3808-414D-BE66-FAFD472210BC
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMVideoDecoderHurryup>{ 0x352BB3BD,0x2D4D,0x4323,{ 0x9E,0x71,0xDC,0xDC,0xFB,0xD5,0x3C,0xA6 } }; // 352BB3BD-2D4D-4323-9E71-DCDCFBD53CA6
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMVideoDecoderReconBuffer>{ 0x45BDA2AC,0x88E2,0x4923,{ 0x98,0xBA,0x39,0x49,0x08,0x07,0x11,0xA3 } }; // 45BDA2AC-88E2-4923-98BA-3949080711A3
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::IWMVideoForceKeyFrame>{ 0x9F8496BE,0x5B9A,0x41B9,{ 0xA9,0xE8,0xF2,0x1C,0xD8,0x05,0x96,0xC2 } }; // 9F8496BE-5B9A-41B9-A9E8-F21CD80596C2
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::KSPROPSETID_OPMVideoOutput>{ 0x06F414BB,0xF43A,0x4FE2,{ 0xA5,0x66,0x77,0x4B,0x4C,0x81,0xF0,0xDB } }; // 06F414BB-F43A-4FE2-A566-774B4C81F0DB
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MFAMRNBByteStreamHandler>{ 0xEFE6208A,0x0A2C,0x49FA,{ 0x8A,0x01,0x37,0x68,0xB5,0x59,0xB6,0xDA } }; // EFE6208A-0A2C-49FA-8A01-3768B559B6DA
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MFAMRNBSinkClassFactory>{ 0xB0271158,0x70D2,0x4C5B,{ 0x9F,0x94,0x76,0xF5,0x49,0xD9,0x0F,0xDF } }; // B0271158-70D2-4C5B-9F94-76F549D90FDF
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MFFLACBytestreamHandler>{ 0x0E41CFB8,0x0506,0x40F4,{ 0xA5,0x16,0x77,0xCC,0x23,0x64,0x2D,0x91 } }; // 0E41CFB8-0506-40F4-A516-77CC23642D91
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MFFLACSinkClassFactory>{ 0x7D39C56F,0x6075,0x47C9,{ 0x9B,0xAE,0x8C,0xF9,0xE5,0x31,0xB5,0xF5 } }; // 7D39C56F-6075-47C9-9BAE-8CF9E531B5F5
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MP3ACMCodecWrapper>{ 0x11103421,0x354C,0x4CCA,{ 0xA7,0xA3,0x1A,0xFF,0x9A,0x5B,0x67,0x01 } }; // 11103421-354C-4CCA-A7A3-1AFF9A5B6701
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MSAMRNBDecoder>{ 0x265011AE,0x5481,0x4F77,{ 0xA2,0x95,0xAB,0xB6,0xFF,0xE8,0xD6,0x3E } }; // 265011AE-5481-4F77-A295-ABB6FFE8D63E
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MSAMRNBEncoder>{ 0x2FAE8AFE,0x04A3,0x423A,{ 0xA8,0x14,0x85,0xDB,0x45,0x47,0x12,0xB0 } }; // 2FAE8AFE-04A3-423A-A814-85DB454712B0
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::MULawCodecWrapper>{ 0x92B66080,0x5E2D,0x449E,{ 0x90,0xC4,0xC4,0x1F,0x26,0x8E,0x55,0x14 } }; // 92B66080-5E2D-449E-90C4-C41F268E5514
    template <> inline constexpr guid guid_v<Windows::Win32::MediaFoundation::VorbisDecoderMFT>{ 0x1A198EF2,0x60E5,0x4EA8,{ 0x90,0xD8,0xDA,0x1F,0x28,0x32,0xC2,0x88 } }; // 1A198EF2-60E5-4EA8-90D8-DA1F2832C288
#pragma endregion guids

}
#endif
