// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Monitor_0_H
#define WIN32_Windows_Win32_Monitor_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Monitor
{
#pragma region enums
    enum class MC_COLOR_TEMPERATURE : int32_t
    {
        MC_COLOR_TEMPERATURE_UNKNOWN = 0,
        MC_COLOR_TEMPERATURE_4000K = 1,
        MC_COLOR_TEMPERATURE_5000K = 2,
        MC_COLOR_TEMPERATURE_6500K = 3,
        MC_COLOR_TEMPERATURE_7500K = 4,
        MC_COLOR_TEMPERATURE_8200K = 5,
        MC_COLOR_TEMPERATURE_9300K = 6,
        MC_COLOR_TEMPERATURE_10000K = 7,
        MC_COLOR_TEMPERATURE_11500K = 8,
    };
    enum class MC_DISPLAY_TECHNOLOGY_TYPE : int32_t
    {
        MC_SHADOW_MASK_CATHODE_RAY_TUBE = 0,
        MC_APERTURE_GRILL_CATHODE_RAY_TUBE = 1,
        MC_THIN_FILM_TRANSISTOR = 2,
        MC_LIQUID_CRYSTAL_ON_SILICON = 3,
        MC_PLASMA = 4,
        MC_ORGANIC_LIGHT_EMITTING_DIODE = 5,
        MC_ELECTROLUMINESCENT = 6,
        MC_MICROELECTROMECHANICAL = 7,
        MC_FIELD_EMISSION_DEVICE = 8,
    };
    enum class MC_DRIVE_TYPE : int32_t
    {
        MC_RED_DRIVE = 0,
        MC_GREEN_DRIVE = 1,
        MC_BLUE_DRIVE = 2,
    };
    enum class MC_GAIN_TYPE : int32_t
    {
        MC_RED_GAIN = 0,
        MC_GREEN_GAIN = 1,
        MC_BLUE_GAIN = 2,
    };
    enum class MC_POSITION_TYPE : int32_t
    {
        MC_HORIZONTAL_POSITION = 0,
        MC_VERTICAL_POSITION = 1,
    };
    enum class MC_SIZE_TYPE : int32_t
    {
        MC_WIDTH = 0,
        MC_HEIGHT = 1,
    };
    enum class MC_VCP_CODE_TYPE : int32_t
    {
        MC_MOMENTARY = 0,
        MC_SET_PARAMETER = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct MC_TIMING_REPORT;
    struct PHYSICAL_MONITOR;
#pragma endregion forward_declarations

#pragma region delegates
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
