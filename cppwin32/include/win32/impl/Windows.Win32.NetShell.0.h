// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetShell_0_H
#define WIN32_Windows_Win32_NetShell_0_H
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::NetShell
{
#pragma region enums
    enum class NS_CMD_FLAGS : int32_t
    {
        CMD_FLAG_PRIVATE = 1,
        CMD_FLAG_INTERACTIVE = 2,
        CMD_FLAG_LOCAL = 8,
        CMD_FLAG_ONLINE = 16,
        CMD_FLAG_HIDDEN = 32,
        CMD_FLAG_LIMIT_MASK = 65535,
        CMD_FLAG_PRIORITY = -2147483648,
    };
    enum class NS_EVENTS : int32_t
    {
        NS_EVENT_LOOP = 65536,
        NS_EVENT_LAST_N = 1,
        NS_EVENT_LAST_SECS = 2,
        NS_EVENT_FROM_N = 4,
        NS_EVENT_FROM_START = 8,
    };
    enum class NS_MODE_CHANGE : int32_t
    {
        NETSH_COMMIT = 0,
        NETSH_UNCOMMIT = 1,
        NETSH_FLUSH = 2,
        NETSH_COMMIT_STATE = 3,
        NETSH_SAVE = 4,
    };
    enum class NS_REQS : int32_t
    {
        NS_REQ_ZERO = 0,
        NS_REQ_PRESENT = 1,
        NS_REQ_ALLOW_MULTIPLE = 2,
        NS_REQ_ONE_OR_MORE = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct CMD_ENTRY;
    struct CMD_GROUP_ENTRY;
    struct NS_CONTEXT_ATTRIBUTES;
    struct NS_HELPER_ATTRIBUTES;
    struct TAG_TYPE;
    struct TOKEN_VALUE;
#pragma endregion forward_declarations

#pragma region delegates
    using GET_RESOURCE_STRING_FN = uint32_t __stdcall(uint32_t, uint16_t*, uint32_t);
    using PGET_RESOURCE_STRING_FN = uint32_t __stdcall();
    using NS_CONTEXT_COMMIT_FN = uint32_t __stdcall(uint32_t);
    using PNS_CONTEXT_COMMIT_FN = uint32_t __stdcall();
    using NS_CONTEXT_CONNECT_FN = uint32_t __stdcall(uint16_t*);
    using PNS_CONTEXT_CONNECT_FN = uint32_t __stdcall();
    using NS_CONTEXT_DUMP_FN = uint32_t __stdcall(uint16_t*, uint16_t**, uint32_t, void*);
    using PNS_CONTEXT_DUMP_FN = uint32_t __stdcall();
    using NS_DLL_STOP_FN = uint32_t __stdcall(uint32_t);
    using PNS_DLL_STOP_FN = uint32_t __stdcall();
    using NS_HELPER_START_FN = uint32_t __stdcall(::win32::guid*, uint32_t);
    using PNS_HELPER_START_FN = uint32_t __stdcall();
    using NS_HELPER_STOP_FN = uint32_t __stdcall(uint32_t);
    using PNS_HELPER_STOP_FN = uint32_t __stdcall();
    using FN_HANDLE_CMD = uint32_t __stdcall(uint16_t*, uint16_t**, uint32_t, uint32_t, uint32_t, void*, int32_t*);
    using PFN_HANDLE_CMD = uint32_t __stdcall();
    using NS_OSVERSIONCHECK = Windows::Win32::SystemServices::BOOL __stdcall(uint32_t, uint32_t, uint16_t*, uint16_t*, uint16_t*, uint16_t*, uint32_t, uint32_t);
    using PNS_OSVERSIONCHECK = Windows::Win32::SystemServices::BOOL __stdcall();
    using NS_DLL_INIT_FN = uint32_t __stdcall(uint32_t, void*);
    using PNS_DLL_INIT_FN = uint32_t __stdcall();
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
