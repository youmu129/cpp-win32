// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_NetworkDiagnosticsFramework_2_H
#define WIN32_Windows_Win32_NetworkDiagnosticsFramework_2_H
#include "win32/impl/Windows.Win32.NetworkDiagnosticsFramework.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    int32_t __stdcall WIN32_IMPL_NdfCreateIncident(uint16_t* helperClassName, uint32_t celt, win32::Windows::Win32::NetworkDiagnosticsFramework::HELPER_ATTRIBUTE* attributes, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateWinSockIncident(size_t sock, uint16_t* host, uint16_t port, uint16_t* appId, win32::Windows::Win32::Security::SID* userId, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateWebIncident(uint16_t* url, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateWebIncidentEx(uint16_t* url, win32::Windows::Win32::SystemServices::BOOL useWinHTTP, uint16_t* moduleName, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateSharingIncident(uint16_t* UNCPath, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateDNSIncident(uint16_t* hostname, uint16_t queryType, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateConnectivityIncident(void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateNetConnectionIncident(void** handle, ::win32::guid id) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreatePnrpIncident(uint16_t* cloudname, uint16_t* peername, win32::Windows::Win32::SystemServices::BOOL diagnosePublish, uint16_t* appId, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCreateGroupingIncident(uint16_t* CloudName, uint16_t* GroupName, uint16_t* Identity, uint16_t* Invitation, win32::Windows::Win32::NetworkDrivers::SOCKET_ADDRESS_LIST* Addresses, uint16_t* appId, void** handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfExecuteDiagnosis(void* handle, win32::Windows::Win32::WindowsAndMessaging::HWND hwnd) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCloseIncident(void* handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfDiagnoseIncident(void* Handle, uint32_t* RootCauseCount, win32::Windows::Win32::NetworkDiagnosticsFramework::RootCauseInfo** RootCauses, uint32_t dwWait, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfRepairIncident(void* Handle, win32::Windows::Win32::NetworkDiagnosticsFramework::RepairInfoEx* RepairEx, uint32_t dwWait) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfCancelIncident(void* Handle) noexcept;
    int32_t __stdcall WIN32_IMPL_NdfGetTraceFile(void* Handle, uint16_t** TraceFileLocation) noexcept;
}
WIN32_IMPL_LINK(NdfCreateIncident, 16)
WIN32_IMPL_LINK(NdfCreateWinSockIncident, 24)
WIN32_IMPL_LINK(NdfCreateWebIncident, 8)
WIN32_IMPL_LINK(NdfCreateWebIncidentEx, 16)
WIN32_IMPL_LINK(NdfCreateSharingIncident, 8)
WIN32_IMPL_LINK(NdfCreateDNSIncident, 12)
WIN32_IMPL_LINK(NdfCreateConnectivityIncident, 4)
WIN32_IMPL_LINK(NdfCreateNetConnectionIncident, 8)
WIN32_IMPL_LINK(NdfCreatePnrpIncident, 20)
WIN32_IMPL_LINK(NdfCreateGroupingIncident, 28)
WIN32_IMPL_LINK(NdfExecuteDiagnosis, 8)
WIN32_IMPL_LINK(NdfCloseIncident, 4)
WIN32_IMPL_LINK(NdfDiagnoseIncident, 20)
WIN32_IMPL_LINK(NdfRepairIncident, 12)
WIN32_IMPL_LINK(NdfCancelIncident, 4)
WIN32_IMPL_LINK(NdfGetTraceFile, 8)

#pragma endregion abi_methods

#endif
