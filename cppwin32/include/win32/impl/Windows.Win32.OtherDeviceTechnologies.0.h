// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_OtherDeviceTechnologies_0_H
#define WIN32_Windows_Win32_OtherDeviceTechnologies_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Com
{
    struct IUnknown;
}
WIN32_EXPORT namespace win32::Windows::Win32::OtherDeviceTechnologies
{
#pragma region enums
    enum class DeviceDiscoveryMechanism : int32_t
    {
        MulticastDiscovery = 0,
        DirectedDiscovery = 1,
        SecureDirectedDiscovery = 2,
    };
    enum class PropertyConstraint : int32_t
    {
        QC_EQUALS = 0,
        QC_NOTEQUAL = 1,
        QC_LESSTHAN = 2,
        QC_LESSTHANOREQUAL = 3,
        QC_GREATERTHAN = 4,
        QC_GREATERTHANOREQUAL = 5,
        QC_STARTSWITH = 6,
        QC_EXISTS = 7,
        QC_DOESNOTEXIST = 8,
        QC_CONTAINS = 9,
    };
    enum class QueryCategoryType : int32_t
    {
        QCT_PROVIDER = 0,
        QCT_LAYERED = 1,
    };
    enum class QueryUpdateAction : int32_t
    {
        QUA_ADD = 0,
        QUA_REMOVE = 1,
        QUA_CHANGE = 2,
    };
    enum class SystemVisibilityFlags : int32_t
    {
        SVF_SYSTEM = 0,
        SVF_USER = 1,
    };
    enum class WSDEventType : int32_t
    {
        WSDET_NONE = 0,
        WSDET_INCOMING_MESSAGE = 1,
        WSDET_INCOMING_FAULT = 2,
        WSDET_TRANSMISSION_FAILURE = 3,
        WSDET_RESPONSE_TIMEOUT = 4,
    };
    enum class WSDUdpMessageType : int32_t
    {
        ONE_WAY = 0,
        TWO_WAY = 1,
    };
    enum class WSD_CONFIG_PARAM_TYPE : int32_t
    {
        WSD_CONFIG_MAX_INBOUND_MESSAGE_SIZE = 1,
        WSD_CONFIG_MAX_OUTBOUND_MESSAGE_SIZE = 2,
        WSD_SECURITY_SSL_CERT_FOR_CLIENT_AUTH = 3,
        WSD_SECURITY_SSL_SERVER_CERT_VALIDATION = 4,
        WSD_SECURITY_SSL_CLIENT_CERT_VALIDATION = 5,
        WSD_SECURITY_SSL_NEGOTIATE_CLIENT_CERT = 6,
        WSD_SECURITY_COMPACTSIG_SIGNING_CERT = 7,
        WSD_SECURITY_COMPACTSIG_VALIDATION = 8,
        WSD_CONFIG_HOSTING_ADDRESSES = 9,
        WSD_CONFIG_DEVICE_ADDRESSES = 10,
        WSD_SECURITY_REQUIRE_HTTP_CLIENT_AUTH = 11,
        WSD_SECURITY_REQUIRE_CLIENT_CERT_OR_HTTP_CLIENT_AUTH = 12,
        WSD_SECURITY_USE_HTTP_CLIENT_AUTH = 13,
    };
    enum class WSD_PROTOCOL_TYPE : int32_t
    {
        WSD_PT_NONE = 0,
        WSD_PT_UDP = 1,
        WSD_PT_HTTP = 2,
        WSD_PT_HTTPS = 4,
        WSD_PT_ALL = 255,
    };
    enum class __MIDL___MIDL_itf_wsdxml_0000_0000_0001 : int32_t
    {
        OpNone = 0,
        OpEndOfTable = 1,
        OpBeginElement_ = 2,
        OpBeginAnyElement = 3,
        OpEndElement = 4,
        OpElement_ = 5,
        OpAnyElement = 6,
        OpAnyElements = 7,
        OpAnyText = 8,
        OpAttribute_ = 9,
        OpBeginChoice = 10,
        OpEndChoice = 11,
        OpBeginSequence = 12,
        OpEndSequence = 13,
        OpBeginAll = 14,
        OpEndAll = 15,
        OpAnything = 16,
        OpAnyNumber = 17,
        OpOneOrMore = 18,
        OpOptional = 19,
        OpFormatBool_ = 20,
        OpFormatInt8_ = 21,
        OpFormatInt16_ = 22,
        OpFormatInt32_ = 23,
        OpFormatInt64_ = 24,
        OpFormatUInt8_ = 25,
        OpFormatUInt16_ = 26,
        OpFormatUInt32_ = 27,
        OpFormatUInt64_ = 28,
        OpFormatUnicodeString_ = 29,
        OpFormatDom_ = 30,
        OpFormatStruct_ = 31,
        OpFormatUri_ = 32,
        OpFormatUuidUri_ = 33,
        OpFormatName_ = 34,
        OpFormatListInsertTail_ = 35,
        OpFormatType_ = 36,
        OpFormatDynamicType_ = 37,
        OpFormatLookupType_ = 38,
        OpFormatDuration_ = 39,
        OpFormatDateTime_ = 40,
        OpFormatFloat_ = 41,
        OpFormatDouble_ = 42,
        OpProcess_ = 43,
        OpQualifiedAttribute_ = 44,
        OpFormatXMLDeclaration_ = 45,
        OpFormatMax = 46,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct IFunctionDiscoveryProviderRefresh;
    struct IFunctionInstanceCollectionQuery2;
    struct IFunctionInstanceCollectionQueryCollection;
    struct IFunctionInstanceQuery2;
    struct REQUESTBODY_GetStatus;
    struct REQUESTBODY_Renew;
    struct REQUESTBODY_Subscribe;
    struct REQUESTBODY_Unsubscribe;
    struct RESPONSEBODY_GetMetadata;
    struct RESPONSEBODY_GetStatus;
    struct RESPONSEBODY_Renew;
    struct RESPONSEBODY_Subscribe;
    struct RESPONSEBODY_SubscriptionEnd;
    struct SOCKADDR_STORAGE;
    struct WSDUdpRetransmitParams;
    struct WSDXML_ATTRIBUTE;
    struct WSDXML_ELEMENT;
    struct WSDXML_ELEMENT_LIST;
    struct WSDXML_NAME;
    struct WSDXML_NAMESPACE;
    struct WSDXML_NODE;
    struct WSDXML_PREFIX_MAPPING;
    struct WSDXML_TEXT;
    struct WSDXML_TYPE;
    struct WSD_APP_SEQUENCE;
    struct WSD_BYE;
    struct WSD_CONFIG_ADDRESSES;
    struct WSD_CONFIG_PARAM;
    struct WSD_DATETIME;
    struct WSD_DURATION;
    struct WSD_ENDPOINT_REFERENCE;
    struct WSD_ENDPOINT_REFERENCE_LIST;
    struct WSD_EVENT;
    struct WSD_EVENTING_DELIVERY_MODE;
    struct WSD_EVENTING_DELIVERY_MODE_PUSH;
    struct WSD_EVENTING_EXPIRES;
    struct WSD_EVENTING_FILTER;
    struct WSD_EVENTING_FILTER_ACTION;
    struct WSD_HANDLER_CONTEXT;
    struct WSD_HEADER_RELATESTO;
    struct WSD_HELLO;
    struct WSD_HOST_METADATA;
    struct WSD_LOCALIZED_STRING;
    struct WSD_LOCALIZED_STRING_LIST;
    struct WSD_METADATA_SECTION;
    struct WSD_METADATA_SECTION_LIST;
    struct WSD_NAME_LIST;
    struct WSD_OPERATION;
    struct WSD_PORT_TYPE;
    struct WSD_PROBE;
    struct WSD_PROBE_MATCH;
    struct WSD_PROBE_MATCHES;
    struct WSD_PROBE_MATCH_LIST;
    struct WSD_REFERENCE_PARAMETERS;
    struct WSD_REFERENCE_PROPERTIES;
    struct WSD_RELATIONSHIP_METADATA;
    struct WSD_RESOLVE;
    struct WSD_RESOLVE_MATCH;
    struct WSD_RESOLVE_MATCHES;
    struct WSD_SCOPES;
    struct WSD_SECURITY_CERT_VALIDATION;
    struct WSD_SECURITY_CERT_VALIDATION_V1;
    struct WSD_SECURITY_SIGNATURE_VALIDATION;
    struct WSD_SERVICE_METADATA;
    struct WSD_SERVICE_METADATA_LIST;
    struct WSD_SOAP_FAULT;
    struct WSD_SOAP_FAULT_CODE;
    struct WSD_SOAP_FAULT_REASON;
    struct WSD_SOAP_FAULT_SUBCODE;
    struct WSD_SOAP_HEADER;
    struct WSD_SOAP_MESSAGE;
    struct WSD_SYNCHRONOUS_RESPONSE_CONTEXT;
    struct WSD_THIS_DEVICE_METADATA;
    struct WSD_THIS_MODEL_METADATA;
    struct WSD_UNKNOWN_LOOKUP;
    struct WSD_URI_LIST;
    struct CFunctionDiscoveryNotificationWrapper;
    struct IFunctionDiscovery;
    struct IFunctionDiscoveryNotification;
    struct IFunctionDiscoveryProvider;
    struct IFunctionDiscoveryProviderFactory;
    struct IFunctionDiscoveryProviderQuery;
    struct IFunctionDiscoveryServiceProvider;
    struct IFunctionInstance;
    struct IFunctionInstanceCollection;
    struct IFunctionInstanceCollectionQuery;
    struct IFunctionInstanceQuery;
    struct IPNPXAssociation;
    struct IPNPXDeviceAssociation;
    struct IPropertyStoreCollection;
    struct IProviderProperties;
    struct IProviderPropertyConstraintCollection;
    struct IProviderPublishing;
    struct IProviderQueryConstraintCollection;
    struct IWSDAddress;
    struct IWSDAsyncCallback;
    struct IWSDAsyncResult;
    struct IWSDAttachment;
    struct IWSDDeviceHost;
    struct IWSDDeviceHostNotify;
    struct IWSDDeviceProxy;
    struct IWSDEndpointProxy;
    struct IWSDEventingStatus;
    struct IWSDHttpAddress;
    struct IWSDHttpAuthParameters;
    struct IWSDHttpMessageParameters;
    struct IWSDInboundAttachment;
    struct IWSDMessageParameters;
    struct IWSDMetadataExchange;
    struct IWSDOutboundAttachment;
    struct IWSDSSLClientCertificate;
    struct IWSDScopeMatchingRule;
    struct IWSDServiceMessaging;
    struct IWSDServiceProxy;
    struct IWSDServiceProxyEventing;
    struct IWSDSignatureProperty;
    struct IWSDTransportAddress;
    struct IWSDUdpAddress;
    struct IWSDUdpMessageParameters;
    struct IWSDXMLContext;
    struct IWSDiscoveredService;
    struct IWSDiscoveryProvider;
    struct IWSDiscoveryProviderNotify;
    struct IWSDiscoveryPublisher;
    struct IWSDiscoveryPublisherNotify;
    struct PNPXAssociation;
    struct PNPXPairingHandler;
#pragma endregion forward_declarations

#pragma region delegates
    using WSD_STUB_FUNCTION = int32_t __stdcall(Windows::Win32::Com::IUnknown*, Windows::Win32::OtherDeviceTechnologies::IWSDServiceMessaging*, Windows::Win32::OtherDeviceTechnologies::WSD_EVENT*);
    using PWSD_SOAP_MESSAGE_HANDLER = int32_t __stdcall(Windows::Win32::Com::IUnknown*, Windows::Win32::OtherDeviceTechnologies::WSD_EVENT*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscovery>{ 0x4DF99B70,0xE148,0x4432,{ 0xB0,0x04,0x4C,0x9E,0xEB,0x53,0x5A,0x5E } }; // 4DF99B70-E148-4432-B004-4C9EEB535A5E
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscoveryNotification>{ 0x5F6C1BA8,0x5330,0x422E,{ 0xA3,0x68,0x57,0x2B,0x24,0x4D,0x3F,0x87 } }; // 5F6C1BA8-5330-422E-A368-572B244D3F87
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscoveryProvider>{ 0xDCDE394F,0x1478,0x4813,{ 0xA4,0x02,0xF6,0xFB,0x10,0x65,0x72,0x22 } }; // DCDE394F-1478-4813-A402-F6FB10657222
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscoveryProviderFactory>{ 0x86443FF0,0x1AD5,0x4E68,{ 0xA4,0x5A,0x40,0xC2,0xC3,0x29,0xDE,0x3B } }; // 86443FF0-1AD5-4E68-A45A-40C2C329DE3B
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscoveryProviderQuery>{ 0x6876EA98,0xBAEC,0x46DB,{ 0xBC,0x20,0x75,0xA7,0x6E,0x26,0x7A,0x3A } }; // 6876EA98-BAEC-46DB-BC20-75A76E267A3A
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionDiscoveryServiceProvider>{ 0x4C81ED02,0x1B04,0x43F2,{ 0xA4,0x51,0x69,0x96,0x6C,0xBC,0xD1,0xC2 } }; // 4C81ED02-1B04-43F2-A451-69966CBCD1C2
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionInstance>{ 0x33591C10,0x0BED,0x4F02,{ 0xB0,0xAB,0x15,0x30,0xD5,0x53,0x3E,0xE9 } }; // 33591C10-0BED-4F02-B0AB-1530D5533EE9
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionInstanceCollection>{ 0xF0A3D895,0x855C,0x42A2,{ 0x94,0x8D,0x2F,0x97,0xD4,0x50,0xEC,0xB1 } }; // F0A3D895-855C-42A2-948D-2F97D450ECB1
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionInstanceCollectionQuery>{ 0x57CC6FD2,0xC09A,0x4289,{ 0xBB,0x72,0x25,0xF0,0x41,0x42,0x05,0x8E } }; // 57CC6FD2-C09A-4289-BB72-25F04142058E
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IFunctionInstanceQuery>{ 0x6242BC6B,0x90EC,0x4B37,{ 0xBB,0x46,0xE2,0x29,0xFD,0x84,0xED,0x95 } }; // 6242BC6B-90EC-4B37-BB46-E229FD84ED95
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IPNPXAssociation>{ 0x0BD7E521,0x4DA6,0x42D5,{ 0x81,0xBA,0x19,0x81,0xB6,0xB9,0x40,0x75 } }; // 0BD7E521-4DA6-42D5-81BA-1981B6B94075
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IPNPXDeviceAssociation>{ 0xEED366D0,0x35B8,0x4FC5,{ 0x8D,0x20,0x7E,0x5B,0xD3,0x1F,0x6D,0xED } }; // EED366D0-35B8-4FC5-8D20-7E5BD31F6DED
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IPropertyStoreCollection>{ 0xD14D9C30,0x12D2,0x42D8,{ 0xBC,0xE4,0xC6,0x0C,0x2B,0xB2,0x26,0xFA } }; // D14D9C30-12D2-42D8-BCE4-C60C2BB226FA
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IProviderProperties>{ 0xCF986EA6,0x3B5F,0x4C5F,{ 0xB8,0x8A,0x2F,0x8B,0x20,0xCE,0xEF,0x17 } }; // CF986EA6-3B5F-4C5F-B88A-2F8B20CEEF17
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IProviderPropertyConstraintCollection>{ 0xF4FAE42F,0x5778,0x4A13,{ 0x85,0x40,0xB5,0xFD,0x8C,0x13,0x98,0xDD } }; // F4FAE42F-5778-4A13-8540-B5FD8C1398DD
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IProviderPublishing>{ 0xCD1B9A04,0x206C,0x4A05,{ 0xA0,0xC8,0x16,0x35,0xA2,0x1A,0x2B,0x7C } }; // CD1B9A04-206C-4A05-A0C8-1635A21A2B7C
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IProviderQueryConstraintCollection>{ 0x9C243E11,0x3261,0x4BCD,{ 0xB9,0x22,0x84,0xA8,0x73,0xD4,0x60,0xAE } }; // 9C243E11-3261-4BCD-B922-84A873D460AE
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDAddress>{ 0xB9574C6C,0x12A6,0x4F74,{ 0x93,0xA1,0x33,0x18,0xFF,0x60,0x57,0x59 } }; // B9574C6C-12A6-4F74-93A1-3318FF605759
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDAsyncCallback>{ 0xA63E109D,0xCE72,0x49E2,{ 0xBA,0x98,0xE8,0x45,0xF5,0xEE,0x16,0x66 } }; // A63E109D-CE72-49E2-BA98-E845F5EE1666
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDAsyncResult>{ 0x11A9852A,0x8DD8,0x423E,{ 0xB5,0x37,0x93,0x56,0xDB,0x4F,0xBF,0xB8 } }; // 11A9852A-8DD8-423E-B537-9356DB4FBFB8
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDAttachment>{ 0x5D55A616,0x9DF8,0x4B09,{ 0xB1,0x56,0x9B,0xA3,0x51,0xA4,0x8B,0x76 } }; // 5D55A616-9DF8-4B09-B156-9BA351A48B76
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDDeviceHost>{ 0x917FE891,0x3D13,0x4138,{ 0x98,0x09,0x93,0x4C,0x8A,0xBE,0xB1,0x2C } }; // 917FE891-3D13-4138-9809-934C8ABEB12C
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDDeviceHostNotify>{ 0xB5BEE9F9,0xEEDA,0x41FE,{ 0x96,0xF7,0xF4,0x5E,0x14,0x99,0x0F,0xB0 } }; // B5BEE9F9-EEDA-41FE-96F7-F45E14990FB0
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDDeviceProxy>{ 0xEEE0C031,0xC578,0x4C0E,{ 0x9A,0x3B,0x97,0x3C,0x35,0xF4,0x09,0xDB } }; // EEE0C031-C578-4C0E-9A3B-973C35F409DB
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDEndpointProxy>{ 0x1860D430,0xB24C,0x4975,{ 0x9F,0x90,0xDB,0xB3,0x9B,0xAA,0x24,0xEC } }; // 1860D430-B24C-4975-9F90-DBB39BAA24EC
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDEventingStatus>{ 0x49B17F52,0x637A,0x407A,{ 0xAE,0x99,0xFB,0xE8,0x2A,0x4D,0x38,0xC0 } }; // 49B17F52-637A-407A-AE99-FBE82A4D38C0
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDHttpAddress>{ 0xD09AC7BD,0x2A3E,0x4B85,{ 0x86,0x05,0x27,0x37,0xFF,0x3E,0x4E,0xA0 } }; // D09AC7BD-2A3E-4B85-8605-2737FF3E4EA0
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDHttpAuthParameters>{ 0x0B476DF0,0x8DAC,0x480D,{ 0xB0,0x5C,0x99,0x78,0x1A,0x58,0x84,0xAA } }; // 0B476DF0-8DAC-480D-B05C-99781A5884AA
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDHttpMessageParameters>{ 0x540BD122,0x5C83,0x4DEC,{ 0xB3,0x96,0xEA,0x62,0xA2,0x69,0x7F,0xDF } }; // 540BD122-5C83-4DEC-B396-EA62A2697FDF
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDInboundAttachment>{ 0x5BD6CA65,0x233C,0x4FB8,{ 0x9F,0x7A,0x26,0x41,0x61,0x96,0x55,0xC9 } }; // 5BD6CA65-233C-4FB8-9F7A-2641619655C9
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDMessageParameters>{ 0x1FAFE8A2,0xE6FC,0x4B80,{ 0xB6,0xCF,0xB7,0xD4,0x5C,0x41,0x6D,0x7C } }; // 1FAFE8A2-E6FC-4B80-B6CF-B7D45C416D7C
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDMetadataExchange>{ 0x06996D57,0x1D67,0x4928,{ 0x93,0x07,0x3D,0x78,0x33,0xFD,0xB8,0x46 } }; // 06996D57-1D67-4928-9307-3D7833FDB846
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDOutboundAttachment>{ 0xAA302F8D,0x5A22,0x4BA5,{ 0xB3,0x92,0xAA,0x84,0x86,0xF4,0xC1,0x5D } }; // AA302F8D-5A22-4BA5-B392-AA8486F4C15D
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDSSLClientCertificate>{ 0xDE105E87,0xA0DA,0x418E,{ 0x98,0xAD,0x27,0xB9,0xEE,0xD8,0x7B,0xDC } }; // DE105E87-A0DA-418E-98AD-27B9EED87BDC
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDScopeMatchingRule>{ 0xFCAFE424,0xFEF5,0x481A,{ 0xBD,0x9F,0x33,0xCE,0x05,0x74,0x25,0x6F } }; // FCAFE424-FEF5-481A-BD9F-33CE0574256F
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDServiceMessaging>{ 0x94974CF4,0x0CAB,0x460D,{ 0xA3,0xF6,0x7A,0x0A,0xD6,0x23,0xC0,0xE6 } }; // 94974CF4-0CAB-460D-A3F6-7A0AD623C0E6
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDServiceProxy>{ 0xD4C7FB9C,0x03AB,0x4175,{ 0x9D,0x67,0x09,0x4F,0xAF,0xEB,0xF4,0x87 } }; // D4C7FB9C-03AB-4175-9D67-094FAFEBF487
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDServiceProxyEventing>{ 0xF9279D6D,0x1012,0x4A94,{ 0xB8,0xCC,0xFD,0x35,0xD2,0x20,0x2B,0xFE } }; // F9279D6D-1012-4A94-B8CC-FD35D2202BFE
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDSignatureProperty>{ 0x03CE20AA,0x71C4,0x45E2,{ 0xB3,0x2E,0x37,0x66,0xC6,0x1C,0x79,0x0F } }; // 03CE20AA-71C4-45E2-B32E-3766C61C790F
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDTransportAddress>{ 0x70D23498,0x4EE6,0x4340,{ 0xA3,0xDF,0xD8,0x45,0xD2,0x23,0x54,0x67 } }; // 70D23498-4EE6-4340-A3DF-D845D2235467
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDUdpAddress>{ 0x74D6124A,0xA441,0x4F78,{ 0xA1,0xEB,0x97,0xA8,0xD1,0x99,0x68,0x93 } }; // 74D6124A-A441-4F78-A1EB-97A8D1996893
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDUdpMessageParameters>{ 0x9934149F,0x8F0C,0x447B,{ 0xAA,0x0B,0x73,0x12,0x4B,0x0C,0xA7,0xF0 } }; // 9934149F-8F0C-447B-AA0B-73124B0CA7F0
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDXMLContext>{ 0x75D8F3EE,0x3E5A,0x43B4,{ 0xA1,0x5A,0xBC,0xF6,0x88,0x74,0x60,0xC0 } }; // 75D8F3EE-3E5A-43B4-A15A-BCF6887460C0
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDiscoveredService>{ 0x4BAD8A3B,0xB374,0x4420,{ 0x96,0x32,0xAA,0xC9,0x45,0xB3,0x74,0xAA } }; // 4BAD8A3B-B374-4420-9632-AAC945B374AA
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDiscoveryProvider>{ 0x8FFC8E55,0xF0EB,0x480F,{ 0x88,0xB7,0xB4,0x35,0xDD,0x28,0x1D,0x45 } }; // 8FFC8E55-F0EB-480F-88B7-B435DD281D45
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDiscoveryProviderNotify>{ 0x73EE3CED,0xB6E6,0x4329,{ 0xA5,0x46,0x3E,0x8A,0xD4,0x65,0x63,0xD2 } }; // 73EE3CED-B6E6-4329-A546-3E8AD46563D2
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDiscoveryPublisher>{ 0xAE01E1A8,0x3FF9,0x4148,{ 0x81,0x16,0x05,0x7C,0xC6,0x16,0xFE,0x13 } }; // AE01E1A8-3FF9-4148-8116-057CC616FE13
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::IWSDiscoveryPublisherNotify>{ 0xE67651B0,0x337A,0x4B3C,{ 0x97,0x58,0x73,0x33,0x88,0x56,0x82,0x51 } }; // E67651B0-337A-4B3C-9758-733388568251
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::PNPXAssociation>{ 0xCEE8CCC9,0x4F6B,0x4469,{ 0xA2,0x35,0x5A,0x22,0x86,0x9E,0xEF,0x03 } }; // CEE8CCC9-4F6B-4469-A235-5A22869EEF03
    template <> inline constexpr guid guid_v<Windows::Win32::OtherDeviceTechnologies::PNPXPairingHandler>{ 0xB8A27942,0xADE7,0x4085,{ 0xAA,0x6E,0x4F,0xAD,0xC7,0xAD,0xA1,0xEF } }; // B8A27942-ADE7-4085-AA6E-4FADC7ADA1EF
#pragma endregion guids

}
#endif
