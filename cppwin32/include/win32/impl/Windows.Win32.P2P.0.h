// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_P2P_0_H
#define WIN32_Windows_Win32_P2P_0_H
WIN32_EXPORT namespace win32::Windows::Win32::NetworkDrivers
{
    struct SOCKET_ADDRESS_LIST;
}
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::P2P
{
#pragma region enums
    enum class DRT_ADDRESS_FLAGS : int32_t
    {
        DRT_ADDRESS_FLAG_ACCEPTED = 1,
        DRT_ADDRESS_FLAG_REJECTED = 2,
        DRT_ADDRESS_FLAG_UNREACHABLE = 4,
        DRT_ADDRESS_FLAG_LOOP = 8,
        DRT_ADDRESS_FLAG_TOO_BUSY = 16,
        DRT_ADDRESS_FLAG_BAD_VALIDATE_ID = 32,
        DRT_ADDRESS_FLAG_SUSPECT_UNREGISTERED_ID = 64,
        DRT_ADDRESS_FLAG_INQUIRE = 128,
    };
    enum class DRT_EVENT_TYPE : int32_t
    {
        DRT_EVENT_STATUS_CHANGED = 0,
        DRT_EVENT_LEAFSET_KEY_CHANGED = 1,
        DRT_EVENT_REGISTRATION_STATE_CHANGED = 2,
    };
    enum class DRT_LEAFSET_KEY_CHANGE_TYPE : int32_t
    {
        DRT_LEAFSET_KEY_ADDED = 0,
        DRT_LEAFSET_KEY_DELETED = 1,
    };
    enum class DRT_MATCH_TYPE : int32_t
    {
        DRT_MATCH_EXACT = 0,
        DRT_MATCH_NEAR = 1,
        DRT_MATCH_INTERMEDIATE = 2,
    };
    enum class DRT_REGISTRATION_STATE : int32_t
    {
        DRT_REGISTRATION_STATE_UNRESOLVEABLE = 1,
    };
    enum class DRT_SCOPE : int32_t
    {
        DRT_GLOBAL_SCOPE = 1,
        DRT_SITE_LOCAL_SCOPE = 2,
        DRT_LINK_LOCAL_SCOPE = 3,
    };
    enum class DRT_SECURITY_MODE : int32_t
    {
        DRT_SECURE_RESOLVE = 0,
        DRT_SECURE_MEMBERSHIP = 1,
        DRT_SECURE_CONFIDENTIALPAYLOAD = 2,
    };
    enum class DRT_STATUS : int32_t
    {
        DRT_ACTIVE = 0,
        DRT_ALONE = 1,
        DRT_NO_NETWORK = 10,
        DRT_FAULTED = 20,
    };
    enum class PEERDIST_CLIENT_INFO_BY_HANDLE_CLASS : int32_t
    {
        PeerDistClientBasicInfo = 0,
        MaximumPeerDistClientInfoByHandlesClass = 1,
    };
    enum class PEERDIST_STATUS : int32_t
    {
        PEERDIST_STATUS_DISABLED = 0,
        PEERDIST_STATUS_UNAVAILABLE = 1,
        PEERDIST_STATUS_AVAILABLE = 2,
    };
    enum class PEER_APPLICATION_REGISTRATION_TYPE : int32_t
    {
        PEER_APPLICATION_CURRENT_USER = 0,
        PEER_APPLICATION_ALL_USERS = 1,
    };
    enum class PEER_CHANGE_TYPE : int32_t
    {
        PEER_CHANGE_ADDED = 0,
        PEER_CHANGE_DELETED = 1,
        PEER_CHANGE_UPDATED = 2,
    };
    enum class PEER_COLLAB_EVENT_TYPE : int32_t
    {
        PEER_EVENT_WATCHLIST_CHANGED = 1,
        PEER_EVENT_ENDPOINT_CHANGED = 2,
        PEER_EVENT_ENDPOINT_PRESENCE_CHANGED = 3,
        PEER_EVENT_ENDPOINT_APPLICATION_CHANGED = 4,
        PEER_EVENT_ENDPOINT_OBJECT_CHANGED = 5,
        PEER_EVENT_MY_ENDPOINT_CHANGED = 6,
        PEER_EVENT_MY_PRESENCE_CHANGED = 7,
        PEER_EVENT_MY_APPLICATION_CHANGED = 8,
        PEER_EVENT_MY_OBJECT_CHANGED = 9,
        PEER_EVENT_PEOPLE_NEAR_ME_CHANGED = 10,
        PEER_EVENT_REQUEST_STATUS_CHANGED = 11,
    };
    enum class PEER_CONNECTION_FLAGS : int32_t
    {
        PEER_CONNECTION_NEIGHBOR = 1,
        PEER_CONNECTION_DIRECT = 2,
    };
    enum class PEER_CONNECTION_STATUS : int32_t
    {
        PEER_CONNECTED = 1,
        PEER_DISCONNECTED = 2,
        PEER_CONNECTION_FAILED = 3,
    };
    enum class PEER_GRAPH_EVENT_TYPE : int32_t
    {
        PEER_GRAPH_EVENT_STATUS_CHANGED = 1,
        PEER_GRAPH_EVENT_PROPERTY_CHANGED = 2,
        PEER_GRAPH_EVENT_RECORD_CHANGED = 3,
        PEER_GRAPH_EVENT_DIRECT_CONNECTION = 4,
        PEER_GRAPH_EVENT_NEIGHBOR_CONNECTION = 5,
        PEER_GRAPH_EVENT_INCOMING_DATA = 6,
        PEER_GRAPH_EVENT_CONNECTION_REQUIRED = 7,
        PEER_GRAPH_EVENT_NODE_CHANGED = 8,
        PEER_GRAPH_EVENT_SYNCHRONIZED = 9,
    };
    enum class PEER_GRAPH_PROPERTY_FLAGS : int32_t
    {
        PEER_GRAPH_PROPERTY_HEARTBEATS = 1,
        PEER_GRAPH_PROPERTY_DEFER_EXPIRATION = 2,
    };
    enum class PEER_GRAPH_SCOPE : int32_t
    {
        PEER_GRAPH_SCOPE_ANY = 0,
        PEER_GRAPH_SCOPE_GLOBAL = 1,
        PEER_GRAPH_SCOPE_SITELOCAL = 2,
        PEER_GRAPH_SCOPE_LINKLOCAL = 3,
        PEER_GRAPH_SCOPE_LOOPBACK = 4,
    };
    enum class PEER_GRAPH_STATUS_FLAGS : int32_t
    {
        PEER_GRAPH_STATUS_LISTENING = 1,
        PEER_GRAPH_STATUS_HAS_CONNECTIONS = 2,
        PEER_GRAPH_STATUS_SYNCHRONIZED = 4,
    };
    enum class PEER_GROUP_AUTHENTICATION_SCHEME : int32_t
    {
        PEER_GROUP_GMC_AUTHENTICATION = 1,
        PEER_GROUP_PASSWORD_AUTHENTICATION = 2,
    };
    enum class PEER_GROUP_EVENT_TYPE : int32_t
    {
        PEER_GROUP_EVENT_STATUS_CHANGED = 1,
        PEER_GROUP_EVENT_PROPERTY_CHANGED = 2,
        PEER_GROUP_EVENT_RECORD_CHANGED = 3,
        PEER_GROUP_EVENT_DIRECT_CONNECTION = 4,
        PEER_GROUP_EVENT_NEIGHBOR_CONNECTION = 5,
        PEER_GROUP_EVENT_INCOMING_DATA = 6,
        PEER_GROUP_EVENT_MEMBER_CHANGED = 8,
        PEER_GROUP_EVENT_CONNECTION_FAILED = 10,
        PEER_GROUP_EVENT_AUTHENTICATION_FAILED = 11,
    };
    enum class PEER_GROUP_ISSUE_CREDENTIAL_FLAGS : int32_t
    {
        PEER_GROUP_STORE_CREDENTIALS = 1,
    };
    enum class PEER_GROUP_PROPERTY_FLAGS : int32_t
    {
        PEER_MEMBER_DATA_OPTIONAL = 1,
        PEER_DISABLE_PRESENCE = 2,
        PEER_DEFER_EXPIRATION = 4,
    };
    enum class PEER_GROUP_STATUS : int32_t
    {
        PEER_GROUP_STATUS_LISTENING = 1,
        PEER_GROUP_STATUS_HAS_CONNECTIONS = 2,
    };
    enum class PEER_INVITATION_RESPONSE_TYPE : int32_t
    {
        PEER_INVITATION_RESPONSE_DECLINED = 0,
        PEER_INVITATION_RESPONSE_ACCEPTED = 1,
        PEER_INVITATION_RESPONSE_EXPIRED = 2,
        PEER_INVITATION_RESPONSE_ERROR = 3,
    };
    enum class PEER_MEMBER_CHANGE_TYPE : int32_t
    {
        PEER_MEMBER_CONNECTED = 1,
        PEER_MEMBER_DISCONNECTED = 2,
        PEER_MEMBER_UPDATED = 3,
        PEER_MEMBER_JOINED = 4,
        PEER_MEMBER_LEFT = 5,
    };
    enum class PEER_MEMBER_FLAGS : int32_t
    {
        PEER_MEMBER_PRESENT = 1,
    };
    enum class PEER_NODE_CHANGE_TYPE : int32_t
    {
        PEER_NODE_CHANGE_CONNECTED = 1,
        PEER_NODE_CHANGE_DISCONNECTED = 2,
        PEER_NODE_CHANGE_UPDATED = 3,
    };
    enum class PEER_PRESENCE_STATUS : int32_t
    {
        PEER_PRESENCE_OFFLINE = 0,
        PEER_PRESENCE_OUT_TO_LUNCH = 1,
        PEER_PRESENCE_AWAY = 2,
        PEER_PRESENCE_BE_RIGHT_BACK = 3,
        PEER_PRESENCE_IDLE = 4,
        PEER_PRESENCE_BUSY = 5,
        PEER_PRESENCE_ON_THE_PHONE = 6,
        PEER_PRESENCE_ONLINE = 7,
    };
    enum class PEER_PUBLICATION_SCOPE : int32_t
    {
        PEER_PUBLICATION_SCOPE_NONE = 0,
        PEER_PUBLICATION_SCOPE_NEAR_ME = 1,
        PEER_PUBLICATION_SCOPE_INTERNET = 2,
        PEER_PUBLICATION_SCOPE_ALL = 3,
    };
    enum class PEER_RECORD_CHANGE_TYPE : int32_t
    {
        PEER_RECORD_ADDED = 1,
        PEER_RECORD_UPDATED = 2,
        PEER_RECORD_DELETED = 3,
        PEER_RECORD_EXPIRED = 4,
    };
    enum class PEER_RECORD_FLAGS : int32_t
    {
        PEER_RECORD_FLAG_AUTOREFRESH = 1,
        PEER_RECORD_FLAG_DELETED = 2,
    };
    enum class PEER_SIGNIN_FLAGS : int32_t
    {
        PEER_SIGNIN_NONE = 0,
        PEER_SIGNIN_NEAR_ME = 1,
        PEER_SIGNIN_INTERNET = 2,
        PEER_SIGNIN_ALL = 3,
    };
    enum class PEER_WATCH_PERMISSION : int32_t
    {
        PEER_WATCH_BLOCKED = 0,
        PEER_WATCH_ALLOWED = 1,
    };
    enum class PNRP_CLOUD_FLAGS : int32_t
    {
        PNRP_CLOUD_NO_FLAGS = 0,
        PNRP_CLOUD_NAME_LOCAL = 1,
        PNRP_CLOUD_RESOLVE_ONLY = 2,
        PNRP_CLOUD_FULL_PARTICIPANT = 4,
    };
    enum class PNRP_CLOUD_STATE : int32_t
    {
        PNRP_CLOUD_STATE_VIRTUAL = 0,
        PNRP_CLOUD_STATE_SYNCHRONISING = 1,
        PNRP_CLOUD_STATE_ACTIVE = 2,
        PNRP_CLOUD_STATE_DEAD = 3,
        PNRP_CLOUD_STATE_DISABLED = 4,
        PNRP_CLOUD_STATE_NO_NET = 5,
        PNRP_CLOUD_STATE_ALONE = 6,
    };
    enum class PNRP_EXTENDED_PAYLOAD_TYPE : int32_t
    {
        PNRP_EXTENDED_PAYLOAD_TYPE_NONE = 0,
        PNRP_EXTENDED_PAYLOAD_TYPE_BINARY = 1,
        PNRP_EXTENDED_PAYLOAD_TYPE_STRING = 2,
    };
    enum class PNRP_REGISTERED_ID_STATE : int32_t
    {
        PNRP_REGISTERED_ID_STATE_OK = 1,
        PNRP_REGISTERED_ID_STATE_PROBLEM = 2,
    };
    enum class PNRP_RESOLVE_CRITERIA : int32_t
    {
        PNRP_RESOLVE_CRITERIA_DEFAULT = 0,
        PNRP_RESOLVE_CRITERIA_REMOTE_PEER_NAME = 1,
        PNRP_RESOLVE_CRITERIA_NEAREST_REMOTE_PEER_NAME = 2,
        PNRP_RESOLVE_CRITERIA_NON_CURRENT_PROCESS_PEER_NAME = 3,
        PNRP_RESOLVE_CRITERIA_NEAREST_NON_CURRENT_PROCESS_PEER_NAME = 4,
        PNRP_RESOLVE_CRITERIA_ANY_PEER_NAME = 5,
        PNRP_RESOLVE_CRITERIA_NEAREST_PEER_NAME = 6,
    };
    enum class PNRP_SCOPE : int32_t
    {
        PNRP_SCOPE_ANY = 0,
        PNRP_GLOBAL_SCOPE = 1,
        PNRP_SITE_LOCAL_SCOPE = 2,
        PNRP_LINK_LOCAL_SCOPE = 3,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct DRT_ADDRESS;
    struct DRT_ADDRESS_LIST;
    struct DRT_BOOTSTRAP_PROVIDER;
    struct DRT_DATA;
    struct DRT_EVENT_DATA;
    struct DRT_REGISTRATION;
    struct DRT_SEARCH_INFO;
    struct DRT_SEARCH_RESULT;
    struct DRT_SECURITY_PROVIDER;
    struct DRT_SETTINGS;
    struct PEERDIST_CLIENT_BASIC_INFO;
    struct PEERDIST_CONTENT_TAG;
    struct PEERDIST_PUBLICATION_OPTIONS;
    struct PEERDIST_RETRIEVAL_OPTIONS;
    struct PEERDIST_STATUS_INFO;
    struct PEER_ADDRESS;
    struct PEER_APPLICATION;
    struct PEER_APPLICATION_REGISTRATION_INFO;
    struct PEER_APP_LAUNCH_INFO;
    struct PEER_COLLAB_EVENT_DATA;
    struct PEER_COLLAB_EVENT_REGISTRATION;
    struct PEER_CONNECTION_INFO;
    struct PEER_CONTACT;
    struct PEER_CREDENTIAL_INFO;
    struct PEER_DATA;
    struct PEER_ENDPOINT;
    struct PEER_EVENT_APPLICATION_CHANGED_DATA;
    struct PEER_EVENT_CONNECTION_CHANGE_DATA;
    struct PEER_EVENT_ENDPOINT_CHANGED_DATA;
    struct PEER_EVENT_INCOMING_DATA;
    struct PEER_EVENT_MEMBER_CHANGE_DATA;
    struct PEER_EVENT_NODE_CHANGE_DATA;
    struct PEER_EVENT_OBJECT_CHANGED_DATA;
    struct PEER_EVENT_PEOPLE_NEAR_ME_CHANGED_DATA;
    struct PEER_EVENT_PRESENCE_CHANGED_DATA;
    struct PEER_EVENT_RECORD_CHANGE_DATA;
    struct PEER_EVENT_REQUEST_STATUS_CHANGED_DATA;
    struct PEER_EVENT_SYNCHRONIZED_DATA;
    struct PEER_EVENT_WATCHLIST_CHANGED_DATA;
    struct PEER_GRAPH_EVENT_DATA;
    struct PEER_GRAPH_EVENT_REGISTRATION;
    struct PEER_GRAPH_PROPERTIES;
    struct PEER_GROUP_EVENT_DATA;
    struct PEER_GROUP_EVENT_REGISTRATION;
    struct PEER_GROUP_PROPERTIES;
    struct PEER_INVITATION;
    struct PEER_INVITATION_INFO;
    struct PEER_INVITATION_RESPONSE;
    struct PEER_MEMBER;
    struct PEER_NAME_PAIR;
    struct PEER_NODE_INFO;
    struct PEER_OBJECT;
    struct PEER_PEOPLE_NEAR_ME;
    struct PEER_PNRP_CLOUD_INFO;
    struct PEER_PNRP_ENDPOINT_INFO;
    struct PEER_PNRP_REGISTRATION_INFO;
    struct PEER_PRESENCE_INFO;
    struct PEER_RECORD;
    struct PEER_SECURITY_INTERFACE;
    struct PEER_VERSION_DATA;
    struct PNRPCLOUDINFO;
    struct PNRPINFO_V1;
    struct PNRPINFO_V2;
    struct PNRP_CLOUD_ID;
#pragma endregion forward_declarations

#pragma region delegates
    using PFNPEER_VALIDATE_RECORD = int32_t __stdcall(void*, void*, Windows::Win32::P2P::PEER_RECORD*, Windows::Win32::P2P::PEER_RECORD_CHANGE_TYPE);
    using PFNPEER_SECURE_RECORD = int32_t __stdcall(void*, void*, Windows::Win32::P2P::PEER_RECORD*, Windows::Win32::P2P::PEER_RECORD_CHANGE_TYPE, Windows::Win32::P2P::PEER_DATA**);
    using PFNPEER_FREE_SECURITY_DATA = int32_t __stdcall(void*, void*, Windows::Win32::P2P::PEER_DATA*);
    using PFNPEER_ON_PASSWORD_AUTH_FAILED = int32_t __stdcall(void*, void*);
    using DRT_BOOTSTRAP_RESOLVE_CALLBACK = void __stdcall(int32_t, void*, Windows::Win32::NetworkDrivers::SOCKET_ADDRESS_LIST*, Windows::Win32::SystemServices::BOOL);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
