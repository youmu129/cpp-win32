// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_P2P_2_H
#define WIN32_Windows_Win32_P2P_2_H
#include "win32/impl/Windows.Win32.P2P.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    int32_t __stdcall WIN32_IMPL_PeerGraphStartup(uint16_t wVersionRequested, win32::Windows::Win32::P2P::PEER_VERSION_DATA* pVersionData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphShutdown() noexcept;
    void __stdcall WIN32_IMPL_PeerGraphFreeData(void* pvData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetItemCount(void* hPeerEnum, uint32_t* pCount) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetNextItem(void* hPeerEnum, uint32_t* pCount, void*** pppvItems) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphEndEnumeration(void* hPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphCreate(win32::Windows::Win32::P2P::PEER_GRAPH_PROPERTIES* pGraphProperties, uint16_t* pwzDatabaseName, win32::Windows::Win32::P2P::PEER_SECURITY_INTERFACE* pSecurityInterface, void** phGraph) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphOpen(uint16_t* pwzGraphId, uint16_t* pwzPeerId, uint16_t* pwzDatabaseName, win32::Windows::Win32::P2P::PEER_SECURITY_INTERFACE* pSecurityInterface, uint32_t cRecordTypeSyncPrecedence, ::win32::guid* pRecordTypeSyncPrecedence, void** phGraph) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphListen(void* hGraph, uint32_t dwScope, uint32_t dwScopeId, uint16_t wPort) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphConnect(void* hGraph, uint16_t* pwzPeerId, win32::Windows::Win32::P2P::PEER_ADDRESS* pAddress, uint64_t* pullConnectionId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphClose(void* hGraph) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphDelete(uint16_t* pwzGraphId, uint16_t* pwzPeerId, uint16_t* pwzDatabaseName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetStatus(void* hGraph, uint32_t* pdwStatus) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetProperties(void* hGraph, win32::Windows::Win32::P2P::PEER_GRAPH_PROPERTIES** ppGraphProperties) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphSetProperties(void* hGraph, win32::Windows::Win32::P2P::PEER_GRAPH_PROPERTIES* pGraphProperties) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphRegisterEvent(void* hGraph, win32::Windows::Win32::SystemServices::HANDLE hEvent, uint32_t cEventRegistrations, win32::Windows::Win32::P2P::PEER_GRAPH_EVENT_REGISTRATION* pEventRegistrations, void** phPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphUnregisterEvent(void* hPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetEventData(void* hPeerEvent, win32::Windows::Win32::P2P::PEER_GRAPH_EVENT_DATA** ppEventData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetRecord(void* hGraph, ::win32::guid* pRecordId, win32::Windows::Win32::P2P::PEER_RECORD** ppRecord) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphAddRecord(void* hGraph, win32::Windows::Win32::P2P::PEER_RECORD* pRecord, ::win32::guid* pRecordId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphUpdateRecord(void* hGraph, win32::Windows::Win32::P2P::PEER_RECORD* pRecord) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphDeleteRecord(void* hGraph, ::win32::guid* pRecordId, win32::Windows::Win32::SystemServices::BOOL fLocal) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphEnumRecords(void* hGraph, ::win32::guid* pRecordType, uint16_t* pwzPeerId, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphSearchRecords(void* hGraph, uint16_t* pwzCriteria, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphExportDatabase(void* hGraph, uint16_t* pwzFilePath) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphImportDatabase(void* hGraph, uint16_t* pwzFilePath) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphValidateDeferredRecords(void* hGraph, uint32_t cRecordIds, ::win32::guid* pRecordIds) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphOpenDirectConnection(void* hGraph, uint16_t* pwzPeerId, win32::Windows::Win32::P2P::PEER_ADDRESS* pAddress, uint64_t* pullConnectionId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphSendData(void* hGraph, uint64_t ullConnectionId, ::win32::guid* pType, uint32_t cbData, void* pvData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphCloseDirectConnection(void* hGraph, uint64_t ullConnectionId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphEnumConnections(void* hGraph, uint32_t dwFlags, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphEnumNodes(void* hGraph, uint16_t* pwzPeerId, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphSetPresence(void* hGraph, win32::Windows::Win32::SystemServices::BOOL fPresent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphGetNodeInfo(void* hGraph, uint64_t ullNodeId, win32::Windows::Win32::P2P::PEER_NODE_INFO** ppNodeInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphSetNodeAttributes(void* hGraph, uint16_t* pwzAttributes) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphPeerTimeToUniversalTime(void* hGraph, win32::Windows::Win32::WindowsProgramming::FILETIME* pftPeerTime, win32::Windows::Win32::WindowsProgramming::FILETIME* pftUniversalTime) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGraphUniversalTimeToPeerTime(void* hGraph, win32::Windows::Win32::WindowsProgramming::FILETIME* pftUniversalTime, win32::Windows::Win32::WindowsProgramming::FILETIME* pftPeerTime) noexcept;
    void __stdcall WIN32_IMPL_PeerFreeData(void* pvData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGetItemCount(void* hPeerEnum, uint32_t* pCount) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGetNextItem(void* hPeerEnum, uint32_t* pCount, void*** pppvItems) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerEndEnumeration(void* hPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupStartup(uint16_t wVersionRequested, win32::Windows::Win32::P2P::PEER_VERSION_DATA* pVersionData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupShutdown() noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupCreate(win32::Windows::Win32::P2P::PEER_GROUP_PROPERTIES* pProperties, void** phGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupOpen(uint16_t* pwzIdentity, uint16_t* pwzGroupPeerName, uint16_t* pwzCloud, void** phGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupJoin(uint16_t* pwzIdentity, uint16_t* pwzInvitation, uint16_t* pwzCloud, void** phGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupPasswordJoin(uint16_t* pwzIdentity, uint16_t* pwzInvitation, uint16_t* pwzPassword, uint16_t* pwzCloud, void** phGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupConnect(void* hGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupConnectByAddress(void* hGroup, uint32_t cAddresses, win32::Windows::Win32::P2P::PEER_ADDRESS* pAddresses) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupClose(void* hGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupDelete(uint16_t* pwzIdentity, uint16_t* pwzGroupPeerName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupCreateInvitation(void* hGroup, uint16_t* pwzIdentityInfo, win32::Windows::Win32::WindowsProgramming::FILETIME* pftExpiration, uint32_t cRoles, ::win32::guid* pRoles, uint16_t** ppwzInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupCreatePasswordInvitation(void* hGroup, uint16_t** ppwzInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupParseInvitation(uint16_t* pwzInvitation, win32::Windows::Win32::P2P::PEER_INVITATION_INFO** ppInvitationInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupGetStatus(void* hGroup, uint32_t* pdwStatus) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupGetProperties(void* hGroup, win32::Windows::Win32::P2P::PEER_GROUP_PROPERTIES** ppProperties) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupSetProperties(void* hGroup, win32::Windows::Win32::P2P::PEER_GROUP_PROPERTIES* pProperties) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupEnumMembers(void* hGroup, uint32_t dwFlags, uint16_t* pwzIdentity, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupOpenDirectConnection(void* hGroup, uint16_t* pwzIdentity, win32::Windows::Win32::P2P::PEER_ADDRESS* pAddress, uint64_t* pullConnectionId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupCloseDirectConnection(void* hGroup, uint64_t ullConnectionId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupEnumConnections(void* hGroup, uint32_t dwFlags, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupSendData(void* hGroup, uint64_t ullConnectionId, ::win32::guid* pType, uint32_t cbData, void* pvData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupRegisterEvent(void* hGroup, win32::Windows::Win32::SystemServices::HANDLE hEvent, uint32_t cEventRegistration, win32::Windows::Win32::P2P::PEER_GROUP_EVENT_REGISTRATION* pEventRegistrations, void** phPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupUnregisterEvent(void* hPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupGetEventData(void* hPeerEvent, win32::Windows::Win32::P2P::PEER_GROUP_EVENT_DATA** ppEventData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupGetRecord(void* hGroup, ::win32::guid* pRecordId, win32::Windows::Win32::P2P::PEER_RECORD** ppRecord) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupAddRecord(void* hGroup, win32::Windows::Win32::P2P::PEER_RECORD* pRecord, ::win32::guid* pRecordId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupUpdateRecord(void* hGroup, win32::Windows::Win32::P2P::PEER_RECORD* pRecord) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupDeleteRecord(void* hGroup, ::win32::guid* pRecordId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupEnumRecords(void* hGroup, ::win32::guid* pRecordType, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupSearchRecords(void* hGroup, uint16_t* pwzCriteria, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupExportDatabase(void* hGroup, uint16_t* pwzFilePath) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupImportDatabase(void* hGroup, uint16_t* pwzFilePath) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupIssueCredentials(void* hGroup, uint16_t* pwzSubjectIdentity, win32::Windows::Win32::P2P::PEER_CREDENTIAL_INFO* pCredentialInfo, uint32_t dwFlags, uint16_t** ppwzInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupExportConfig(void* hGroup, uint16_t* pwzPassword, uint16_t** ppwzXML) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupImportConfig(uint16_t* pwzXML, uint16_t* pwzPassword, win32::Windows::Win32::SystemServices::BOOL fOverwrite, uint16_t** ppwzIdentity, uint16_t** ppwzGroup) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupPeerTimeToUniversalTime(void* hGroup, win32::Windows::Win32::WindowsProgramming::FILETIME* pftPeerTime, win32::Windows::Win32::WindowsProgramming::FILETIME* pftUniversalTime) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupUniversalTimeToPeerTime(void* hGroup, win32::Windows::Win32::WindowsProgramming::FILETIME* pftUniversalTime, win32::Windows::Win32::WindowsProgramming::FILETIME* pftPeerTime) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerGroupResumePasswordAuthentication(void* hGroup, void* hPeerEventHandle) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityCreate(uint16_t* pwzClassifier, uint16_t* pwzFriendlyName, size_t hCryptProv, uint16_t** ppwzIdentity) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityGetFriendlyName(uint16_t* pwzIdentity, uint16_t** ppwzFriendlyName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentitySetFriendlyName(uint16_t* pwzIdentity, uint16_t* pwzFriendlyName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityGetCryptKey(uint16_t* pwzIdentity, size_t* phCryptProv) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityDelete(uint16_t* pwzIdentity) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerEnumIdentities(void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerEnumGroups(uint16_t* pwzIdentity, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCreatePeerName(uint16_t* pwzIdentity, uint16_t* pwzClassifier, uint16_t** ppwzPeerName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityGetXML(uint16_t* pwzIdentity, uint16_t** ppwzIdentityXML) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityExport(uint16_t* pwzIdentity, uint16_t* pwzPassword, uint16_t** ppwzExportXML) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityImport(uint16_t* pwzImportXML, uint16_t* pwzPassword, uint16_t** ppwzIdentity) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerIdentityGetDefault(uint16_t** ppwzPeerName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabStartup(uint16_t wVersionRequested) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabShutdown() noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSignin(win32::Windows::Win32::WindowsAndMessaging::HWND hwndParent, uint32_t dwSigninOptions) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSignout(uint32_t dwSigninOptions) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetSigninOptions(uint32_t* pdwSigninOptions) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabAsyncInviteContact(win32::Windows::Win32::P2P::PEER_CONTACT* pcContact, win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, win32::Windows::Win32::P2P::PEER_INVITATION* pcInvitation, win32::Windows::Win32::SystemServices::HANDLE hEvent, win32::Windows::Win32::SystemServices::HANDLE* phInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetInvitationResponse(win32::Windows::Win32::SystemServices::HANDLE hInvitation, win32::Windows::Win32::P2P::PEER_INVITATION_RESPONSE** ppInvitationResponse) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabCancelInvitation(win32::Windows::Win32::SystemServices::HANDLE hInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabCloseHandle(win32::Windows::Win32::SystemServices::HANDLE hInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabInviteContact(win32::Windows::Win32::P2P::PEER_CONTACT* pcContact, win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, win32::Windows::Win32::P2P::PEER_INVITATION* pcInvitation, win32::Windows::Win32::P2P::PEER_INVITATION_RESPONSE** ppResponse) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabAsyncInviteEndpoint(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, win32::Windows::Win32::P2P::PEER_INVITATION* pcInvitation, win32::Windows::Win32::SystemServices::HANDLE hEvent, win32::Windows::Win32::SystemServices::HANDLE* phInvitation) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabInviteEndpoint(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, win32::Windows::Win32::P2P::PEER_INVITATION* pcInvitation, win32::Windows::Win32::P2P::PEER_INVITATION_RESPONSE** ppResponse) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetAppLaunchInfo(win32::Windows::Win32::P2P::PEER_APP_LAUNCH_INFO** ppLaunchInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabRegisterApplication(win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_INFO* pcApplication, win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_TYPE registrationType) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabUnregisterApplication(::win32::guid* pApplicationId, win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_TYPE registrationType) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetApplicationRegistrationInfo(::win32::guid* pApplicationId, win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_TYPE registrationType, win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_INFO** ppApplication) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumApplicationRegistrationInfo(win32::Windows::Win32::P2P::PEER_APPLICATION_REGISTRATION_TYPE registrationType, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetPresenceInfo(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, win32::Windows::Win32::P2P::PEER_PRESENCE_INFO** ppPresenceInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumApplications(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, ::win32::guid* pApplicationId, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumObjects(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, ::win32::guid* pObjectId, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumEndpoints(win32::Windows::Win32::P2P::PEER_CONTACT* pcContact, void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabRefreshEndpointData(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabDeleteEndpointData(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabQueryContactData(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint, uint16_t** ppwzContactData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSubscribeEndpointData(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabUnsubscribeEndpointData(win32::Windows::Win32::P2P::PEER_ENDPOINT* pcEndpoint) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSetPresenceInfo(win32::Windows::Win32::P2P::PEER_PRESENCE_INFO* pcPresenceInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetEndpointName(uint16_t** ppwzEndpointName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSetEndpointName(uint16_t* pwzEndpointName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabSetObject(win32::Windows::Win32::P2P::PEER_OBJECT* pcObject) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabDeleteObject(::win32::guid* pObjectId) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabRegisterEvent(win32::Windows::Win32::SystemServices::HANDLE hEvent, uint32_t cEventRegistration, win32::Windows::Win32::P2P::PEER_COLLAB_EVENT_REGISTRATION* pEventRegistrations, void** phPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetEventData(void* hPeerEvent, win32::Windows::Win32::P2P::PEER_COLLAB_EVENT_DATA** ppEventData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabUnregisterEvent(void* hPeerEvent) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumPeopleNearMe(void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabAddContact(uint16_t* pwzContactData, win32::Windows::Win32::P2P::PEER_CONTACT** ppContact) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabDeleteContact(uint16_t* pwzPeerName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabGetContact(uint16_t* pwzPeerName, win32::Windows::Win32::P2P::PEER_CONTACT** ppContact) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabUpdateContact(win32::Windows::Win32::P2P::PEER_CONTACT* pContact) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabEnumContacts(void** phPeerEnum) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabExportContact(uint16_t* pwzPeerName, uint16_t** ppwzContactData) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerCollabParseContact(uint16_t* pwzContactData, win32::Windows::Win32::P2P::PEER_CONTACT** ppContact) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerNameToPeerHostName(uint16_t* pwzPeerName, uint16_t** ppwzHostName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerHostNameToPeerName(uint16_t* pwzHostName, uint16_t** ppwzPeerName) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpStartup(uint16_t wVersionRequested) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpShutdown() noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpRegister(uint16_t* pcwzPeerName, win32::Windows::Win32::P2P::PEER_PNRP_REGISTRATION_INFO* pRegistrationInfo, void** phRegistration) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpUpdateRegistration(void* hRegistration, win32::Windows::Win32::P2P::PEER_PNRP_REGISTRATION_INFO* pRegistrationInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpUnregister(void* hRegistration) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpResolve(uint16_t* pcwzPeerName, uint16_t* pcwzCloudName, uint32_t* pcEndpoints, win32::Windows::Win32::P2P::PEER_PNRP_ENDPOINT_INFO** ppEndpoints) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpStartResolve(uint16_t* pcwzPeerName, uint16_t* pcwzCloudName, uint32_t cMaxEndpoints, win32::Windows::Win32::SystemServices::HANDLE hEvent, void** phResolve) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpGetCloudInfo(uint32_t* pcNumClouds, win32::Windows::Win32::P2P::PEER_PNRP_CLOUD_INFO** ppCloudInfo) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpGetEndpoint(void* hResolve, win32::Windows::Win32::P2P::PEER_PNRP_ENDPOINT_INFO** ppEndpoint) noexcept;
    int32_t __stdcall WIN32_IMPL_PeerPnrpEndResolve(void* hResolve) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreatePnrpBootstrapResolver(win32::Windows::Win32::SystemServices::BOOL fPublish, uint16_t* pwzPeerName, uint16_t* pwzCloudName, uint16_t* pwzPublishingIdentity, win32::Windows::Win32::P2P::DRT_BOOTSTRAP_PROVIDER** ppResolver) noexcept;
    void __stdcall WIN32_IMPL_DrtDeletePnrpBootstrapResolver(win32::Windows::Win32::P2P::DRT_BOOTSTRAP_PROVIDER* pResolver) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreateDnsBootstrapResolver(uint16_t port, uint16_t* pwszAddress, win32::Windows::Win32::P2P::DRT_BOOTSTRAP_PROVIDER** ppModule) noexcept;
    void __stdcall WIN32_IMPL_DrtDeleteDnsBootstrapResolver(win32::Windows::Win32::P2P::DRT_BOOTSTRAP_PROVIDER* pResolver) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreateIpv6UdpTransport(win32::Windows::Win32::P2P::DRT_SCOPE scope, uint32_t dwScopeId, uint32_t dwLocalityThreshold, uint16_t* pwPort, void** phTransport) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtDeleteIpv6UdpTransport(void* hTransport) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreateDerivedKeySecurityProvider(win32::Windows::Win32::Security::CERT_CONTEXT* pRootCert, win32::Windows::Win32::Security::CERT_CONTEXT* pLocalCert, win32::Windows::Win32::P2P::DRT_SECURITY_PROVIDER** ppSecurityProvider) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreateDerivedKey(win32::Windows::Win32::Security::CERT_CONTEXT* pLocalCert, win32::Windows::Win32::P2P::DRT_DATA* pKey) noexcept;
    void __stdcall WIN32_IMPL_DrtDeleteDerivedKeySecurityProvider(win32::Windows::Win32::P2P::DRT_SECURITY_PROVIDER* pSecurityProvider) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtCreateNullSecurityProvider(win32::Windows::Win32::P2P::DRT_SECURITY_PROVIDER** ppSecurityProvider) noexcept;
    void __stdcall WIN32_IMPL_DrtDeleteNullSecurityProvider(win32::Windows::Win32::P2P::DRT_SECURITY_PROVIDER* pSecurityProvider) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtOpen(win32::Windows::Win32::P2P::DRT_SETTINGS* pSettings, win32::Windows::Win32::SystemServices::HANDLE hEvent, void* pvContext, void** phDrt) noexcept;
    void __stdcall WIN32_IMPL_DrtClose(void* hDrt) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetEventDataSize(void* hDrt, uint32_t* pulEventDataLen) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetEventData(void* hDrt, uint32_t ulEventDataLen, win32::Windows::Win32::P2P::DRT_EVENT_DATA* pEventData) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtRegisterKey(void* hDrt, win32::Windows::Win32::P2P::DRT_REGISTRATION* pRegistration, void* pvKeyContext, void** phKeyRegistration) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtUpdateKey(void* hKeyRegistration, win32::Windows::Win32::P2P::DRT_DATA* pAppData) noexcept;
    void __stdcall WIN32_IMPL_DrtUnregisterKey(void* hKeyRegistration) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtStartSearch(void* hDrt, win32::Windows::Win32::P2P::DRT_DATA* pKey, win32::Windows::Win32::P2P::DRT_SEARCH_INFO* pInfo, uint32_t timeout, win32::Windows::Win32::SystemServices::HANDLE hEvent, void* pvContext, void** hSearchContext) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtContinueSearch(void* hSearchContext) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetSearchResultSize(void* hSearchContext, uint32_t* pulSearchResultSize) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetSearchResult(void* hSearchContext, uint32_t ulSearchResultSize, win32::Windows::Win32::P2P::DRT_SEARCH_RESULT* pSearchResult) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetSearchPathSize(void* hSearchContext, uint32_t* pulSearchPathSize) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetSearchPath(void* hSearchContext, uint32_t ulSearchPathSize, win32::Windows::Win32::P2P::DRT_ADDRESS_LIST* pSearchPath) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtEndSearch(void* hSearchContext) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetInstanceName(void* hDrt, uint32_t ulcbInstanceNameSize, uint16_t* pwzDrtInstanceName) noexcept;
    int32_t __stdcall WIN32_IMPL_DrtGetInstanceNameSize(void* hDrt, uint32_t* pulcbInstanceNameSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistStartup(uint32_t dwVersionRequested, intptr_t* phPeerDist, uint32_t* pdwSupportedVersion) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistShutdown(intptr_t hPeerDist) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistGetStatus(intptr_t hPeerDist, win32::Windows::Win32::P2P::PEERDIST_STATUS* pPeerDistStatus) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistRegisterForStatusChangeNotification(intptr_t hPeerDist, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped, win32::Windows::Win32::P2P::PEERDIST_STATUS* pPeerDistStatus) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistUnregisterForStatusChangeNotification(intptr_t hPeerDist) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerPublishStream(intptr_t hPeerDist, uint32_t cbContentIdentifier, uint8_t* pContentIdentifier, uint64_t cbContentLength, win32::Windows::Win32::P2P::PEERDIST_PUBLICATION_OPTIONS* pPublishOptions, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, intptr_t* phStream) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerPublishAddToStream(intptr_t hPeerDist, intptr_t hStream, uint32_t cbNumberOfBytes, uint8_t* pBuffer, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerPublishCompleteStream(intptr_t hPeerDist, intptr_t hStream, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerCloseStreamHandle(intptr_t hPeerDist, intptr_t hStream) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerUnpublish(intptr_t hPeerDist, uint32_t cbContentIdentifier, uint8_t* pContentIdentifier) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerOpenContentInformation(intptr_t hPeerDist, uint32_t cbContentIdentifier, uint8_t* pContentIdentifier, uint64_t ullContentOffset, uint64_t cbContentLength, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, intptr_t* phContentInfo) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerRetrieveContentInformation(intptr_t hPeerDist, intptr_t hContentInfo, uint32_t cbMaxNumberOfBytes, uint8_t* pBuffer, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerCloseContentInformation(intptr_t hPeerDist, intptr_t hContentInfo) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerCancelAsyncOperation(intptr_t hPeerDist, uint32_t cbContentIdentifier, uint8_t* pContentIdentifier, win32::Windows::Win32::SystemServices::OVERLAPPED* pOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientOpenContent(intptr_t hPeerDist, win32::Windows::Win32::P2P::PEERDIST_CONTENT_TAG* pContentTag, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, intptr_t* phContentHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientCloseContent(intptr_t hPeerDist, intptr_t hContentHandle) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientAddContentInformation(intptr_t hPeerDist, intptr_t hContentHandle, uint32_t cbNumberOfBytes, uint8_t* pBuffer, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientCompleteContentInformation(intptr_t hPeerDist, intptr_t hContentHandle, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientAddData(intptr_t hPeerDist, intptr_t hContentHandle, uint32_t cbNumberOfBytes, uint8_t* pBuffer, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientBlockRead(intptr_t hPeerDist, intptr_t hContentHandle, uint32_t cbMaxNumberOfBytes, uint8_t* pBuffer, uint32_t dwTimeoutInMilliseconds, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientStreamRead(intptr_t hPeerDist, intptr_t hContentHandle, uint32_t cbMaxNumberOfBytes, uint8_t* pBuffer, uint32_t dwTimeoutInMilliseconds, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientFlushContent(intptr_t hPeerDist, win32::Windows::Win32::P2P::PEERDIST_CONTENT_TAG* pContentTag, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientCancelAsyncOperation(intptr_t hPeerDist, intptr_t hContentHandle, win32::Windows::Win32::SystemServices::OVERLAPPED* pOverlapped) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistGetStatusEx(intptr_t hPeerDist, win32::Windows::Win32::P2P::PEERDIST_STATUS_INFO* pPeerDistStatus) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistRegisterForStatusChangeNotificationEx(intptr_t hPeerDist, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped, win32::Windows::Win32::P2P::PEERDIST_STATUS_INFO* pPeerDistStatus) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_PeerDistGetOverlappedResult(win32::Windows::Win32::SystemServices::OVERLAPPED* lpOverlapped, uint32_t* lpNumberOfBytesTransferred, win32::Windows::Win32::SystemServices::BOOL bWait) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistServerOpenContentInformationEx(intptr_t hPeerDist, uint32_t cbContentIdentifier, uint8_t* pContentIdentifier, uint64_t ullContentOffset, uint64_t cbContentLength, win32::Windows::Win32::P2P::PEERDIST_RETRIEVAL_OPTIONS* pRetrievalOptions, win32::Windows::Win32::SystemServices::HANDLE hCompletionPort, size_t ulCompletionKey, intptr_t* phContentInfo) noexcept;
    uint32_t __stdcall WIN32_IMPL_PeerDistClientGetInformationByHandle(intptr_t hPeerDist, intptr_t hContentHandle, win32::Windows::Win32::P2P::PEERDIST_CLIENT_INFO_BY_HANDLE_CLASS PeerDistClientInfoClass, uint32_t dwBufferSize, void* lpInformation) noexcept;
}
WIN32_IMPL_LINK(PeerGraphStartup, 8)
WIN32_IMPL_LINK(PeerGraphShutdown, 0)
WIN32_IMPL_LINK(PeerGraphFreeData, 4)
WIN32_IMPL_LINK(PeerGraphGetItemCount, 8)
WIN32_IMPL_LINK(PeerGraphGetNextItem, 12)
WIN32_IMPL_LINK(PeerGraphEndEnumeration, 4)
WIN32_IMPL_LINK(PeerGraphCreate, 16)
WIN32_IMPL_LINK(PeerGraphOpen, 28)
WIN32_IMPL_LINK(PeerGraphListen, 16)
WIN32_IMPL_LINK(PeerGraphConnect, 16)
WIN32_IMPL_LINK(PeerGraphClose, 4)
WIN32_IMPL_LINK(PeerGraphDelete, 12)
WIN32_IMPL_LINK(PeerGraphGetStatus, 8)
WIN32_IMPL_LINK(PeerGraphGetProperties, 8)
WIN32_IMPL_LINK(PeerGraphSetProperties, 8)
WIN32_IMPL_LINK(PeerGraphRegisterEvent, 20)
WIN32_IMPL_LINK(PeerGraphUnregisterEvent, 4)
WIN32_IMPL_LINK(PeerGraphGetEventData, 8)
WIN32_IMPL_LINK(PeerGraphGetRecord, 12)
WIN32_IMPL_LINK(PeerGraphAddRecord, 12)
WIN32_IMPL_LINK(PeerGraphUpdateRecord, 8)
WIN32_IMPL_LINK(PeerGraphDeleteRecord, 12)
WIN32_IMPL_LINK(PeerGraphEnumRecords, 16)
WIN32_IMPL_LINK(PeerGraphSearchRecords, 12)
WIN32_IMPL_LINK(PeerGraphExportDatabase, 8)
WIN32_IMPL_LINK(PeerGraphImportDatabase, 8)
WIN32_IMPL_LINK(PeerGraphValidateDeferredRecords, 12)
WIN32_IMPL_LINK(PeerGraphOpenDirectConnection, 16)
WIN32_IMPL_LINK(PeerGraphSendData, 24)
WIN32_IMPL_LINK(PeerGraphCloseDirectConnection, 12)
WIN32_IMPL_LINK(PeerGraphEnumConnections, 12)
WIN32_IMPL_LINK(PeerGraphEnumNodes, 12)
WIN32_IMPL_LINK(PeerGraphSetPresence, 8)
WIN32_IMPL_LINK(PeerGraphGetNodeInfo, 16)
WIN32_IMPL_LINK(PeerGraphSetNodeAttributes, 8)
WIN32_IMPL_LINK(PeerGraphPeerTimeToUniversalTime, 12)
WIN32_IMPL_LINK(PeerGraphUniversalTimeToPeerTime, 12)
WIN32_IMPL_LINK(PeerFreeData, 4)
WIN32_IMPL_LINK(PeerGetItemCount, 8)
WIN32_IMPL_LINK(PeerGetNextItem, 12)
WIN32_IMPL_LINK(PeerEndEnumeration, 4)
WIN32_IMPL_LINK(PeerGroupStartup, 8)
WIN32_IMPL_LINK(PeerGroupShutdown, 0)
WIN32_IMPL_LINK(PeerGroupCreate, 8)
WIN32_IMPL_LINK(PeerGroupOpen, 16)
WIN32_IMPL_LINK(PeerGroupJoin, 16)
WIN32_IMPL_LINK(PeerGroupPasswordJoin, 20)
WIN32_IMPL_LINK(PeerGroupConnect, 4)
WIN32_IMPL_LINK(PeerGroupConnectByAddress, 12)
WIN32_IMPL_LINK(PeerGroupClose, 4)
WIN32_IMPL_LINK(PeerGroupDelete, 8)
WIN32_IMPL_LINK(PeerGroupCreateInvitation, 24)
WIN32_IMPL_LINK(PeerGroupCreatePasswordInvitation, 8)
WIN32_IMPL_LINK(PeerGroupParseInvitation, 8)
WIN32_IMPL_LINK(PeerGroupGetStatus, 8)
WIN32_IMPL_LINK(PeerGroupGetProperties, 8)
WIN32_IMPL_LINK(PeerGroupSetProperties, 8)
WIN32_IMPL_LINK(PeerGroupEnumMembers, 16)
WIN32_IMPL_LINK(PeerGroupOpenDirectConnection, 16)
WIN32_IMPL_LINK(PeerGroupCloseDirectConnection, 12)
WIN32_IMPL_LINK(PeerGroupEnumConnections, 12)
WIN32_IMPL_LINK(PeerGroupSendData, 24)
WIN32_IMPL_LINK(PeerGroupRegisterEvent, 20)
WIN32_IMPL_LINK(PeerGroupUnregisterEvent, 4)
WIN32_IMPL_LINK(PeerGroupGetEventData, 8)
WIN32_IMPL_LINK(PeerGroupGetRecord, 12)
WIN32_IMPL_LINK(PeerGroupAddRecord, 12)
WIN32_IMPL_LINK(PeerGroupUpdateRecord, 8)
WIN32_IMPL_LINK(PeerGroupDeleteRecord, 8)
WIN32_IMPL_LINK(PeerGroupEnumRecords, 12)
WIN32_IMPL_LINK(PeerGroupSearchRecords, 12)
WIN32_IMPL_LINK(PeerGroupExportDatabase, 8)
WIN32_IMPL_LINK(PeerGroupImportDatabase, 8)
WIN32_IMPL_LINK(PeerGroupIssueCredentials, 20)
WIN32_IMPL_LINK(PeerGroupExportConfig, 12)
WIN32_IMPL_LINK(PeerGroupImportConfig, 20)
WIN32_IMPL_LINK(PeerGroupPeerTimeToUniversalTime, 12)
WIN32_IMPL_LINK(PeerGroupUniversalTimeToPeerTime, 12)
WIN32_IMPL_LINK(PeerGroupResumePasswordAuthentication, 8)
WIN32_IMPL_LINK(PeerIdentityCreate, 16)
WIN32_IMPL_LINK(PeerIdentityGetFriendlyName, 8)
WIN32_IMPL_LINK(PeerIdentitySetFriendlyName, 8)
WIN32_IMPL_LINK(PeerIdentityGetCryptKey, 8)
WIN32_IMPL_LINK(PeerIdentityDelete, 4)
WIN32_IMPL_LINK(PeerEnumIdentities, 4)
WIN32_IMPL_LINK(PeerEnumGroups, 8)
WIN32_IMPL_LINK(PeerCreatePeerName, 12)
WIN32_IMPL_LINK(PeerIdentityGetXML, 8)
WIN32_IMPL_LINK(PeerIdentityExport, 12)
WIN32_IMPL_LINK(PeerIdentityImport, 12)
WIN32_IMPL_LINK(PeerIdentityGetDefault, 4)
WIN32_IMPL_LINK(PeerCollabStartup, 4)
WIN32_IMPL_LINK(PeerCollabShutdown, 0)
WIN32_IMPL_LINK(PeerCollabSignin, 8)
WIN32_IMPL_LINK(PeerCollabSignout, 4)
WIN32_IMPL_LINK(PeerCollabGetSigninOptions, 4)
WIN32_IMPL_LINK(PeerCollabAsyncInviteContact, 20)
WIN32_IMPL_LINK(PeerCollabGetInvitationResponse, 8)
WIN32_IMPL_LINK(PeerCollabCancelInvitation, 4)
WIN32_IMPL_LINK(PeerCollabCloseHandle, 4)
WIN32_IMPL_LINK(PeerCollabInviteContact, 16)
WIN32_IMPL_LINK(PeerCollabAsyncInviteEndpoint, 16)
WIN32_IMPL_LINK(PeerCollabInviteEndpoint, 12)
WIN32_IMPL_LINK(PeerCollabGetAppLaunchInfo, 4)
WIN32_IMPL_LINK(PeerCollabRegisterApplication, 8)
WIN32_IMPL_LINK(PeerCollabUnregisterApplication, 8)
WIN32_IMPL_LINK(PeerCollabGetApplicationRegistrationInfo, 12)
WIN32_IMPL_LINK(PeerCollabEnumApplicationRegistrationInfo, 8)
WIN32_IMPL_LINK(PeerCollabGetPresenceInfo, 8)
WIN32_IMPL_LINK(PeerCollabEnumApplications, 12)
WIN32_IMPL_LINK(PeerCollabEnumObjects, 12)
WIN32_IMPL_LINK(PeerCollabEnumEndpoints, 8)
WIN32_IMPL_LINK(PeerCollabRefreshEndpointData, 4)
WIN32_IMPL_LINK(PeerCollabDeleteEndpointData, 4)
WIN32_IMPL_LINK(PeerCollabQueryContactData, 8)
WIN32_IMPL_LINK(PeerCollabSubscribeEndpointData, 4)
WIN32_IMPL_LINK(PeerCollabUnsubscribeEndpointData, 4)
WIN32_IMPL_LINK(PeerCollabSetPresenceInfo, 4)
WIN32_IMPL_LINK(PeerCollabGetEndpointName, 4)
WIN32_IMPL_LINK(PeerCollabSetEndpointName, 4)
WIN32_IMPL_LINK(PeerCollabSetObject, 4)
WIN32_IMPL_LINK(PeerCollabDeleteObject, 4)
WIN32_IMPL_LINK(PeerCollabRegisterEvent, 16)
WIN32_IMPL_LINK(PeerCollabGetEventData, 8)
WIN32_IMPL_LINK(PeerCollabUnregisterEvent, 4)
WIN32_IMPL_LINK(PeerCollabEnumPeopleNearMe, 4)
WIN32_IMPL_LINK(PeerCollabAddContact, 8)
WIN32_IMPL_LINK(PeerCollabDeleteContact, 4)
WIN32_IMPL_LINK(PeerCollabGetContact, 8)
WIN32_IMPL_LINK(PeerCollabUpdateContact, 4)
WIN32_IMPL_LINK(PeerCollabEnumContacts, 4)
WIN32_IMPL_LINK(PeerCollabExportContact, 8)
WIN32_IMPL_LINK(PeerCollabParseContact, 8)
WIN32_IMPL_LINK(PeerNameToPeerHostName, 8)
WIN32_IMPL_LINK(PeerHostNameToPeerName, 8)
WIN32_IMPL_LINK(PeerPnrpStartup, 4)
WIN32_IMPL_LINK(PeerPnrpShutdown, 0)
WIN32_IMPL_LINK(PeerPnrpRegister, 12)
WIN32_IMPL_LINK(PeerPnrpUpdateRegistration, 8)
WIN32_IMPL_LINK(PeerPnrpUnregister, 4)
WIN32_IMPL_LINK(PeerPnrpResolve, 16)
WIN32_IMPL_LINK(PeerPnrpStartResolve, 20)
WIN32_IMPL_LINK(PeerPnrpGetCloudInfo, 8)
WIN32_IMPL_LINK(PeerPnrpGetEndpoint, 8)
WIN32_IMPL_LINK(PeerPnrpEndResolve, 4)
WIN32_IMPL_LINK(DrtCreatePnrpBootstrapResolver, 20)
WIN32_IMPL_LINK(DrtDeletePnrpBootstrapResolver, 4)
WIN32_IMPL_LINK(DrtCreateDnsBootstrapResolver, 12)
WIN32_IMPL_LINK(DrtDeleteDnsBootstrapResolver, 4)
WIN32_IMPL_LINK(DrtCreateIpv6UdpTransport, 20)
WIN32_IMPL_LINK(DrtDeleteIpv6UdpTransport, 4)
WIN32_IMPL_LINK(DrtCreateDerivedKeySecurityProvider, 12)
WIN32_IMPL_LINK(DrtCreateDerivedKey, 8)
WIN32_IMPL_LINK(DrtDeleteDerivedKeySecurityProvider, 4)
WIN32_IMPL_LINK(DrtCreateNullSecurityProvider, 4)
WIN32_IMPL_LINK(DrtDeleteNullSecurityProvider, 4)
WIN32_IMPL_LINK(DrtOpen, 16)
WIN32_IMPL_LINK(DrtClose, 4)
WIN32_IMPL_LINK(DrtGetEventDataSize, 8)
WIN32_IMPL_LINK(DrtGetEventData, 12)
WIN32_IMPL_LINK(DrtRegisterKey, 16)
WIN32_IMPL_LINK(DrtUpdateKey, 8)
WIN32_IMPL_LINK(DrtUnregisterKey, 4)
WIN32_IMPL_LINK(DrtStartSearch, 28)
WIN32_IMPL_LINK(DrtContinueSearch, 4)
WIN32_IMPL_LINK(DrtGetSearchResultSize, 8)
WIN32_IMPL_LINK(DrtGetSearchResult, 12)
WIN32_IMPL_LINK(DrtGetSearchPathSize, 8)
WIN32_IMPL_LINK(DrtGetSearchPath, 12)
WIN32_IMPL_LINK(DrtEndSearch, 4)
WIN32_IMPL_LINK(DrtGetInstanceName, 12)
WIN32_IMPL_LINK(DrtGetInstanceNameSize, 8)
WIN32_IMPL_LINK(PeerDistStartup, 12)
WIN32_IMPL_LINK(PeerDistShutdown, 4)
WIN32_IMPL_LINK(PeerDistGetStatus, 8)
WIN32_IMPL_LINK(PeerDistRegisterForStatusChangeNotification, 20)
WIN32_IMPL_LINK(PeerDistUnregisterForStatusChangeNotification, 4)
WIN32_IMPL_LINK(PeerDistServerPublishStream, 36)
WIN32_IMPL_LINK(PeerDistServerPublishAddToStream, 20)
WIN32_IMPL_LINK(PeerDistServerPublishCompleteStream, 12)
WIN32_IMPL_LINK(PeerDistServerCloseStreamHandle, 8)
WIN32_IMPL_LINK(PeerDistServerUnpublish, 12)
WIN32_IMPL_LINK(PeerDistServerOpenContentInformation, 40)
WIN32_IMPL_LINK(PeerDistServerRetrieveContentInformation, 20)
WIN32_IMPL_LINK(PeerDistServerCloseContentInformation, 8)
WIN32_IMPL_LINK(PeerDistServerCancelAsyncOperation, 16)
WIN32_IMPL_LINK(PeerDistClientOpenContent, 20)
WIN32_IMPL_LINK(PeerDistClientCloseContent, 8)
WIN32_IMPL_LINK(PeerDistClientAddContentInformation, 20)
WIN32_IMPL_LINK(PeerDistClientCompleteContentInformation, 12)
WIN32_IMPL_LINK(PeerDistClientAddData, 20)
WIN32_IMPL_LINK(PeerDistClientBlockRead, 24)
WIN32_IMPL_LINK(PeerDistClientStreamRead, 24)
WIN32_IMPL_LINK(PeerDistClientFlushContent, 20)
WIN32_IMPL_LINK(PeerDistClientCancelAsyncOperation, 12)
WIN32_IMPL_LINK(PeerDistGetStatusEx, 8)
WIN32_IMPL_LINK(PeerDistRegisterForStatusChangeNotificationEx, 20)
WIN32_IMPL_LINK(PeerDistGetOverlappedResult, 12)
WIN32_IMPL_LINK(PeerDistServerOpenContentInformationEx, 44)
WIN32_IMPL_LINK(PeerDistClientGetInformationByHandle, 20)

#pragma endregion abi_methods

#endif
