// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_Perf_0_H
#define WIN32_Windows_Win32_Perf_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Perf
{
#pragma region enums
    enum class PerfCounterDataType : int32_t
    {
        PERF_ERROR_RETURN = 0,
        PERF_SINGLE_COUNTER = 1,
        PERF_MULTIPLE_COUNTERS = 2,
        PERF_MULTIPLE_INSTANCES = 4,
        PERF_COUNTERSET = 6,
    };
    enum class PerfRegInfoType : int32_t
    {
        PERF_REG_COUNTERSET_STRUCT = 1,
        PERF_REG_COUNTER_STRUCT = 2,
        PERF_REG_COUNTERSET_NAME_STRING = 3,
        PERF_REG_COUNTERSET_HELP_STRING = 4,
        PERF_REG_COUNTER_NAME_STRINGS = 5,
        PERF_REG_COUNTER_HELP_STRINGS = 6,
        PERF_REG_PROVIDER_NAME = 7,
        PERF_REG_PROVIDER_GUID = 8,
        PERF_REG_COUNTERSET_ENGLISH_NAME = 9,
        PERF_REG_COUNTER_ENGLISH_NAMES = 10,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct PDH_BROWSE_DLG_CONFIG_A;
    struct PDH_BROWSE_DLG_CONFIG_HA;
    struct PDH_BROWSE_DLG_CONFIG_HW;
    struct PDH_BROWSE_DLG_CONFIG_W;
    struct PDH_COUNTER_INFO_A;
    struct PDH_COUNTER_INFO_W;
    struct PDH_COUNTER_PATH_ELEMENTS_A;
    struct PDH_COUNTER_PATH_ELEMENTS_W;
    struct PDH_DATA_ITEM_PATH_ELEMENTS_A;
    struct PDH_DATA_ITEM_PATH_ELEMENTS_W;
    struct PDH_FMT_COUNTERVALUE;
    struct PDH_FMT_COUNTERVALUE_ITEM_A;
    struct PDH_FMT_COUNTERVALUE_ITEM_W;
    struct PDH_LOG_SERVICE_QUERY_INFO_A;
    struct PDH_LOG_SERVICE_QUERY_INFO_W;
    struct PDH_RAW_COUNTER;
    struct PDH_RAW_COUNTER_ITEM_A;
    struct PDH_RAW_COUNTER_ITEM_W;
    struct PDH_RAW_LOG_RECORD;
    struct PDH_STATISTICS;
    struct PDH_TIME_INFO;
    struct PERF_COUNTERSET_INFO;
    struct PERF_COUNTERSET_INSTANCE;
    struct PERF_COUNTERSET_REG_INFO;
    struct PERF_COUNTER_BLOCK;
    struct PERF_COUNTER_DATA;
    struct PERF_COUNTER_DEFINITION;
    struct PERF_COUNTER_HEADER;
    struct PERF_COUNTER_IDENTIFIER;
    struct PERF_COUNTER_IDENTITY;
    struct PERF_COUNTER_INFO;
    struct PERF_COUNTER_REG_INFO;
    struct PERF_DATA_BLOCK;
    struct PERF_DATA_HEADER;
    struct PERF_INSTANCE_DEFINITION;
    struct PERF_INSTANCE_HEADER;
    struct PERF_MULTI_COUNTERS;
    struct PERF_MULTI_INSTANCES;
    struct PERF_OBJECT_TYPE;
    struct PERF_PROVIDER_CONTEXT;
    struct PERF_STRING_BUFFER_HEADER;
    struct PERF_STRING_COUNTER_HEADER;
    struct PerfProviderHandle;
    struct PerfQueryHandle;
#pragma endregion forward_declarations

#pragma region delegates
    using PERFLIBREQUEST = uint32_t __stdcall(uint32_t, void*, uint32_t);
    using PERF_MEM_ALLOC = void* __stdcall(size_t, void*);
    using PERF_MEM_FREE = void __stdcall(void*, void*);
    using CounterPathCallBack = int32_t __stdcall(size_t);
    using PM_COLLECT_PROC = uint32_t __stdcall(uint16_t*, void**, uint32_t*, uint32_t*);
    using PM_CLOSE_PROC = uint32_t __stdcall();
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
#pragma endregion guids

}
#endif
