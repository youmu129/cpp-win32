// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_ProcessStatus_2_H
#define WIN32_Windows_Win32_ProcessStatus_2_H
#include "win32/impl/Windows.Win32.ProcessStatus.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumProcesses(uint32_t* lpidProcess, uint32_t cb, uint32_t* lpcbNeeded) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumProcessModules(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t* lphModule, uint32_t cb, uint32_t* lpcbNeeded) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumProcessModulesEx(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t* lphModule, uint32_t cb, uint32_t* lpcbNeeded, uint32_t dwFilterFlag) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetModuleBaseNameA(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t hModule, int8_t* lpBaseName, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetModuleBaseNameW(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t hModule, uint16_t* lpBaseName, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetModuleFileNameExA(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t hModule, int8_t* lpFilename, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetModuleFileNameExW(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t hModule, uint16_t* lpFilename, uint32_t nSize) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32GetModuleInformation(win32::Windows::Win32::SystemServices::HANDLE hProcess, intptr_t hModule, win32::Windows::Win32::ProcessStatus::MODULEINFO* lpmodinfo, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EmptyWorkingSet(win32::Windows::Win32::SystemServices::HANDLE hProcess) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32QueryWorkingSet(win32::Windows::Win32::SystemServices::HANDLE hProcess, void* pv, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32QueryWorkingSetEx(win32::Windows::Win32::SystemServices::HANDLE hProcess, void* pv, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32InitializeProcessForWsWatch(win32::Windows::Win32::SystemServices::HANDLE hProcess) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32GetWsChanges(win32::Windows::Win32::SystemServices::HANDLE hProcess, win32::Windows::Win32::ProcessStatus::PSAPI_WS_WATCH_INFORMATION* lpWatchInfo, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32GetWsChangesEx(win32::Windows::Win32::SystemServices::HANDLE hProcess, win32::Windows::Win32::ProcessStatus::PSAPI_WS_WATCH_INFORMATION_EX* lpWatchInfoEx, uint32_t* cb) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetMappedFileNameW(win32::Windows::Win32::SystemServices::HANDLE hProcess, void* lpv, uint16_t* lpFilename, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetMappedFileNameA(win32::Windows::Win32::SystemServices::HANDLE hProcess, void* lpv, int8_t* lpFilename, uint32_t nSize) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumDeviceDrivers(void** lpImageBase, uint32_t cb, uint32_t* lpcbNeeded) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetDeviceDriverBaseNameA(void* ImageBase, int8_t* lpFilename, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetDeviceDriverBaseNameW(void* ImageBase, uint16_t* lpBaseName, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetDeviceDriverFileNameA(void* ImageBase, int8_t* lpFilename, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetDeviceDriverFileNameW(void* ImageBase, uint16_t* lpFilename, uint32_t nSize) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32GetProcessMemoryInfo(win32::Windows::Win32::SystemServices::HANDLE Process, win32::Windows::Win32::ProcessStatus::PROCESS_MEMORY_COUNTERS* ppsmemCounters, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32GetPerformanceInfo(win32::Windows::Win32::ProcessStatus::PERFORMANCE_INFORMATION* pPerformanceInformation, uint32_t cb) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumPageFilesW(win32::Windows::Win32::ProcessStatus::PENUM_PAGE_FILE_CALLBACKW* pCallBackRoutine, void* pContext) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_K32EnumPageFilesA(win32::Windows::Win32::ProcessStatus::PENUM_PAGE_FILE_CALLBACKA* pCallBackRoutine, void* pContext) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetProcessImageFileNameA(win32::Windows::Win32::SystemServices::HANDLE hProcess, int8_t* lpImageFileName, uint32_t nSize) noexcept;
    uint32_t __stdcall WIN32_IMPL_K32GetProcessImageFileNameW(win32::Windows::Win32::SystemServices::HANDLE hProcess, uint16_t* lpImageFileName, uint32_t nSize) noexcept;
}
WIN32_IMPL_LINK(K32EnumProcesses, 12)
WIN32_IMPL_LINK(K32EnumProcessModules, 16)
WIN32_IMPL_LINK(K32EnumProcessModulesEx, 20)
WIN32_IMPL_LINK(K32GetModuleBaseNameA, 16)
WIN32_IMPL_LINK(K32GetModuleBaseNameW, 16)
WIN32_IMPL_LINK(K32GetModuleFileNameExA, 16)
WIN32_IMPL_LINK(K32GetModuleFileNameExW, 16)
WIN32_IMPL_LINK(K32GetModuleInformation, 16)
WIN32_IMPL_LINK(K32EmptyWorkingSet, 4)
WIN32_IMPL_LINK(K32QueryWorkingSet, 12)
WIN32_IMPL_LINK(K32QueryWorkingSetEx, 12)
WIN32_IMPL_LINK(K32InitializeProcessForWsWatch, 4)
WIN32_IMPL_LINK(K32GetWsChanges, 12)
WIN32_IMPL_LINK(K32GetWsChangesEx, 12)
WIN32_IMPL_LINK(K32GetMappedFileNameW, 16)
WIN32_IMPL_LINK(K32GetMappedFileNameA, 16)
WIN32_IMPL_LINK(K32EnumDeviceDrivers, 12)
WIN32_IMPL_LINK(K32GetDeviceDriverBaseNameA, 12)
WIN32_IMPL_LINK(K32GetDeviceDriverBaseNameW, 12)
WIN32_IMPL_LINK(K32GetDeviceDriverFileNameA, 12)
WIN32_IMPL_LINK(K32GetDeviceDriverFileNameW, 12)
WIN32_IMPL_LINK(K32GetProcessMemoryInfo, 12)
WIN32_IMPL_LINK(K32GetPerformanceInfo, 8)
WIN32_IMPL_LINK(K32EnumPageFilesW, 8)
WIN32_IMPL_LINK(K32EnumPageFilesA, 8)
WIN32_IMPL_LINK(K32GetProcessImageFileNameA, 12)
WIN32_IMPL_LINK(K32GetProcessImageFileNameW, 12)

#pragma endregion abi_methods

#endif
