// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WinInet_0_H
#define WIN32_Windows_Win32_WinInet_0_H
WIN32_EXPORT namespace win32::Windows::Win32::SystemServices
{
    struct BOOL;
}
WIN32_EXPORT namespace win32::Windows::Win32::WindowsAndMessaging
{
    struct HWND;
}
WIN32_EXPORT namespace win32::Windows::Win32::WinInet
{
#pragma region enums
    enum class APP_CACHE_FINALIZE_STATE : int32_t
    {
        AppCacheFinalizeStateIncomplete = 0,
        AppCacheFinalizeStateManifestChange = 1,
        AppCacheFinalizeStateComplete = 2,
    };
    enum class APP_CACHE_STATE : int32_t
    {
        AppCacheStateNoUpdateNeeded = 0,
        AppCacheStateUpdateNeeded = 1,
        AppCacheStateUpdateNeededNew = 2,
        AppCacheStateUpdateNeededMasterOnly = 3,
    };
    enum class FORTCMD : int32_t
    {
        FORTCMD_LOGON = 1,
        FORTCMD_LOGOFF = 2,
        FORTCMD_CHG_PERSONALITY = 3,
    };
    enum class FORTSTAT : int32_t
    {
        FORTSTAT_INSTALLED = 1,
        FORTSTAT_LOGGEDON = 2,
    };
    enum class HTTP_PUSH_WAIT_TYPE : int32_t
    {
        HttpPushWaitEnableComplete = 0,
        HttpPushWaitReceiveComplete = 1,
        HttpPushWaitSendComplete = 2,
    };
    enum class HTTP_WEB_SOCKET_BUFFER_TYPE : int32_t
    {
        HTTP_WEB_SOCKET_BINARY_MESSAGE_TYPE = 0,
        HTTP_WEB_SOCKET_BINARY_FRAGMENT_TYPE = 1,
        HTTP_WEB_SOCKET_UTF8_MESSAGE_TYPE = 2,
        HTTP_WEB_SOCKET_UTF8_FRAGMENT_TYPE = 3,
        HTTP_WEB_SOCKET_CLOSE_TYPE = 4,
        HTTP_WEB_SOCKET_PING_TYPE = 5,
    };
    enum class HTTP_WEB_SOCKET_CLOSE_STATUS : int32_t
    {
        HTTP_WEB_SOCKET_SUCCESS_CLOSE_STATUS = 1000,
        HTTP_WEB_SOCKET_ENDPOINT_TERMINATED_CLOSE_STATUS = 1001,
        HTTP_WEB_SOCKET_PROTOCOL_ERROR_CLOSE_STATUS = 1002,
        HTTP_WEB_SOCKET_INVALID_DATA_TYPE_CLOSE_STATUS = 1003,
        HTTP_WEB_SOCKET_EMPTY_CLOSE_STATUS = 1005,
        HTTP_WEB_SOCKET_ABORTED_CLOSE_STATUS = 1006,
        HTTP_WEB_SOCKET_INVALID_PAYLOAD_CLOSE_STATUS = 1007,
        HTTP_WEB_SOCKET_POLICY_VIOLATION_CLOSE_STATUS = 1008,
        HTTP_WEB_SOCKET_MESSAGE_TOO_BIG_CLOSE_STATUS = 1009,
        HTTP_WEB_SOCKET_UNSUPPORTED_EXTENSIONS_CLOSE_STATUS = 1010,
        HTTP_WEB_SOCKET_SERVER_ERROR_CLOSE_STATUS = 1011,
        HTTP_WEB_SOCKET_SECURE_HANDSHAKE_ERROR_CLOSE_STATUS = 1015,
    };
    enum class HTTP_WEB_SOCKET_OPERATION : int32_t
    {
        HTTP_WEB_SOCKET_SEND_OPERATION = 0,
        HTTP_WEB_SOCKET_RECEIVE_OPERATION = 1,
        HTTP_WEB_SOCKET_CLOSE_OPERATION = 2,
        HTTP_WEB_SOCKET_SHUTDOWN_OPERATION = 3,
    };
    enum class INTERNET_SCHEME : int32_t
    {
        INTERNET_SCHEME_PARTIAL = -2,
        INTERNET_SCHEME_UNKNOWN = -1,
        INTERNET_SCHEME_DEFAULT = 0,
        INTERNET_SCHEME_FTP = 1,
        INTERNET_SCHEME_GOPHER = 2,
        INTERNET_SCHEME_HTTP = 3,
        INTERNET_SCHEME_HTTPS = 4,
        INTERNET_SCHEME_FILE = 5,
        INTERNET_SCHEME_NEWS = 6,
        INTERNET_SCHEME_MAILTO = 7,
        INTERNET_SCHEME_SOCKS = 8,
        INTERNET_SCHEME_JAVASCRIPT = 9,
        INTERNET_SCHEME_VBSCRIPT = 10,
        INTERNET_SCHEME_RES = 11,
        INTERNET_SCHEME_FIRST = 1,
        INTERNET_SCHEME_LAST = 11,
    };
    enum class InternetCookieState : int32_t
    {
        COOKIE_STATE_UNKNOWN = 0,
        COOKIE_STATE_ACCEPT = 1,
        COOKIE_STATE_PROMPT = 2,
        COOKIE_STATE_LEASH = 3,
        COOKIE_STATE_DOWNGRADE = 4,
        COOKIE_STATE_REJECT = 5,
        COOKIE_STATE_MAX = 5,
    };
    enum class REQUEST_TIMES : int32_t
    {
        NameResolutionStart = 0,
        NameResolutionEnd = 1,
        ConnectionEstablishmentStart = 2,
        ConnectionEstablishmentEnd = 3,
        TLSHandshakeStart = 4,
        TLSHandshakeEnd = 5,
        HttpRequestTimeMax = 32,
    };
    enum class URL_CACHE_LIMIT_TYPE : int32_t
    {
        UrlCacheLimitTypeIE = 0,
        UrlCacheLimitTypeIETotal = 1,
        UrlCacheLimitTypeAppContainer = 2,
        UrlCacheLimitTypeAppContainerTotal = 3,
        UrlCacheLimitTypeNum = 4,
    };
    enum class WININET_SYNC_MODE : int32_t
    {
        WININET_SYNC_MODE_NEVER = 0,
        WININET_SYNC_MODE_ON_EXPIRY = 1,
        WININET_SYNC_MODE_ONCE_PER_SESSION = 2,
        WININET_SYNC_MODE_ALWAYS = 3,
        WININET_SYNC_MODE_AUTOMATIC = 4,
        WININET_SYNC_MODE_DEFAULT = 4,
    };
    enum class WPAD_CACHE_DELETE : int32_t
    {
        WPAD_CACHE_DELETE_CURRENT = 0,
        WPAD_CACHE_DELETE_ALL = 1,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APP_CACHE_DOWNLOAD_ENTRY;
    struct APP_CACHE_DOWNLOAD_LIST;
    struct APP_CACHE_GROUP_INFO;
    struct APP_CACHE_GROUP_LIST;
    struct AUTO_PROXY_SCRIPT_BUFFER;
    struct AutoProxyHelperFunctions;
    struct AutoProxyHelperVtbl;
    struct COOKIE_DLG_INFO;
    struct CookieDecision;
    struct GOPHER_ABSTRACT_ATTRIBUTE_TYPE;
    struct GOPHER_ADMIN_ATTRIBUTE_TYPE;
    struct GOPHER_ASK_ATTRIBUTE_TYPE;
    struct GOPHER_ATTRIBUTE_TYPE;
    struct GOPHER_FIND_DATAA;
    struct GOPHER_FIND_DATAW;
    struct GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE;
    struct GOPHER_LOCATION_ATTRIBUTE_TYPE;
    struct GOPHER_MOD_DATE_ATTRIBUTE_TYPE;
    struct GOPHER_ORGANIZATION_ATTRIBUTE_TYPE;
    struct GOPHER_PROVIDER_ATTRIBUTE_TYPE;
    struct GOPHER_SCORE_ATTRIBUTE_TYPE;
    struct GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE;
    struct GOPHER_SITE_ATTRIBUTE_TYPE;
    struct GOPHER_TIMEZONE_ATTRIBUTE_TYPE;
    struct GOPHER_TTL_ATTRIBUTE_TYPE;
    struct GOPHER_UNKNOWN_ATTRIBUTE_TYPE;
    struct GOPHER_VERONICA_ATTRIBUTE_TYPE;
    struct GOPHER_VERSION_ATTRIBUTE_TYPE;
    struct GOPHER_VIEW_ATTRIBUTE_TYPE;
    struct HTTP_PUSH_NOTIFICATION_STATUS;
    struct HTTP_PUSH_TRANSPORT_SETTING;
    struct HTTP_PUSH_WAIT_HANDLE__;
    struct HTTP_REQUEST_TIMES;
    struct HTTP_VERSION_INFO;
    struct HTTP_WEB_SOCKET_ASYNC_RESULT;
    struct INTERNET_ASYNC_RESULT;
    struct INTERNET_AUTH_NOTIFY_DATA;
    struct INTERNET_BUFFERSA;
    struct INTERNET_BUFFERSW;
    struct INTERNET_CACHE_CONFIG_INFOA;
    struct INTERNET_CACHE_CONFIG_INFOW;
    struct INTERNET_CACHE_CONFIG_PATH_ENTRYA;
    struct INTERNET_CACHE_CONFIG_PATH_ENTRYW;
    struct INTERNET_CACHE_CONTAINER_INFOA;
    struct INTERNET_CACHE_CONTAINER_INFOW;
    struct INTERNET_CACHE_ENTRY_INFOA;
    struct INTERNET_CACHE_ENTRY_INFOW;
    struct INTERNET_CACHE_GROUP_INFOA;
    struct INTERNET_CACHE_GROUP_INFOW;
    struct INTERNET_CACHE_TIMESTAMPS;
    struct INTERNET_CALLBACK_COOKIE;
    struct INTERNET_CERTIFICATE_INFO;
    struct INTERNET_CONNECTED_INFO;
    struct INTERNET_COOKIE;
    struct INTERNET_COOKIE2;
    struct INTERNET_CREDENTIALS;
    struct INTERNET_DIAGNOSTIC_SOCKET_INFO;
    struct INTERNET_DOWNLOAD_MODE_HANDLE;
    struct INTERNET_END_BROWSER_SESSION_DATA;
    struct INTERNET_PER_CONN_OPTIONA;
    struct INTERNET_PER_CONN_OPTIONW;
    struct INTERNET_PER_CONN_OPTION_LISTA;
    struct INTERNET_PER_CONN_OPTION_LISTW;
    struct INTERNET_PREFETCH_STATUS;
    struct INTERNET_PROXY_INFO;
    struct INTERNET_SECURITY_CONNECTION_INFO;
    struct INTERNET_SECURITY_INFO;
    struct INTERNET_SERVER_CONNECTION_STATE;
    struct INTERNET_VERSION_INFO;
    struct IncomingCookieState;
    struct InternetCookieHistory;
    struct OutgoingCookieState;
    struct ProofOfPossessionCookieInfo;
    struct URLCACHE_ENTRY_INFO;
    struct URL_COMPONENTSA;
    struct URL_COMPONENTSW;
    struct WININET_PROXY_INFO;
    struct WININET_PROXY_INFO_LIST;
    struct IDialBranding;
    struct IDialEngine;
    struct IDialEventSink;
    struct IProofOfPossessionCookieInfoManager;
    struct IProofOfPossessionCookieInfoManager2;
    struct ProofOfPossessionCookieInfoManager;
#pragma endregion forward_declarations

#pragma region delegates
    using INTERNET_STATUS_CALLBACK = void __stdcall(void*, size_t, uint32_t, void*, uint32_t);
    using LPINTERNET_STATUS_CALLBACK = void __stdcall();
    using GOPHER_ATTRIBUTE_ENUMERATOR = Windows::Win32::SystemServices::BOOL __stdcall(Windows::Win32::WinInet::GOPHER_ATTRIBUTE_TYPE*, uint32_t);
    using PFN_AUTH_NOTIFY = uint32_t __stdcall(size_t, uint32_t, void*);
    using pfnInternetInitializeAutoProxyDll = Windows::Win32::SystemServices::BOOL __stdcall(uint32_t, int8_t*, int8_t*, Windows::Win32::WinInet::AutoProxyHelperFunctions*, Windows::Win32::WinInet::AUTO_PROXY_SCRIPT_BUFFER*);
    using pfnInternetDeInitializeAutoProxyDll = Windows::Win32::SystemServices::BOOL __stdcall(int8_t*, uint32_t);
    using pfnInternetGetProxyInfo = Windows::Win32::SystemServices::BOOL __stdcall(int8_t*, uint32_t, int8_t*, uint32_t, int8_t**, uint32_t*);
    using PFN_DIAL_HANDLER = uint32_t __stdcall(Windows::Win32::WindowsAndMessaging::HWND, int8_t*, uint32_t, uint32_t*);
    using CACHE_OPERATOR = Windows::Win32::SystemServices::BOOL __stdcall(Windows::Win32::WinInet::INTERNET_CACHE_ENTRY_INFOA*, uint32_t*, void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::IDialBranding>{ 0x8AECAFA9,0x4306,0x43CC,{ 0x8C,0x5A,0x76,0x5F,0x29,0x79,0xCC,0x16 } }; // 8AECAFA9-4306-43CC-8C5A-765F2979CC16
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::IDialEngine>{ 0x39FD782B,0x7905,0x40D5,{ 0x91,0x48,0x3C,0x9B,0x19,0x04,0x23,0xD5 } }; // 39FD782B-7905-40D5-9148-3C9B190423D5
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::IDialEventSink>{ 0x2D86F4FF,0x6E2D,0x4488,{ 0xB2,0xE9,0x69,0x34,0xAF,0xD4,0x1B,0xEA } }; // 2D86F4FF-6E2D-4488-B2E9-6934AFD41BEA
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::IProofOfPossessionCookieInfoManager>{ 0xCDAECE56,0x4EDF,0x43DF,{ 0xB1,0x13,0x88,0xE4,0x55,0x6F,0xA1,0xBB } }; // CDAECE56-4EDF-43DF-B113-88E4556FA1BB
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::IProofOfPossessionCookieInfoManager2>{ 0x15E41407,0xB42F,0x4AE7,{ 0x99,0x66,0x34,0xA0,0x87,0xB2,0xD7,0x13 } }; // 15E41407-B42F-4AE7-9966-34A087B2D713
    template <> inline constexpr guid guid_v<Windows::Win32::WinInet::ProofOfPossessionCookieInfoManager>{ 0xA9927F85,0xA304,0x4390,{ 0x8B,0x23,0xA7,0x5F,0x1C,0x66,0x86,0x00 } }; // A9927F85-A304-4390-8B23-A75F1C668600
#pragma endregion guids

}
#endif
