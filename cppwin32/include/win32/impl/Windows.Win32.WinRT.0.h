// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WinRT_0_H
#define WIN32_Windows_Win32_WinRT_0_H
WIN32_EXPORT namespace win32::Windows::Win32::Dxgi
{
    struct IDXGIDevice;
}
WIN32_EXPORT namespace win32::Windows::Win32::WinRT
{
#pragma region enums
    enum class ACTIVATIONTYPE : int32_t
    {
        ACTIVATIONTYPE_UNCATEGORIZED = 0,
        ACTIVATIONTYPE_FROM_MONIKER = 1,
        ACTIVATIONTYPE_FROM_DATA = 2,
        ACTIVATIONTYPE_FROM_STORAGE = 4,
        ACTIVATIONTYPE_FROM_STREAM = 8,
        ACTIVATIONTYPE_FROM_FILE = 16,
    };
    enum class AgileReferenceOptions : int32_t
    {
        AGILEREFERENCE_DEFAULT = 0,
        AGILEREFERENCE_DELAYEDMARSHAL = 1,
    };
    enum class BSOS_OPTIONS : int32_t
    {
        BSOS_DEFAULT = 0,
        BSOS_PREFERDESTINATIONSTREAM = 1,
    };
    enum class CASTING_CONNECTION_ERROR_STATUS : int32_t
    {
        CASTING_CONNECTION_ERROR_STATUS_SUCCEEDED = 0,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_DID_NOT_RESPOND = 1,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_ERROR = 2,
        CASTING_CONNECTION_ERROR_STATUS_DEVICE_LOCKED = 3,
        CASTING_CONNECTION_ERROR_STATUS_PROTECTED_PLAYBACK_FAILED = 4,
        CASTING_CONNECTION_ERROR_STATUS_INVALID_CASTING_SOURCE = 5,
        CASTING_CONNECTION_ERROR_STATUS_UNKNOWN = 6,
    };
    enum class CASTING_CONNECTION_STATE : int32_t
    {
        CASTING_CONNECTION_STATE_DISCONNECTED = 0,
        CASTING_CONNECTION_STATE_CONNECTED = 1,
        CASTING_CONNECTION_STATE_RENDERING = 2,
        CASTING_CONNECTION_STATE_DISCONNECTING = 3,
        CASTING_CONNECTION_STATE_CONNECTING = 4,
    };
    enum class GRAPHICS_EFFECT_PROPERTY_MAPPING : int32_t
    {
        GRAPHICS_EFFECT_PROPERTY_MAPPING_UNKNOWN = 0,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_DIRECT = 1,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORX = 2,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORY = 3,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORZ = 4,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_VECTORW = 5,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_RECT_TO_VECTOR4 = 6,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_RADIANS_TO_DEGREES = 7,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLORMATRIX_ALPHA_MODE = 8,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLOR_TO_VECTOR3 = 9,
        GRAPHICS_EFFECT_PROPERTY_MAPPING_COLOR_TO_VECTOR4 = 10,
    };
    enum class NotifyCollectionChangedAction : int32_t
    {
        NotifyCollectionChangedAction_Add = 0,
        NotifyCollectionChangedAction_Remove = 1,
        NotifyCollectionChangedAction_Replace = 2,
        NotifyCollectionChangedAction_Move = 3,
        NotifyCollectionChangedAction_Reset = 4,
    };
    enum class RO_ERROR_REPORTING_FLAGS : int32_t
    {
        RO_ERROR_REPORTING_NONE = 0,
        RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 1,
        RO_ERROR_REPORTING_FORCEEXCEPTIONS = 2,
        RO_ERROR_REPORTING_USESETERRORINFO = 4,
        RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 8,
    };
    enum class RO_INIT_TYPE : int32_t
    {
        RO_INIT_SINGLETHREADED = 0,
        RO_INIT_MULTITHREADED = 1,
    };
    enum class TrustLevel : int32_t
    {
        BaseTrust = 0,
        PartialTrust = 1,
        FullTrust = 2,
    };
    enum class TypeKind : int32_t
    {
        TypeKind_Primitive = 0,
        TypeKind_Metadata = 1,
        TypeKind_Custom = 2,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__;
    struct EventRegistrationToken;
    struct HSTRING_BUFFER__;
    struct HSTRING_HEADER;
    struct HSTRING__;
    struct NotifyCollectionChangedEventArgs;
    struct PDF_RENDER_PARAMS;
    struct ROPARAMIIDHANDLE__;
    struct ServerInformation;
    struct TypeName;
    struct __AnonymousRecord_roapi_L45_C9;
    struct IAccountsSettingsPaneInterop;
    struct IAgileReference;
    struct IApartmentShutdown;
    struct IAppServiceConnectionExtendedExecution;
    struct IAudioFrameNative;
    struct IAudioFrameNativeFactory;
    struct IBindableIterable;
    struct IBindableIterator;
    struct IBindableObservableVector;
    struct IBindableVector;
    struct IBindableVectorChangedEventHandler;
    struct IBindableVectorView;
    struct IBufferByteAccess;
    struct ICastingController;
    struct ICastingEventHandler;
    struct ICastingSourceInfo;
    struct ICompositionCapabilitiesInteropFactory;
    struct ICompositionDrawingSurfaceInterop;
    struct ICompositionDrawingSurfaceInterop2;
    struct ICompositionGraphicsDeviceInterop;
    struct ICompositorDesktopInterop;
    struct ICompositorInterop;
    struct ICorrelationVectorInformation;
    struct ICorrelationVectorSource;
    struct IDesktopWindowContentBridgeInterop;
    struct IDesktopWindowTargetInterop;
    struct IDirect3DDxgiInterfaceAccess;
    struct IDisplayDeviceInterop;
    struct IDisplayPathInterop;
    struct IDragDropManagerInterop;
    struct IGeometrySource2DInterop;
    struct IGraphicsCaptureItemInterop;
    struct IGraphicsEffectD2D1Interop;
    struct IInputPaneInterop;
    struct IInspectable;
    struct ILanguageExceptionErrorInfo;
    struct ILanguageExceptionErrorInfo2;
    struct ILanguageExceptionStackBackTrace;
    struct ILanguageExceptionTransform;
    struct INotifyCollectionChanged;
    struct INotifyCollectionChangedEventArgs;
    struct INotifyCollectionChangedEventArgsFactory;
    struct INotifyCollectionChangedEventHandler;
    struct IPdfRendererNative;
    struct IPlayToManagerInterop;
    struct IPrintManagerInterop;
    struct IPrinting3DManagerInterop;
    struct IRestrictedErrorInfo;
    struct IRoMetaDataLocator;
    struct IRoSimpleMetaDataBuilder;
    struct ISoftwareBitmapNative;
    struct ISoftwareBitmapNativeFactory;
    struct ISurfaceImageSourceManagerNative;
    struct ISurfaceImageSourceNative;
    struct ISurfaceImageSourceNativeWithD2D;
    struct ISwapChainBackgroundPanelNative;
    struct ISwapChainInterop;
    struct ISwapChainPanelNative;
    struct ISwapChainPanelNative2;
    struct IUIViewSettingsInterop;
    struct IUserActivityInterop;
    struct IUserActivityRequestManagerInterop;
    struct IUserActivitySourceHostInterop;
    struct IUserConsentVerifierInterop;
    struct IVideoFrameNative;
    struct IVideoFrameNativeFactory;
    struct IVirtualSurfaceImageSourceNative;
    struct IVirtualSurfaceUpdatesCallbackNative;
    struct IVisualInteractionSourceInterop;
    struct IWebAuthenticationCoreManagerInterop;
#pragma endregion forward_declarations

#pragma region delegates
    using PFN_PDF_CREATE_RENDERER = int32_t __stdcall(Windows::Win32::Dxgi::IDXGIDevice*, Windows::Win32::WinRT::IPdfRendererNative**);
    using PINSPECT_HSTRING_CALLBACK = int32_t __stdcall(void*, size_t, uint32_t, uint8_t*);
    using PINSPECT_HSTRING_CALLBACK2 = int32_t __stdcall(void*, uint64_t, uint32_t, uint8_t*);
    using PINSPECT_MEMORY_CALLBACK = int32_t __stdcall(void*, size_t, uint32_t, uint8_t*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IAccountsSettingsPaneInterop>{ 0xD3EE12AD,0x3865,0x4362,{ 0x97,0x46,0xB7,0x5A,0x68,0x2D,0xF0,0xE6 } }; // D3EE12AD-3865-4362-9746-B75A682DF0E6
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IAgileReference>{ 0xC03F6A43,0x65A4,0x9818,{ 0x98,0x7E,0xE0,0xB8,0x10,0xD2,0xA6,0xF2 } }; // C03F6A43-65A4-9818-987E-E0B810D2A6F2
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IApartmentShutdown>{ 0xA2F05A09,0x27A2,0x42B5,{ 0xBC,0x0E,0xAC,0x16,0x3E,0xF4,0x9D,0x9B } }; // A2F05A09-27A2-42B5-BC0E-AC163EF49D9B
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IAppServiceConnectionExtendedExecution>{ 0x65219584,0xF9CB,0x4AE3,{ 0x81,0xF9,0xA2,0x8A,0x6C,0xA4,0x50,0xD9 } }; // 65219584-F9CB-4AE3-81F9-A28A6CA450D9
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IAudioFrameNative>{ 0x20BE1E2E,0x930F,0x4746,{ 0x93,0x35,0x3C,0x33,0x2F,0x25,0x50,0x93 } }; // 20BE1E2E-930F-4746-9335-3C332F255093
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IAudioFrameNativeFactory>{ 0x7BD67CF8,0xBF7D,0x43E6,{ 0xAF,0x8D,0xB1,0x70,0xEE,0x0C,0x01,0x10 } }; // 7BD67CF8-BF7D-43E6-AF8D-B170EE0C0110
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableIterable>{ 0x036D2C08,0xDF29,0x41AF,{ 0x8A,0xA2,0xD7,0x74,0xBE,0x62,0xBA,0x6F } }; // 036D2C08-DF29-41AF-8AA2-D774BE62BA6F
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableIterator>{ 0x6A1D6C07,0x076D,0x49F2,{ 0x83,0x14,0xF5,0x2C,0x9C,0x9A,0x83,0x31 } }; // 6A1D6C07-076D-49F2-8314-F52C9C9A8331
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableObservableVector>{ 0xFE1EB536,0x7E7F,0x4F90,{ 0xAC,0x9A,0x47,0x49,0x84,0xAA,0xE5,0x12 } }; // FE1EB536-7E7F-4F90-AC9A-474984AAE512
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableVector>{ 0x393DE7DE,0x6FD0,0x4C0D,{ 0xBB,0x71,0x47,0x24,0x4A,0x11,0x3E,0x93 } }; // 393DE7DE-6FD0-4C0D-BB71-47244A113E93
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableVectorChangedEventHandler>{ 0x624CD4E1,0xD007,0x43B1,{ 0x9C,0x03,0xAF,0x4D,0x3E,0x62,0x58,0xC4 } }; // 624CD4E1-D007-43B1-9C03-AF4D3E6258C4
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBindableVectorView>{ 0x346DD6E7,0x976E,0x4BC3,{ 0x81,0x5D,0xEC,0xE2,0x43,0xBC,0x0F,0x33 } }; // 346DD6E7-976E-4BC3-815D-ECE243BC0F33
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IBufferByteAccess>{ 0x905A0FEF,0xBC53,0x11DF,{ 0x8C,0x49,0x00,0x1E,0x4F,0xC6,0x86,0xDA } }; // 905A0FEF-BC53-11DF-8C49-001E4FC686DA
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICastingController>{ 0xF0A56423,0xA664,0x4FBD,{ 0x8B,0x43,0x40,0x9A,0x45,0xE8,0xD9,0xA1 } }; // F0A56423-A664-4FBD-8B43-409A45E8D9A1
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICastingEventHandler>{ 0xC79A6CB7,0xBEBD,0x47A6,{ 0xA2,0xAD,0x4D,0x45,0xAD,0x79,0xC7,0xBC } }; // C79A6CB7-BEBD-47A6-A2AD-4D45AD79C7BC
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICastingSourceInfo>{ 0x45101AB7,0x7C3A,0x4BCE,{ 0x95,0x00,0x12,0xC0,0x90,0x24,0xB2,0x98 } }; // 45101AB7-7C3A-4BCE-9500-12C09024B298
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositionCapabilitiesInteropFactory>{ 0x2C9DB356,0xE70D,0x4642,{ 0x82,0x98,0xBC,0x4A,0xA5,0xB4,0x86,0x5C } }; // 2C9DB356-E70D-4642-8298-BC4AA5B4865C
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositionDrawingSurfaceInterop>{ 0xFD04E6E3,0xFE0C,0x4C3C,{ 0xAB,0x19,0xA0,0x76,0x01,0xA5,0x76,0xEE } }; // FD04E6E3-FE0C-4C3C-AB19-A07601A576EE
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositionDrawingSurfaceInterop2>{ 0x41E64AAE,0x98C0,0x4239,{ 0x8E,0x95,0xA3,0x30,0xDD,0x6A,0xA1,0x8B } }; // 41E64AAE-98C0-4239-8E95-A330DD6AA18B
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositionGraphicsDeviceInterop>{ 0xA116FF71,0xF8BF,0x4C8A,{ 0x9C,0x98,0x70,0x77,0x9A,0x32,0xA9,0xC8 } }; // A116FF71-F8BF-4C8A-9C98-70779A32A9C8
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositorDesktopInterop>{ 0x29E691FA,0x4567,0x4DCA,{ 0xB3,0x19,0xD0,0xF2,0x07,0xEB,0x68,0x07 } }; // 29E691FA-4567-4DCA-B319-D0F207EB6807
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICompositorInterop>{ 0x25297D5C,0x3AD4,0x4C9C,{ 0xB5,0xCF,0xE3,0x6A,0x38,0x51,0x23,0x30 } }; // 25297D5C-3AD4-4C9C-B5CF-E36A38512330
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICorrelationVectorInformation>{ 0x83C78B3C,0xD88B,0x4950,{ 0xAA,0x6E,0x22,0xB8,0xD2,0x2A,0xAB,0xD3 } }; // 83C78B3C-D88B-4950-AA6E-22B8D22AABD3
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ICorrelationVectorSource>{ 0x152B8A3B,0xB9B9,0x4685,{ 0xB5,0x6E,0x97,0x48,0x47,0xBC,0x75,0x45 } }; // 152B8A3B-B9B9-4685-B56E-974847BC7545
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDesktopWindowContentBridgeInterop>{ 0x37642806,0xF421,0x4FD0,{ 0x9F,0x82,0x23,0xAE,0x7C,0x77,0x61,0x82 } }; // 37642806-F421-4FD0-9F82-23AE7C776182
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDesktopWindowTargetInterop>{ 0x35DBF59E,0xE3F9,0x45B0,{ 0x81,0xE7,0xFE,0x75,0xF4,0x14,0x5D,0xC9 } }; // 35DBF59E-E3F9-45B0-81E7-FE75F4145DC9
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDirect3DDxgiInterfaceAccess>{ 0xA9B3D012,0x3DF2,0x4EE3,{ 0xB8,0xD1,0x86,0x95,0xF4,0x57,0xD3,0xC1 } }; // A9B3D012-3DF2-4EE3-B8D1-8695F457D3C1
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDisplayDeviceInterop>{ 0x64338358,0x366A,0x471B,{ 0xBD,0x56,0xDD,0x8E,0xF4,0x8E,0x43,0x9B } }; // 64338358-366A-471B-BD56-DD8EF48E439B
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDisplayPathInterop>{ 0xA6BA4205,0xE59E,0x4E71,{ 0xB2,0x5B,0x4E,0x43,0x6D,0x21,0xEE,0x3D } }; // A6BA4205-E59E-4E71-B25B-4E436D21EE3D
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IDragDropManagerInterop>{ 0x5AD8CBA7,0x4C01,0x4DAC,{ 0x90,0x74,0x82,0x78,0x94,0x29,0x2D,0x63 } }; // 5AD8CBA7-4C01-4DAC-9074-827894292D63
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IGeometrySource2DInterop>{ 0x0657AF73,0x53FD,0x47CF,{ 0x84,0xFF,0xC8,0x49,0x2D,0x2A,0x80,0xA3 } }; // 0657AF73-53FD-47CF-84FF-C8492D2A80A3
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IGraphicsCaptureItemInterop>{ 0x3628E81B,0x3CAC,0x4C60,{ 0xB7,0xF4,0x23,0xCE,0x0E,0x0C,0x33,0x56 } }; // 3628E81B-3CAC-4C60-B7F4-23CE0E0C3356
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IGraphicsEffectD2D1Interop>{ 0x2FC57384,0xA068,0x44D7,{ 0xA3,0x31,0x30,0x98,0x2F,0xCF,0x71,0x77 } }; // 2FC57384-A068-44D7-A331-30982FCF7177
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IInputPaneInterop>{ 0x75CF2C57,0x9195,0x4931,{ 0x83,0x32,0xF0,0xB4,0x09,0xE9,0x16,0xAF } }; // 75CF2C57-9195-4931-8332-F0B409E916AF
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IInspectable>{ 0xAF86E2E0,0xB12D,0x4C6A,{ 0x9C,0x5A,0xD7,0xAA,0x65,0x10,0x1E,0x90 } }; // AF86E2E0-B12D-4C6A-9C5A-D7AA65101E90
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ILanguageExceptionErrorInfo>{ 0x04A2DBF3,0xDF83,0x116C,{ 0x09,0x46,0x08,0x12,0xAB,0xF6,0xE0,0x7D } }; // 04A2DBF3-DF83-116C-0946-0812ABF6E07D
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ILanguageExceptionErrorInfo2>{ 0x5746E5C4,0x5B97,0x424C,{ 0xB6,0x20,0x28,0x22,0x91,0x57,0x34,0xDD } }; // 5746E5C4-5B97-424C-B620-2822915734DD
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ILanguageExceptionStackBackTrace>{ 0xCBE53FB5,0xF967,0x4258,{ 0x8D,0x34,0x42,0xF5,0xE2,0x58,0x33,0xDE } }; // CBE53FB5-F967-4258-8D34-42F5E25833DE
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ILanguageExceptionTransform>{ 0xFEB5A271,0xA6CD,0x45CE,{ 0x88,0x0A,0x69,0x67,0x06,0xBA,0xDC,0x65 } }; // FEB5A271-A6CD-45CE-880A-696706BADC65
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::INotifyCollectionChanged>{ 0x28B167D5,0x1A31,0x465B,{ 0x9B,0x25,0xD5,0xC3,0xAE,0x68,0x6C,0x40 } }; // 28B167D5-1A31-465B-9B25-D5C3AE686C40
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::INotifyCollectionChangedEventArgs>{ 0x4CF68D33,0xE3F2,0x4964,{ 0xB8,0x5E,0x94,0x5B,0x4F,0x7E,0x2F,0x21 } }; // 4CF68D33-E3F2-4964-B85E-945B4F7E2F21
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::INotifyCollectionChangedEventArgsFactory>{ 0xB30C3E3A,0xDF8D,0x44A5,{ 0x9A,0x38,0x7A,0xC0,0xD0,0x8C,0xE6,0x3D } }; // B30C3E3A-DF8D-44A5-9A38-7AC0D08CE63D
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::INotifyCollectionChangedEventHandler>{ 0xCA10B37C,0xF382,0x4591,{ 0x85,0x57,0x5E,0x24,0x96,0x52,0x79,0xB0 } }; // CA10B37C-F382-4591-8557-5E24965279B0
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IPdfRendererNative>{ 0x7D9DCD91,0xD277,0x4947,{ 0x85,0x27,0x07,0xA0,0xDA,0xED,0xA9,0x4A } }; // 7D9DCD91-D277-4947-8527-07A0DAEDA94A
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IPlayToManagerInterop>{ 0x24394699,0x1F2C,0x4EB3,{ 0x8C,0xD7,0x0E,0xC1,0xDA,0x42,0xA5,0x40 } }; // 24394699-1F2C-4EB3-8CD7-0EC1DA42A540
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IPrintManagerInterop>{ 0xC5435A42,0x8D43,0x4E7B,{ 0xA6,0x8A,0xEF,0x31,0x1E,0x39,0x20,0x87 } }; // C5435A42-8D43-4E7B-A68A-EF311E392087
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IPrinting3DManagerInterop>{ 0x9CA31010,0x1484,0x4587,{ 0xB2,0x6B,0xDD,0xDF,0x9F,0x9C,0xAE,0xCD } }; // 9CA31010-1484-4587-B26B-DDDF9F9CAECD
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IRestrictedErrorInfo>{ 0x82BA7092,0x4C88,0x427D,{ 0xA7,0xBC,0x16,0xDD,0x93,0xFE,0xB6,0x7E } }; // 82BA7092-4C88-427D-A7BC-16DD93FEB67E
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISoftwareBitmapNative>{ 0x94BC8415,0x04EA,0x4B2E,{ 0xAF,0x13,0x4D,0xE9,0x5A,0xA8,0x98,0xEB } }; // 94BC8415-04EA-4B2E-AF13-4DE95AA898EB
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISoftwareBitmapNativeFactory>{ 0xC3C181EC,0x2914,0x4791,{ 0xAF,0x02,0x02,0xD2,0x24,0xA1,0x0B,0x43 } }; // C3C181EC-2914-4791-AF02-02D224A10B43
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISurfaceImageSourceManagerNative>{ 0x4C8798B7,0x1D88,0x4A0F,{ 0xB5,0x9B,0xB9,0x3F,0x60,0x0D,0xE8,0xC8 } }; // 4C8798B7-1D88-4A0F-B59B-B93F600DE8C8
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISurfaceImageSourceNative>{ 0xF2E9EDC1,0xD307,0x4525,{ 0x98,0x86,0x0F,0xAF,0xAA,0x44,0x16,0x3C } }; // F2E9EDC1-D307-4525-9886-0FAFAA44163C
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISurfaceImageSourceNativeWithD2D>{ 0x54298223,0x41E1,0x4A41,{ 0x9C,0x08,0x02,0xE8,0x25,0x68,0x64,0xA1 } }; // 54298223-41E1-4A41-9C08-02E8256864A1
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISwapChainBackgroundPanelNative>{ 0x43BEBD4E,0xADD5,0x4035,{ 0x8F,0x85,0x56,0x08,0xD0,0x8E,0x9D,0xC9 } }; // 43BEBD4E-ADD5-4035-8F85-5608D08E9DC9
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISwapChainInterop>{ 0x26F496A0,0x7F38,0x45FB,{ 0x88,0xF7,0xFA,0xAA,0xBE,0x67,0xDD,0x59 } }; // 26F496A0-7F38-45FB-88F7-FAAABE67DD59
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISwapChainPanelNative>{ 0xF92F19D2,0x3ADE,0x45A6,{ 0xA2,0x0C,0xF6,0xF1,0xEA,0x90,0x55,0x4B } }; // F92F19D2-3ADE-45A6-A20C-F6F1EA90554B
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::ISwapChainPanelNative2>{ 0xD5A2F60C,0x37B2,0x44A2,{ 0x93,0x7B,0x8D,0x8E,0xB9,0x72,0x68,0x21 } }; // D5A2F60C-37B2-44A2-937B-8D8EB9726821
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IUIViewSettingsInterop>{ 0x3694DBF9,0x8F68,0x44BE,{ 0x8F,0xF5,0x19,0x5C,0x98,0xED,0xE8,0xA6 } }; // 3694DBF9-8F68-44BE-8FF5-195C98EDE8A6
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IUserActivityInterop>{ 0x1ADE314D,0x0E0A,0x40D9,{ 0x82,0x4C,0x9A,0x08,0x8A,0x50,0x05,0x9F } }; // 1ADE314D-0E0A-40D9-824C-9A088A50059F
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IUserActivityRequestManagerInterop>{ 0xDD69F876,0x9699,0x4715,{ 0x90,0x95,0xE3,0x7E,0xA3,0x0D,0xFA,0x1B } }; // DD69F876-9699-4715-9095-E37EA30DFA1B
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IUserActivitySourceHostInterop>{ 0xC15DF8BC,0x8844,0x487A,{ 0xB8,0x5B,0x75,0x78,0xE0,0xF6,0x14,0x19 } }; // C15DF8BC-8844-487A-B85B-7578E0F61419
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IUserConsentVerifierInterop>{ 0x39E050C3,0x4E74,0x441A,{ 0x8D,0xC0,0xB8,0x11,0x04,0xDF,0x94,0x9C } }; // 39E050C3-4E74-441A-8DC0-B81104DF949C
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IVideoFrameNative>{ 0x26BA702B,0x314A,0x4620,{ 0xAA,0xF6,0x7A,0x51,0xAA,0x58,0xFA,0x18 } }; // 26BA702B-314A-4620-AAF6-7A51AA58FA18
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IVideoFrameNativeFactory>{ 0x69E3693E,0x8E1E,0x4E63,{ 0xAC,0x4C,0x7F,0xDC,0x21,0xD9,0x73,0x1D } }; // 69E3693E-8E1E-4E63-AC4C-7FDC21D9731D
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IVirtualSurfaceImageSourceNative>{ 0xE9550983,0x360B,0x4F53,{ 0xB3,0x91,0xAF,0xD6,0x95,0x07,0x86,0x91 } }; // E9550983-360B-4F53-B391-AFD695078691
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IVirtualSurfaceUpdatesCallbackNative>{ 0xDBF2E947,0x8E6C,0x4254,{ 0x9E,0xEE,0x77,0x38,0xF7,0x13,0x86,0xC9 } }; // DBF2E947-8E6C-4254-9EEE-7738F71386C9
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IVisualInteractionSourceInterop>{ 0x11F62CD1,0x2F9D,0x42D3,{ 0xB0,0x5F,0xD6,0x79,0x0D,0x9E,0x9F,0x8E } }; // 11F62CD1-2F9D-42D3-B05F-D6790D9E9F8E
    template <> inline constexpr guid guid_v<Windows::Win32::WinRT::IWebAuthenticationCoreManagerInterop>{ 0xF4B8E804,0x811E,0x4436,{ 0xB6,0x9C,0x44,0xCB,0x67,0xB7,0x20,0x84 } }; // F4B8E804-811E-4436-B69C-44CB67B72084
#pragma endregion guids

}
#endif
