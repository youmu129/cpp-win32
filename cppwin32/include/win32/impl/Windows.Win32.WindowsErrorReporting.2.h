// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsErrorReporting_2_H
#define WIN32_Windows_Win32_WindowsErrorReporting_2_H
#include "win32/impl/Windows.Win32.WindowsErrorReporting.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    int32_t __stdcall WIN32_IMPL_WerReportCreate(uint16_t* pwzEventType, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_TYPE repType, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_INFORMATION* pReportInformation, intptr_t* phReportHandle) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportSetParameter(intptr_t hReportHandle, uint32_t dwparamID, uint16_t* pwzName, uint16_t* pwzValue) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportAddFile(intptr_t hReportHandle, uint16_t* pwzPath, win32::Windows::Win32::WindowsErrorReporting::WER_FILE_TYPE repFileType, uint32_t dwFileFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportSetUIOption(intptr_t hReportHandle, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_UI repUITypeID, uint16_t* pwzValue) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportSubmit(intptr_t hReportHandle, win32::Windows::Win32::WindowsErrorReporting::WER_CONSENT consent, uint32_t dwFlags, win32::Windows::Win32::WindowsErrorReporting::WER_SUBMIT_RESULT* pSubmitResult) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportAddDump(intptr_t hReportHandle, win32::Windows::Win32::SystemServices::HANDLE hProcess, win32::Windows::Win32::SystemServices::HANDLE hThread, win32::Windows::Win32::WindowsErrorReporting::WER_DUMP_TYPE dumpType, win32::Windows::Win32::WindowsErrorReporting::WER_EXCEPTION_INFORMATION* pExceptionParam, win32::Windows::Win32::WindowsErrorReporting::WER_DUMP_CUSTOM_OPTIONS* pDumpCustomOptions, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportCloseHandle(intptr_t hReportHandle) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterFile(uint16_t* pwzFile, win32::Windows::Win32::WindowsErrorReporting::WER_REGISTER_FILE_TYPE regFileType, uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterFile(uint16_t* pwzFilePath) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterMemoryBlock(void* pvAddress, uint32_t dwSize) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterMemoryBlock(void* pvAddress) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterExcludedMemoryBlock(void* address, uint32_t size) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterExcludedMemoryBlock(void* address) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterCustomMetadata(uint16_t* key, uint16_t* value) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterCustomMetadata(uint16_t* key) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterAdditionalProcess(uint32_t processId, uint32_t captureExtraInfoForThreadId) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterAdditionalProcess(uint32_t processId) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterAppLocalDump(uint16_t* localAppDataRelativePath) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterAppLocalDump() noexcept;
    int32_t __stdcall WIN32_IMPL_WerSetFlags(uint32_t dwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_WerGetFlags(win32::Windows::Win32::SystemServices::HANDLE hProcess, uint32_t* pdwFlags) noexcept;
    int32_t __stdcall WIN32_IMPL_WerAddExcludedApplication(uint16_t* pwzExeName, win32::Windows::Win32::SystemServices::BOOL bAllUsers) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRemoveExcludedApplication(uint16_t* pwzExeName, win32::Windows::Win32::SystemServices::BOOL bAllUsers) noexcept;
    int32_t __stdcall WIN32_IMPL_WerRegisterRuntimeExceptionModule(uint16_t* pwszOutOfProcessCallbackDll, void* pContext) noexcept;
    int32_t __stdcall WIN32_IMPL_WerUnregisterRuntimeExceptionModule(uint16_t* pwszOutOfProcessCallbackDll, void* pContext) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreOpen(win32::Windows::Win32::WindowsErrorReporting::REPORT_STORE_TYPES repStoreType, void** phReportStore) noexcept;
    void __stdcall WIN32_IMPL_WerStoreClose(void* hReportStore) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreGetFirstReportKey(void* hReportStore, uint16_t** ppszReportKey) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreGetNextReportKey(void* hReportStore, uint16_t** ppszReportKey) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreQueryReportMetadataV2(void* hReportStore, uint16_t* pszReportKey, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_METADATA_V2* pReportMetadata) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreQueryReportMetadataV3(void* hReportStore, uint16_t* pszReportKey, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_METADATA_V3* pReportMetadata) noexcept;
    void __stdcall WIN32_IMPL_WerFreeString(uint16_t* pwszStr) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStorePurge() noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreGetReportCount(void* hReportStore, uint32_t* pdwReportCount) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreGetSizeOnDisk(void* hReportStore, uint64_t* pqwSizeInBytes) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreQueryReportMetadataV1(void* hReportStore, uint16_t* pszReportKey, win32::Windows::Win32::WindowsErrorReporting::WER_REPORT_METADATA_V1* pReportMetadata) noexcept;
    int32_t __stdcall WIN32_IMPL_WerStoreUploadReport(void* hReportStore, uint16_t* pszReportKey, uint32_t dwFlags, win32::Windows::Win32::WindowsErrorReporting::WER_SUBMIT_RESULT* pSubmitResult) noexcept;
    win32::Windows::Win32::WindowsErrorReporting::EFaultRepRetVal __stdcall WIN32_IMPL_ReportFault(win32::Windows::Win32::Debug::EXCEPTION_POINTERS* pep, uint32_t dwOpt) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_AddERExcludedApplicationA(int8_t* szApplication) noexcept;
    win32::Windows::Win32::SystemServices::BOOL __stdcall WIN32_IMPL_AddERExcludedApplicationW(uint16_t* wszApplication) noexcept;
    int32_t __stdcall WIN32_IMPL_WerReportHang(win32::Windows::Win32::WindowsAndMessaging::HWND hwndHungApp, uint16_t* pwzHungApplicationName) noexcept;
}
WIN32_IMPL_LINK(WerReportCreate, 16)
WIN32_IMPL_LINK(WerReportSetParameter, 16)
WIN32_IMPL_LINK(WerReportAddFile, 16)
WIN32_IMPL_LINK(WerReportSetUIOption, 12)
WIN32_IMPL_LINK(WerReportSubmit, 16)
WIN32_IMPL_LINK(WerReportAddDump, 28)
WIN32_IMPL_LINK(WerReportCloseHandle, 4)
WIN32_IMPL_LINK(WerRegisterFile, 12)
WIN32_IMPL_LINK(WerUnregisterFile, 4)
WIN32_IMPL_LINK(WerRegisterMemoryBlock, 8)
WIN32_IMPL_LINK(WerUnregisterMemoryBlock, 4)
WIN32_IMPL_LINK(WerRegisterExcludedMemoryBlock, 8)
WIN32_IMPL_LINK(WerUnregisterExcludedMemoryBlock, 4)
WIN32_IMPL_LINK(WerRegisterCustomMetadata, 8)
WIN32_IMPL_LINK(WerUnregisterCustomMetadata, 4)
WIN32_IMPL_LINK(WerRegisterAdditionalProcess, 8)
WIN32_IMPL_LINK(WerUnregisterAdditionalProcess, 4)
WIN32_IMPL_LINK(WerRegisterAppLocalDump, 4)
WIN32_IMPL_LINK(WerUnregisterAppLocalDump, 0)
WIN32_IMPL_LINK(WerSetFlags, 4)
WIN32_IMPL_LINK(WerGetFlags, 8)
WIN32_IMPL_LINK(WerAddExcludedApplication, 8)
WIN32_IMPL_LINK(WerRemoveExcludedApplication, 8)
WIN32_IMPL_LINK(WerRegisterRuntimeExceptionModule, 8)
WIN32_IMPL_LINK(WerUnregisterRuntimeExceptionModule, 8)
WIN32_IMPL_LINK(WerStoreOpen, 8)
WIN32_IMPL_LINK(WerStoreClose, 4)
WIN32_IMPL_LINK(WerStoreGetFirstReportKey, 8)
WIN32_IMPL_LINK(WerStoreGetNextReportKey, 8)
WIN32_IMPL_LINK(WerStoreQueryReportMetadataV2, 12)
WIN32_IMPL_LINK(WerStoreQueryReportMetadataV3, 12)
WIN32_IMPL_LINK(WerFreeString, 4)
WIN32_IMPL_LINK(WerStorePurge, 0)
WIN32_IMPL_LINK(WerStoreGetReportCount, 8)
WIN32_IMPL_LINK(WerStoreGetSizeOnDisk, 8)
WIN32_IMPL_LINK(WerStoreQueryReportMetadataV1, 12)
WIN32_IMPL_LINK(WerStoreUploadReport, 16)
WIN32_IMPL_LINK(ReportFault, 8)
WIN32_IMPL_LINK(AddERExcludedApplicationA, 4)
WIN32_IMPL_LINK(AddERExcludedApplicationW, 4)
WIN32_IMPL_LINK(WerReportHang, 8)

#pragma endregion abi_methods

#endif
