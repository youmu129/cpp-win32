// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsInformationProtection_2_H
#define WIN32_Windows_Win32_WindowsInformationProtection_2_H
#include "win32/impl/Windows.Win32.WindowsInformationProtection.1.h"
#include "win32/impl/complex_interfaces.h"
#pragma region abi_methods
extern "C"
{
    int32_t __stdcall WIN32_IMPL_SrpCreateThreadNetworkContext(uint16_t* enterpriseId, win32::Windows::Win32::WindowsInformationProtection::HTHREAD_NETWORK_CONTEXT* threadNetworkContext) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpCloseThreadNetworkContext(win32::Windows::Win32::WindowsInformationProtection::HTHREAD_NETWORK_CONTEXT* threadNetworkContext) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpSetTokenEnterpriseId(win32::Windows::Win32::SystemServices::HANDLE tokenHandle, uint16_t* enterpriseId) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpGetEnterpriseIds(win32::Windows::Win32::SystemServices::HANDLE tokenHandle, uint32_t* numberOfBytes, uint16_t** enterpriseIds, uint32_t* enterpriseIdCount) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpEnablePermissiveModeFileEncryption(uint16_t* enterpriseId) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpDisablePermissiveModeFileEncryption() noexcept;
    int32_t __stdcall WIN32_IMPL_SrpGetEnterprisePolicy(win32::Windows::Win32::SystemServices::HANDLE tokenHandle, win32::Windows::Win32::WindowsInformationProtection::ENTERPRISE_DATA_POLICIES* policyFlags) noexcept;
    win32::Windows::Win32::SystemServices::NTSTATUS __stdcall WIN32_IMPL_SrpIsTokenService(win32::Windows::Win32::SystemServices::HANDLE TokenHandle, uint8_t* IsTokenService) noexcept;
    int32_t __stdcall WIN32_IMPL_SrpDoesPolicyAllowAppExecution(win32::Windows::Win32::AppxPackaging::PACKAGE_ID* packageId, int32_t* isAllowed) noexcept;
    int32_t __stdcall WIN32_IMPL_ProtectFileToEnterpriseIdentity(uint16_t* fileOrFolderPath, uint16_t* identity) noexcept;
    int32_t __stdcall WIN32_IMPL_UnprotectFile(uint16_t* fileOrFolderPath, win32::Windows::Win32::WindowsInformationProtection::FILE_UNPROTECT_OPTIONS* options) noexcept;
}
WIN32_IMPL_LINK(SrpCreateThreadNetworkContext, 8)
WIN32_IMPL_LINK(SrpCloseThreadNetworkContext, 4)
WIN32_IMPL_LINK(SrpSetTokenEnterpriseId, 8)
WIN32_IMPL_LINK(SrpGetEnterpriseIds, 16)
WIN32_IMPL_LINK(SrpEnablePermissiveModeFileEncryption, 4)
WIN32_IMPL_LINK(SrpDisablePermissiveModeFileEncryption, 0)
WIN32_IMPL_LINK(SrpGetEnterprisePolicy, 8)
WIN32_IMPL_LINK(SrpIsTokenService, 8)
WIN32_IMPL_LINK(SrpDoesPolicyAllowAppExecution, 8)
WIN32_IMPL_LINK(ProtectFileToEnterpriseIdentity, 8)
WIN32_IMPL_LINK(UnprotectFile, 8)

#pragma endregion abi_methods

#endif
