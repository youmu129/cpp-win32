// WARNING: Please don't edit this file. It was generated by C++/Win32 v0.0.0.1

#ifndef WIN32_Windows_Win32_WindowsRemoteManagement_0_H
#define WIN32_Windows_Win32_WindowsRemoteManagement_0_H
WIN32_EXPORT namespace win32::Windows::Win32::WindowsRemoteManagement
{
#pragma region enums
    enum class WSManAuthenticationFlags : int32_t
    {
        WSMAN_FLAG_DEFAULT_AUTHENTICATION = 0,
        WSMAN_FLAG_NO_AUTHENTICATION = 1,
        WSMAN_FLAG_AUTH_DIGEST = 2,
        WSMAN_FLAG_AUTH_NEGOTIATE = 4,
        WSMAN_FLAG_AUTH_BASIC = 8,
        WSMAN_FLAG_AUTH_KERBEROS = 16,
        WSMAN_FLAG_AUTH_CREDSSP = 128,
        WSMAN_FLAG_AUTH_CLIENT_CERTIFICATE = 32,
    };
    enum class WSManCallbackFlags : int32_t
    {
        WSMAN_FLAG_CALLBACK_END_OF_OPERATION = 1,
        WSMAN_FLAG_CALLBACK_END_OF_STREAM = 8,
        WSMAN_FLAG_CALLBACK_SHELL_SUPPORTS_DISCONNECT = 32,
        WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTED = 64,
        WSMAN_FLAG_CALLBACK_NETWORK_FAILURE_DETECTED = 256,
        WSMAN_FLAG_CALLBACK_RETRYING_AFTER_NETWORK_FAILURE = 512,
        WSMAN_FLAG_CALLBACK_RECONNECTED_AFTER_NETWORK_FAILURE = 1024,
        WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTING = 2048,
        WSMAN_FLAG_CALLBACK_RETRY_ABORTED_DUE_TO_INTERNAL_ERROR = 4096,
        WSMAN_FLAG_CALLBACK_RECEIVE_DELAY_STREAM_REQUEST_PROCESSED = 8192,
    };
    enum class WSManDataType : int32_t
    {
        WSMAN_DATA_NONE = 0,
        WSMAN_DATA_TYPE_TEXT = 1,
        WSMAN_DATA_TYPE_BINARY = 2,
        WSMAN_DATA_TYPE_DWORD = 4,
    };
    enum class WSManEnumFlags : int32_t
    {
        WSManFlagNonXmlText = 1,
        WSManFlagReturnObject = 0,
        WSManFlagReturnEPR = 2,
        WSManFlagReturnObjectAndEPR = 4,
        WSManFlagHierarchyDeep = 0,
        WSManFlagHierarchyShallow = 32,
        WSManFlagHierarchyDeepBasePropsOnly = 64,
        WSManFlagAssociatedInstance = 0,
        WSManFlagAssociationInstance = 128,
    };
    enum class WSManProxyAccessType : int32_t
    {
        WSMAN_OPTION_PROXY_IE_PROXY_CONFIG = 1,
        WSMAN_OPTION_PROXY_WINHTTP_PROXY_CONFIG = 2,
        WSMAN_OPTION_PROXY_AUTO_DETECT = 4,
        WSMAN_OPTION_PROXY_NO_PROXY_SERVER = 8,
    };
    enum class WSManProxyAccessTypeFlags : int32_t
    {
        WSManProxyIEConfig = 1,
        WSManProxyWinHttpConfig = 2,
        WSManProxyAutoDetect = 4,
        WSManProxyNoProxyServer = 8,
    };
    enum class WSManProxyAuthenticationFlags : int32_t
    {
        WSManFlagProxyAuthenticationUseNegotiate = 1,
        WSManFlagProxyAuthenticationUseBasic = 2,
        WSManFlagProxyAuthenticationUseDigest = 4,
    };
    enum class WSManSessionFlags : int32_t
    {
        WSManFlagUTF8 = 1,
        WSManFlagCredUsernamePassword = 4096,
        WSManFlagSkipCACheck = 8192,
        WSManFlagSkipCNCheck = 16384,
        WSManFlagUseNoAuthentication = 32768,
        WSManFlagUseDigest = 65536,
        WSManFlagUseNegotiate = 131072,
        WSManFlagUseBasic = 262144,
        WSManFlagUseKerberos = 524288,
        WSManFlagNoEncryption = 1048576,
        WSManFlagUseClientCertificate = 2097152,
        WSManFlagEnableSPNServerPort = 4194304,
        WSManFlagUTF16 = 8388608,
        WSManFlagUseCredSsp = 16777216,
        WSManFlagSkipRevocationCheck = 33554432,
        WSManFlagAllowNegotiateImplicitCredentials = 67108864,
        WSManFlagUseSsl = 134217728,
    };
    enum class WSManSessionOption : int32_t
    {
        WSMAN_OPTION_DEFAULT_OPERATION_TIMEOUTMS = 1,
        WSMAN_OPTION_MAX_RETRY_TIME = 11,
        WSMAN_OPTION_TIMEOUTMS_CREATE_SHELL = 12,
        WSMAN_OPTION_TIMEOUTMS_RUN_SHELL_COMMAND = 13,
        WSMAN_OPTION_TIMEOUTMS_RECEIVE_SHELL_OUTPUT = 14,
        WSMAN_OPTION_TIMEOUTMS_SEND_SHELL_INPUT = 15,
        WSMAN_OPTION_TIMEOUTMS_SIGNAL_SHELL = 16,
        WSMAN_OPTION_TIMEOUTMS_CLOSE_SHELL = 17,
        WSMAN_OPTION_SKIP_CA_CHECK = 18,
        WSMAN_OPTION_SKIP_CN_CHECK = 19,
        WSMAN_OPTION_UNENCRYPTED_MESSAGES = 20,
        WSMAN_OPTION_UTF16 = 21,
        WSMAN_OPTION_ENABLE_SPN_SERVER_PORT = 22,
        WSMAN_OPTION_MACHINE_ID = 23,
        WSMAN_OPTION_LOCALE = 25,
        WSMAN_OPTION_UI_LANGUAGE = 26,
        WSMAN_OPTION_MAX_ENVELOPE_SIZE_KB = 28,
        WSMAN_OPTION_SHELL_MAX_DATA_SIZE_PER_MESSAGE_KB = 29,
        WSMAN_OPTION_REDIRECT_LOCATION = 30,
        WSMAN_OPTION_SKIP_REVOCATION_CHECK = 31,
        WSMAN_OPTION_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS = 32,
        WSMAN_OPTION_USE_SSL = 33,
        WSMAN_OPTION_USE_INTEARACTIVE_TOKEN = 34,
    };
    enum class WSManShellFlag : int32_t
    {
        WSMAN_FLAG_NO_COMPRESSION = 1,
        WSMAN_FLAG_DELETE_SERVER_SESSION = 2,
        WSMAN_FLAG_SERVER_BUFFERING_MODE_DROP = 4,
        WSMAN_FLAG_SERVER_BUFFERING_MODE_BLOCK = 8,
        WSMAN_FLAG_RECEIVE_DELAY_OUTPUT_STREAM = 16,
    };
#pragma endregion enums

#pragma region forward_declarations
    struct WSMAN_API;
    struct WSMAN_AUTHENTICATION_CREDENTIALS;
    struct WSMAN_AUTHZ_QUOTA;
    struct WSMAN_CERTIFICATE_DETAILS;
    struct WSMAN_COMMAND;
    struct WSMAN_COMMAND_ARG_SET;
    struct WSMAN_CONNECT_DATA;
    struct WSMAN_CREATE_SHELL_DATA;
    struct WSMAN_DATA;
    struct WSMAN_DATA_BINARY;
    struct WSMAN_DATA_TEXT;
    struct WSMAN_ENVIRONMENT_VARIABLE;
    struct WSMAN_ENVIRONMENT_VARIABLE_SET;
    struct WSMAN_ERROR;
    struct WSMAN_FILTER;
    struct WSMAN_FRAGMENT;
    struct WSMAN_KEY;
    struct WSMAN_OPERATION;
    struct WSMAN_OPERATION_INFO;
    struct WSMAN_OPERATION_INFOEX;
    struct WSMAN_OPTION;
    struct WSMAN_OPTION_SET;
    struct WSMAN_OPTION_SETEX;
    struct WSMAN_PLUGIN_REQUEST;
    struct WSMAN_PROXY_INFO;
    struct WSMAN_RECEIVE_DATA_RESULT;
    union WSMAN_RESPONSE_DATA;
    struct WSMAN_SELECTOR_SET;
    struct WSMAN_SENDER_DETAILS;
    struct WSMAN_SESSION;
    struct WSMAN_SHELL;
    struct WSMAN_SHELL_ASYNC;
    struct WSMAN_SHELL_DISCONNECT_INFO;
    struct WSMAN_SHELL_STARTUP_INFO_V10;
    struct WSMAN_SHELL_STARTUP_INFO_V11;
    struct WSMAN_STREAM_ID_SET;
    struct WSMAN_USERNAME_PASSWORD_CREDS;
    struct IWSMan;
    struct IWSManConnectionOptions;
    struct IWSManConnectionOptionsEx;
    struct IWSManConnectionOptionsEx2;
    struct IWSManEnumerator;
    struct IWSManEx;
    struct IWSManEx2;
    struct IWSManEx3;
    struct IWSManInternal;
    struct IWSManResourceLocator;
    struct IWSManResourceLocatorInternal;
    struct IWSManSession;
    struct WSMan;
    struct WSManInternal;
#pragma endregion forward_declarations

#pragma region delegates
    using WSMAN_SHELL_COMPLETION_FUNCTION = void __stdcall(void*, uint32_t, Windows::Win32::WindowsRemoteManagement::WSMAN_ERROR*, Windows::Win32::WindowsRemoteManagement::WSMAN_SHELL*, Windows::Win32::WindowsRemoteManagement::WSMAN_COMMAND*, Windows::Win32::WindowsRemoteManagement::WSMAN_OPERATION*, Windows::Win32::WindowsRemoteManagement::WSMAN_RESPONSE_DATA*);
    using WSMAN_PLUGIN_RELEASE_SHELL_CONTEXT = void __stdcall(void*);
    using WSMAN_PLUGIN_RELEASE_COMMAND_CONTEXT = void __stdcall(void*, void*);
    using WSMAN_PLUGIN_STARTUP = uint32_t __stdcall(uint32_t, uint16_t*, uint16_t*, void**);
    using WSMAN_PLUGIN_SHUTDOWN = uint32_t __stdcall(void*, uint32_t, uint32_t);
    using WSMAN_PLUGIN_SHELL = void __stdcall(void*, Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, Windows::Win32::WindowsRemoteManagement::WSMAN_SHELL_STARTUP_INFO_V11*, Windows::Win32::WindowsRemoteManagement::WSMAN_DATA*);
    using WSMAN_PLUGIN_COMMAND = void __stdcall(Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, void*, uint16_t*, Windows::Win32::WindowsRemoteManagement::WSMAN_COMMAND_ARG_SET*);
    using WSMAN_PLUGIN_SEND = void __stdcall(Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, void*, void*, uint16_t*, Windows::Win32::WindowsRemoteManagement::WSMAN_DATA*);
    using WSMAN_PLUGIN_RECEIVE = void __stdcall(Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, void*, void*, Windows::Win32::WindowsRemoteManagement::WSMAN_STREAM_ID_SET*);
    using WSMAN_PLUGIN_SIGNAL = void __stdcall(Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, void*, void*, uint16_t*);
    using WSMAN_PLUGIN_CONNECT = void __stdcall(Windows::Win32::WindowsRemoteManagement::WSMAN_PLUGIN_REQUEST*, uint32_t, void*, void*, Windows::Win32::WindowsRemoteManagement::WSMAN_DATA*);
    using WSMAN_PLUGIN_AUTHORIZE_USER = void __stdcall(void*, Windows::Win32::WindowsRemoteManagement::WSMAN_SENDER_DETAILS*, uint32_t);
    using WSMAN_PLUGIN_AUTHORIZE_OPERATION = void __stdcall(void*, Windows::Win32::WindowsRemoteManagement::WSMAN_SENDER_DETAILS*, uint32_t, uint32_t, uint16_t*, uint16_t*);
    using WSMAN_PLUGIN_AUTHORIZE_QUERY_QUOTA = void __stdcall(void*, Windows::Win32::WindowsRemoteManagement::WSMAN_SENDER_DETAILS*, uint32_t);
    using WSMAN_PLUGIN_AUTHORIZE_RELEASE_CONTEXT = void __stdcall(void*);
#pragma endregion delegates

}
namespace win32::_impl_
{
#pragma region guids
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSMan>{ 0x190D8637,0x5CD3,0x496D,{ 0xAD,0x24,0x69,0x63,0x6B,0xB5,0xA3,0xB5 } }; // 190D8637-5CD3-496D-AD24-69636BB5A3B5
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManConnectionOptions>{ 0xF704E861,0x9E52,0x464F,{ 0xB7,0x86,0xDA,0x5E,0xB2,0x32,0x0F,0xDD } }; // F704E861-9E52-464F-B786-DA5EB2320FDD
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManConnectionOptionsEx>{ 0xEF43EDF7,0x2A48,0x4D93,{ 0x95,0x26,0x8B,0xD6,0xAB,0x6D,0x4A,0x6B } }; // EF43EDF7-2A48-4D93-9526-8BD6AB6D4A6B
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManConnectionOptionsEx2>{ 0xF500C9EC,0x24EE,0x48AB,{ 0xB3,0x8D,0xFC,0x9A,0x16,0x4C,0x65,0x8E } }; // F500C9EC-24EE-48AB-B38D-FC9A164C658E
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManEnumerator>{ 0xF3457CA9,0xABB9,0x4FA5,{ 0xB8,0x50,0x90,0xE8,0xCA,0x30,0x0E,0x7F } }; // F3457CA9-ABB9-4FA5-B850-90E8CA300E7F
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManEx>{ 0x2D53BDAA,0x798E,0x49E6,{ 0xA1,0xAA,0x74,0xD0,0x12,0x56,0xF4,0x11 } }; // 2D53BDAA-798E-49E6-A1AA-74D01256F411
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManEx2>{ 0x1D1B5AE0,0x42D9,0x4021,{ 0x82,0x61,0x39,0x87,0x61,0x95,0x12,0xE9 } }; // 1D1B5AE0-42D9-4021-8261-3987619512E9
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManEx3>{ 0x6400E966,0x011D,0x4EAC,{ 0x84,0x74,0x04,0x9E,0x08,0x48,0xAF,0xAD } }; // 6400E966-011D-4EAC-8474-049E0848AFAD
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManInternal>{ 0x04AE2B1D,0x9954,0x4D99,{ 0x94,0xA9,0xA9,0x61,0xE7,0x2C,0x3A,0x13 } }; // 04AE2B1D-9954-4D99-94A9-A961E72C3A13
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManResourceLocator>{ 0xA7A1BA28,0xDE41,0x466A,{ 0xAD,0x0A,0xC4,0x05,0x9E,0xAD,0x74,0x28 } }; // A7A1BA28-DE41-466A-AD0A-C4059EAD7428
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManResourceLocatorInternal>{ 0xEFFAEAD7,0x7EC8,0x4716,{ 0xB9,0xBE,0xF2,0xE7,0xE9,0xFB,0x4A,0xDB } }; // EFFAEAD7-7EC8-4716-B9BE-F2E7E9FB4ADB
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::IWSManSession>{ 0xFC84FC58,0x1286,0x40C4,{ 0x9D,0xA0,0xC8,0xEF,0x6E,0xC2,0x41,0xE0 } }; // FC84FC58-1286-40C4-9DA0-C8EF6EC241E0
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::WSMan>{ 0xBCED617B,0xEC03,0x420B,{ 0x85,0x08,0x97,0x7D,0xC7,0xA6,0x86,0xBD } }; // BCED617B-EC03-420B-8508-977DC7A686BD
    template <> inline constexpr guid guid_v<Windows::Win32::WindowsRemoteManagement::WSManInternal>{ 0x7DE087A5,0x5DCB,0x4DF7,{ 0xBB,0x12,0x09,0x24,0xAD,0x8F,0xBD,0x9A } }; // 7DE087A5-5DCB-4DF7-BB12-0924AD8FBD9A
#pragma endregion guids

}
#endif
